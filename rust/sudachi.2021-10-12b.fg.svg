<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>nom::sequence::preceded::{{closure}} (616 samples, 0.15%)</title><rect x="1063.8" y="373" width="1.7" height="15.0" fill="rgb(219,65,4)" rx="2" ry="2" />
<text  x="1066.78" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (3,368 samples, 0.81%)</title><rect x="455.6" y="261" width="9.6" height="15.0" fill="rgb(243,145,29)" rx="2" ry="2" />
<text  x="458.64" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (987 samples, 0.24%)</title><rect x="981.0" y="293" width="2.8" height="15.0" fill="rgb(239,49,26)" rx="2" ry="2" />
<text  x="984.00" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (516 samples, 0.12%)</title><rect x="357.5" y="149" width="1.5" height="15.0" fill="rgb(227,6,0)" rx="2" ry="2" />
<text  x="360.51" y="159.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (1,263 samples, 0.30%)</title><rect x="249.3" y="85" width="3.5" height="15.0" fill="rgb(243,109,16)" rx="2" ry="2" />
<text  x="252.26" y="95.5" ></text>
</g>
<g >
<title>__memchr_sse2 (191 samples, 0.05%)</title><rect x="74.3" y="341" width="0.5" height="15.0" fill="rgb(211,34,13)" rx="2" ry="2" />
<text  x="77.29" y="351.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::PathRewritePlugin::concatenate (1,521 samples, 0.36%)</title><rect x="282.8" y="405" width="4.3" height="15.0" fill="rgb(245,226,19)" rx="2" ry="2" />
<text  x="285.84" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,265 samples, 1.98%)</title><rect x="290.7" y="421" width="23.4" height="15.0" fill="rgb(221,91,26)" rx="2" ry="2" />
<text  x="293.73" y="431.5" >&lt;..</text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (196 samples, 0.05%)</title><rect x="1084.1" y="293" width="0.5" height="15.0" fill="rgb(234,132,8)" rx="2" ry="2" />
<text  x="1087.09" y="303.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (3,217 samples, 0.77%)</title><rect x="961.7" y="293" width="9.1" height="15.0" fill="rgb(246,179,40)" rx="2" ry="2" />
<text  x="964.69" y="303.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (157 samples, 0.04%)</title><rect x="255.0" y="261" width="0.4" height="15.0" fill="rgb(236,38,42)" rx="2" ry="2" />
<text  x="257.97" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (1,449 samples, 0.35%)</title><rect x="450.6" y="117" width="4.1" height="15.0" fill="rgb(233,143,6)" rx="2" ry="2" />
<text  x="453.63" y="127.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (154 samples, 0.04%)</title><rect x="1082.6" y="309" width="0.4" height="15.0" fill="rgb(234,113,25)" rx="2" ry="2" />
<text  x="1085.57" y="319.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (129 samples, 0.03%)</title><rect x="173.5" y="341" width="0.4" height="15.0" fill="rgb(225,96,29)" rx="2" ry="2" />
<text  x="176.50" y="351.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::surface (335 samples, 0.08%)</title><rect x="91.8" y="437" width="1.0" height="15.0" fill="rgb(235,63,6)" rx="2" ry="2" />
<text  x="94.85" y="447.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,049 samples, 0.25%)</title><rect x="874.2" y="245" width="2.9" height="15.0" fill="rgb(253,102,20)" rx="2" ry="2" />
<text  x="877.17" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (137 samples, 0.03%)</title><rect x="467.0" y="133" width="0.4" height="15.0" fill="rgb(224,158,15)" rx="2" ry="2" />
<text  x="469.96" y="143.5" ></text>
</g>
<g >
<title>sudachi::output::write_morpheme_basic (5,811 samples, 1.39%)</title><rect x="76.4" y="453" width="16.4" height="15.0" fill="rgb(222,149,6)" rx="2" ry="2" />
<text  x="79.37" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (143 samples, 0.03%)</title><rect x="558.0" y="405" width="0.4" height="15.0" fill="rgb(251,195,11)" rx="2" ry="2" />
<text  x="561.04" y="415.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (239 samples, 0.06%)</title><rect x="1042.0" y="325" width="0.7" height="15.0" fill="rgb(235,165,1)" rx="2" ry="2" />
<text  x="1044.97" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (959 samples, 0.23%)</title><rect x="1038.0" y="277" width="2.7" height="15.0" fill="rgb(236,57,36)" rx="2" ry="2" />
<text  x="1040.96" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (438 samples, 0.10%)</title><rect x="166.9" y="309" width="1.2" height="15.0" fill="rgb(219,8,7)" rx="2" ry="2" />
<text  x="169.89" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::new (11,578 samples, 2.77%)</title><rect x="973.9" y="437" width="32.7" height="15.0" fill="rgb(250,144,46)" rx="2" ry="2" />
<text  x="976.85" y="447.5" >su..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (687 samples, 0.16%)</title><rect x="359.7" y="149" width="2.0" height="15.0" fill="rgb(220,215,52)" rx="2" ry="2" />
<text  x="362.71" y="159.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (627 samples, 0.15%)</title><rect x="1062.0" y="389" width="1.8" height="15.0" fill="rgb(242,120,40)" rx="2" ry="2" />
<text  x="1064.99" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (253 samples, 0.06%)</title><rect x="558.0" y="421" width="0.8" height="15.0" fill="rgb(221,97,5)" rx="2" ry="2" />
<text  x="561.04" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (165 samples, 0.04%)</title><rect x="1082.5" y="341" width="0.5" height="15.0" fill="rgb(214,72,1)" rx="2" ry="2" />
<text  x="1085.54" y="351.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (660 samples, 0.16%)</title><rect x="338.0" y="421" width="1.9" height="15.0" fill="rgb(245,89,37)" rx="2" ry="2" />
<text  x="341.01" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;sudachi::analysis::node::Node,alloc::alloc::Global&gt;&gt; (248 samples, 0.06%)</title><rect x="286.1" y="357" width="0.7" height="15.0" fill="rgb(244,167,33)" rx="2" ry="2" />
<text  x="289.07" y="367.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::backtrack (497 samples, 0.12%)</title><rect x="259.7" y="261" width="1.4" height="15.0" fill="rgb(244,153,25)" rx="2" ry="2" />
<text  x="262.68" y="271.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (2,972 samples, 0.71%)</title><rect x="456.8" y="245" width="8.4" height="15.0" fill="rgb(243,193,22)" rx="2" ry="2" />
<text  x="459.76" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (4,231 samples, 1.01%)</title><rect x="1172.6" y="389" width="11.9" height="15.0" fill="rgb(226,228,51)" rx="2" ry="2" />
<text  x="1175.58" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (109 samples, 0.03%)</title><rect x="267.0" y="421" width="0.3" height="15.0" fill="rgb(221,82,46)" rx="2" ry="2" />
<text  x="270.04" y="431.5" ></text>
</g>
<g >
<title>__rdl_realloc (235 samples, 0.06%)</title><rect x="423.3" y="53" width="0.7" height="15.0" fill="rgb(225,23,33)" rx="2" ry="2" />
<text  x="426.31" y="63.5" ></text>
</g>
<g >
<title>&lt;unicode_normalization::decompose::Decompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (252 samples, 0.06%)</title><rect x="1124.8" y="309" width="0.7" height="15.0" fill="rgb(215,138,46)" rx="2" ry="2" />
<text  x="1127.76" y="319.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (159 samples, 0.04%)</title><rect x="48.5" y="453" width="0.4" height="15.0" fill="rgb(219,35,27)" rx="2" ry="2" />
<text  x="51.46" y="463.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify128 (1,131 samples, 0.27%)</title><rect x="1154.6" y="165" width="3.2" height="15.0" fill="rgb(222,197,28)" rx="2" ry="2" />
<text  x="1157.64" y="175.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (381 samples, 0.09%)</title><rect x="352.4" y="357" width="1.1" height="15.0" fill="rgb(230,90,34)" rx="2" ry="2" />
<text  x="355.41" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (139 samples, 0.03%)</title><rect x="267.4" y="389" width="0.4" height="15.0" fill="rgb(250,96,12)" rx="2" ry="2" />
<text  x="270.39" y="399.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (163 samples, 0.04%)</title><rect x="92.3" y="341" width="0.4" height="15.0" fill="rgb(249,9,33)" rx="2" ry="2" />
<text  x="95.27" y="351.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (249 samples, 0.06%)</title><rect x="552.2" y="357" width="0.7" height="15.0" fill="rgb(241,8,13)" rx="2" ry="2" />
<text  x="555.21" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (270 samples, 0.06%)</title><rect x="981.4" y="229" width="0.8" height="15.0" fill="rgb(219,68,12)" rx="2" ry="2" />
<text  x="984.42" y="239.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (222 samples, 0.05%)</title><rect x="253.7" y="229" width="0.7" height="15.0" fill="rgb(252,0,21)" rx="2" ry="2" />
<text  x="256.74" y="239.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (1,267 samples, 0.30%)</title><rect x="249.2" y="101" width="3.6" height="15.0" fill="rgb(238,69,9)" rx="2" ry="2" />
<text  x="252.25" y="111.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,079 samples, 0.50%)</title><rect x="299.1" y="293" width="5.9" height="15.0" fill="rgb(235,97,43)" rx="2" ry="2" />
<text  x="302.14" y="303.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (130 samples, 0.03%)</title><rect x="205.5" y="261" width="0.4" height="15.0" fill="rgb(246,65,19)" rx="2" ry="2" />
<text  x="208.54" y="271.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (157 samples, 0.04%)</title><rect x="175.0" y="341" width="0.5" height="15.0" fill="rgb(251,131,22)" rx="2" ry="2" />
<text  x="178.03" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (1,238 samples, 0.30%)</title><rect x="249.3" y="69" width="3.5" height="15.0" fill="rgb(245,131,24)" rx="2" ry="2" />
<text  x="252.28" y="79.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3,828 samples, 0.92%)</title><rect x="212.2" y="261" width="10.9" height="15.0" fill="rgb(226,18,47)" rx="2" ry="2" />
<text  x="215.24" y="271.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::is_nfkc_quick (2,327 samples, 0.56%)</title><rect x="1127.1" y="357" width="6.6" height="15.0" fill="rgb(229,189,35)" rx="2" ry="2" />
<text  x="1130.11" y="367.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::uppercase::lookup (599 samples, 0.14%)</title><rect x="1113.9" y="325" width="1.7" height="15.0" fill="rgb(207,73,49)" rx="2" ry="2" />
<text  x="1116.90" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (8,049 samples, 1.93%)</title><rect x="662.1" y="325" width="22.8" height="15.0" fill="rgb(244,123,53)" rx="2" ry="2" />
<text  x="665.11" y="335.5" >_..</text>
</g>
<g >
<title>__GI___libc_malloc (1,414 samples, 0.34%)</title><rect x="1095.5" y="165" width="4.0" height="15.0" fill="rgb(228,111,53)" rx="2" ry="2" />
<text  x="1098.52" y="175.5" ></text>
</g>
<g >
<title>_int_malloc (307 samples, 0.07%)</title><rect x="324.7" y="261" width="0.8" height="15.0" fill="rgb(213,190,33)" rx="2" ry="2" />
<text  x="327.66" y="271.5" ></text>
</g>
<g >
<title>malloc_consolidate (962 samples, 0.23%)</title><rect x="975.7" y="293" width="2.7" height="15.0" fill="rgb(221,32,34)" rx="2" ry="2" />
<text  x="978.67" y="303.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (732 samples, 0.18%)</title><rect x="126.7" y="357" width="2.1" height="15.0" fill="rgb(215,1,27)" rx="2" ry="2" />
<text  x="129.69" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,675 samples, 0.88%)</title><rect x="414.7" y="165" width="10.4" height="15.0" fill="rgb(216,85,12)" rx="2" ry="2" />
<text  x="417.67" y="175.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (786 samples, 0.19%)</title><rect x="280.1" y="357" width="2.2" height="15.0" fill="rgb(249,183,12)" rx="2" ry="2" />
<text  x="283.11" y="367.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::step (414 samples, 0.10%)</title><rect x="259.9" y="245" width="1.2" height="15.0" fill="rgb(217,83,9)" rx="2" ry="2" />
<text  x="262.91" y="255.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (874 samples, 0.21%)</title><rect x="275.4" y="389" width="2.4" height="15.0" fill="rgb(241,96,29)" rx="2" ry="2" />
<text  x="278.38" y="399.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::replace_fast (1,129 samples, 0.27%)</title><rect x="1115.8" y="373" width="3.2" height="15.0" fill="rgb(212,217,3)" rx="2" ry="2" />
<text  x="1118.81" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,400 samples, 0.34%)</title><rect x="248.9" y="197" width="4.0" height="15.0" fill="rgb(247,178,17)" rx="2" ry="2" />
<text  x="251.95" y="207.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (203 samples, 0.05%)</title><rect x="1094.5" y="261" width="0.5" height="15.0" fill="rgb(211,19,53)" rx="2" ry="2" />
<text  x="1097.47" y="271.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (250 samples, 0.06%)</title><rect x="1094.3" y="277" width="0.7" height="15.0" fill="rgb(212,164,30)" rx="2" ry="2" />
<text  x="1097.34" y="287.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (239 samples, 0.06%)</title><rect x="1042.0" y="261" width="0.7" height="15.0" fill="rgb(236,194,24)" rx="2" ry="2" />
<text  x="1044.97" y="271.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (21,774 samples, 5.22%)</title><rect x="490.5" y="389" width="61.6" height="15.0" fill="rgb(218,9,32)" rx="2" ry="2" />
<text  x="493.49" y="399.5" >&lt;core:..</text>
</g>
<g >
<title>_int_realloc (302 samples, 0.07%)</title><rect x="167.1" y="213" width="0.9" height="15.0" fill="rgb(219,65,11)" rx="2" ry="2" />
<text  x="170.14" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,254 samples, 1.02%)</title><rect x="429.7" y="197" width="12.0" height="15.0" fill="rgb(240,55,38)" rx="2" ry="2" />
<text  x="432.69" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (939 samples, 0.22%)</title><rect x="160.9" y="373" width="2.6" height="15.0" fill="rgb(218,4,38)" rx="2" ry="2" />
<text  x="163.86" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (270 samples, 0.06%)</title><rect x="981.4" y="245" width="0.8" height="15.0" fill="rgb(228,200,0)" rx="2" ry="2" />
<text  x="984.42" y="255.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array (246 samples, 0.06%)</title><rect x="982.6" y="245" width="0.7" height="15.0" fill="rgb(232,48,18)" rx="2" ry="2" />
<text  x="985.57" y="255.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::handle_normalization_slow (412 samples, 0.10%)</title><rect x="1124.6" y="357" width="1.1" height="15.0" fill="rgb(245,132,52)" rx="2" ry="2" />
<text  x="1127.56" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (32,800 samples, 7.86%)</title><rect x="618.0" y="421" width="92.7" height="15.0" fill="rgb(217,151,25)" rx="2" ry="2" />
<text  x="620.99" y="431.5" >alloc::vec:..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (113 samples, 0.03%)</title><rect x="248.5" y="373" width="0.3" height="15.0" fill="rgb(214,84,16)" rx="2" ry="2" />
<text  x="251.47" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,523 samples, 0.36%)</title><rect x="974.2" y="341" width="4.3" height="15.0" fill="rgb(247,47,14)" rx="2" ry="2" />
<text  x="977.22" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (626 samples, 0.15%)</title><rect x="1160.9" y="421" width="1.8" height="15.0" fill="rgb(209,225,8)" rx="2" ry="2" />
<text  x="1163.90" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_free (3,590 samples, 0.86%)</title><rect x="1173.2" y="261" width="10.2" height="15.0" fill="rgb(245,132,43)" rx="2" ry="2" />
<text  x="1176.24" y="271.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (296 samples, 0.07%)</title><rect x="1063.8" y="261" width="0.8" height="15.0" fill="rgb(254,173,28)" rx="2" ry="2" />
<text  x="1066.78" y="271.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (532 samples, 0.13%)</title><rect x="552.2" y="389" width="1.5" height="15.0" fill="rgb(235,187,27)" rx="2" ry="2" />
<text  x="555.21" y="399.5" ></text>
</g>
<g >
<title>_int_free (2,779 samples, 0.67%)</title><rect x="1175.5" y="245" width="7.9" height="15.0" fill="rgb(241,121,10)" rx="2" ry="2" />
<text  x="1178.53" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,281 samples, 0.31%)</title><rect x="322.8" y="373" width="3.6" height="15.0" fill="rgb(251,108,52)" rx="2" ry="2" />
<text  x="325.75" y="383.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (319 samples, 0.08%)</title><rect x="382.1" y="277" width="0.9" height="15.0" fill="rgb(234,136,25)" rx="2" ry="2" />
<text  x="385.07" y="287.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::get_best_path (6,189 samples, 1.48%)</title><rect x="315.0" y="453" width="17.5" height="15.0" fill="rgb(233,228,22)" rx="2" ry="2" />
<text  x="317.97" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (1,989 samples, 0.48%)</title><rect x="978.9" y="373" width="5.6" height="15.0" fill="rgb(250,201,44)" rx="2" ry="2" />
<text  x="981.91" y="383.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::shortest_match_at (15,349 samples, 3.68%)</title><rect x="200.3" y="341" width="43.4" height="15.0" fill="rgb(226,198,29)" rx="2" ry="2" />
<text  x="203.33" y="351.5" >&lt;reg..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (305 samples, 0.07%)</title><rect x="352.5" y="229" width="0.8" height="15.0" fill="rgb(246,78,15)" rx="2" ry="2" />
<text  x="355.46" y="239.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (683 samples, 0.16%)</title><rect x="359.7" y="117" width="2.0" height="15.0" fill="rgb(235,173,24)" rx="2" ry="2" />
<text  x="362.72" y="127.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::find_at (3,927 samples, 0.94%)</title><rect x="183.1" y="357" width="11.1" height="15.0" fill="rgb(211,91,31)" rx="2" ry="2" />
<text  x="186.07" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4,631 samples, 1.11%)</title><rect x="413.8" y="197" width="13.1" height="15.0" fill="rgb(208,24,23)" rx="2" ry="2" />
<text  x="416.82" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (696 samples, 0.17%)</title><rect x="275.4" y="293" width="1.9" height="15.0" fill="rgb(246,225,41)" rx="2" ry="2" />
<text  x="278.38" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (228 samples, 0.05%)</title><rect x="1171.0" y="421" width="0.7" height="15.0" fill="rgb(206,171,46)" rx="2" ry="2" />
<text  x="1174.02" y="431.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (11,886 samples, 2.85%)</title><rect x="408.6" y="261" width="33.6" height="15.0" fill="rgb(232,198,21)" rx="2" ry="2" />
<text  x="411.56" y="271.5" >al..</text>
</g>
<g >
<title>fancy_regex::vm::State::pop (120 samples, 0.03%)</title><rect x="11.6" y="485" width="0.3" height="15.0" fill="rgb(230,157,44)" rx="2" ry="2" />
<text  x="14.61" y="495.5" ></text>
</g>
<g >
<title>_int_malloc (213 samples, 0.05%)</title><rect x="167.4" y="197" width="0.6" height="15.0" fill="rgb(217,221,28)" rx="2" ry="2" />
<text  x="170.39" y="207.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (164 samples, 0.04%)</title><rect x="40.9" y="485" width="0.5" height="15.0" fill="rgb(235,113,34)" rx="2" ry="2" />
<text  x="43.94" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (486 samples, 0.12%)</title><rect x="357.6" y="133" width="1.4" height="15.0" fill="rgb(253,26,53)" rx="2" ry="2" />
<text  x="360.59" y="143.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (142 samples, 0.03%)</title><rect x="412.5" y="245" width="0.4" height="15.0" fill="rgb(247,74,47)" rx="2" ry="2" />
<text  x="415.53" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (2,462 samples, 0.59%)</title><rect x="417.1" y="85" width="7.0" height="15.0" fill="rgb(239,90,20)" rx="2" ry="2" />
<text  x="420.14" y="95.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (2,702 samples, 0.65%)</title><rect x="1048.3" y="261" width="7.6" height="15.0" fill="rgb(242,188,29)" rx="2" ry="2" />
<text  x="1051.30" y="271.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (150 samples, 0.04%)</title><rect x="1157.0" y="85" width="0.4" height="15.0" fill="rgb(229,141,35)" rx="2" ry="2" />
<text  x="1159.96" y="95.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (305 samples, 0.07%)</title><rect x="352.5" y="261" width="0.8" height="15.0" fill="rgb(227,46,7)" rx="2" ry="2" />
<text  x="355.46" y="271.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (109 samples, 0.03%)</title><rect x="621.2" y="341" width="0.3" height="15.0" fill="rgb(219,210,52)" rx="2" ry="2" />
<text  x="624.22" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (231 samples, 0.06%)</title><rect x="69.2" y="485" width="0.7" height="15.0" fill="rgb(254,104,11)" rx="2" ry="2" />
<text  x="72.20" y="495.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (828 samples, 0.20%)</title><rect x="426.9" y="229" width="2.4" height="15.0" fill="rgb(227,4,42)" rx="2" ry="2" />
<text  x="429.93" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (1,013 samples, 0.24%)</title><rect x="249.9" y="37" width="2.9" height="15.0" fill="rgb(248,110,29)" rx="2" ry="2" />
<text  x="252.91" y="47.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (1,315 samples, 0.32%)</title><rect x="177.4" y="325" width="3.7" height="15.0" fill="rgb(215,103,48)" rx="2" ry="2" />
<text  x="180.35" y="335.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (157 samples, 0.04%)</title><rect x="175.0" y="325" width="0.5" height="15.0" fill="rgb(222,12,44)" rx="2" ry="2" />
<text  x="178.03" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (133 samples, 0.03%)</title><rect x="548.7" y="261" width="0.4" height="15.0" fill="rgb(220,81,45)" rx="2" ry="2" />
<text  x="551.70" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (91,979 samples, 22.04%)</title><rect x="710.7" y="421" width="260.1" height="15.0" fill="rgb(205,104,0)" rx="2" ry="2" />
<text  x="713.74" y="431.5" >sudachi::analysis::lattice::Lattic..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (243 samples, 0.06%)</title><rect x="143.6" y="341" width="0.7" height="15.0" fill="rgb(251,8,18)" rx="2" ry="2" />
<text  x="146.65" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,331 samples, 0.32%)</title><rect x="261.7" y="325" width="3.7" height="15.0" fill="rgb(209,187,29)" rx="2" ry="2" />
<text  x="264.66" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (296 samples, 0.07%)</title><rect x="284.2" y="245" width="0.8" height="15.0" fill="rgb(233,62,26)" rx="2" ry="2" />
<text  x="287.17" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (205 samples, 0.05%)</title><rect x="362.8" y="101" width="0.6" height="15.0" fill="rgb(206,215,31)" rx="2" ry="2" />
<text  x="365.81" y="111.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (3,337 samples, 0.80%)</title><rect x="877.1" y="245" width="9.5" height="15.0" fill="rgb(218,171,46)" rx="2" ry="2" />
<text  x="880.14" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::u32_array_parser (446 samples, 0.11%)</title><rect x="466.3" y="245" width="1.2" height="15.0" fill="rgb(205,206,51)" rx="2" ry="2" />
<text  x="469.27" y="255.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (108 samples, 0.03%)</title><rect x="1071.0" y="389" width="0.3" height="15.0" fill="rgb(241,197,18)" rx="2" ry="2" />
<text  x="1074.00" y="399.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,513 samples, 0.60%)</title><rect x="248.8" y="373" width="7.1" height="15.0" fill="rgb(233,52,51)" rx="2" ry="2" />
<text  x="251.79" y="383.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (9,774 samples, 2.34%)</title><rect x="978.9" y="405" width="27.6" height="15.0" fill="rgb(248,138,5)" rx="2" ry="2" />
<text  x="981.91" y="415.5" >&lt;..</text>
</g>
<g >
<title>alloc::string::String::push (431 samples, 0.10%)</title><rect x="36.1" y="485" width="1.2" height="15.0" fill="rgb(228,192,48)" rx="2" ry="2" />
<text  x="39.09" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (324 samples, 0.08%)</title><rect x="984.5" y="373" width="1.0" height="15.0" fill="rgb(208,210,36)" rx="2" ry="2" />
<text  x="987.54" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (948 samples, 0.23%)</title><rect x="322.9" y="325" width="2.7" height="15.0" fill="rgb(218,70,39)" rx="2" ry="2" />
<text  x="325.95" y="335.5" ></text>
</g>
<g >
<title>&lt;regex::literal::imp::LiteralIter as core::iter::traits::iterator::Iterator&gt;::next (1,090 samples, 0.26%)</title><rect x="209.1" y="277" width="3.1" height="15.0" fill="rgb(210,73,20)" rx="2" ry="2" />
<text  x="212.15" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1,624 samples, 0.39%)</title><rect x="974.2" y="421" width="4.6" height="15.0" fill="rgb(220,225,5)" rx="2" ry="2" />
<text  x="977.18" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,724 samples, 0.41%)</title><rect x="978.9" y="357" width="4.9" height="15.0" fill="rgb(246,31,32)" rx="2" ry="2" />
<text  x="981.91" y="367.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::bitset_search (327 samples, 0.08%)</title><rect x="1123.2" y="325" width="1.0" height="15.0" fill="rgb(208,71,46)" rx="2" ry="2" />
<text  x="1126.24" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (187 samples, 0.04%)</title><rect x="160.3" y="373" width="0.6" height="15.0" fill="rgb(241,224,28)" rx="2" ry="2" />
<text  x="163.33" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (366 samples, 0.09%)</title><rect x="1163.9" y="437" width="1.0" height="15.0" fill="rgb(223,101,45)" rx="2" ry="2" />
<text  x="1166.90" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (901 samples, 0.22%)</title><rect x="591.5" y="421" width="2.6" height="15.0" fill="rgb(249,224,17)" rx="2" ry="2" />
<text  x="594.52" y="431.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_literals (7,697 samples, 1.84%)</title><rect x="203.7" y="309" width="21.7" height="15.0" fill="rgb(233,92,3)" rx="2" ry="2" />
<text  x="206.66" y="319.5" >r..</text>
</g>
<g >
<title>&lt;sudachi::sentence_splitter::SentenceIter as core::iter::traits::iterator::Iterator&gt;::next (61,617 samples, 14.76%)</title><rect x="92.8" y="469" width="174.2" height="15.0" fill="rgb(238,141,11)" rx="2" ry="2" />
<text  x="95.81" y="479.5" >&lt;sudachi::sentence_spl..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (432 samples, 0.10%)</title><rect x="407.3" y="261" width="1.3" height="15.0" fill="rgb(228,146,30)" rx="2" ry="2" />
<text  x="410.34" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (256 samples, 0.06%)</title><rect x="1070.3" y="405" width="0.7" height="15.0" fill="rgb(234,40,53)" rx="2" ry="2" />
<text  x="1073.28" y="415.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (496 samples, 0.12%)</title><rect x="1146.1" y="341" width="1.4" height="15.0" fill="rgb(243,23,26)" rx="2" ry="2" />
<text  x="1149.09" y="351.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (706 samples, 0.17%)</title><rect x="359.7" y="229" width="2.0" height="15.0" fill="rgb(223,53,5)" rx="2" ry="2" />
<text  x="362.66" y="239.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (439 samples, 0.11%)</title><rect x="1039.4" y="229" width="1.3" height="15.0" fill="rgb(211,136,27)" rx="2" ry="2" />
<text  x="1042.43" y="239.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (4,475 samples, 1.07%)</title><rect x="229.8" y="293" width="12.6" height="15.0" fill="rgb(242,42,35)" rx="2" ry="2" />
<text  x="232.76" y="303.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (735 samples, 0.18%)</title><rect x="330.2" y="405" width="2.0" height="15.0" fill="rgb(242,56,22)" rx="2" ry="2" />
<text  x="333.17" y="415.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (357 samples, 0.09%)</title><rect x="1040.7" y="325" width="1.0" height="15.0" fill="rgb(239,112,14)" rx="2" ry="2" />
<text  x="1043.67" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (303 samples, 0.07%)</title><rect x="352.5" y="197" width="0.8" height="15.0" fill="rgb(220,151,49)" rx="2" ry="2" />
<text  x="355.46" y="207.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (343 samples, 0.08%)</title><rect x="357.9" y="53" width="0.9" height="15.0" fill="rgb(210,203,10)" rx="2" ry="2" />
<text  x="360.87" y="63.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (675 samples, 0.16%)</title><rect x="357.3" y="197" width="1.9" height="15.0" fill="rgb(233,91,53)" rx="2" ry="2" />
<text  x="360.34" y="207.5" ></text>
</g>
<g >
<title>&lt;sudachi::analysis::node::Node as core::clone::Clone&gt;::clone (2,229 samples, 0.53%)</title><rect x="316.1" y="437" width="6.3" height="15.0" fill="rgb(223,105,32)" rx="2" ry="2" />
<text  x="319.06" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (136 samples, 0.03%)</title><rect x="467.0" y="117" width="0.4" height="15.0" fill="rgb(244,167,29)" rx="2" ry="2" />
<text  x="469.97" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,838 samples, 1.16%)</title><rect x="291.6" y="373" width="13.7" height="15.0" fill="rgb(223,127,33)" rx="2" ry="2" />
<text  x="294.57" y="383.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at (239 samples, 0.06%)</title><rect x="1042.0" y="309" width="0.7" height="15.0" fill="rgb(239,167,11)" rx="2" ry="2" />
<text  x="1044.97" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (696 samples, 0.17%)</title><rect x="275.4" y="341" width="1.9" height="15.0" fill="rgb(245,219,41)" rx="2" ry="2" />
<text  x="278.38" y="351.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (3,915 samples, 0.94%)</title><rect x="77.4" y="437" width="11.1" height="15.0" fill="rgb(215,121,3)" rx="2" ry="2" />
<text  x="80.43" y="447.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (234 samples, 0.06%)</title><rect x="286.1" y="325" width="0.7" height="15.0" fill="rgb(217,24,0)" rx="2" ry="2" />
<text  x="289.11" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_id (334 samples, 0.08%)</title><rect x="1067.4" y="405" width="1.0" height="15.0" fill="rgb(213,136,54)" rx="2" ry="2" />
<text  x="1070.42" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (215 samples, 0.05%)</title><rect x="1183.9" y="357" width="0.6" height="15.0" fill="rgb(236,47,51)" rx="2" ry="2" />
<text  x="1186.94" y="367.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (357 samples, 0.09%)</title><rect x="1040.7" y="341" width="1.0" height="15.0" fill="rgb(234,29,36)" rx="2" ry="2" />
<text  x="1043.67" y="351.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (2,702 samples, 0.65%)</title><rect x="1048.3" y="293" width="7.6" height="15.0" fill="rgb(215,205,52)" rx="2" ry="2" />
<text  x="1051.30" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (861 samples, 0.21%)</title><rect x="279.9" y="405" width="2.5" height="15.0" fill="rgb(227,125,36)" rx="2" ry="2" />
<text  x="282.93" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2,654 samples, 0.64%)</title><rect x="248.4" y="421" width="7.5" height="15.0" fill="rgb(221,217,33)" rx="2" ry="2" />
<text  x="251.42" y="431.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::to_orig (158 samples, 0.04%)</title><rect x="269.5" y="421" width="0.5" height="15.0" fill="rgb(240,210,40)" rx="2" ry="2" />
<text  x="272.53" y="431.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (826 samples, 0.20%)</title><rect x="275.4" y="357" width="2.3" height="15.0" fill="rgb(208,193,39)" rx="2" ry="2" />
<text  x="278.38" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sudachi::analysis::node::Node&gt;&gt; (197 samples, 0.05%)</title><rect x="290.1" y="437" width="0.6" height="15.0" fill="rgb(232,165,8)" rx="2" ry="2" />
<text  x="293.14" y="447.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin::concat (1,707 samples, 0.41%)</title><rect x="282.6" y="421" width="4.8" height="15.0" fill="rgb(223,100,54)" rx="2" ry="2" />
<text  x="285.61" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (357 samples, 0.09%)</title><rect x="1013.6" y="421" width="1.0" height="15.0" fill="rgb(210,199,30)" rx="2" ry="2" />
<text  x="1016.59" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,868 samples, 0.69%)</title><rect x="305.3" y="341" width="8.1" height="15.0" fill="rgb(236,122,45)" rx="2" ry="2" />
<text  x="308.32" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (470 samples, 0.11%)</title><rect x="1110.1" y="389" width="1.3" height="15.0" fill="rgb(215,135,20)" rx="2" ry="2" />
<text  x="1113.08" y="399.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::AhoCorasick&lt;S&gt;::earliest_find (1,014 samples, 0.24%)</title><rect x="1120.1" y="357" width="2.8" height="15.0" fill="rgb(205,160,31)" rx="2" ry="2" />
<text  x="1123.06" y="367.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8 (698 samples, 0.17%)</title><rect x="71.0" y="405" width="1.9" height="15.0" fill="rgb(216,75,24)" rx="2" ry="2" />
<text  x="73.96" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (153 samples, 0.04%)</title><rect x="466.9" y="181" width="0.5" height="15.0" fill="rgb(225,64,6)" rx="2" ry="2" />
<text  x="469.92" y="191.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (112 samples, 0.03%)</title><rect x="73.2" y="325" width="0.3" height="15.0" fill="rgb(205,163,38)" rx="2" ry="2" />
<text  x="76.18" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (324 samples, 0.08%)</title><rect x="978.9" y="341" width="0.9" height="15.0" fill="rgb(253,22,42)" rx="2" ry="2" />
<text  x="981.91" y="351.5" ></text>
</g>
<g >
<title>core::ptr::write (198 samples, 0.05%)</title><rect x="1164.4" y="421" width="0.5" height="15.0" fill="rgb(240,115,41)" rx="2" ry="2" />
<text  x="1167.38" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (404 samples, 0.10%)</title><rect x="362.3" y="197" width="1.2" height="15.0" fill="rgb(232,68,6)" rx="2" ry="2" />
<text  x="365.34" y="207.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (287 samples, 0.07%)</title><rect x="323.4" y="261" width="0.8" height="15.0" fill="rgb(246,121,15)" rx="2" ry="2" />
<text  x="326.37" y="271.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_cold (210 samples, 0.05%)</title><rect x="80.4" y="421" width="0.6" height="15.0" fill="rgb(243,31,34)" rx="2" ry="2" />
<text  x="83.36" y="431.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (146 samples, 0.03%)</title><rect x="73.1" y="373" width="0.4" height="15.0" fill="rgb(240,48,41)" rx="2" ry="2" />
<text  x="76.10" y="383.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::append (668 samples, 0.16%)</title><rect x="287.4" y="421" width="1.9" height="15.0" fill="rgb(219,60,25)" rx="2" ry="2" />
<text  x="290.44" y="431.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (696 samples, 0.17%)</title><rect x="275.4" y="277" width="1.9" height="15.0" fill="rgb(207,196,33)" rx="2" ry="2" />
<text  x="278.38" y="287.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (156 samples, 0.04%)</title><rect x="441.7" y="197" width="0.5" height="15.0" fill="rgb(214,151,50)" rx="2" ry="2" />
<text  x="444.72" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,781 samples, 0.67%)</title><rect x="1086.5" y="277" width="7.8" height="15.0" fill="rgb(217,68,45)" rx="2" ry="2" />
<text  x="1089.48" y="287.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (732 samples, 0.18%)</title><rect x="126.7" y="389" width="2.1" height="15.0" fill="rgb(222,123,43)" rx="2" ry="2" />
<text  x="129.69" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::u32_array_parser (812 samples, 0.19%)</title><rect x="401.7" y="277" width="2.3" height="15.0" fill="rgb(228,44,17)" rx="2" ry="2" />
<text  x="404.71" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (151 samples, 0.04%)</title><rect x="285.6" y="293" width="0.4" height="15.0" fill="rgb(241,9,5)" rx="2" ry="2" />
<text  x="288.62" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_free (2,124 samples, 0.51%)</title><rect x="393.9" y="261" width="6.0" height="15.0" fill="rgb(238,165,6)" rx="2" ry="2" />
<text  x="396.87" y="271.5" ></text>
</g>
<g >
<title>std::os::imp::unix::net::datagram::UnixDatagram::send (163 samples, 0.04%)</title><rect x="80.5" y="373" width="0.4" height="15.0" fill="rgb(246,202,52)" rx="2" ry="2" />
<text  x="83.48" y="383.5" ></text>
</g>
<g >
<title>[[stack]] (8,155 samples, 1.95%)</title><rect x="23.9" y="501" width="23.0" height="15.0" fill="rgb(206,176,13)" rx="2" ry="2" />
<text  x="26.88" y="511.5" >[..</text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::is_shorter (122 samples, 0.03%)</title><rect x="273.3" y="421" width="0.3" height="15.0" fill="rgb(217,191,50)" rx="2" ry="2" />
<text  x="276.27" y="431.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (876 samples, 0.21%)</title><rect x="1149.0" y="245" width="2.5" height="15.0" fill="rgb(245,83,37)" rx="2" ry="2" />
<text  x="1152.02" y="255.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (1,254 samples, 0.30%)</title><rect x="765.9" y="405" width="3.5" height="15.0" fill="rgb(207,78,8)" rx="2" ry="2" />
<text  x="768.86" y="415.5" ></text>
</g>
<g >
<title>_int_free (1,089 samples, 0.26%)</title><rect x="56.6" y="485" width="3.1" height="15.0" fill="rgb(231,122,13)" rx="2" ry="2" />
<text  x="59.64" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,254 samples, 1.02%)</title><rect x="429.7" y="165" width="12.0" height="15.0" fill="rgb(226,214,36)" rx="2" ry="2" />
<text  x="432.69" y="175.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (861 samples, 0.21%)</title><rect x="279.9" y="421" width="2.5" height="15.0" fill="rgb(226,213,36)" rx="2" ry="2" />
<text  x="282.93" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (483 samples, 0.12%)</title><rect x="349.4" y="357" width="1.3" height="15.0" fill="rgb(253,150,52)" rx="2" ry="2" />
<text  x="352.38" y="367.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::shortest_match_at (205 samples, 0.05%)</title><rect x="256.2" y="357" width="0.6" height="15.0" fill="rgb(245,73,52)" rx="2" ry="2" />
<text  x="259.17" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15,592 samples, 3.74%)</title><rect x="842.5" y="341" width="44.1" height="15.0" fill="rgb(223,15,38)" rx="2" ry="2" />
<text  x="845.49" y="351.5" >hash..</text>
</g>
<g >
<title>regex::dfa::Result&lt;T&gt;::set_non_match (121 samples, 0.03%)</title><rect x="236.7" y="261" width="0.3" height="15.0" fill="rgb(219,130,44)" rx="2" ry="2" />
<text  x="239.70" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,234 samples, 0.54%)</title><rect x="1034.4" y="373" width="6.3" height="15.0" fill="rgb(216,190,45)" rx="2" ry="2" />
<text  x="1037.36" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,254 samples, 1.02%)</title><rect x="429.7" y="213" width="12.0" height="15.0" fill="rgb(246,28,35)" rx="2" ry="2" />
<text  x="432.69" y="223.5" ></text>
</g>
<g >
<title>sudachi::sentence_detector::SentenceDetector::get_eos (61,504 samples, 14.74%)</title><rect x="93.1" y="453" width="173.9" height="15.0" fill="rgb(243,12,43)" rx="2" ry="2" />
<text  x="96.12" y="463.5" >sudachi::sentence_dete..</text>
</g>
<g >
<title>std::io::append_to_string (1,492 samples, 0.36%)</title><rect x="70.6" y="421" width="4.2" height="15.0" fill="rgb(218,223,22)" rx="2" ry="2" />
<text  x="73.62" y="431.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (7,704 samples, 1.85%)</title><rect x="527.3" y="325" width="21.8" height="15.0" fill="rgb(208,113,7)" rx="2" ry="2" />
<text  x="530.30" y="335.5" >c..</text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (221 samples, 0.05%)</title><rect x="42.1" y="485" width="0.6" height="15.0" fill="rgb(233,146,23)" rx="2" ry="2" />
<text  x="45.05" y="495.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (127 samples, 0.03%)</title><rect x="1079.5" y="341" width="0.3" height="15.0" fill="rgb(254,136,51)" rx="2" ry="2" />
<text  x="1082.45" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,578 samples, 0.38%)</title><rect x="1095.3" y="261" width="4.5" height="15.0" fill="rgb(225,135,14)" rx="2" ry="2" />
<text  x="1098.30" y="271.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (24,444 samples, 5.86%)</title><rect x="817.5" y="389" width="69.1" height="15.0" fill="rgb(207,31,35)" rx="2" ry="2" />
<text  x="820.46" y="399.5" >std::co..</text>
</g>
<g >
<title>core::cmp::Ord::max (310 samples, 0.07%)</title><rect x="686.7" y="325" width="0.9" height="15.0" fill="rgb(243,173,27)" rx="2" ry="2" />
<text  x="689.70" y="335.5" ></text>
</g>
<g >
<title>_int_free (1,311 samples, 0.31%)</title><rect x="396.2" y="245" width="3.7" height="15.0" fill="rgb(209,47,19)" rx="2" ry="2" />
<text  x="399.17" y="255.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (127 samples, 0.03%)</title><rect x="1079.5" y="357" width="0.3" height="15.0" fill="rgb(232,22,14)" rx="2" ry="2" />
<text  x="1082.45" y="367.5" ></text>
</g>
<g >
<title>core::ptr::write (736 samples, 0.18%)</title><rect x="326.5" y="421" width="2.1" height="15.0" fill="rgb(250,22,26)" rx="2" ry="2" />
<text  x="329.54" y="431.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (608 samples, 0.15%)</title><rect x="688.5" y="405" width="1.7" height="15.0" fill="rgb(237,222,20)" rx="2" ry="2" />
<text  x="691.47" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::any_bit_set (112 samples, 0.03%)</title><rect x="1037.5" y="277" width="0.3" height="15.0" fill="rgb(250,50,7)" rx="2" ry="2" />
<text  x="1040.48" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,062 samples, 0.25%)</title><rect x="262.0" y="309" width="3.0" height="15.0" fill="rgb(217,6,4)" rx="2" ry="2" />
<text  x="265.01" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (163 samples, 0.04%)</title><rect x="258.2" y="357" width="0.4" height="15.0" fill="rgb(231,59,29)" rx="2" ry="2" />
<text  x="261.18" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (223 samples, 0.05%)</title><rect x="73.6" y="309" width="0.7" height="15.0" fill="rgb(210,96,24)" rx="2" ry="2" />
<text  x="76.62" y="319.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3,107 samples, 0.74%)</title><rect x="950.4" y="277" width="8.8" height="15.0" fill="rgb(233,195,33)" rx="2" ry="2" />
<text  x="953.43" y="287.5" ></text>
</g>
<g >
<title>core::option::Option&lt;&amp;T&gt;::copied (2,654 samples, 0.64%)</title><rect x="457.7" y="213" width="7.5" height="15.0" fill="rgb(210,77,20)" rx="2" ry="2" />
<text  x="460.65" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with (122 samples, 0.03%)</title><rect x="1170.3" y="405" width="0.3" height="15.0" fill="rgb(214,183,9)" rx="2" ry="2" />
<text  x="1173.27" y="415.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (118 samples, 0.03%)</title><rect x="10.1" y="485" width="0.3" height="15.0" fill="rgb(222,48,35)" rx="2" ry="2" />
<text  x="13.05" y="495.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::exec_nfa (804 samples, 0.19%)</title><rect x="259.3" y="325" width="2.3" height="15.0" fill="rgb(222,137,47)" rx="2" ry="2" />
<text  x="262.28" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (132 samples, 0.03%)</title><rect x="415.9" y="117" width="0.4" height="15.0" fill="rgb(209,165,54)" rx="2" ry="2" />
<text  x="418.90" y="127.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::ok::{{closure}} (137 samples, 0.03%)</title><rect x="1161.6" y="325" width="0.4" height="15.0" fill="rgb(236,99,23)" rx="2" ry="2" />
<text  x="1164.61" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (12,392 samples, 2.97%)</title><rect x="626.3" y="277" width="35.0" height="15.0" fill="rgb(248,202,5)" rx="2" ry="2" />
<text  x="629.29" y="287.5" >__..</text>
</g>
<g >
<title>std::sys::unix::memchr::memchr (196 samples, 0.05%)</title><rect x="74.3" y="357" width="0.5" height="15.0" fill="rgb(248,100,49)" rx="2" ry="2" />
<text  x="77.29" y="367.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::shortest_dfa (187 samples, 0.04%)</title><rect x="256.2" y="341" width="0.6" height="15.0" fill="rgb(212,207,21)" rx="2" ry="2" />
<text  x="259.22" y="351.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,331 samples, 1.04%)</title><rect x="851.2" y="309" width="12.3" height="15.0" fill="rgb(254,42,14)" rx="2" ry="2" />
<text  x="854.22" y="319.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (677 samples, 0.16%)</title><rect x="1004.5" y="245" width="1.9" height="15.0" fill="rgb(246,17,13)" rx="2" ry="2" />
<text  x="1007.46" y="255.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (3,079 samples, 0.74%)</title><rect x="184.0" y="309" width="8.7" height="15.0" fill="rgb(205,29,20)" rx="2" ry="2" />
<text  x="186.97" y="319.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (111 samples, 0.03%)</title><rect x="1055.9" y="325" width="0.4" height="15.0" fill="rgb(250,16,22)" rx="2" ry="2" />
<text  x="1058.94" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,142 samples, 0.75%)</title><rect x="1086.4" y="357" width="8.9" height="15.0" fill="rgb(207,173,39)" rx="2" ry="2" />
<text  x="1089.42" y="367.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (894 samples, 0.21%)</title><rect x="591.5" y="389" width="2.6" height="15.0" fill="rgb(212,64,31)" rx="2" ry="2" />
<text  x="594.54" y="399.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (159 samples, 0.04%)</title><rect x="48.5" y="421" width="0.4" height="15.0" fill="rgb(231,175,53)" rx="2" ry="2" />
<text  x="51.46" y="431.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::fill_word_info (195 samples, 0.05%)</title><rect x="268.6" y="453" width="0.5" height="15.0" fill="rgb(247,13,46)" rx="2" ry="2" />
<text  x="271.56" y="463.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::set_range (368 samples, 0.09%)</title><rect x="970.8" y="421" width="1.0" height="15.0" fill="rgb(221,155,7)" rx="2" ry="2" />
<text  x="973.78" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4,747 samples, 1.14%)</title><rect x="413.5" y="229" width="13.4" height="15.0" fill="rgb(215,71,15)" rx="2" ry="2" />
<text  x="416.49" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (927 samples, 0.22%)</title><rect x="122.5" y="373" width="2.6" height="15.0" fill="rgb(206,104,41)" rx="2" ry="2" />
<text  x="125.52" y="383.5" ></text>
</g>
<g >
<title>malloc_consolidate (163 samples, 0.04%)</title><rect x="311.8" y="277" width="0.5" height="15.0" fill="rgb(237,94,26)" rx="2" ry="2" />
<text  x="314.83" y="287.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite::{{closure}} (16,370 samples, 3.92%)</title><rect x="1113.0" y="405" width="46.3" height="15.0" fill="rgb(249,42,15)" rx="2" ry="2" />
<text  x="1116.05" y="415.5" >suda..</text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,724 samples, 0.41%)</title><rect x="261.6" y="341" width="4.8" height="15.0" fill="rgb(210,126,16)" rx="2" ry="2" />
<text  x="264.55" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (298 samples, 0.07%)</title><rect x="686.7" y="309" width="0.8" height="15.0" fill="rgb(242,207,20)" rx="2" ry="2" />
<text  x="689.70" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::lookup::{{closure}} (283 samples, 0.07%)</title><rect x="552.9" y="325" width="0.8" height="15.0" fill="rgb(240,126,51)" rx="2" ry="2" />
<text  x="555.92" y="335.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::part_of_speech_id (146 samples, 0.03%)</title><rect x="91.3" y="421" width="0.4" height="15.0" fill="rgb(222,72,43)" rx="2" ry="2" />
<text  x="94.32" y="431.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (666 samples, 0.16%)</title><rect x="275.5" y="261" width="1.8" height="15.0" fill="rgb(237,215,45)" rx="2" ry="2" />
<text  x="278.46" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (24,444 samples, 5.86%)</title><rect x="817.5" y="373" width="69.1" height="15.0" fill="rgb(224,57,10)" rx="2" ry="2" />
<text  x="820.46" y="383.5" >hashbro..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,079 samples, 0.50%)</title><rect x="299.1" y="277" width="5.9" height="15.0" fill="rgb(224,163,14)" rx="2" ry="2" />
<text  x="302.14" y="287.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (212 samples, 0.05%)</title><rect x="1126.1" y="245" width="0.6" height="15.0" fill="rgb(228,138,4)" rx="2" ry="2" />
<text  x="1129.06" y="255.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (18,680 samples, 4.48%)</title><rect x="195.2" y="389" width="52.8" height="15.0" fill="rgb(250,20,6)" rx="2" ry="2" />
<text  x="198.21" y="399.5" >regex..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (137 samples, 0.03%)</title><rect x="1161.6" y="309" width="0.4" height="15.0" fill="rgb(249,64,39)" rx="2" ry="2" />
<text  x="1164.61" y="319.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (150 samples, 0.04%)</title><rect x="194.6" y="309" width="0.4" height="15.0" fill="rgb(208,72,27)" rx="2" ry="2" />
<text  x="197.61" y="319.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (112 samples, 0.03%)</title><rect x="73.2" y="357" width="0.3" height="15.0" fill="rgb(221,153,20)" rx="2" ry="2" />
<text  x="76.18" y="367.5" ></text>
</g>
<g >
<title>_int_free (2,174 samples, 0.52%)</title><rect x="307.1" y="293" width="6.2" height="15.0" fill="rgb(228,116,41)" rx="2" ry="2" />
<text  x="310.11" y="303.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (165 samples, 0.04%)</title><rect x="1082.5" y="325" width="0.5" height="15.0" fill="rgb(209,169,50)" rx="2" ry="2" />
<text  x="1085.54" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (137 samples, 0.03%)</title><rect x="285.7" y="197" width="0.3" height="15.0" fill="rgb(252,111,7)" rx="2" ry="2" />
<text  x="288.65" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (107 samples, 0.03%)</title><rect x="1171.3" y="357" width="0.3" height="15.0" fill="rgb(254,173,46)" rx="2" ry="2" />
<text  x="1174.28" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,736 samples, 0.42%)</title><rect x="1095.3" y="341" width="4.9" height="15.0" fill="rgb(220,213,53)" rx="2" ry="2" />
<text  x="1098.30" y="351.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_continuous_len (461 samples, 0.11%)</title><rect x="1078.5" y="389" width="1.3" height="15.0" fill="rgb(237,84,10)" rx="2" ry="2" />
<text  x="1081.54" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (119 samples, 0.03%)</title><rect x="402.8" y="165" width="0.4" height="15.0" fill="rgb(233,85,0)" rx="2" ry="2" />
<text  x="405.82" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (295 samples, 0.07%)</title><rect x="147.7" y="357" width="0.9" height="15.0" fill="rgb(220,74,15)" rx="2" ry="2" />
<text  x="150.75" y="367.5" ></text>
</g>
<g >
<title>alloc::string::String::as_bytes (558 samples, 0.13%)</title><rect x="89.0" y="437" width="1.5" height="15.0" fill="rgb(229,26,30)" rx="2" ry="2" />
<text  x="91.96" y="447.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7,704 samples, 1.85%)</title><rect x="527.3" y="309" width="21.8" height="15.0" fill="rgb(214,112,35)" rx="2" ry="2" />
<text  x="530.30" y="319.5" >c..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (107 samples, 0.03%)</title><rect x="1171.3" y="373" width="0.3" height="15.0" fill="rgb(240,170,34)" rx="2" ry="2" />
<text  x="1174.28" y="383.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite (17,464 samples, 4.18%)</title><rect x="1110.0" y="437" width="49.3" height="15.0" fill="rgb(230,51,22)" rx="2" ry="2" />
<text  x="1112.95" y="447.5" >suda..</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (113 samples, 0.03%)</title><rect x="1099.9" y="229" width="0.3" height="15.0" fill="rgb(218,160,37)" rx="2" ry="2" />
<text  x="1102.89" y="239.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (499 samples, 0.12%)</title><rect x="30.6" y="485" width="1.4" height="15.0" fill="rgb(248,168,43)" rx="2" ry="2" />
<text  x="33.62" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (162 samples, 0.04%)</title><rect x="65.3" y="485" width="0.5" height="15.0" fill="rgb(232,112,18)" rx="2" ry="2" />
<text  x="68.32" y="495.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (1,461 samples, 0.35%)</title><rect x="1147.8" y="341" width="4.1" height="15.0" fill="rgb(221,208,20)" rx="2" ry="2" />
<text  x="1150.81" y="351.5" ></text>
</g>
<g >
<title>alloc::string::String::push (116 samples, 0.03%)</title><rect x="413.5" y="197" width="0.3" height="15.0" fill="rgb(240,148,31)" rx="2" ry="2" />
<text  x="416.49" y="207.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (3,821 samples, 0.92%)</title><rect x="1172.9" y="277" width="10.8" height="15.0" fill="rgb(238,218,28)" rx="2" ry="2" />
<text  x="1175.93" y="287.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (314 samples, 0.08%)</title><rect x="247.1" y="213" width="0.9" height="15.0" fill="rgb(217,69,36)" rx="2" ry="2" />
<text  x="250.13" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (213 samples, 0.05%)</title><rect x="73.6" y="293" width="0.7" height="15.0" fill="rgb(231,83,43)" rx="2" ry="2" />
<text  x="76.65" y="303.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next (177 samples, 0.04%)</title><rect x="236.2" y="245" width="0.5" height="15.0" fill="rgb(205,227,26)" rx="2" ry="2" />
<text  x="239.20" y="255.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (243 samples, 0.06%)</title><rect x="143.6" y="373" width="0.7" height="15.0" fill="rgb(248,67,23)" rx="2" ry="2" />
<text  x="146.65" y="383.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::find_at (1,965 samples, 0.47%)</title><rect x="1153.2" y="325" width="5.6" height="15.0" fill="rgb(209,46,22)" rx="2" ry="2" />
<text  x="1156.23" y="335.5" ></text>
</g>
<g >
<title>[unknown] (403,332 samples, 96.63%)</title><rect x="47.3" y="501" width="1140.3" height="15.0" fill="rgb(238,184,53)" rx="2" ry="2" />
<text  x="50.34" y="511.5" >[unknown]</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::lattice::Lattice&gt; (8,546 samples, 2.05%)</title><rect x="290.7" y="453" width="24.2" height="15.0" fill="rgb(226,166,48)" rx="2" ry="2" />
<text  x="293.73" y="463.5" >c..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (221 samples, 0.05%)</title><rect x="466.7" y="197" width="0.7" height="15.0" fill="rgb(238,89,19)" rx="2" ry="2" />
<text  x="469.73" y="207.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (24,444 samples, 5.86%)</title><rect x="817.5" y="357" width="69.1" height="15.0" fill="rgb(227,200,5)" rx="2" ry="2" />
<text  x="820.46" y="367.5" >hashbro..</text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (138 samples, 0.03%)</title><rect x="13.5" y="421" width="0.4" height="15.0" fill="rgb(223,19,38)" rx="2" ry="2" />
<text  x="16.51" y="431.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,519 samples, 0.60%)</title><rect x="750.5" y="405" width="7.1" height="15.0" fill="rgb(242,30,25)" rx="2" ry="2" />
<text  x="753.46" y="415.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::clear (143 samples, 0.03%)</title><rect x="261.1" y="261" width="0.4" height="15.0" fill="rgb(238,212,3)" rx="2" ry="2" />
<text  x="264.08" y="271.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::Imp&lt;S&gt;::earliest_find_at (594 samples, 0.14%)</title><rect x="1121.0" y="341" width="1.7" height="15.0" fill="rgb(234,115,31)" rx="2" ry="2" />
<text  x="1124.01" y="351.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (110 samples, 0.03%)</title><rect x="277.4" y="309" width="0.3" height="15.0" fill="rgb(236,205,53)" rx="2" ry="2" />
<text  x="280.40" y="319.5" ></text>
</g>
<g >
<title>alloc::string::String::reserve (113 samples, 0.03%)</title><rect x="248.5" y="389" width="0.3" height="15.0" fill="rgb(208,11,16)" rx="2" ry="2" />
<text  x="251.47" y="399.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::captures_nfa_type (815 samples, 0.20%)</title><rect x="259.2" y="341" width="2.4" height="15.0" fill="rgb(246,18,29)" rx="2" ry="2" />
<text  x="262.25" y="351.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (243 samples, 0.06%)</title><rect x="143.6" y="357" width="0.7" height="15.0" fill="rgb(228,122,23)" rx="2" ry="2" />
<text  x="146.65" y="367.5" ></text>
</g>
<g >
<title>&lt;T as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::oov_provider_plugins (270 samples, 0.06%)</title><rect x="488.4" y="437" width="0.8" height="15.0" fill="rgb(240,194,50)" rx="2" ry="2" />
<text  x="491.41" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (6,914 samples, 1.66%)</title><rect x="986.9" y="293" width="19.6" height="15.0" fill="rgb(232,59,0)" rx="2" ry="2" />
<text  x="989.91" y="303.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::refresh_chars (478 samples, 0.11%)</title><rect x="1110.1" y="421" width="1.3" height="15.0" fill="rgb(242,8,36)" rx="2" ry="2" />
<text  x="1113.06" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,578 samples, 0.38%)</title><rect x="1095.3" y="213" width="4.5" height="15.0" fill="rgb(221,92,18)" rx="2" ry="2" />
<text  x="1098.30" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::word_info_parser (4,591 samples, 1.10%)</title><rect x="352.1" y="373" width="13.0" height="15.0" fill="rgb(206,120,1)" rx="2" ry="2" />
<text  x="355.12" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::index (261 samples, 0.06%)</title><rect x="92.1" y="405" width="0.7" height="15.0" fill="rgb(241,80,8)" rx="2" ry="2" />
<text  x="95.05" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (139 samples, 0.03%)</title><rect x="246.5" y="277" width="0.3" height="15.0" fill="rgb(253,220,9)" rx="2" ry="2" />
<text  x="249.45" y="287.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (18,365 samples, 4.40%)</title><rect x="196.1" y="357" width="51.9" height="15.0" fill="rgb(246,98,49)" rx="2" ry="2" />
<text  x="199.10" y="367.5" >regex..</text>
</g>
<g >
<title>sudachi::dic::grammar::connect_cost_parser (29,786 samples, 7.14%)</title><rect x="886.6" y="389" width="84.2" height="15.0" fill="rgb(213,4,37)" rx="2" ry="2" />
<text  x="889.57" y="399.5" >sudachi::..</text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,867 samples, 4.76%)</title><rect x="492.9" y="373" width="56.2" height="15.0" fill="rgb(243,43,38)" rx="2" ry="2" />
<text  x="495.91" y="383.5" >&lt;core..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (158 samples, 0.04%)</title><rect x="1111.9" y="373" width="0.5" height="15.0" fill="rgb(235,50,25)" rx="2" ry="2" />
<text  x="1114.95" y="383.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_flags (933 samples, 0.22%)</title><rect x="237.0" y="277" width="2.7" height="15.0" fill="rgb(231,41,8)" rx="2" ry="2" />
<text  x="240.04" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (2,441 samples, 0.58%)</title><rect x="417.2" y="69" width="6.9" height="15.0" fill="rgb(253,179,3)" rx="2" ry="2" />
<text  x="420.19" y="79.5" ></text>
</g>
<g >
<title>_int_malloc (122 samples, 0.03%)</title><rect x="284.5" y="181" width="0.4" height="15.0" fill="rgb(232,143,44)" rx="2" ry="2" />
<text  x="287.54" y="191.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (117 samples, 0.03%)</title><rect x="48.5" y="357" width="0.3" height="15.0" fill="rgb(206,77,12)" rx="2" ry="2" />
<text  x="51.46" y="367.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (316 samples, 0.08%)</title><rect x="1110.3" y="357" width="0.9" height="15.0" fill="rgb(250,125,4)" rx="2" ry="2" />
<text  x="1113.33" y="367.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (279 samples, 0.07%)</title><rect x="1163.0" y="389" width="0.8" height="15.0" fill="rgb(220,177,31)" rx="2" ry="2" />
<text  x="1165.97" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (793 samples, 0.19%)</title><rect x="122.9" y="357" width="2.2" height="15.0" fill="rgb(213,39,39)" rx="2" ry="2" />
<text  x="125.90" y="367.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (22,334 samples, 5.35%)</title><rect x="896.1" y="293" width="63.1" height="15.0" fill="rgb(219,119,13)" rx="2" ry="2" />
<text  x="899.07" y="303.5" >nom::c..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get (173 samples, 0.04%)</title><rect x="128.0" y="325" width="0.5" height="15.0" fill="rgb(210,27,29)" rx="2" ry="2" />
<text  x="130.99" y="335.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (192 samples, 0.05%)</title><rect x="55.1" y="485" width="0.5" height="15.0" fill="rgb(206,175,45)" rx="2" ry="2" />
<text  x="58.06" y="495.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match (331 samples, 0.08%)</title><rect x="193.2" y="325" width="0.9" height="15.0" fill="rgb(233,115,20)" rx="2" ry="2" />
<text  x="196.19" y="335.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Pattern::is_prefix (542 samples, 0.13%)</title><rect x="1155.1" y="117" width="1.6" height="15.0" fill="rgb(238,177,46)" rx="2" ry="2" />
<text  x="1158.12" y="127.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,051 samples, 0.25%)</title><rect x="549.1" y="373" width="3.0" height="15.0" fill="rgb(222,137,37)" rx="2" ry="2" />
<text  x="552.08" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (180 samples, 0.04%)</title><rect x="1184.9" y="325" width="0.5" height="15.0" fill="rgb(232,24,50)" rx="2" ry="2" />
<text  x="1187.88" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (133 samples, 0.03%)</title><rect x="80.5" y="309" width="0.4" height="15.0" fill="rgb(206,129,30)" rx="2" ry="2" />
<text  x="83.54" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (153 samples, 0.04%)</title><rect x="267.4" y="437" width="0.4" height="15.0" fill="rgb(252,190,54)" rx="2" ry="2" />
<text  x="270.35" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (2,022 samples, 0.48%)</title><rect x="248.8" y="277" width="5.7" height="15.0" fill="rgb(210,198,17)" rx="2" ry="2" />
<text  x="251.81" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Byte::is_ascii_word (137 samples, 0.03%)</title><rect x="190.4" y="277" width="0.4" height="15.0" fill="rgb(249,3,40)" rx="2" ry="2" />
<text  x="193.40" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (416 samples, 0.10%)</title><rect x="362.3" y="213" width="1.2" height="15.0" fill="rgb(225,92,13)" rx="2" ry="2" />
<text  x="365.31" y="223.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (181 samples, 0.04%)</title><rect x="254.9" y="293" width="0.5" height="15.0" fill="rgb(209,196,34)" rx="2" ry="2" />
<text  x="257.90" y="303.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::collect_results (534 samples, 0.13%)</title><rect x="268.6" y="469" width="1.5" height="15.0" fill="rgb(239,8,29)" rx="2" ry="2" />
<text  x="271.56" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (115 samples, 0.03%)</title><rect x="622.4" y="325" width="0.3" height="15.0" fill="rgb(244,120,42)" rx="2" ry="2" />
<text  x="625.42" y="335.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (282 samples, 0.07%)</title><rect x="288.1" y="373" width="0.8" height="15.0" fill="rgb(224,57,26)" rx="2" ry="2" />
<text  x="291.11" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1,049 samples, 0.25%)</title><rect x="874.2" y="261" width="2.9" height="15.0" fill="rgb(234,77,22)" rx="2" ry="2" />
<text  x="877.17" y="271.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23,147 samples, 5.55%)</title><rect x="489.5" y="437" width="65.5" height="15.0" fill="rgb(238,144,33)" rx="2" ry="2" />
<text  x="492.54" y="447.5" >&lt;core::..</text>
</g>
<g >
<title>alloc::alloc::alloc (3,040 samples, 0.73%)</title><rect x="373.5" y="213" width="8.6" height="15.0" fill="rgb(205,136,19)" rx="2" ry="2" />
<text  x="376.47" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (160 samples, 0.04%)</title><rect x="73.8" y="261" width="0.4" height="15.0" fill="rgb(234,154,19)" rx="2" ry="2" />
<text  x="76.76" y="271.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::find_at (1,474 samples, 0.35%)</title><rect x="1154.1" y="197" width="4.2" height="15.0" fill="rgb(249,61,48)" rx="2" ry="2" />
<text  x="1157.13" y="207.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (415 samples, 0.10%)</title><rect x="354.5" y="261" width="1.2" height="15.0" fill="rgb(238,75,23)" rx="2" ry="2" />
<text  x="357.54" y="271.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (532 samples, 0.13%)</title><rect x="552.2" y="373" width="1.5" height="15.0" fill="rgb(239,185,1)" rx="2" ry="2" />
<text  x="555.21" y="383.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (158 samples, 0.04%)</title><rect x="403.4" y="181" width="0.5" height="15.0" fill="rgb(227,113,29)" rx="2" ry="2" />
<text  x="406.40" y="191.5" ></text>
</g>
<g >
<title>core::str::validations::unwrap_or_0 (156 samples, 0.04%)</title><rect x="255.4" y="293" width="0.5" height="15.0" fill="rgb(233,49,38)" rx="2" ry="2" />
<text  x="258.41" y="303.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (487 samples, 0.12%)</title><rect x="254.5" y="325" width="1.4" height="15.0" fill="rgb(234,166,37)" rx="2" ry="2" />
<text  x="257.52" y="335.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search (1,069 samples, 0.26%)</title><rect x="1165.5" y="421" width="3.1" height="15.0" fill="rgb(214,121,33)" rx="2" ry="2" />
<text  x="1168.53" y="431.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::set_word_info (775 samples, 0.19%)</title><rect x="335.0" y="437" width="2.2" height="15.0" fill="rgb(226,61,44)" rx="2" ry="2" />
<text  x="338.00" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (129 samples, 0.03%)</title><rect x="288.3" y="229" width="0.4" height="15.0" fill="rgb(225,88,26)" rx="2" ry="2" />
<text  x="291.31" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (474 samples, 0.11%)</title><rect x="357.6" y="117" width="1.3" height="15.0" fill="rgb(225,123,24)" rx="2" ry="2" />
<text  x="360.60" y="127.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::boxed::Box&lt;W&gt;&gt;::write (167 samples, 0.04%)</title><rect x="80.5" y="389" width="0.4" height="15.0" fill="rgb(235,217,47)" rx="2" ry="2" />
<text  x="83.47" y="399.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::u8_class (285 samples, 0.07%)</title><rect x="235.2" y="229" width="0.8" height="15.0" fill="rgb(226,162,54)" rx="2" ry="2" />
<text  x="238.23" y="239.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,400 samples, 0.34%)</title><rect x="979.8" y="341" width="4.0" height="15.0" fill="rgb(205,69,30)" rx="2" ry="2" />
<text  x="982.83" y="351.5" ></text>
</g>
<g >
<title>&lt;sudachi::sentence_detector::SentenceDetector::get_eos::SENTENCE_BREAKER as core::ops::deref::Deref&gt;::deref::__stability::LAZY (855 samples, 0.20%)</title><rect x="10.6" y="501" width="2.4" height="15.0" fill="rgb(222,182,0)" rx="2" ry="2" />
<text  x="13.56" y="511.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at_reverse (201 samples, 0.05%)</title><rect x="265.6" y="309" width="0.6" height="15.0" fill="rgb(219,64,41)" rx="2" ry="2" />
<text  x="268.61" y="319.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (138 samples, 0.03%)</title><rect x="13.5" y="453" width="0.4" height="15.0" fill="rgb(234,103,21)" rx="2" ry="2" />
<text  x="16.51" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (2,770 samples, 0.66%)</title><rect x="297.4" y="325" width="7.9" height="15.0" fill="rgb(219,98,40)" rx="2" ry="2" />
<text  x="300.42" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (3,019 samples, 0.72%)</title><rect x="864.5" y="261" width="8.5" height="15.0" fill="rgb(254,62,19)" rx="2" ry="2" />
<text  x="867.49" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (110 samples, 0.03%)</title><rect x="73.2" y="277" width="0.3" height="15.0" fill="rgb(216,24,52)" rx="2" ry="2" />
<text  x="76.18" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (1,261 samples, 0.30%)</title><rect x="59.7" y="485" width="3.6" height="15.0" fill="rgb(216,14,20)" rx="2" ry="2" />
<text  x="62.72" y="495.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,766 samples, 0.42%)</title><rect x="1095.3" y="357" width="5.0" height="15.0" fill="rgb(237,212,31)" rx="2" ry="2" />
<text  x="1098.30" y="367.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (124 samples, 0.03%)</title><rect x="75.5" y="453" width="0.4" height="15.0" fill="rgb(226,113,7)" rx="2" ry="2" />
<text  x="78.53" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (861 samples, 0.21%)</title><rect x="279.9" y="373" width="2.5" height="15.0" fill="rgb(216,184,27)" rx="2" ry="2" />
<text  x="282.93" y="383.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (119 samples, 0.03%)</title><rect x="401.0" y="277" width="0.3" height="15.0" fill="rgb(251,184,4)" rx="2" ry="2" />
<text  x="403.95" y="287.5" ></text>
</g>
<g >
<title>&lt;T as alloc::string::ToString&gt;::to_string (339 samples, 0.08%)</title><rect x="288.0" y="389" width="0.9" height="15.0" fill="rgb(213,70,52)" rx="2" ry="2" />
<text  x="290.95" y="399.5" ></text>
</g>
<g >
<title>fancy_regex::vm::codepoint_len_at (175 samples, 0.04%)</title><rect x="175.5" y="389" width="0.5" height="15.0" fill="rgb(252,226,50)" rx="2" ry="2" />
<text  x="178.47" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_free (1,866 samples, 0.45%)</title><rect x="299.4" y="197" width="5.3" height="15.0" fill="rgb(238,115,21)" rx="2" ry="2" />
<text  x="302.44" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,549 samples, 0.37%)</title><rect x="974.2" y="389" width="4.4" height="15.0" fill="rgb(231,69,17)" rx="2" ry="2" />
<text  x="977.18" y="399.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (353 samples, 0.08%)</title><rect x="1162.9" y="437" width="1.0" height="15.0" fill="rgb(240,207,31)" rx="2" ry="2" />
<text  x="1165.89" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (261 samples, 0.06%)</title><rect x="402.4" y="229" width="0.8" height="15.0" fill="rgb(210,16,7)" rx="2" ry="2" />
<text  x="405.41" y="239.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (467 samples, 0.11%)</title><rect x="756.3" y="389" width="1.3" height="15.0" fill="rgb(247,102,11)" rx="2" ry="2" />
<text  x="759.26" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (439 samples, 0.11%)</title><rect x="1039.4" y="261" width="1.3" height="15.0" fill="rgb(220,46,16)" rx="2" ry="2" />
<text  x="1042.43" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::capacity (341 samples, 0.08%)</title><rect x="79.4" y="405" width="1.0" height="15.0" fill="rgb(214,54,11)" rx="2" ry="2" />
<text  x="82.40" y="415.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (276 samples, 0.07%)</title><rect x="400.2" y="229" width="0.7" height="15.0" fill="rgb(235,111,54)" rx="2" ry="2" />
<text  x="403.17" y="239.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (2,753 samples, 0.66%)</title><rect x="258.7" y="373" width="7.8" height="15.0" fill="rgb(205,180,23)" rx="2" ry="2" />
<text  x="261.72" y="383.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (4,348 samples, 1.04%)</title><rect x="429.4" y="245" width="12.3" height="15.0" fill="rgb(231,137,26)" rx="2" ry="2" />
<text  x="432.43" y="255.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (26,426 samples, 6.33%)</title><rect x="896.1" y="357" width="74.7" height="15.0" fill="rgb(242,56,41)" rx="2" ry="2" />
<text  x="899.07" y="367.5" >&lt;F as no..</text>
</g>
<g >
<title>unlink_chunk.constprop.0 (343 samples, 0.08%)</title><rect x="312.3" y="277" width="1.0" height="15.0" fill="rgb(212,143,14)" rx="2" ry="2" />
<text  x="315.29" y="287.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (4,092 samples, 0.98%)</title><rect x="959.2" y="341" width="11.6" height="15.0" fill="rgb(249,114,46)" rx="2" ry="2" />
<text  x="962.21" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,056 samples, 0.73%)</title><rect x="373.4" y="277" width="8.7" height="15.0" fill="rgb(254,136,31)" rx="2" ry="2" />
<text  x="376.43" y="287.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (188 samples, 0.05%)</title><rect x="1042.1" y="213" width="0.6" height="15.0" fill="rgb(221,105,54)" rx="2" ry="2" />
<text  x="1045.12" y="223.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,020 samples, 0.96%)</title><rect x="353.7" y="341" width="11.4" height="15.0" fill="rgb(239,111,42)" rx="2" ry="2" />
<text  x="356.70" y="351.5" ></text>
</g>
<g >
<title>&lt;sudachi::output::Simple as sudachi::output::SudachiOutput&lt;T&gt;&gt;::write (162 samples, 0.04%)</title><rect x="88.5" y="437" width="0.5" height="15.0" fill="rgb(245,48,47)" rx="2" ry="2" />
<text  x="91.50" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::get (159 samples, 0.04%)</title><rect x="552.9" y="277" width="0.5" height="15.0" fill="rgb(225,113,31)" rx="2" ry="2" />
<text  x="555.92" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_at_byte (581 samples, 0.14%)</title><rect x="557.1" y="437" width="1.7" height="15.0" fill="rgb(240,33,10)" rx="2" ry="2" />
<text  x="560.11" y="447.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,444 samples, 0.35%)</title><rect x="84.2" y="389" width="4.1" height="15.0" fill="rgb(224,132,29)" rx="2" ry="2" />
<text  x="87.20" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (305 samples, 0.07%)</title><rect x="352.5" y="245" width="0.8" height="15.0" fill="rgb(236,142,50)" rx="2" ry="2" />
<text  x="355.46" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (894 samples, 0.21%)</title><rect x="275.3" y="405" width="2.5" height="15.0" fill="rgb(240,76,49)" rx="2" ry="2" />
<text  x="278.32" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (158 samples, 0.04%)</title><rect x="80.5" y="357" width="0.4" height="15.0" fill="rgb(223,139,20)" rx="2" ry="2" />
<text  x="83.50" y="367.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (244 samples, 0.06%)</title><rect x="278.4" y="405" width="0.7" height="15.0" fill="rgb(222,159,42)" rx="2" ry="2" />
<text  x="281.43" y="415.5" ></text>
</g>
<g >
<title>&lt; (3,968 samples, 0.95%)</title><rect x="353.8" y="309" width="11.2" height="15.0" fill="rgb(230,24,39)" rx="2" ry="2" />
<text  x="356.82" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,821 samples, 0.92%)</title><rect x="1172.9" y="293" width="10.8" height="15.0" fill="rgb(227,196,41)" rx="2" ry="2" />
<text  x="1175.93" y="303.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (219 samples, 0.05%)</title><rect x="193.5" y="309" width="0.6" height="15.0" fill="rgb(251,121,40)" rx="2" ry="2" />
<text  x="196.50" y="319.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (3,196 samples, 0.77%)</title><rect x="1048.3" y="373" width="9.0" height="15.0" fill="rgb(237,225,8)" rx="2" ry="2" />
<text  x="1051.30" y="383.5" ></text>
</g>
<g >
<title>__rdl_alloc (134 samples, 0.03%)</title><rect x="1093.9" y="197" width="0.4" height="15.0" fill="rgb(218,113,34)" rx="2" ry="2" />
<text  x="1096.88" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (8,172 samples, 1.96%)</title><rect x="863.5" y="309" width="23.1" height="15.0" fill="rgb(244,90,41)" rx="2" ry="2" />
<text  x="866.47" y="319.5" >h..</text>
</g>
<g >
<title>_int_malloc (169 samples, 0.04%)</title><rect x="1187.9" y="501" width="0.5" height="15.0" fill="rgb(206,144,45)" rx="2" ry="2" />
<text  x="1190.92" y="511.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (597 samples, 0.14%)</title><rect x="383.2" y="373" width="1.7" height="15.0" fill="rgb(219,212,42)" rx="2" ry="2" />
<text  x="386.23" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (148 samples, 0.04%)</title><rect x="284.5" y="197" width="0.4" height="15.0" fill="rgb(222,173,20)" rx="2" ry="2" />
<text  x="287.47" y="207.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (345 samples, 0.08%)</title><rect x="495.7" y="309" width="0.9" height="15.0" fill="rgb(208,32,51)" rx="2" ry="2" />
<text  x="498.67" y="319.5" ></text>
</g>
<g >
<title>fancy_regex::prev_codepoint_ix (476 samples, 0.11%)</title><rect x="128.8" y="389" width="1.3" height="15.0" fill="rgb(234,179,24)" rx="2" ry="2" />
<text  x="131.77" y="399.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (445 samples, 0.11%)</title><rect x="1161.2" y="389" width="1.2" height="15.0" fill="rgb(214,20,38)" rx="2" ry="2" />
<text  x="1164.17" y="399.5" ></text>
</g>
<g >
<title>_int_realloc (630 samples, 0.15%)</title><rect x="63.3" y="485" width="1.8" height="15.0" fill="rgb(223,73,31)" rx="2" ry="2" />
<text  x="66.29" y="495.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl::{{closure}} (760 samples, 0.18%)</title><rect x="1113.4" y="357" width="2.2" height="15.0" fill="rgb(240,19,43)" rx="2" ry="2" />
<text  x="1116.45" y="367.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (270 samples, 0.06%)</title><rect x="288.1" y="357" width="0.8" height="15.0" fill="rgb(245,152,35)" rx="2" ry="2" />
<text  x="291.14" y="367.5" ></text>
</g>
<g >
<title>core::ptr::write (137 samples, 0.03%)</title><rect x="1161.6" y="277" width="0.4" height="15.0" fill="rgb(237,90,30)" rx="2" ry="2" />
<text  x="1164.61" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4,254 samples, 1.02%)</title><rect x="429.7" y="181" width="12.0" height="15.0" fill="rgb(225,120,34)" rx="2" ry="2" />
<text  x="432.69" y="191.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at (383 samples, 0.09%)</title><rect x="1056.3" y="309" width="1.0" height="15.0" fill="rgb(227,220,9)" rx="2" ry="2" />
<text  x="1059.26" y="319.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (303 samples, 0.07%)</title><rect x="403.2" y="261" width="0.8" height="15.0" fill="rgb(210,4,21)" rx="2" ry="2" />
<text  x="406.15" y="271.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (157 samples, 0.04%)</title><rect x="175.0" y="357" width="0.5" height="15.0" fill="rgb(254,151,52)" rx="2" ry="2" />
<text  x="178.03" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,943 samples, 0.71%)</title><rect x="447.3" y="181" width="8.3" height="15.0" fill="rgb(238,113,29)" rx="2" ry="2" />
<text  x="450.28" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[sudachi::analysis::node::Node]&gt; (4,760 samples, 1.14%)</title><rect x="291.8" y="357" width="13.5" height="15.0" fill="rgb(211,222,35)" rx="2" ry="2" />
<text  x="294.79" y="367.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::PathRewritePlugin::concatenate::{{closure}} (458 samples, 0.11%)</title><rect x="284.0" y="373" width="1.2" height="15.0" fill="rgb(234,158,25)" rx="2" ry="2" />
<text  x="286.95" y="383.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,724 samples, 0.41%)</title><rect x="1153.5" y="277" width="4.9" height="15.0" fill="rgb(242,26,34)" rx="2" ry="2" />
<text  x="1156.53" y="287.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (1,923 samples, 0.46%)</title><rect x="1127.7" y="325" width="5.4" height="15.0" fill="rgb(221,112,8)" rx="2" ry="2" />
<text  x="1130.69" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (687 samples, 0.16%)</title><rect x="359.7" y="213" width="2.0" height="15.0" fill="rgb(249,101,12)" rx="2" ry="2" />
<text  x="362.71" y="223.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (2,367 samples, 0.57%)</title><rect x="168.8" y="373" width="6.7" height="15.0" fill="rgb(252,196,0)" rx="2" ry="2" />
<text  x="171.78" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (109 samples, 0.03%)</title><rect x="687.6" y="325" width="0.3" height="15.0" fill="rgb(207,19,35)" rx="2" ry="2" />
<text  x="690.57" y="335.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::uppercase::lookup (352 samples, 0.08%)</title><rect x="1123.2" y="341" width="1.0" height="15.0" fill="rgb(231,177,43)" rx="2" ry="2" />
<text  x="1126.24" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (167 samples, 0.04%)</title><rect x="283.4" y="277" width="0.5" height="15.0" fill="rgb(214,90,12)" rx="2" ry="2" />
<text  x="286.41" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (653 samples, 0.16%)</title><rect x="981.4" y="261" width="1.9" height="15.0" fill="rgb(251,133,47)" rx="2" ry="2" />
<text  x="984.42" y="271.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,859 samples, 0.68%)</title><rect x="392.1" y="277" width="8.1" height="15.0" fill="rgb(245,18,21)" rx="2" ry="2" />
<text  x="395.08" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (113 samples, 0.03%)</title><rect x="248.5" y="357" width="0.3" height="15.0" fill="rgb(246,45,8)" rx="2" ry="2" />
<text  x="251.47" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,954 samples, 0.95%)</title><rect x="1172.8" y="357" width="11.1" height="15.0" fill="rgb(226,50,35)" rx="2" ry="2" />
<text  x="1175.76" y="367.5" ></text>
</g>
<g >
<title>_int_free (1,932 samples, 0.46%)</title><rect x="640.3" y="245" width="5.5" height="15.0" fill="rgb(230,123,51)" rx="2" ry="2" />
<text  x="643.29" y="255.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::trace_stack (256 samples, 0.06%)</title><rect x="144.3" y="373" width="0.8" height="15.0" fill="rgb(232,132,8)" rx="2" ry="2" />
<text  x="147.33" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (2,628 samples, 0.63%)</title><rect x="248.5" y="405" width="7.4" height="15.0" fill="rgb(207,136,32)" rx="2" ry="2" />
<text  x="251.47" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (443 samples, 0.11%)</title><rect x="166.9" y="357" width="1.2" height="15.0" fill="rgb(209,133,43)" rx="2" ry="2" />
<text  x="169.89" y="367.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::OovProviderPlugin::get_oov (11,267 samples, 2.70%)</title><rect x="1071.3" y="437" width="31.9" height="15.0" fill="rgb(252,167,48)" rx="2" ry="2" />
<text  x="1074.32" y="447.5" >su..</text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (3,196 samples, 0.77%)</title><rect x="1048.3" y="389" width="9.0" height="15.0" fill="rgb(243,122,40)" rx="2" ry="2" />
<text  x="1051.30" y="399.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (2,702 samples, 0.65%)</title><rect x="1048.3" y="325" width="7.6" height="15.0" fill="rgb(246,55,47)" rx="2" ry="2" />
<text  x="1051.30" y="335.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (239 samples, 0.06%)</title><rect x="1042.0" y="245" width="0.7" height="15.0" fill="rgb(231,172,2)" rx="2" ry="2" />
<text  x="1044.97" y="255.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (366 samples, 0.09%)</title><rect x="352.5" y="325" width="1.0" height="15.0" fill="rgb(235,27,49)" rx="2" ry="2" />
<text  x="355.46" y="335.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::byte_class (235 samples, 0.06%)</title><rect x="187.9" y="261" width="0.7" height="15.0" fill="rgb(216,22,45)" rx="2" ry="2" />
<text  x="190.93" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::TrieEntryIter::get (9,290 samples, 2.23%)</title><rect x="501.0" y="309" width="26.3" height="15.0" fill="rgb(223,224,18)" rx="2" ry="2" />
<text  x="504.03" y="319.5" >s..</text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (521 samples, 0.12%)</title><rect x="223.1" y="277" width="1.4" height="15.0" fill="rgb(227,74,35)" rx="2" ry="2" />
<text  x="226.06" y="287.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::BufRead for alloc::boxed::Box&lt;B&gt;&gt;::read_line (1,519 samples, 0.36%)</title><rect x="70.5" y="453" width="4.3" height="15.0" fill="rgb(222,87,9)" rx="2" ry="2" />
<text  x="73.55" y="463.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (178 samples, 0.04%)</title><rect x="12.5" y="485" width="0.5" height="15.0" fill="rgb(249,71,1)" rx="2" ry="2" />
<text  x="15.47" y="495.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (127 samples, 0.03%)</title><rect x="1189.0" y="485" width="0.4" height="15.0" fill="rgb(248,103,16)" rx="2" ry="2" />
<text  x="1192.00" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_mul (246 samples, 0.06%)</title><rect x="982.6" y="197" width="0.7" height="15.0" fill="rgb(254,67,42)" rx="2" ry="2" />
<text  x="985.57" y="207.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (694 samples, 0.17%)</title><rect x="326.7" y="405" width="1.9" height="15.0" fill="rgb(253,105,11)" rx="2" ry="2" />
<text  x="329.65" y="415.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (150 samples, 0.04%)</title><rect x="1157.0" y="53" width="0.4" height="15.0" fill="rgb(207,179,48)" rx="2" ry="2" />
<text  x="1159.96" y="63.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (295 samples, 0.07%)</title><rect x="1167.6" y="373" width="0.9" height="15.0" fill="rgb(220,98,43)" rx="2" ry="2" />
<text  x="1170.63" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::dictionary::JapaneseDictionary::from_cfg (306 samples, 0.07%)</title><rect x="1184.6" y="469" width="0.9" height="15.0" fill="rgb(233,82,15)" rx="2" ry="2" />
<text  x="1187.60" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (117 samples, 0.03%)</title><rect x="48.5" y="373" width="0.3" height="15.0" fill="rgb(244,155,10)" rx="2" ry="2" />
<text  x="51.46" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2,891 samples, 0.69%)</title><rect x="447.4" y="149" width="8.2" height="15.0" fill="rgb(214,214,43)" rx="2" ry="2" />
<text  x="450.43" y="159.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (142 samples, 0.03%)</title><rect x="1110.5" y="325" width="0.4" height="15.0" fill="rgb(232,50,47)" rx="2" ry="2" />
<text  x="1113.47" y="335.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,338 samples, 0.32%)</title><rect x="1148.1" y="309" width="3.8" height="15.0" fill="rgb(219,115,45)" rx="2" ry="2" />
<text  x="1151.12" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (305 samples, 0.07%)</title><rect x="352.5" y="277" width="0.8" height="15.0" fill="rgb(233,173,41)" rx="2" ry="2" />
<text  x="355.46" y="287.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (1,127 samples, 0.27%)</title><rect x="1134.9" y="325" width="3.2" height="15.0" fill="rgb(236,15,3)" rx="2" ry="2" />
<text  x="1137.86" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (241 samples, 0.06%)</title><rect x="36.6" y="469" width="0.7" height="15.0" fill="rgb(231,153,10)" rx="2" ry="2" />
<text  x="39.62" y="479.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (156 samples, 0.04%)</title><rect x="441.7" y="213" width="0.5" height="15.0" fill="rgb(243,1,37)" rx="2" ry="2" />
<text  x="444.72" y="223.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (221 samples, 0.05%)</title><rect x="1171.0" y="405" width="0.7" height="15.0" fill="rgb(217,81,21)" rx="2" ry="2" />
<text  x="1174.03" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (341 samples, 0.08%)</title><rect x="167.0" y="229" width="1.0" height="15.0" fill="rgb(238,117,1)" rx="2" ry="2" />
<text  x="170.03" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (558 samples, 0.13%)</title><rect x="89.0" y="421" width="1.5" height="15.0" fill="rgb(237,92,8)" rx="2" ry="2" />
<text  x="91.96" y="431.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search_by (1,038 samples, 0.25%)</title><rect x="1165.5" y="405" width="3.0" height="15.0" fill="rgb(237,83,32)" rx="2" ry="2" />
<text  x="1168.53" y="415.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_of_range (315 samples, 0.08%)</title><rect x="272.1" y="405" width="0.9" height="15.0" fill="rgb(233,157,49)" rx="2" ry="2" />
<text  x="275.09" y="415.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (532 samples, 0.13%)</title><rect x="552.2" y="405" width="1.5" height="15.0" fill="rgb(240,171,27)" rx="2" ry="2" />
<text  x="555.21" y="415.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::next_state_no_fail (691 samples, 0.17%)</title><rect x="1117.0" y="261" width="1.9" height="15.0" fill="rgb(211,180,5)" rx="2" ry="2" />
<text  x="1119.96" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (108 samples, 0.03%)</title><rect x="402.8" y="133" width="0.3" height="15.0" fill="rgb(238,19,54)" rx="2" ry="2" />
<text  x="405.83" y="143.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (187 samples, 0.04%)</title><rect x="272.2" y="373" width="0.5" height="15.0" fill="rgb(216,61,17)" rx="2" ry="2" />
<text  x="275.16" y="383.5" ></text>
</g>
<g >
<title>&lt;sudachi::hash::RoMuHash as core::hash::Hasher&gt;::write_u32 (154 samples, 0.04%)</title><rect x="1082.6" y="293" width="0.4" height="15.0" fill="rgb(213,87,53)" rx="2" ry="2" />
<text  x="1085.57" y="303.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (130 samples, 0.03%)</title><rect x="277.3" y="325" width="0.4" height="15.0" fill="rgb(240,77,53)" rx="2" ry="2" />
<text  x="280.34" y="335.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (460 samples, 0.11%)</title><rect x="594.1" y="421" width="1.3" height="15.0" fill="rgb(242,93,33)" rx="2" ry="2" />
<text  x="597.07" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (967 samples, 0.23%)</title><rect x="275.1" y="421" width="2.7" height="15.0" fill="rgb(213,78,41)" rx="2" ry="2" />
<text  x="278.12" y="431.5" ></text>
</g>
<g >
<title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (1,765 samples, 0.42%)</title><rect x="1147.6" y="373" width="5.0" height="15.0" fill="rgb(247,102,43)" rx="2" ry="2" />
<text  x="1150.65" y="383.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i32::{{closure}} (200 samples, 0.05%)</title><rect x="400.4" y="213" width="0.5" height="15.0" fill="rgb(205,85,35)" rx="2" ry="2" />
<text  x="403.38" y="223.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (328 samples, 0.08%)</title><rect x="76.5" y="421" width="0.9" height="15.0" fill="rgb(228,41,7)" rx="2" ry="2" />
<text  x="79.51" y="431.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (357 samples, 0.09%)</title><rect x="1040.7" y="293" width="1.0" height="15.0" fill="rgb(238,5,2)" rx="2" ry="2" />
<text  x="1043.67" y="303.5" ></text>
</g>
<g >
<title>core::option::Option&lt;&amp;T&gt;::copied (211 samples, 0.05%)</title><rect x="363.7" y="197" width="0.6" height="15.0" fill="rgb(212,148,47)" rx="2" ry="2" />
<text  x="366.70" y="207.5" ></text>
</g>
<g >
<title>regex::re_trait::RegularExpression::locations (181 samples, 0.04%)</title><rect x="258.1" y="373" width="0.5" height="15.0" fill="rgb(214,109,42)" rx="2" ry="2" />
<text  x="261.13" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (12,833 samples, 3.07%)</title><rect x="625.8" y="309" width="36.3" height="15.0" fill="rgb(212,68,44)" rx="2" ry="2" />
<text  x="628.83" y="319.5" >all..</text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,440 samples, 0.35%)</title><rect x="851.2" y="261" width="4.1" height="15.0" fill="rgb(241,146,32)" rx="2" ry="2" />
<text  x="854.22" y="271.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (248 samples, 0.06%)</title><rect x="382.3" y="261" width="0.7" height="15.0" fill="rgb(244,23,15)" rx="2" ry="2" />
<text  x="385.27" y="271.5" ></text>
</g>
<g >
<title>&lt;sudachi::output::Simple as sudachi::output::SudachiOutput&lt;T&gt;&gt;::write (128 samples, 0.03%)</title><rect x="76.0" y="453" width="0.4" height="15.0" fill="rgb(251,195,54)" rx="2" ry="2" />
<text  x="79.00" y="463.5" ></text>
</g>
<g >
<title>&lt;regex::pool::PoolGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (215 samples, 0.05%)</title><rect x="243.7" y="293" width="0.6" height="15.0" fill="rgb(220,16,12)" rx="2" ry="2" />
<text  x="246.72" y="303.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,680 samples, 0.64%)</title><rect x="757.6" y="405" width="7.6" height="15.0" fill="rgb(247,68,40)" rx="2" ry="2" />
<text  x="760.58" y="415.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (771 samples, 0.18%)</title><rect x="469.3" y="309" width="2.2" height="15.0" fill="rgb(242,100,8)" rx="2" ry="2" />
<text  x="472.34" y="319.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (123 samples, 0.03%)</title><rect x="256.3" y="309" width="0.3" height="15.0" fill="rgb(237,175,18)" rx="2" ry="2" />
<text  x="259.26" y="319.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (3,337 samples, 0.80%)</title><rect x="877.1" y="229" width="9.5" height="15.0" fill="rgb(247,132,9)" rx="2" ry="2" />
<text  x="880.14" y="239.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,893 samples, 0.45%)</title><rect x="1153.3" y="309" width="5.4" height="15.0" fill="rgb(242,44,45)" rx="2" ry="2" />
<text  x="1156.35" y="319.5" ></text>
</g>
<g >
<title>alloc::string::String::push (2,022 samples, 0.48%)</title><rect x="248.8" y="261" width="5.7" height="15.0" fill="rgb(238,46,27)" rx="2" ry="2" />
<text  x="251.81" y="271.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::is_empty (173 samples, 0.04%)</title><rect x="211.7" y="261" width="0.5" height="15.0" fill="rgb(229,153,53)" rx="2" ry="2" />
<text  x="214.74" y="271.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (432 samples, 0.10%)</title><rect x="65.8" y="485" width="1.2" height="15.0" fill="rgb(242,159,4)" rx="2" ry="2" />
<text  x="68.79" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,178 samples, 0.28%)</title><rect x="122.5" y="389" width="3.4" height="15.0" fill="rgb(228,191,19)" rx="2" ry="2" />
<text  x="125.52" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,573 samples, 0.86%)</title><rect x="373.1" y="357" width="10.1" height="15.0" fill="rgb(233,43,45)" rx="2" ry="2" />
<text  x="376.13" y="367.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin::rewrite_gen (5,607 samples, 1.34%)</title><rect x="274.0" y="437" width="15.9" height="15.0" fill="rgb(228,106,50)" rx="2" ry="2" />
<text  x="277.04" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::resize (133 samples, 0.03%)</title><rect x="1170.3" y="421" width="0.3" height="15.0" fill="rgb(249,211,24)" rx="2" ry="2" />
<text  x="1173.27" y="431.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (446 samples, 0.11%)</title><rect x="466.3" y="261" width="1.2" height="15.0" fill="rgb(241,109,42)" rx="2" ry="2" />
<text  x="469.27" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (1,944 samples, 0.47%)</title><rect x="1088.4" y="181" width="5.5" height="15.0" fill="rgb(207,111,51)" rx="2" ry="2" />
<text  x="1091.38" y="191.5" ></text>
</g>
<g >
<title>core::mem::drop (189 samples, 0.05%)</title><rect x="285.5" y="357" width="0.6" height="15.0" fill="rgb(231,99,29)" rx="2" ry="2" />
<text  x="288.54" y="367.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (115 samples, 0.03%)</title><rect x="424.1" y="101" width="0.3" height="15.0" fill="rgb(243,46,25)" rx="2" ry="2" />
<text  x="427.10" y="111.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (828 samples, 0.20%)</title><rect x="426.9" y="213" width="2.4" height="15.0" fill="rgb(246,132,9)" rx="2" ry="2" />
<text  x="429.93" y="223.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (314 samples, 0.08%)</title><rect x="1064.6" y="325" width="0.9" height="15.0" fill="rgb(221,125,16)" rx="2" ry="2" />
<text  x="1067.61" y="335.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (283 samples, 0.07%)</title><rect x="552.9" y="357" width="0.8" height="15.0" fill="rgb(247,136,22)" rx="2" ry="2" />
<text  x="555.92" y="367.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::translate_node_ranges (299 samples, 0.07%)</title><rect x="269.2" y="437" width="0.8" height="15.0" fill="rgb(207,76,47)" rx="2" ry="2" />
<text  x="272.15" y="447.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (146 samples, 0.03%)</title><rect x="41.6" y="485" width="0.5" height="15.0" fill="rgb(209,75,38)" rx="2" ry="2" />
<text  x="44.64" y="495.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (753 samples, 0.18%)</title><rect x="443.9" y="245" width="2.1" height="15.0" fill="rgb(244,7,29)" rx="2" ry="2" />
<text  x="446.89" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,079 samples, 0.50%)</title><rect x="299.1" y="245" width="5.9" height="15.0" fill="rgb(212,67,27)" rx="2" ry="2" />
<text  x="302.14" y="255.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (553 samples, 0.13%)</title><rect x="14.9" y="485" width="1.5" height="15.0" fill="rgb(228,144,52)" rx="2" ry="2" />
<text  x="17.86" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (109 samples, 0.03%)</title><rect x="267.0" y="437" width="0.3" height="15.0" fill="rgb(239,220,26)" rx="2" ry="2" />
<text  x="270.04" y="447.5" ></text>
</g>
<g >
<title>unicode_normalization::perfect_hash::my_hash (111 samples, 0.03%)</title><rect x="1147.2" y="309" width="0.3" height="15.0" fill="rgb(219,7,51)" rx="2" ry="2" />
<text  x="1150.18" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (109 samples, 0.03%)</title><rect x="687.6" y="341" width="0.3" height="15.0" fill="rgb(234,75,32)" rx="2" ry="2" />
<text  x="690.57" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (162 samples, 0.04%)</title><rect x="285.6" y="341" width="0.5" height="15.0" fill="rgb(223,201,21)" rx="2" ry="2" />
<text  x="288.62" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::word_id_to_offset (1,803 samples, 0.43%)</title><rect x="365.1" y="389" width="5.1" height="15.0" fill="rgb(225,11,5)" rx="2" ry="2" />
<text  x="368.10" y="399.5" ></text>
</g>
<g >
<title>aho_corasick::dfa::DFA&lt;S&gt;::find_at_no_state (1,059 samples, 0.25%)</title><rect x="1115.9" y="325" width="3.0" height="15.0" fill="rgb(245,115,14)" rx="2" ry="2" />
<text  x="1118.93" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (4,169 samples, 1.00%)</title><rect x="1172.8" y="373" width="11.7" height="15.0" fill="rgb(208,190,25)" rx="2" ry="2" />
<text  x="1175.76" y="383.5" ></text>
</g>
<g >
<title>all (417,378 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(251,81,7)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (170 samples, 0.04%)</title><rect x="556.6" y="437" width="0.5" height="15.0" fill="rgb(252,8,34)" rx="2" ry="2" />
<text  x="559.63" y="447.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (156 samples, 0.04%)</title><rect x="441.7" y="245" width="0.5" height="15.0" fill="rgb(232,213,13)" rx="2" ry="2" />
<text  x="444.72" y="255.5" ></text>
</g>
<g >
<title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (867 samples, 0.21%)</title><rect x="947.9" y="229" width="2.5" height="15.0" fill="rgb(222,196,24)" rx="2" ry="2" />
<text  x="950.91" y="239.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (6,840 samples, 1.64%)</title><rect x="206.1" y="293" width="19.3" height="15.0" fill="rgb(244,182,25)" rx="2" ry="2" />
<text  x="209.08" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (4,260 samples, 1.02%)</title><rect x="1172.5" y="405" width="12.0" height="15.0" fill="rgb(211,183,5)" rx="2" ry="2" />
<text  x="1175.50" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_free (173 samples, 0.04%)</title><rect x="290.2" y="373" width="0.5" height="15.0" fill="rgb(238,88,13)" rx="2" ry="2" />
<text  x="293.19" y="383.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,440 samples, 0.35%)</title><rect x="851.2" y="277" width="4.1" height="15.0" fill="rgb(237,170,6)" rx="2" ry="2" />
<text  x="854.22" y="287.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (139 samples, 0.03%)</title><rect x="246.5" y="293" width="0.3" height="15.0" fill="rgb(207,203,30)" rx="2" ry="2" />
<text  x="249.45" y="303.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (296 samples, 0.07%)</title><rect x="1063.8" y="293" width="0.8" height="15.0" fill="rgb(242,212,18)" rx="2" ry="2" />
<text  x="1066.78" y="303.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Patterns::get_unchecked (260 samples, 0.06%)</title><rect x="1156.7" y="117" width="0.7" height="15.0" fill="rgb(237,43,15)" rx="2" ry="2" />
<text  x="1159.65" y="127.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (2,161 samples, 0.52%)</title><rect x="299.1" y="309" width="6.2" height="15.0" fill="rgb(210,11,38)" rx="2" ry="2" />
<text  x="302.14" y="319.5" ></text>
</g>
<g >
<title>sudachi::hash::RoMuHash::consume (143 samples, 0.03%)</title><rect x="1082.6" y="277" width="0.4" height="15.0" fill="rgb(251,172,10)" rx="2" ry="2" />
<text  x="1085.60" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (6,850 samples, 1.64%)</title><rect x="987.1" y="277" width="19.4" height="15.0" fill="rgb(227,55,32)" rx="2" ry="2" />
<text  x="990.09" y="287.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (489 samples, 0.12%)</title><rect x="1125.7" y="325" width="1.4" height="15.0" fill="rgb(214,5,24)" rx="2" ry="2" />
<text  x="1128.73" y="335.5" ></text>
</g>
<g >
<title>__rdl_realloc (302 samples, 0.07%)</title><rect x="55.8" y="485" width="0.8" height="15.0" fill="rgb(251,47,49)" rx="2" ry="2" />
<text  x="58.79" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12,833 samples, 3.07%)</title><rect x="625.8" y="325" width="36.3" height="15.0" fill="rgb(219,153,5)" rx="2" ry="2" />
<text  x="628.83" y="335.5" >&lt;al..</text>
</g>
<g >
<title>sudachi::plugin::oov::mecab_oov::MeCabOovPlugin::provide_oov_gen (9,078 samples, 2.18%)</title><rect x="1076.1" y="405" width="25.6" height="15.0" fill="rgb(210,190,53)" rx="2" ry="2" />
<text  x="1079.08" y="415.5" >s..</text>
</g>
<g >
<title>core::cmp::max (310 samples, 0.07%)</title><rect x="686.7" y="341" width="0.9" height="15.0" fill="rgb(247,102,21)" rx="2" ry="2" />
<text  x="689.70" y="351.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (206 samples, 0.05%)</title><rect x="242.6" y="309" width="0.6" height="15.0" fill="rgb(230,64,29)" rx="2" ry="2" />
<text  x="245.64" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,267 samples, 0.30%)</title><rect x="249.2" y="117" width="3.6" height="15.0" fill="rgb(233,111,31)" rx="2" ry="2" />
<text  x="252.25" y="127.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,031 samples, 0.73%)</title><rect x="1086.5" y="309" width="8.5" height="15.0" fill="rgb(250,26,52)" rx="2" ry="2" />
<text  x="1089.48" y="319.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2,513 samples, 0.60%)</title><rect x="248.8" y="341" width="7.1" height="15.0" fill="rgb(230,28,18)" rx="2" ry="2" />
<text  x="251.79" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (117 samples, 0.03%)</title><rect x="48.5" y="389" width="0.3" height="15.0" fill="rgb(234,108,26)" rx="2" ry="2" />
<text  x="51.46" y="399.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (226 samples, 0.05%)</title><rect x="92.2" y="357" width="0.6" height="15.0" fill="rgb(233,78,6)" rx="2" ry="2" />
<text  x="95.15" y="367.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (464 samples, 0.11%)</title><rect x="163.5" y="341" width="1.3" height="15.0" fill="rgb(230,214,30)" rx="2" ry="2" />
<text  x="166.52" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (786 samples, 0.19%)</title><rect x="280.1" y="341" width="2.2" height="15.0" fill="rgb(234,127,4)" rx="2" ry="2" />
<text  x="283.11" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (8,172 samples, 1.96%)</title><rect x="863.5" y="277" width="23.1" height="15.0" fill="rgb(248,1,31)" rx="2" ry="2" />
<text  x="866.47" y="287.5" >h..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (464 samples, 0.11%)</title><rect x="163.5" y="357" width="1.3" height="15.0" fill="rgb(225,85,52)" rx="2" ry="2" />
<text  x="166.52" y="367.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::commit (457 samples, 0.11%)</title><rect x="1111.6" y="405" width="1.3" height="15.0" fill="rgb(225,185,35)" rx="2" ry="2" />
<text  x="1114.60" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2,943 samples, 0.71%)</title><rect x="447.3" y="165" width="8.3" height="15.0" fill="rgb(250,60,15)" rx="2" ry="2" />
<text  x="450.28" y="175.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (732 samples, 0.18%)</title><rect x="126.7" y="373" width="2.1" height="15.0" fill="rgb(220,149,33)" rx="2" ry="2" />
<text  x="129.69" y="383.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::can_bow (940 samples, 0.23%)</title><rect x="1068.7" y="437" width="2.6" height="15.0" fill="rgb(205,107,35)" rx="2" ry="2" />
<text  x="1071.65" y="447.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (414 samples, 0.10%)</title><rect x="1127.8" y="309" width="1.2" height="15.0" fill="rgb(227,98,54)" rx="2" ry="2" />
<text  x="1130.78" y="319.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3,828 samples, 0.92%)</title><rect x="212.2" y="277" width="10.9" height="15.0" fill="rgb(212,65,46)" rx="2" ry="2" />
<text  x="215.24" y="287.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (138 samples, 0.03%)</title><rect x="32.1" y="469" width="0.4" height="15.0" fill="rgb(247,137,23)" rx="2" ry="2" />
<text  x="35.07" y="479.5" ></text>
</g>
<g >
<title>ksys_read (107 samples, 0.03%)</title><rect x="73.2" y="261" width="0.3" height="15.0" fill="rgb(225,149,40)" rx="2" ry="2" />
<text  x="76.18" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,104 samples, 0.74%)</title><rect x="446.8" y="229" width="8.8" height="15.0" fill="rgb(240,224,24)" rx="2" ry="2" />
<text  x="449.83" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,703 samples, 0.41%)</title><rect x="248.8" y="229" width="4.8" height="15.0" fill="rgb(218,217,4)" rx="2" ry="2" />
<text  x="251.83" y="239.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (28,036 samples, 6.72%)</title><rect x="388.3" y="309" width="79.2" height="15.0" fill="rgb(211,203,19)" rx="2" ry="2" />
<text  x="391.27" y="319.5" >&lt;F as nom..</text>
</g>
<g >
<title>unlink_chunk.constprop.0 (640 samples, 0.15%)</title><rect x="1185.8" y="485" width="1.8" height="15.0" fill="rgb(249,2,1)" rx="2" ry="2" />
<text  x="1188.82" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,129 samples, 0.75%)</title><rect x="305.3" y="357" width="8.8" height="15.0" fill="rgb(208,20,7)" rx="2" ry="2" />
<text  x="308.25" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (130 samples, 0.03%)</title><rect x="205.5" y="213" width="0.4" height="15.0" fill="rgb(214,2,42)" rx="2" ry="2" />
<text  x="208.54" y="223.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (200 samples, 0.05%)</title><rect x="1133.1" y="325" width="0.6" height="15.0" fill="rgb(231,199,54)" rx="2" ry="2" />
<text  x="1136.12" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::prolonged_sound_mark::ProlongedSoundMarkPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (2,285 samples, 0.55%)</title><rect x="1152.8" y="389" width="6.5" height="15.0" fill="rgb(231,113,12)" rx="2" ry="2" />
<text  x="1155.83" y="399.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::AhoCorasick&lt;S&gt;::earliest_find (110 samples, 0.03%)</title><rect x="1120.6" y="341" width="0.3" height="15.0" fill="rgb(233,183,54)" rx="2" ry="2" />
<text  x="1123.59" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[sudachi::analysis::node::Node]&gt; (4,486 samples, 1.07%)</title><rect x="1171.9" y="421" width="12.6" height="15.0" fill="rgb(218,78,47)" rx="2" ry="2" />
<text  x="1174.86" y="431.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (2,022 samples, 0.48%)</title><rect x="248.8" y="325" width="5.7" height="15.0" fill="rgb(233,59,51)" rx="2" ry="2" />
<text  x="251.81" y="335.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (279 samples, 0.07%)</title><rect x="1163.0" y="405" width="0.8" height="15.0" fill="rgb(245,177,17)" rx="2" ry="2" />
<text  x="1165.97" y="415.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::exec_backtrack (775 samples, 0.19%)</title><rect x="259.4" y="309" width="2.1" height="15.0" fill="rgb(218,17,28)" rx="2" ry="2" />
<text  x="262.35" y="319.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (874 samples, 0.21%)</title><rect x="275.4" y="373" width="2.4" height="15.0" fill="rgb(241,100,12)" rx="2" ry="2" />
<text  x="278.38" y="383.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (171 samples, 0.04%)</title><rect x="283.4" y="357" width="0.5" height="15.0" fill="rgb(221,46,33)" rx="2" ry="2" />
<text  x="286.40" y="367.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (296 samples, 0.07%)</title><rect x="1063.8" y="277" width="0.8" height="15.0" fill="rgb(237,209,3)" rx="2" ry="2" />
<text  x="1066.78" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (113 samples, 0.03%)</title><rect x="160.3" y="357" width="0.4" height="15.0" fill="rgb(239,132,23)" rx="2" ry="2" />
<text  x="163.33" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (687 samples, 0.16%)</title><rect x="359.7" y="197" width="2.0" height="15.0" fill="rgb(245,198,20)" rx="2" ry="2" />
<text  x="362.71" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (261 samples, 0.06%)</title><rect x="402.4" y="245" width="0.8" height="15.0" fill="rgb(212,156,52)" rx="2" ry="2" />
<text  x="405.41" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (4,199 samples, 1.01%)</title><rect x="429.8" y="133" width="11.9" height="15.0" fill="rgb(251,170,31)" rx="2" ry="2" />
<text  x="432.85" y="143.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (464 samples, 0.11%)</title><rect x="163.5" y="373" width="1.3" height="15.0" fill="rgb(207,210,15)" rx="2" ry="2" />
<text  x="166.52" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,230 samples, 0.77%)</title><rect x="1086.2" y="373" width="9.1" height="15.0" fill="rgb(251,135,49)" rx="2" ry="2" />
<text  x="1089.17" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (959 samples, 0.23%)</title><rect x="1038.0" y="293" width="2.7" height="15.0" fill="rgb(213,207,52)" rx="2" ry="2" />
<text  x="1040.96" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,781 samples, 0.67%)</title><rect x="1086.5" y="245" width="7.8" height="15.0" fill="rgb(237,62,20)" rx="2" ry="2" />
<text  x="1089.48" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (717 samples, 0.17%)</title><rect x="971.8" y="421" width="2.1" height="15.0" fill="rgb(211,41,48)" rx="2" ry="2" />
<text  x="974.82" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (137 samples, 0.03%)</title><rect x="467.0" y="149" width="0.4" height="15.0" fill="rgb(220,76,10)" rx="2" ry="2" />
<text  x="469.96" y="159.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (173 samples, 0.04%)</title><rect x="11.9" y="485" width="0.5" height="15.0" fill="rgb(247,205,51)" rx="2" ry="2" />
<text  x="14.95" y="495.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (902 samples, 0.22%)</title><rect x="1148.9" y="261" width="2.6" height="15.0" fill="rgb(223,155,14)" rx="2" ry="2" />
<text  x="1151.94" y="271.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (3,132 samples, 0.75%)</title><rect x="631.4" y="245" width="8.9" height="15.0" fill="rgb(222,9,10)" rx="2" ry="2" />
<text  x="634.44" y="255.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (141 samples, 0.03%)</title><rect x="94.3" y="405" width="0.4" height="15.0" fill="rgb(222,63,13)" rx="2" ry="2" />
<text  x="97.28" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 samples, 0.03%)</title><rect x="313.4" y="341" width="0.3" height="15.0" fill="rgb(217,114,19)" rx="2" ry="2" />
<text  x="316.42" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (177 samples, 0.04%)</title><rect x="441.1" y="101" width="0.5" height="15.0" fill="rgb(254,115,0)" rx="2" ry="2" />
<text  x="444.10" y="111.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,026 samples, 0.25%)</title><rect x="50.6" y="485" width="2.9" height="15.0" fill="rgb(246,37,21)" rx="2" ry="2" />
<text  x="53.58" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (226 samples, 0.05%)</title><rect x="73.6" y="357" width="0.7" height="15.0" fill="rgb(231,79,2)" rx="2" ry="2" />
<text  x="76.61" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (834 samples, 0.20%)</title><rect x="1080.1" y="389" width="2.4" height="15.0" fill="rgb(217,58,22)" rx="2" ry="2" />
<text  x="1083.11" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (313 samples, 0.07%)</title><rect x="13.0" y="485" width="0.9" height="15.0" fill="rgb(235,90,7)" rx="2" ry="2" />
<text  x="16.01" y="495.5" ></text>
</g>
<g >
<title>_int_malloc (537 samples, 0.13%)</title><rect x="360.0" y="85" width="1.5" height="15.0" fill="rgb(238,191,17)" rx="2" ry="2" />
<text  x="363.03" y="95.5" ></text>
</g>
<g >
<title>__rdl_realloc (138 samples, 0.03%)</title><rect x="32.1" y="485" width="0.4" height="15.0" fill="rgb(206,135,8)" rx="2" ry="2" />
<text  x="35.07" y="495.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (365 samples, 0.09%)</title><rect x="10.6" y="485" width="1.0" height="15.0" fill="rgb(231,40,22)" rx="2" ry="2" />
<text  x="13.57" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2 (406 samples, 0.10%)</title><rect x="873.0" y="261" width="1.2" height="15.0" fill="rgb(243,64,32)" rx="2" ry="2" />
<text  x="876.02" y="271.5" ></text>
</g>
<g >
<title>alloc::string::String::push (210 samples, 0.05%)</title><rect x="67.0" y="485" width="0.6" height="15.0" fill="rgb(222,61,13)" rx="2" ry="2" />
<text  x="70.01" y="495.5" ></text>
</g>
<g >
<title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (291 samples, 0.07%)</title><rect x="1124.7" y="325" width="0.8" height="15.0" fill="rgb(233,229,39)" rx="2" ry="2" />
<text  x="1127.65" y="335.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::fill_word_info (49,730 samples, 11.91%)</title><rect x="332.5" y="453" width="140.6" height="15.0" fill="rgb(225,124,0)" rx="2" ry="2" />
<text  x="335.47" y="463.5" >sudachi::analysis..</text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,469 samples, 0.83%)</title><rect x="373.4" y="341" width="9.8" height="15.0" fill="rgb(220,22,30)" rx="2" ry="2" />
<text  x="376.43" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sudachi::analysis::node::Node&gt;&gt; (3,129 samples, 0.75%)</title><rect x="305.3" y="373" width="8.8" height="15.0" fill="rgb(213,131,1)" rx="2" ry="2" />
<text  x="308.25" y="383.5" ></text>
</g>
<g >
<title>&lt;fancy_regex::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (3,367 samples, 0.81%)</title><rect x="257.1" y="421" width="9.5" height="15.0" fill="rgb(206,168,30)" rx="2" ry="2" />
<text  x="260.09" y="431.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (258 samples, 0.06%)</title><rect x="92.1" y="389" width="0.7" height="15.0" fill="rgb(242,68,33)" rx="2" ry="2" />
<text  x="95.06" y="399.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (188 samples, 0.05%)</title><rect x="1042.1" y="229" width="0.6" height="15.0" fill="rgb(226,56,43)" rx="2" ry="2" />
<text  x="1045.12" y="239.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (344 samples, 0.08%)</title><rect x="357.9" y="69" width="0.9" height="15.0" fill="rgb(236,144,51)" rx="2" ry="2" />
<text  x="360.87" y="79.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::is_nfkc_quick (4,883 samples, 1.17%)</title><rect x="1133.7" y="373" width="13.8" height="15.0" fill="rgb(229,0,51)" rx="2" ry="2" />
<text  x="1136.69" y="383.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,702 samples, 0.65%)</title><rect x="1048.3" y="277" width="7.6" height="15.0" fill="rgb(235,62,21)" rx="2" ry="2" />
<text  x="1051.30" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::DictionaryLoader::read_system_dictionary (281 samples, 0.07%)</title><rect x="1184.6" y="437" width="0.8" height="15.0" fill="rgb(225,137,35)" rx="2" ry="2" />
<text  x="1187.60" y="447.5" ></text>
</g>
<g >
<title>_int_free (167 samples, 0.04%)</title><rect x="324.2" y="261" width="0.5" height="15.0" fill="rgb(246,134,34)" rx="2" ry="2" />
<text  x="327.18" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (318,952 samples, 76.42%)</title><rect x="270.1" y="469" width="901.7" height="15.0" fill="rgb(213,183,24)" rx="2" ry="2" />
<text  x="273.09" y="479.5" >sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (196 samples, 0.05%)</title><rect x="1171.0" y="389" width="0.6" height="15.0" fill="rgb(221,20,41)" rx="2" ry="2" />
<text  x="1174.03" y="399.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (108 samples, 0.03%)</title><rect x="39.5" y="485" width="0.3" height="15.0" fill="rgb(249,203,39)" rx="2" ry="2" />
<text  x="42.54" y="495.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::oov_provider_plugins (123 samples, 0.03%)</title><rect x="488.8" y="421" width="0.4" height="15.0" fill="rgb(244,7,30)" rx="2" ry="2" />
<text  x="491.82" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (145 samples, 0.03%)</title><rect x="1126.7" y="213" width="0.4" height="15.0" fill="rgb(237,146,9)" rx="2" ry="2" />
<text  x="1129.70" y="223.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (919 samples, 0.22%)</title><rect x="682.3" y="293" width="2.6" height="15.0" fill="rgb(240,77,28)" rx="2" ry="2" />
<text  x="685.27" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt; (7,967 samples, 1.91%)</title><rect x="291.6" y="389" width="22.5" height="15.0" fill="rgb(220,144,29)" rx="2" ry="2" />
<text  x="294.57" y="399.5" >c..</text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (110 samples, 0.03%)</title><rect x="211.4" y="261" width="0.3" height="15.0" fill="rgb(235,118,27)" rx="2" ry="2" />
<text  x="214.42" y="271.5" ></text>
</g>
<g >
<title>sudachi::hash::RoMuHash::consume (376 samples, 0.09%)</title><rect x="1035.0" y="293" width="1.1" height="15.0" fill="rgb(252,206,34)" rx="2" ry="2" />
<text  x="1038.03" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (744 samples, 0.18%)</title><rect x="1082.5" y="373" width="2.1" height="15.0" fill="rgb(225,2,5)" rx="2" ry="2" />
<text  x="1085.54" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (118 samples, 0.03%)</title><rect x="34.8" y="485" width="0.4" height="15.0" fill="rgb(236,215,24)" rx="2" ry="2" />
<text  x="37.82" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (118 samples, 0.03%)</title><rect x="288.3" y="213" width="0.4" height="15.0" fill="rgb(251,77,32)" rx="2" ry="2" />
<text  x="291.33" y="223.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find (1,645 samples, 0.39%)</title><rect x="1153.8" y="245" width="4.6" height="15.0" fill="rgb(231,186,22)" rx="2" ry="2" />
<text  x="1156.76" y="255.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (254 samples, 0.06%)</title><rect x="256.1" y="389" width="0.7" height="15.0" fill="rgb(218,121,33)" rx="2" ry="2" />
<text  x="259.12" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (178 samples, 0.04%)</title><rect x="90.7" y="421" width="0.5" height="15.0" fill="rgb(253,98,46)" rx="2" ry="2" />
<text  x="93.65" y="431.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (6,916 samples, 1.66%)</title><rect x="691.2" y="389" width="19.5" height="15.0" fill="rgb(250,144,54)" rx="2" ry="2" />
<text  x="694.17" y="399.5" ></text>
</g>
<g >
<title>&lt;unicode_normalization::recompose::Recompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (318 samples, 0.08%)</title><rect x="1124.6" y="341" width="0.9" height="15.0" fill="rgb(241,41,35)" rx="2" ry="2" />
<text  x="1127.62" y="351.5" ></text>
</g>
<g >
<title>&lt;regex::re_unicode::Matches as core::iter::traits::iterator::Iterator&gt;::next (2,130 samples, 0.51%)</title><rect x="1153.0" y="373" width="6.0" height="15.0" fill="rgb(220,46,33)" rx="2" ry="2" />
<text  x="1156.00" y="383.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (156 samples, 0.04%)</title><rect x="441.7" y="229" width="0.5" height="15.0" fill="rgb(233,65,33)" rx="2" ry="2" />
<text  x="444.72" y="239.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2,163 samples, 0.52%)</title><rect x="82.2" y="405" width="6.1" height="15.0" fill="rgb(231,113,37)" rx="2" ry="2" />
<text  x="85.17" y="415.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new (1,335 samples, 0.32%)</title><rect x="1006.6" y="437" width="3.8" height="15.0" fill="rgb(224,191,33)" rx="2" ry="2" />
<text  x="1009.58" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::utf16_string_parser (2,889 samples, 0.69%)</title><rect x="356.1" y="261" width="8.2" height="15.0" fill="rgb(209,162,49)" rx="2" ry="2" />
<text  x="359.13" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (9,825 samples, 2.35%)</title><rect x="978.8" y="421" width="27.8" height="15.0" fill="rgb(234,107,40)" rx="2" ry="2" />
<text  x="981.78" y="431.5" >a..</text>
</g>
<g >
<title>fancy_regex::vm::State::push (1,909 samples, 0.46%)</title><rect x="145.1" y="389" width="5.4" height="15.0" fill="rgb(235,212,17)" rx="2" ry="2" />
<text  x="148.06" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,967 samples, 0.71%)</title><rect x="447.2" y="213" width="8.4" height="15.0" fill="rgb(235,5,29)" rx="2" ry="2" />
<text  x="450.21" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (131 samples, 0.03%)</title><rect x="1152.3" y="325" width="0.3" height="15.0" fill="rgb(233,124,2)" rx="2" ry="2" />
<text  x="1155.25" y="335.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (296 samples, 0.07%)</title><rect x="1063.8" y="245" width="0.8" height="15.0" fill="rgb(235,193,31)" rx="2" ry="2" />
<text  x="1066.78" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,549 samples, 0.37%)</title><rect x="974.2" y="405" width="4.4" height="15.0" fill="rgb(212,98,31)" rx="2" ry="2" />
<text  x="977.18" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,498 samples, 0.36%)</title><rect x="974.3" y="325" width="4.2" height="15.0" fill="rgb(205,77,36)" rx="2" ry="2" />
<text  x="977.26" y="335.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1,400 samples, 0.34%)</title><rect x="979.8" y="325" width="4.0" height="15.0" fill="rgb(236,171,52)" rx="2" ry="2" />
<text  x="982.83" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (483 samples, 0.12%)</title><rect x="349.4" y="341" width="1.3" height="15.0" fill="rgb(234,156,11)" rx="2" ry="2" />
<text  x="352.38" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (153 samples, 0.04%)</title><rect x="267.4" y="421" width="0.4" height="15.0" fill="rgb(214,18,45)" rx="2" ry="2" />
<text  x="270.35" y="431.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (110 samples, 0.03%)</title><rect x="558.4" y="405" width="0.4" height="15.0" fill="rgb(206,180,1)" rx="2" ry="2" />
<text  x="561.44" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (112 samples, 0.03%)</title><rect x="73.2" y="341" width="0.3" height="15.0" fill="rgb(238,63,16)" rx="2" ry="2" />
<text  x="76.18" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (696 samples, 0.17%)</title><rect x="275.4" y="309" width="1.9" height="15.0" fill="rgb(244,125,16)" rx="2" ry="2" />
<text  x="278.38" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (209 samples, 0.05%)</title><rect x="73.7" y="277" width="0.6" height="15.0" fill="rgb(212,145,51)" rx="2" ry="2" />
<text  x="76.66" y="287.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::find_at (2,037 samples, 0.49%)</title><rect x="1153.2" y="341" width="5.8" height="15.0" fill="rgb(247,229,5)" rx="2" ry="2" />
<text  x="1156.23" y="351.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,867 samples, 4.76%)</title><rect x="492.9" y="341" width="56.2" height="15.0" fill="rgb(240,50,13)" rx="2" ry="2" />
<text  x="495.91" y="351.5" >&lt;core..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (169 samples, 0.04%)</title><rect x="1079.0" y="357" width="0.5" height="15.0" fill="rgb(253,165,22)" rx="2" ry="2" />
<text  x="1081.98" y="367.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_uppercase (461 samples, 0.11%)</title><rect x="1122.9" y="357" width="1.3" height="15.0" fill="rgb(208,46,34)" rx="2" ry="2" />
<text  x="1125.93" y="367.5" ></text>
</g>
<g >
<title>__rdl_alloc (241 samples, 0.06%)</title><rect x="381.3" y="197" width="0.7" height="15.0" fill="rgb(209,51,6)" rx="2" ry="2" />
<text  x="384.27" y="207.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (173 samples, 0.04%)</title><rect x="128.0" y="309" width="0.5" height="15.0" fill="rgb(222,32,4)" rx="2" ry="2" />
<text  x="130.99" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (616 samples, 0.15%)</title><rect x="1063.8" y="357" width="1.7" height="15.0" fill="rgb(206,113,9)" rx="2" ry="2" />
<text  x="1066.78" y="367.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (415 samples, 0.10%)</title><rect x="284.0" y="341" width="1.2" height="15.0" fill="rgb(218,69,15)" rx="2" ry="2" />
<text  x="287.05" y="351.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (119 samples, 0.03%)</title><rect x="351.8" y="341" width="0.3" height="15.0" fill="rgb(210,100,33)" rx="2" ry="2" />
<text  x="354.78" y="351.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::dfa::PremultipliedByteClass&lt;S&gt; as aho_corasick::automaton::Automaton&gt;::next_state (374 samples, 0.09%)</title><rect x="1121.5" y="245" width="1.0" height="15.0" fill="rgb(254,225,10)" rx="2" ry="2" />
<text  x="1124.48" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie_array_parser (266 samples, 0.06%)</title><rect x="1184.6" y="389" width="0.8" height="15.0" fill="rgb(235,129,15)" rx="2" ry="2" />
<text  x="1187.64" y="399.5" ></text>
</g>
<g >
<title>core::cmp::max (128 samples, 0.03%)</title><rect x="424.4" y="117" width="0.4" height="15.0" fill="rgb(206,179,11)" rx="2" ry="2" />
<text  x="427.42" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (228 samples, 0.05%)</title><rect x="1171.0" y="437" width="0.7" height="15.0" fill="rgb(218,144,1)" rx="2" ry="2" />
<text  x="1174.02" y="447.5" ></text>
</g>
<g >
<title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (158 samples, 0.04%)</title><rect x="403.4" y="245" width="0.5" height="15.0" fill="rgb(249,0,6)" rx="2" ry="2" />
<text  x="406.40" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (113 samples, 0.03%)</title><rect x="135.7" y="341" width="0.3" height="15.0" fill="rgb(226,97,38)" rx="2" ry="2" />
<text  x="138.66" y="351.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (125 samples, 0.03%)</title><rect x="289.4" y="373" width="0.4" height="15.0" fill="rgb(252,144,8)" rx="2" ry="2" />
<text  x="292.44" y="383.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::TeddySlim2Mask128::candidate (132 samples, 0.03%)</title><rect x="1157.8" y="165" width="0.4" height="15.0" fill="rgb(206,221,54)" rx="2" ry="2" />
<text  x="1160.84" y="175.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::lexicon::word_id_table::WordIdIter as core::iter::traits::iterator::Iterator&gt;::next (965 samples, 0.23%)</title><rect x="549.1" y="357" width="2.7" height="15.0" fill="rgb(207,20,27)" rx="2" ry="2" />
<text  x="552.08" y="367.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (4,739 samples, 1.14%)</title><rect x="181.7" y="373" width="13.4" height="15.0" fill="rgb(224,123,29)" rx="2" ry="2" />
<text  x="184.73" y="383.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,154 samples, 0.28%)</title><rect x="1148.3" y="277" width="3.3" height="15.0" fill="rgb(211,128,30)" rx="2" ry="2" />
<text  x="1151.31" y="287.5" ></text>
</g>
<g >
<title>_int_free (132 samples, 0.03%)</title><rect x="290.3" y="357" width="0.4" height="15.0" fill="rgb(205,97,34)" rx="2" ry="2" />
<text  x="293.30" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (145 samples, 0.03%)</title><rect x="1126.7" y="245" width="0.4" height="15.0" fill="rgb(235,140,30)" rx="2" ry="2" />
<text  x="1129.70" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (162 samples, 0.04%)</title><rect x="285.6" y="325" width="0.5" height="15.0" fill="rgb(215,221,15)" rx="2" ry="2" />
<text  x="288.62" y="335.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (766 samples, 0.18%)</title><rect x="465.4" y="277" width="2.1" height="15.0" fill="rgb(246,18,14)" rx="2" ry="2" />
<text  x="468.36" y="287.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (445 samples, 0.11%)</title><rect x="1161.2" y="405" width="1.2" height="15.0" fill="rgb(205,80,25)" rx="2" ry="2" />
<text  x="1164.17" y="415.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (298 samples, 0.07%)</title><rect x="1013.8" y="405" width="0.8" height="15.0" fill="rgb(226,162,29)" rx="2" ry="2" />
<text  x="1016.76" y="415.5" ></text>
</g>
<g >
<title>core::ptr::write (107 samples, 0.03%)</title><rect x="1171.3" y="341" width="0.3" height="15.0" fill="rgb(232,220,42)" rx="2" ry="2" />
<text  x="1174.28" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3,347 samples, 0.80%)</title><rect x="415.4" y="133" width="9.5" height="15.0" fill="rgb(205,90,38)" rx="2" ry="2" />
<text  x="418.39" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (149 samples, 0.04%)</title><rect x="1111.9" y="341" width="0.5" height="15.0" fill="rgb(222,201,41)" rx="2" ry="2" />
<text  x="1114.95" y="351.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,331 samples, 1.04%)</title><rect x="851.2" y="293" width="12.3" height="15.0" fill="rgb(231,206,6)" rx="2" ry="2" />
<text  x="854.22" y="303.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::part_of_speech (423 samples, 0.10%)</title><rect x="90.7" y="437" width="1.1" height="15.0" fill="rgb(242,177,19)" rx="2" ry="2" />
<text  x="93.65" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3,880 samples, 0.93%)</title><rect x="430.1" y="117" width="11.0" height="15.0" fill="rgb(224,79,15)" rx="2" ry="2" />
<text  x="433.12" y="127.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (245 samples, 0.06%)</title><rect x="1056.6" y="229" width="0.7" height="15.0" fill="rgb(241,24,52)" rx="2" ry="2" />
<text  x="1059.65" y="239.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search::{{closure}} (295 samples, 0.07%)</title><rect x="1167.6" y="389" width="0.9" height="15.0" fill="rgb(216,82,32)" rx="2" ry="2" />
<text  x="1170.63" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (45,464 samples, 10.89%)</title><rect x="343.8" y="405" width="128.5" height="15.0" fill="rgb(217,190,41)" rx="2" ry="2" />
<text  x="346.81" y="415.5" >sudachi::dic::le..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (743 samples, 0.18%)</title><rect x="1082.5" y="357" width="2.1" height="15.0" fill="rgb(218,192,24)" rx="2" ry="2" />
<text  x="1085.54" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_info (45,542 samples, 10.91%)</title><rect x="343.6" y="421" width="128.7" height="15.0" fill="rgb(236,63,52)" rx="2" ry="2" />
<text  x="346.59" y="431.5" >sudachi::dic::le..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSyncStr&gt; (215 samples, 0.05%)</title><rect x="243.7" y="341" width="0.6" height="15.0" fill="rgb(251,134,15)" rx="2" ry="2" />
<text  x="246.72" y="351.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (222 samples, 0.05%)</title><rect x="253.7" y="245" width="0.7" height="15.0" fill="rgb(205,60,8)" rx="2" ry="2" />
<text  x="256.74" y="255.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new (329 samples, 0.08%)</title><rect x="22.6" y="485" width="0.9" height="15.0" fill="rgb(228,41,30)" rx="2" ry="2" />
<text  x="25.57" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (918 samples, 0.22%)</title><rect x="323.0" y="293" width="2.6" height="15.0" fill="rgb(206,56,18)" rx="2" ry="2" />
<text  x="325.97" y="303.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (383 samples, 0.09%)</title><rect x="1056.3" y="293" width="1.0" height="15.0" fill="rgb(239,181,47)" rx="2" ry="2" />
<text  x="1059.26" y="303.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (357 samples, 0.09%)</title><rect x="1040.7" y="245" width="1.0" height="15.0" fill="rgb(208,138,32)" rx="2" ry="2" />
<text  x="1043.67" y="255.5" ></text>
</g>
<g >
<title>core::ptr::read (1,049 samples, 0.25%)</title><rect x="140.7" y="357" width="2.9" height="15.0" fill="rgb(211,176,16)" rx="2" ry="2" />
<text  x="143.67" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (245 samples, 0.06%)</title><rect x="1056.6" y="213" width="0.7" height="15.0" fill="rgb(233,126,3)" rx="2" ry="2" />
<text  x="1059.65" y="223.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::earliest_find_at (594 samples, 0.14%)</title><rect x="1121.0" y="309" width="1.7" height="15.0" fill="rgb(209,47,12)" rx="2" ry="2" />
<text  x="1124.01" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1,134 samples, 0.27%)</title><rect x="147.1" y="373" width="3.2" height="15.0" fill="rgb(240,197,22)" rx="2" ry="2" />
<text  x="150.08" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::DictionaryLoader::read_dictionary (281 samples, 0.07%)</title><rect x="1184.6" y="421" width="0.8" height="15.0" fill="rgb(212,71,10)" rx="2" ry="2" />
<text  x="1187.60" y="431.5" ></text>
</g>
<g >
<title>_int_malloc (1,452 samples, 0.35%)</title><rect x="974.4" y="309" width="4.1" height="15.0" fill="rgb(251,145,23)" rx="2" ry="2" />
<text  x="977.39" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (616 samples, 0.15%)</title><rect x="1063.8" y="389" width="1.7" height="15.0" fill="rgb(233,71,22)" rx="2" ry="2" />
<text  x="1066.78" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (158 samples, 0.04%)</title><rect x="1111.9" y="357" width="0.5" height="15.0" fill="rgb(214,136,40)" rx="2" ry="2" />
<text  x="1114.95" y="367.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_of_range (327 samples, 0.08%)</title><rect x="278.2" y="421" width="0.9" height="15.0" fill="rgb(218,0,46)" rx="2" ry="2" />
<text  x="281.19" y="431.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (141 samples, 0.03%)</title><rect x="471.6" y="325" width="0.4" height="15.0" fill="rgb(211,34,14)" rx="2" ry="2" />
<text  x="474.65" y="335.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (3,469 samples, 0.83%)</title><rect x="373.4" y="325" width="9.8" height="15.0" fill="rgb(239,195,14)" rx="2" ry="2" />
<text  x="376.43" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::LoadedDictionary::from_system_dictionary (283 samples, 0.07%)</title><rect x="1184.6" y="453" width="0.8" height="15.0" fill="rgb(242,146,18)" rx="2" ry="2" />
<text  x="1187.60" y="463.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2,781 samples, 0.67%)</title><rect x="1086.5" y="229" width="7.8" height="15.0" fill="rgb(248,77,35)" rx="2" ry="2" />
<text  x="1089.48" y="239.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (605 samples, 0.14%)</title><rect x="361.8" y="245" width="1.7" height="15.0" fill="rgb(205,126,15)" rx="2" ry="2" />
<text  x="364.78" y="255.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (383 samples, 0.09%)</title><rect x="1056.3" y="277" width="1.0" height="15.0" fill="rgb(226,204,42)" rx="2" ry="2" />
<text  x="1059.26" y="287.5" ></text>
</g>
<g >
<title>alloc::string::String::push (851 samples, 0.20%)</title><rect x="357.3" y="229" width="2.4" height="15.0" fill="rgb(248,192,6)" rx="2" ry="2" />
<text  x="360.25" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (593 samples, 0.14%)</title><rect x="18.9" y="485" width="1.6" height="15.0" fill="rgb(223,216,3)" rx="2" ry="2" />
<text  x="21.87" y="495.5" ></text>
</g>
<g >
<title>__rdl_alloc (269 samples, 0.06%)</title><rect x="454.7" y="133" width="0.8" height="15.0" fill="rgb(250,128,26)" rx="2" ry="2" />
<text  x="457.73" y="143.5" ></text>
</g>
<g >
<title>sudachi::sentence_detector::parenthesis_level (3,586 samples, 0.86%)</title><rect x="256.9" y="437" width="10.1" height="15.0" fill="rgb(215,209,41)" rx="2" ry="2" />
<text  x="259.87" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (125 samples, 0.03%)</title><rect x="289.4" y="357" width="0.4" height="15.0" fill="rgb(216,212,0)" rx="2" ry="2" />
<text  x="292.44" y="367.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (155 samples, 0.04%)</title><rect x="288.3" y="325" width="0.4" height="15.0" fill="rgb(247,160,23)" rx="2" ry="2" />
<text  x="291.29" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (296 samples, 0.07%)</title><rect x="1079.0" y="373" width="0.8" height="15.0" fill="rgb(243,26,28)" rx="2" ry="2" />
<text  x="1081.98" y="383.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (22,334 samples, 5.35%)</title><rect x="896.1" y="309" width="63.1" height="15.0" fill="rgb(241,133,7)" rx="2" ry="2" />
<text  x="899.07" y="319.5" >&lt;F as ..</text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1,736 samples, 0.42%)</title><rect x="1095.3" y="293" width="4.9" height="15.0" fill="rgb(213,5,48)" rx="2" ry="2" />
<text  x="1098.30" y="303.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::new (175 samples, 0.04%)</title><rect x="130.2" y="389" width="0.5" height="15.0" fill="rgb(238,186,24)" rx="2" ry="2" />
<text  x="133.25" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (687 samples, 0.16%)</title><rect x="359.7" y="181" width="2.0" height="15.0" fill="rgb(208,94,8)" rx="2" ry="2" />
<text  x="362.71" y="191.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (138 samples, 0.03%)</title><rect x="39.9" y="485" width="0.4" height="15.0" fill="rgb(207,202,7)" rx="2" ry="2" />
<text  x="42.91" y="495.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::build (207 samples, 0.05%)</title><rect x="1168.6" y="437" width="0.5" height="15.0" fill="rgb(214,190,40)" rx="2" ry="2" />
<text  x="1171.56" y="447.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (296 samples, 0.07%)</title><rect x="1063.8" y="325" width="0.8" height="15.0" fill="rgb(214,160,41)" rx="2" ry="2" />
<text  x="1066.78" y="335.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::fill_cat_continuity (650 samples, 0.16%)</title><rect x="1169.1" y="437" width="1.9" height="15.0" fill="rgb(210,159,35)" rx="2" ry="2" />
<text  x="1172.14" y="447.5" ></text>
</g>
<g >
<title>_int_malloc (7,411 samples, 1.78%)</title><rect x="663.9" y="309" width="21.0" height="15.0" fill="rgb(209,14,14)" rx="2" ry="2" />
<text  x="666.92" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (959 samples, 0.23%)</title><rect x="1038.0" y="309" width="2.7" height="15.0" fill="rgb(250,178,42)" rx="2" ry="2" />
<text  x="1040.96" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,953 samples, 1.67%)</title><rect x="986.8" y="389" width="19.7" height="15.0" fill="rgb(213,104,5)" rx="2" ry="2" />
<text  x="989.84" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (2,851 samples, 0.68%)</title><rect x="416.4" y="117" width="8.0" height="15.0" fill="rgb(229,203,7)" rx="2" ry="2" />
<text  x="419.36" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (675 samples, 0.16%)</title><rect x="357.3" y="213" width="1.9" height="15.0" fill="rgb(242,36,35)" rx="2" ry="2" />
<text  x="360.34" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (131 samples, 0.03%)</title><rect x="489.2" y="437" width="0.3" height="15.0" fill="rgb(240,162,32)" rx="2" ry="2" />
<text  x="492.17" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (443 samples, 0.11%)</title><rect x="166.9" y="341" width="1.2" height="15.0" fill="rgb(236,225,3)" rx="2" ry="2" />
<text  x="169.89" y="351.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,079 samples, 0.26%)</title><rect x="1024.1" y="405" width="3.0" height="15.0" fill="rgb(244,87,13)" rx="2" ry="2" />
<text  x="1027.07" y="415.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (113 samples, 0.03%)</title><rect x="1112.0" y="309" width="0.4" height="15.0" fill="rgb(248,223,24)" rx="2" ry="2" />
<text  x="1115.04" y="319.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (130 samples, 0.03%)</title><rect x="205.5" y="245" width="0.4" height="15.0" fill="rgb(247,2,15)" rx="2" ry="2" />
<text  x="208.54" y="255.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::build_lattice (222,875 samples, 53.40%)</title><rect x="473.1" y="453" width="630.1" height="15.0" fill="rgb(218,112,21)" rx="2" ry="2" />
<text  x="476.07" y="463.5" >sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::build_lattice</text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (69,447 samples, 16.64%)</title><rect x="774.4" y="405" width="196.4" height="15.0" fill="rgb(222,116,5)" rx="2" ry="2" />
<text  x="777.44" y="415.5" >sudachi::dic::grammar::Gr..</text>
</g>
<g >
<title>sudachi::dic::character_category::CharacterCategory::get_category_types (1,104 samples, 0.26%)</title><rect x="1165.4" y="437" width="3.2" height="15.0" fill="rgb(241,6,4)" rx="2" ry="2" />
<text  x="1168.43" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (155 samples, 0.04%)</title><rect x="288.3" y="277" width="0.4" height="15.0" fill="rgb(215,136,33)" rx="2" ry="2" />
<text  x="291.29" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (140 samples, 0.03%)</title><rect x="1101.4" y="357" width="0.3" height="15.0" fill="rgb(220,189,43)" rx="2" ry="2" />
<text  x="1104.35" y="367.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (266 samples, 0.06%)</title><rect x="1184.6" y="373" width="0.8" height="15.0" fill="rgb(250,9,38)" rx="2" ry="2" />
<text  x="1187.64" y="383.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (163 samples, 0.04%)</title><rect x="258.2" y="341" width="0.4" height="15.0" fill="rgb(238,130,34)" rx="2" ry="2" />
<text  x="261.18" y="351.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::build (4,070 samples, 0.98%)</title><rect x="1159.5" y="453" width="11.5" height="15.0" fill="rgb(243,227,1)" rx="2" ry="2" />
<text  x="1162.47" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (236 samples, 0.06%)</title><rect x="381.3" y="181" width="0.7" height="15.0" fill="rgb(208,204,20)" rx="2" ry="2" />
<text  x="384.29" y="191.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (154 samples, 0.04%)</title><rect x="423.5" y="37" width="0.5" height="15.0" fill="rgb(223,12,21)" rx="2" ry="2" />
<text  x="426.54" y="47.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (489 samples, 0.12%)</title><rect x="1125.7" y="309" width="1.4" height="15.0" fill="rgb(236,157,7)" rx="2" ry="2" />
<text  x="1128.73" y="319.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (110 samples, 0.03%)</title><rect x="265.7" y="293" width="0.4" height="15.0" fill="rgb(248,199,52)" rx="2" ry="2" />
<text  x="268.74" y="303.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (138,000 samples, 33.06%)</title><rect x="583.7" y="437" width="390.2" height="15.0" fill="rgb(208,74,12)" rx="2" ry="2" />
<text  x="586.70" y="447.5" >sudachi::analysis::lattice::Lattice::insert</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (144 samples, 0.03%)</title><rect x="1169.6" y="421" width="0.4" height="15.0" fill="rgb(221,65,7)" rx="2" ry="2" />
<text  x="1172.59" y="431.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher (914 samples, 0.22%)</title><rect x="245.4" y="325" width="2.6" height="15.0" fill="rgb(254,10,37)" rx="2" ry="2" />
<text  x="248.44" y="335.5" ></text>
</g>
<g >
<title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,582 samples, 0.38%)</title><rect x="70.4" y="469" width="4.4" height="15.0" fill="rgb(243,150,27)" rx="2" ry="2" />
<text  x="73.37" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,104 samples, 0.74%)</title><rect x="446.8" y="245" width="8.8" height="15.0" fill="rgb(207,105,27)" rx="2" ry="2" />
<text  x="449.83" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (138 samples, 0.03%)</title><rect x="13.5" y="469" width="0.4" height="15.0" fill="rgb(233,169,31)" rx="2" ry="2" />
<text  x="16.51" y="479.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (168 samples, 0.04%)</title><rect x="645.3" y="229" width="0.5" height="15.0" fill="rgb(223,28,46)" rx="2" ry="2" />
<text  x="648.28" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::any_bit_set (2,718 samples, 0.65%)</title><rect x="855.3" y="277" width="7.7" height="15.0" fill="rgb(218,18,9)" rx="2" ry="2" />
<text  x="858.29" y="287.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (357 samples, 0.09%)</title><rect x="1040.7" y="309" width="1.0" height="15.0" fill="rgb(226,165,29)" rx="2" ry="2" />
<text  x="1043.67" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2,805 samples, 0.67%)</title><rect x="978.9" y="389" width="7.9" height="15.0" fill="rgb(246,37,7)" rx="2" ry="2" />
<text  x="981.91" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (196 samples, 0.05%)</title><rect x="1084.1" y="309" width="0.5" height="15.0" fill="rgb(230,21,30)" rx="2" ry="2" />
<text  x="1087.09" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,702 samples, 0.65%)</title><rect x="1048.3" y="309" width="7.6" height="15.0" fill="rgb(219,34,27)" rx="2" ry="2" />
<text  x="1051.30" y="319.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (22,334 samples, 5.35%)</title><rect x="896.1" y="341" width="63.1" height="15.0" fill="rgb(211,190,0)" rx="2" ry="2" />
<text  x="899.07" y="351.5" >core::..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,781 samples, 0.67%)</title><rect x="1086.5" y="293" width="7.8" height="15.0" fill="rgb(241,86,9)" rx="2" ry="2" />
<text  x="1089.48" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (2,149 samples, 0.51%)</title><rect x="322.5" y="437" width="6.1" height="15.0" fill="rgb(221,3,23)" rx="2" ry="2" />
<text  x="325.54" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (1,537 samples, 0.37%)</title><rect x="1095.4" y="181" width="4.4" height="15.0" fill="rgb(233,112,54)" rx="2" ry="2" />
<text  x="1098.42" y="191.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (158 samples, 0.04%)</title><rect x="1099.8" y="261" width="0.4" height="15.0" fill="rgb(254,194,26)" rx="2" ry="2" />
<text  x="1102.76" y="271.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (691 samples, 0.17%)</title><rect x="330.3" y="389" width="1.9" height="15.0" fill="rgb(251,14,41)" rx="2" ry="2" />
<text  x="333.29" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (149 samples, 0.04%)</title><rect x="285.6" y="213" width="0.4" height="15.0" fill="rgb(210,213,0)" rx="2" ry="2" />
<text  x="288.62" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,056 samples, 0.73%)</title><rect x="373.4" y="293" width="8.7" height="15.0" fill="rgb(241,203,26)" rx="2" ry="2" />
<text  x="376.43" y="303.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (207 samples, 0.05%)</title><rect x="684.9" y="309" width="0.6" height="15.0" fill="rgb(221,82,36)" rx="2" ry="2" />
<text  x="687.88" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1,109 samples, 0.27%)</title><rect x="834.9" y="277" width="3.1" height="15.0" fill="rgb(217,135,4)" rx="2" ry="2" />
<text  x="837.87" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (117 samples, 0.03%)</title><rect x="48.5" y="341" width="0.3" height="15.0" fill="rgb(253,80,45)" rx="2" ry="2" />
<text  x="51.46" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (382 samples, 0.09%)</title><rect x="167.0" y="293" width="1.0" height="15.0" fill="rgb(230,189,2)" rx="2" ry="2" />
<text  x="169.96" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::offset (1,100 samples, 0.26%)</title><rect x="497.7" y="309" width="3.1" height="15.0" fill="rgb(244,57,29)" rx="2" ry="2" />
<text  x="500.70" y="319.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (224 samples, 0.05%)</title><rect x="1037.3" y="293" width="0.7" height="15.0" fill="rgb(236,176,20)" rx="2" ry="2" />
<text  x="1040.33" y="303.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (307 samples, 0.07%)</title><rect x="1162.9" y="421" width="0.9" height="15.0" fill="rgb(221,2,54)" rx="2" ry="2" />
<text  x="1165.89" y="431.5" ></text>
</g>
<g >
<title>sudachi::hash::RoMuHash::consume (3,455 samples, 0.83%)</title><rect x="832.7" y="293" width="9.8" height="15.0" fill="rgb(217,40,25)" rx="2" ry="2" />
<text  x="835.72" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::label (369 samples, 0.09%)</title><rect x="496.7" y="309" width="1.0" height="15.0" fill="rgb(208,140,18)" rx="2" ry="2" />
<text  x="499.65" y="319.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (196 samples, 0.05%)</title><rect x="979.8" y="293" width="0.6" height="15.0" fill="rgb(209,121,43)" rx="2" ry="2" />
<text  x="982.84" y="303.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (256 samples, 0.06%)</title><rect x="318.5" y="421" width="0.7" height="15.0" fill="rgb(225,142,47)" rx="2" ry="2" />
<text  x="321.47" y="431.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (2,702 samples, 0.65%)</title><rect x="1048.3" y="341" width="7.6" height="15.0" fill="rgb(239,20,21)" rx="2" ry="2" />
<text  x="1051.30" y="351.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (127 samples, 0.03%)</title><rect x="1189.0" y="501" width="0.4" height="15.0" fill="rgb(229,71,22)" rx="2" ry="2" />
<text  x="1192.00" y="511.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::spare_capacity (758 samples, 0.18%)</title><rect x="78.2" y="421" width="2.2" height="15.0" fill="rgb(213,48,46)" rx="2" ry="2" />
<text  x="81.22" y="431.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (222 samples, 0.05%)</title><rect x="380.6" y="165" width="0.7" height="15.0" fill="rgb(209,204,0)" rx="2" ry="2" />
<text  x="383.64" y="175.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (867 samples, 0.21%)</title><rect x="947.9" y="181" width="2.5" height="15.0" fill="rgb(221,91,33)" rx="2" ry="2" />
<text  x="950.91" y="191.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (754 samples, 0.18%)</title><rect x="1082.5" y="389" width="2.1" height="15.0" fill="rgb(213,224,11)" rx="2" ry="2" />
<text  x="1085.51" y="399.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (173 samples, 0.04%)</title><rect x="863.0" y="245" width="0.5" height="15.0" fill="rgb(226,9,16)" rx="2" ry="2" />
<text  x="865.97" y="255.5" ></text>
</g>
<g >
<title>core::ptr::swap (1,053 samples, 0.25%)</title><rect x="329.3" y="421" width="2.9" height="15.0" fill="rgb(221,158,19)" rx="2" ry="2" />
<text  x="332.27" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (2,074 samples, 0.50%)</title><rect x="417.4" y="53" width="5.9" height="15.0" fill="rgb(227,97,46)" rx="2" ry="2" />
<text  x="420.45" y="63.5" ></text>
</g>
<g >
<title>&lt;sudachi::hash::RoMuHash as core::hash::Hasher&gt;::write_u32 (615 samples, 0.15%)</title><rect x="1034.4" y="309" width="1.7" height="15.0" fill="rgb(252,118,7)" rx="2" ry="2" />
<text  x="1037.36" y="319.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (186 samples, 0.04%)</title><rect x="1083.2" y="309" width="0.6" height="15.0" fill="rgb(208,197,10)" rx="2" ry="2" />
<text  x="1086.23" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::rewrite_input (17,632 samples, 4.22%)</title><rect x="1109.5" y="453" width="49.8" height="15.0" fill="rgb(254,73,46)" rx="2" ry="2" />
<text  x="1112.48" y="463.5" >sudac..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,703 samples, 0.41%)</title><rect x="248.8" y="245" width="4.8" height="15.0" fill="rgb(250,184,12)" rx="2" ry="2" />
<text  x="251.83" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (139 samples, 0.03%)</title><rect x="267.4" y="405" width="0.4" height="15.0" fill="rgb(213,139,49)" rx="2" ry="2" />
<text  x="270.39" y="415.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max (128 samples, 0.03%)</title><rect x="424.4" y="101" width="0.4" height="15.0" fill="rgb(217,96,47)" rx="2" ry="2" />
<text  x="427.42" y="111.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (145 samples, 0.03%)</title><rect x="1126.7" y="229" width="0.4" height="15.0" fill="rgb(238,46,25)" rx="2" ry="2" />
<text  x="1129.70" y="239.5" ></text>
</g>
<g >
<title>nom::sequence::tuple::{{closure}} (30,459 samples, 7.30%)</title><rect x="385.9" y="341" width="86.1" height="15.0" fill="rgb(254,189,46)" rx="2" ry="2" />
<text  x="388.93" y="351.5" >nom::seque..</text>
</g>
<g >
<title>alloc::alloc::realloc (945 samples, 0.23%)</title><rect x="323.0" y="309" width="2.6" height="15.0" fill="rgb(240,218,14)" rx="2" ry="2" />
<text  x="325.96" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::reset (4,518 samples, 1.08%)</title><rect x="1171.8" y="469" width="12.8" height="15.0" fill="rgb(237,38,37)" rx="2" ry="2" />
<text  x="1174.82" y="479.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::bitset_search (521 samples, 0.12%)</title><rect x="1113.9" y="309" width="1.5" height="15.0" fill="rgb(230,159,17)" rx="2" ry="2" />
<text  x="1116.94" y="319.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (117 samples, 0.03%)</title><rect x="1110.5" y="309" width="0.4" height="15.0" fill="rgb(243,82,48)" rx="2" ry="2" />
<text  x="1113.54" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (223 samples, 0.05%)</title><rect x="73.6" y="325" width="0.7" height="15.0" fill="rgb(213,185,0)" rx="2" ry="2" />
<text  x="76.62" y="335.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (580 samples, 0.14%)</title><rect x="333.2" y="421" width="1.7" height="15.0" fill="rgb(243,68,38)" rx="2" ry="2" />
<text  x="336.24" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (178 samples, 0.04%)</title><rect x="582.4" y="405" width="0.5" height="15.0" fill="rgb(235,66,53)" rx="2" ry="2" />
<text  x="585.40" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (3,337 samples, 0.80%)</title><rect x="877.1" y="261" width="9.5" height="15.0" fill="rgb(247,60,40)" rx="2" ry="2" />
<text  x="880.14" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,954 samples, 0.95%)</title><rect x="1172.8" y="325" width="11.1" height="15.0" fill="rgb(212,27,27)" rx="2" ry="2" />
<text  x="1175.76" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (335 samples, 0.08%)</title><rect x="284.1" y="261" width="0.9" height="15.0" fill="rgb(236,228,6)" rx="2" ry="2" />
<text  x="287.05" y="271.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_mul (1,584 samples, 0.38%)</title><rect x="838.0" y="277" width="4.5" height="15.0" fill="rgb(242,81,44)" rx="2" ry="2" />
<text  x="841.01" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (125 samples, 0.03%)</title><rect x="267.4" y="373" width="0.4" height="15.0" fill="rgb(216,153,49)" rx="2" ry="2" />
<text  x="270.42" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (18,010 samples, 4.32%)</title><rect x="1014.6" y="421" width="50.9" height="15.0" fill="rgb(232,196,46)" rx="2" ry="2" />
<text  x="1017.60" y="431.5" >sudac..</text>
</g>
<g >
<title>alloc::alloc::dealloc (480 samples, 0.12%)</title><rect x="349.4" y="309" width="1.3" height="15.0" fill="rgb(251,111,46)" rx="2" ry="2" />
<text  x="352.38" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,254 samples, 1.02%)</title><rect x="429.7" y="229" width="12.0" height="15.0" fill="rgb(234,200,47)" rx="2" ry="2" />
<text  x="432.69" y="239.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (251 samples, 0.06%)</title><rect x="125.1" y="357" width="0.8" height="15.0" fill="rgb(217,190,31)" rx="2" ry="2" />
<text  x="128.14" y="367.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (110 samples, 0.03%)</title><rect x="558.4" y="389" width="0.4" height="15.0" fill="rgb(237,86,1)" rx="2" ry="2" />
<text  x="561.44" y="399.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (133 samples, 0.03%)</title><rect x="359.2" y="213" width="0.4" height="15.0" fill="rgb(228,35,24)" rx="2" ry="2" />
<text  x="362.24" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,766 samples, 0.42%)</title><rect x="1095.3" y="373" width="5.0" height="15.0" fill="rgb(218,166,15)" rx="2" ry="2" />
<text  x="1098.30" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (350 samples, 0.08%)</title><rect x="1038.1" y="261" width="1.0" height="15.0" fill="rgb(212,166,34)" rx="2" ry="2" />
<text  x="1041.10" y="271.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1,453 samples, 0.35%)</title><rect x="1147.8" y="325" width="4.1" height="15.0" fill="rgb(229,81,38)" rx="2" ry="2" />
<text  x="1150.83" y="335.5" ></text>
</g>
<g >
<title>std::io::BufRead::read_line::{{closure}} (676 samples, 0.16%)</title><rect x="72.9" y="405" width="1.9" height="15.0" fill="rgb(243,169,22)" rx="2" ry="2" />
<text  x="75.93" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (624 samples, 0.15%)</title><rect x="359.8" y="101" width="1.7" height="15.0" fill="rgb(237,119,43)" rx="2" ry="2" />
<text  x="362.78" y="111.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 samples, 0.05%)</title><rect x="687.9" y="357" width="0.6" height="15.0" fill="rgb(228,178,29)" rx="2" ry="2" />
<text  x="690.88" y="367.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (122 samples, 0.03%)</title><rect x="1126.3" y="229" width="0.3" height="15.0" fill="rgb(228,69,17)" rx="2" ry="2" />
<text  x="1129.30" y="239.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,736 samples, 0.42%)</title><rect x="1095.3" y="277" width="4.9" height="15.0" fill="rgb(211,164,18)" rx="2" ry="2" />
<text  x="1098.30" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (402 samples, 0.10%)</title><rect x="362.4" y="149" width="1.1" height="15.0" fill="rgb(247,119,46)" rx="2" ry="2" />
<text  x="365.35" y="159.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (119 samples, 0.03%)</title><rect x="402.8" y="149" width="0.4" height="15.0" fill="rgb(214,72,51)" rx="2" ry="2" />
<text  x="405.82" y="159.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (516 samples, 0.12%)</title><rect x="285.3" y="373" width="1.5" height="15.0" fill="rgb(207,74,51)" rx="2" ry="2" />
<text  x="288.32" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,547 samples, 0.37%)</title><rect x="974.2" y="373" width="4.4" height="15.0" fill="rgb(228,186,4)" rx="2" ry="2" />
<text  x="977.19" y="383.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,732 samples, 0.41%)</title><rect x="176.2" y="373" width="4.9" height="15.0" fill="rgb(218,188,13)" rx="2" ry="2" />
<text  x="179.18" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (415 samples, 0.10%)</title><rect x="284.0" y="309" width="1.2" height="15.0" fill="rgb(227,199,49)" rx="2" ry="2" />
<text  x="287.05" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (110 samples, 0.03%)</title><rect x="1156.7" y="101" width="0.3" height="15.0" fill="rgb(251,201,36)" rx="2" ry="2" />
<text  x="1159.65" y="111.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::ok::{{closure}} (2,022 samples, 0.48%)</title><rect x="248.8" y="309" width="5.7" height="15.0" fill="rgb(249,3,14)" rx="2" ry="2" />
<text  x="251.81" y="319.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (289 samples, 0.07%)</title><rect x="233.1" y="245" width="0.8" height="15.0" fill="rgb(226,95,37)" rx="2" ry="2" />
<text  x="236.07" y="255.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (373 samples, 0.09%)</title><rect x="1161.2" y="357" width="1.0" height="15.0" fill="rgb(206,18,12)" rx="2" ry="2" />
<text  x="1164.19" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (286 samples, 0.07%)</title><rect x="363.5" y="245" width="0.8" height="15.0" fill="rgb(221,96,15)" rx="2" ry="2" />
<text  x="366.49" y="255.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::start_build (297 samples, 0.07%)</title><rect x="1171.0" y="453" width="0.8" height="15.0" fill="rgb(214,28,24)" rx="2" ry="2" />
<text  x="1173.98" y="463.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,034 samples, 0.25%)</title><rect x="319.2" y="421" width="2.9" height="15.0" fill="rgb(222,154,36)" rx="2" ry="2" />
<text  x="322.19" y="431.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (638 samples, 0.15%)</title><rect x="467.5" y="309" width="1.8" height="15.0" fill="rgb(221,17,47)" rx="2" ry="2" />
<text  x="470.53" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (364 samples, 0.09%)</title><rect x="44.5" y="485" width="1.0" height="15.0" fill="rgb(226,108,46)" rx="2" ry="2" />
<text  x="47.48" y="495.5" ></text>
</g>
<g >
<title>__rdl_realloc (245 samples, 0.06%)</title><rect x="661.3" y="277" width="0.7" height="15.0" fill="rgb(230,112,9)" rx="2" ry="2" />
<text  x="664.32" y="287.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match (1,533 samples, 0.37%)</title><rect x="225.4" y="309" width="4.4" height="15.0" fill="rgb(246,111,7)" rx="2" ry="2" />
<text  x="228.42" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (446 samples, 0.11%)</title><rect x="553.7" y="421" width="1.3" height="15.0" fill="rgb(209,159,1)" rx="2" ry="2" />
<text  x="556.72" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (153 samples, 0.04%)</title><rect x="267.4" y="469" width="0.4" height="15.0" fill="rgb(211,25,35)" rx="2" ry="2" />
<text  x="270.35" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (285 samples, 0.07%)</title><rect x="446.0" y="245" width="0.8" height="15.0" fill="rgb(246,171,19)" rx="2" ry="2" />
<text  x="449.02" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_free (317 samples, 0.08%)</title><rect x="354.8" y="245" width="0.9" height="15.0" fill="rgb(250,178,11)" rx="2" ry="2" />
<text  x="357.79" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_free (833 samples, 0.20%)</title><rect x="27.4" y="485" width="2.3" height="15.0" fill="rgb(205,162,37)" rx="2" ry="2" />
<text  x="30.35" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (287 samples, 0.07%)</title><rect x="284.2" y="229" width="0.8" height="15.0" fill="rgb(254,108,18)" rx="2" ry="2" />
<text  x="287.18" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (383 samples, 0.09%)</title><rect x="1056.3" y="325" width="1.0" height="15.0" fill="rgb(251,213,8)" rx="2" ry="2" />
<text  x="1059.26" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23,823 samples, 5.71%)</title><rect x="620.5" y="357" width="67.4" height="15.0" fill="rgb(219,109,7)" rx="2" ry="2" />
<text  x="623.53" y="367.5" >alloc::..</text>
</g>
<g >
<title>aho_corasick::ahocorasick::Imp&lt;S&gt;::find_at_no_state (1,061 samples, 0.25%)</title><rect x="1115.9" y="341" width="3.0" height="15.0" fill="rgb(243,64,37)" rx="2" ry="2" />
<text  x="1118.92" y="351.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (424 samples, 0.10%)</title><rect x="254.7" y="309" width="1.2" height="15.0" fill="rgb(226,209,53)" rx="2" ry="2" />
<text  x="257.70" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (155 samples, 0.04%)</title><rect x="288.3" y="293" width="0.4" height="15.0" fill="rgb(232,77,14)" rx="2" ry="2" />
<text  x="291.29" y="303.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (173 samples, 0.04%)</title><rect x="685.6" y="325" width="0.5" height="15.0" fill="rgb(225,96,36)" rx="2" ry="2" />
<text  x="688.60" y="335.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (121 samples, 0.03%)</title><rect x="1112.0" y="325" width="0.4" height="15.0" fill="rgb(252,5,18)" rx="2" ry="2" />
<text  x="1115.02" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (132 samples, 0.03%)</title><rect x="1172.1" y="405" width="0.4" height="15.0" fill="rgb(254,123,24)" rx="2" ry="2" />
<text  x="1175.10" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (215 samples, 0.05%)</title><rect x="1183.9" y="325" width="0.6" height="15.0" fill="rgb(251,171,31)" rx="2" ry="2" />
<text  x="1186.94" y="335.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (251 samples, 0.06%)</title><rect x="125.1" y="373" width="0.8" height="15.0" fill="rgb(205,169,20)" rx="2" ry="2" />
<text  x="128.14" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (147 samples, 0.04%)</title><rect x="148.6" y="357" width="0.4" height="15.0" fill="rgb(243,16,19)" rx="2" ry="2" />
<text  x="151.58" y="367.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::exec (767 samples, 0.18%)</title><rect x="259.4" y="293" width="2.1" height="15.0" fill="rgb(226,81,9)" rx="2" ry="2" />
<text  x="262.37" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::set_len (280 samples, 0.07%)</title><rect x="81.4" y="405" width="0.8" height="15.0" fill="rgb(254,205,26)" rx="2" ry="2" />
<text  x="84.37" y="415.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_some (215 samples, 0.05%)</title><rect x="765.2" y="405" width="0.7" height="15.0" fill="rgb(241,97,22)" rx="2" ry="2" />
<text  x="768.25" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (349 samples, 0.08%)</title><rect x="362.4" y="117" width="1.0" height="15.0" fill="rgb(235,223,22)" rx="2" ry="2" />
<text  x="365.40" y="127.5" ></text>
</g>
<g >
<title>[system.dic] (114 samples, 0.03%)</title><rect x="47.0" y="501" width="0.3" height="15.0" fill="rgb(241,136,36)" rx="2" ry="2" />
<text  x="50.01" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (415 samples, 0.10%)</title><rect x="284.0" y="293" width="1.2" height="15.0" fill="rgb(243,55,33)" rx="2" ry="2" />
<text  x="287.05" y="303.5" ></text>
</g>
<g >
<title>&lt;core::char::decode::DecodeUtf16&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (472 samples, 0.11%)</title><rect x="411.2" y="245" width="1.3" height="15.0" fill="rgb(229,218,24)" rx="2" ry="2" />
<text  x="414.19" y="255.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::ahocorasick::FindIter&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,079 samples, 0.26%)</title><rect x="1115.9" y="357" width="3.0" height="15.0" fill="rgb(215,91,11)" rx="2" ry="2" />
<text  x="1118.87" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (163 samples, 0.04%)</title><rect x="283.4" y="261" width="0.5" height="15.0" fill="rgb(233,9,51)" rx="2" ry="2" />
<text  x="286.42" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::get_surface (335 samples, 0.08%)</title><rect x="91.8" y="421" width="1.0" height="15.0" fill="rgb(218,38,22)" rx="2" ry="2" />
<text  x="94.85" y="431.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (158 samples, 0.04%)</title><rect x="403.4" y="197" width="0.5" height="15.0" fill="rgb(222,136,0)" rx="2" ry="2" />
<text  x="406.40" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (221 samples, 0.05%)</title><rect x="325.6" y="341" width="0.7" height="15.0" fill="rgb(239,11,47)" rx="2" ry="2" />
<text  x="328.63" y="351.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (108 samples, 0.03%)</title><rect x="1071.0" y="405" width="0.3" height="15.0" fill="rgb(246,22,33)" rx="2" ry="2" />
<text  x="1074.00" y="415.5" ></text>
</g>
<g >
<title>nom::sequence::tuple::{{closure}} (3,977 samples, 0.95%)</title><rect x="353.8" y="325" width="11.3" height="15.0" fill="rgb(227,204,46)" rx="2" ry="2" />
<text  x="356.82" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (305 samples, 0.07%)</title><rect x="352.5" y="213" width="0.8" height="15.0" fill="rgb(242,83,49)" rx="2" ry="2" />
<text  x="355.46" y="223.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,315 samples, 0.32%)</title><rect x="339.9" y="421" width="3.7" height="15.0" fill="rgb(245,102,33)" rx="2" ry="2" />
<text  x="342.87" y="431.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::reverse (343 samples, 0.08%)</title><rect x="265.4" y="325" width="1.0" height="15.0" fill="rgb(238,154,33)" rx="2" ry="2" />
<text  x="268.43" y="335.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (7,576 samples, 1.82%)</title><rect x="558.8" y="437" width="21.4" height="15.0" fill="rgb(226,145,20)" rx="2" ry="2" />
<text  x="561.81" y="447.5" >_..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (360 samples, 0.09%)</title><rect x="167.0" y="277" width="1.0" height="15.0" fill="rgb(241,93,5)" rx="2" ry="2" />
<text  x="170.00" y="287.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (1,688 samples, 0.40%)</title><rect x="365.4" y="357" width="4.8" height="15.0" fill="rgb(230,68,22)" rx="2" ry="2" />
<text  x="368.42" y="367.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::u8_class (231 samples, 0.06%)</title><rect x="187.9" y="245" width="0.7" height="15.0" fill="rgb(254,54,29)" rx="2" ry="2" />
<text  x="190.94" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (293 samples, 0.07%)</title><rect x="357.9" y="37" width="0.8" height="15.0" fill="rgb(238,205,51)" rx="2" ry="2" />
<text  x="360.91" y="47.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (130 samples, 0.03%)</title><rect x="277.3" y="341" width="0.4" height="15.0" fill="rgb(249,20,16)" rx="2" ry="2" />
<text  x="280.34" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (143 samples, 0.03%)</title><rect x="148.6" y="325" width="0.4" height="15.0" fill="rgb(233,161,5)" rx="2" ry="2" />
<text  x="151.59" y="335.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (217 samples, 0.05%)</title><rect x="1119.4" y="341" width="0.6" height="15.0" fill="rgb(228,197,31)" rx="2" ry="2" />
<text  x="1122.42" y="351.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (4,028 samples, 0.97%)</title><rect x="1134.7" y="341" width="11.4" height="15.0" fill="rgb(248,214,46)" rx="2" ry="2" />
<text  x="1137.70" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::update_dict_id (108 samples, 0.03%)</title><rect x="472.8" y="421" width="0.3" height="15.0" fill="rgb(219,207,23)" rx="2" ry="2" />
<text  x="475.76" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (253 samples, 0.06%)</title><rect x="284.2" y="213" width="0.7" height="15.0" fill="rgb(212,57,31)" rx="2" ry="2" />
<text  x="287.22" y="223.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (171 samples, 0.04%)</title><rect x="283.4" y="341" width="0.5" height="15.0" fill="rgb(236,101,14)" rx="2" ry="2" />
<text  x="286.40" y="351.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (2,673 samples, 0.64%)</title><rect x="248.4" y="437" width="7.6" height="15.0" fill="rgb(229,71,47)" rx="2" ry="2" />
<text  x="251.40" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (5,196 samples, 1.24%)</title><rect x="1042.7" y="405" width="14.6" height="15.0" fill="rgb(241,95,1)" rx="2" ry="2" />
<text  x="1045.65" y="415.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,400 samples, 0.34%)</title><rect x="979.8" y="309" width="4.0" height="15.0" fill="rgb(229,194,43)" rx="2" ry="2" />
<text  x="982.83" y="319.5" ></text>
</g>
<g >
<title>std::io::read_until (673 samples, 0.16%)</title><rect x="72.9" y="389" width="1.9" height="15.0" fill="rgb(230,87,11)" rx="2" ry="2" />
<text  x="75.94" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (277 samples, 0.07%)</title><rect x="400.2" y="261" width="0.8" height="15.0" fill="rgb(214,138,32)" rx="2" ry="2" />
<text  x="403.17" y="271.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (383 samples, 0.09%)</title><rect x="1056.3" y="245" width="1.0" height="15.0" fill="rgb(237,175,24)" rx="2" ry="2" />
<text  x="1059.26" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (303 samples, 0.07%)</title><rect x="135.4" y="373" width="0.8" height="15.0" fill="rgb(209,21,35)" rx="2" ry="2" />
<text  x="138.37" y="383.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher_str (1,305 samples, 0.31%)</title><rect x="244.3" y="341" width="3.7" height="15.0" fill="rgb(235,210,48)" rx="2" ry="2" />
<text  x="247.33" y="351.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,732 samples, 0.41%)</title><rect x="176.2" y="341" width="4.9" height="15.0" fill="rgb(227,31,40)" rx="2" ry="2" />
<text  x="179.18" y="351.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (2,654 samples, 0.64%)</title><rect x="457.7" y="197" width="7.5" height="15.0" fill="rgb(230,129,2)" rx="2" ry="2" />
<text  x="460.65" y="207.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (753 samples, 0.18%)</title><rect x="443.9" y="229" width="2.1" height="15.0" fill="rgb(231,157,17)" rx="2" ry="2" />
<text  x="446.89" y="239.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (2,868 samples, 0.69%)</title><rect x="305.3" y="325" width="8.1" height="15.0" fill="rgb(214,107,6)" rx="2" ry="2" />
<text  x="308.32" y="335.5" ></text>
</g>
<g >
<title>core::ptr::write (454 samples, 0.11%)</title><rect x="149.0" y="357" width="1.3" height="15.0" fill="rgb(221,220,46)" rx="2" ry="2" />
<text  x="152.00" y="367.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 0.04%)</title><rect x="278.4" y="389" width="0.5" height="15.0" fill="rgb(216,130,39)" rx="2" ry="2" />
<text  x="281.43" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (183 samples, 0.04%)</title><rect x="983.3" y="261" width="0.5" height="15.0" fill="rgb(214,141,34)" rx="2" ry="2" />
<text  x="986.27" y="271.5" ></text>
</g>
<g >
<title>aho_corasick::packed::api::Searcher::find_at (1,600 samples, 0.38%)</title><rect x="1153.9" y="213" width="4.5" height="15.0" fill="rgb(208,179,42)" rx="2" ry="2" />
<text  x="1156.88" y="223.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (996 samples, 0.24%)</title><rect x="233.9" y="261" width="2.8" height="15.0" fill="rgb(250,184,17)" rx="2" ry="2" />
<text  x="236.88" y="271.5" ></text>
</g>
<g >
<title>_int_realloc (853 samples, 0.20%)</title><rect x="323.2" y="277" width="2.4" height="15.0" fill="rgb(209,81,24)" rx="2" ry="2" />
<text  x="326.15" y="287.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (268 samples, 0.06%)</title><rect x="454.7" y="117" width="0.8" height="15.0" fill="rgb(241,31,51)" rx="2" ry="2" />
<text  x="457.74" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (172 samples, 0.04%)</title><rect x="288.2" y="341" width="0.5" height="15.0" fill="rgb(208,198,40)" rx="2" ry="2" />
<text  x="291.24" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (147 samples, 0.04%)</title><rect x="148.6" y="341" width="0.4" height="15.0" fill="rgb(238,172,11)" rx="2" ry="2" />
<text  x="151.58" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (159 samples, 0.04%)</title><rect x="48.5" y="469" width="0.4" height="15.0" fill="rgb(219,186,5)" rx="2" ry="2" />
<text  x="51.46" y="479.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (494 samples, 0.12%)</title><rect x="1055.9" y="341" width="1.4" height="15.0" fill="rgb(236,54,40)" rx="2" ry="2" />
<text  x="1058.94" y="351.5" ></text>
</g>
<g >
<title>aho_corasick::dfa::DFA&lt;S&gt;::earliest_find_at (594 samples, 0.14%)</title><rect x="1121.0" y="325" width="1.7" height="15.0" fill="rgb(211,195,33)" rx="2" ry="2" />
<text  x="1124.01" y="335.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (439 samples, 0.11%)</title><rect x="1039.4" y="213" width="1.3" height="15.0" fill="rgb(252,118,28)" rx="2" ry="2" />
<text  x="1042.43" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (444 samples, 0.11%)</title><rect x="1125.9" y="277" width="1.2" height="15.0" fill="rgb(235,128,5)" rx="2" ry="2" />
<text  x="1128.85" y="287.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (343 samples, 0.08%)</title><rect x="1041.7" y="341" width="1.0" height="15.0" fill="rgb(252,83,51)" rx="2" ry="2" />
<text  x="1044.68" y="351.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::iter (315 samples, 0.08%)</title><rect x="224.5" y="277" width="0.9" height="15.0" fill="rgb(244,108,0)" rx="2" ry="2" />
<text  x="227.53" y="287.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (291 samples, 0.07%)</title><rect x="272.2" y="389" width="0.8" height="15.0" fill="rgb(234,48,50)" rx="2" ry="2" />
<text  x="275.16" y="399.5" ></text>
</g>
<g >
<title>unicode_normalization::perfect_hash::mph_lookup (197 samples, 0.05%)</title><rect x="1133.1" y="309" width="0.6" height="15.0" fill="rgb(235,15,50)" rx="2" ry="2" />
<text  x="1136.13" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,213 samples, 0.29%)</title><rect x="322.9" y="357" width="3.4" height="15.0" fill="rgb(206,90,24)" rx="2" ry="2" />
<text  x="325.86" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4,747 samples, 1.14%)</title><rect x="413.5" y="213" width="13.4" height="15.0" fill="rgb(247,73,50)" rx="2" ry="2" />
<text  x="416.49" y="223.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (3,056 samples, 0.73%)</title><rect x="373.4" y="229" width="8.7" height="15.0" fill="rgb(237,208,34)" rx="2" ry="2" />
<text  x="376.43" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (861 samples, 0.21%)</title><rect x="279.9" y="389" width="2.5" height="15.0" fill="rgb(222,61,37)" rx="2" ry="2" />
<text  x="282.93" y="399.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (185 samples, 0.04%)</title><rect x="328.7" y="437" width="0.5" height="15.0" fill="rgb(233,44,21)" rx="2" ry="2" />
<text  x="331.66" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,316 samples, 0.32%)</title><rect x="322.7" y="421" width="3.7" height="15.0" fill="rgb(231,177,20)" rx="2" ry="2" />
<text  x="325.69" y="431.5" ></text>
</g>
<g >
<title>unicode_normalization::normalize::decompose_compatible (216 samples, 0.05%)</title><rect x="1124.9" y="293" width="0.6" height="15.0" fill="rgb(222,206,46)" rx="2" ry="2" />
<text  x="1127.86" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (298 samples, 0.07%)</title><rect x="581.0" y="421" width="0.8" height="15.0" fill="rgb(236,201,51)" rx="2" ry="2" />
<text  x="583.96" y="431.5" ></text>
</g>
<g >
<title>[[heap]] (3,847 samples, 0.92%)</title><rect x="13.0" y="501" width="10.9" height="15.0" fill="rgb(223,105,22)" rx="2" ry="2" />
<text  x="16.01" y="511.5" ></text>
</g>
<g >
<title>regex::re_trait::RegularExpression::locations (192 samples, 0.05%)</title><rect x="1152.1" y="341" width="0.5" height="15.0" fill="rgb(214,24,21)" rx="2" ry="2" />
<text  x="1155.08" y="351.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::should_ignore (489 samples, 0.12%)</title><rect x="1125.7" y="357" width="1.4" height="15.0" fill="rgb(247,74,40)" rx="2" ry="2" />
<text  x="1128.73" y="367.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::dfa::PremultipliedByteClass&lt;S&gt; as aho_corasick::automaton::Automaton&gt;::next_state (691 samples, 0.17%)</title><rect x="1117.0" y="245" width="1.9" height="15.0" fill="rgb(244,157,43)" rx="2" ry="2" />
<text  x="1119.96" y="255.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (19,227 samples, 4.61%)</title><rect x="896.1" y="261" width="54.3" height="15.0" fill="rgb(242,83,13)" rx="2" ry="2" />
<text  x="899.07" y="271.5" >nom::..</text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (8,172 samples, 1.96%)</title><rect x="863.5" y="293" width="23.1" height="15.0" fill="rgb(227,95,12)" rx="2" ry="2" />
<text  x="866.47" y="303.5" >h..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (145 samples, 0.03%)</title><rect x="279.5" y="405" width="0.4" height="15.0" fill="rgb(232,126,2)" rx="2" ry="2" />
<text  x="282.52" y="415.5" ></text>
</g>
<g >
<title>fancy_regex::vm::matches_literal (1,911 samples, 0.46%)</title><rect x="176.0" y="389" width="5.4" height="15.0" fill="rgb(228,109,12)" rx="2" ry="2" />
<text  x="178.97" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (4,254 samples, 1.02%)</title><rect x="429.7" y="149" width="12.0" height="15.0" fill="rgb(235,222,44)" rx="2" ry="2" />
<text  x="432.69" y="159.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (2,231 samples, 0.53%)</title><rect x="1103.2" y="453" width="6.3" height="15.0" fill="rgb(237,4,54)" rx="2" ry="2" />
<text  x="1106.17" y="463.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (214 samples, 0.05%)</title><rect x="411.9" y="229" width="0.6" height="15.0" fill="rgb(252,23,0)" rx="2" ry="2" />
<text  x="414.92" y="239.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify_bucket (1,005 samples, 0.24%)</title><rect x="1154.7" y="133" width="2.8" height="15.0" fill="rgb(227,1,45)" rx="2" ry="2" />
<text  x="1157.68" y="143.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::grammar::ConnPair as core::hash::Hash&gt;::hash (8,852 samples, 2.12%)</title><rect x="817.5" y="325" width="25.0" height="15.0" fill="rgb(248,137,4)" rx="2" ry="2" />
<text  x="820.46" y="335.5" >&lt;..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,304 samples, 0.31%)</title><rect x="322.7" y="389" width="3.7" height="15.0" fill="rgb(246,225,24)" rx="2" ry="2" />
<text  x="325.72" y="399.5" ></text>
</g>
<g >
<title>&lt; (30,318 samples, 7.26%)</title><rect x="385.9" y="325" width="85.7" height="15.0" fill="rgb(211,214,49)" rx="2" ry="2" />
<text  x="388.93" y="335.5" >&lt;</text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match_at (18,679 samples, 4.48%)</title><rect x="195.2" y="373" width="52.8" height="15.0" fill="rgb(247,87,36)" rx="2" ry="2" />
<text  x="198.21" y="383.5" >regex..</text>
</g>
<g >
<title>regex::dfa::Transitions::next (133 samples, 0.03%)</title><rect x="188.8" y="261" width="0.3" height="15.0" fill="rgb(250,69,23)" rx="2" ry="2" />
<text  x="191.76" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (160 samples, 0.04%)</title><rect x="283.4" y="245" width="0.5" height="15.0" fill="rgb(209,171,8)" rx="2" ry="2" />
<text  x="286.43" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (519 samples, 0.12%)</title><rect x="357.5" y="165" width="1.5" height="15.0" fill="rgb(245,2,13)" rx="2" ry="2" />
<text  x="360.50" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,316 samples, 0.32%)</title><rect x="322.7" y="405" width="3.7" height="15.0" fill="rgb(242,189,13)" rx="2" ry="2" />
<text  x="325.69" y="415.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (3,337 samples, 0.80%)</title><rect x="877.1" y="213" width="9.5" height="15.0" fill="rgb(249,121,47)" rx="2" ry="2" />
<text  x="880.14" y="223.5" ></text>
</g>
<g >
<title>_int_malloc (2,990 samples, 0.72%)</title><rect x="432.6" y="101" width="8.5" height="15.0" fill="rgb(250,67,22)" rx="2" ry="2" />
<text  x="435.64" y="111.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (303 samples, 0.07%)</title><rect x="329.3" y="389" width="0.9" height="15.0" fill="rgb(218,109,5)" rx="2" ry="2" />
<text  x="332.31" y="399.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (429 samples, 0.10%)</title><rect x="345.3" y="389" width="1.2" height="15.0" fill="rgb(228,3,54)" rx="2" ry="2" />
<text  x="348.28" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (130 samples, 0.03%)</title><rect x="313.7" y="341" width="0.4" height="15.0" fill="rgb(252,168,38)" rx="2" ry="2" />
<text  x="316.73" y="351.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (30,804 samples, 7.38%)</title><rect x="385.2" y="373" width="87.1" height="15.0" fill="rgb(213,24,25)" rx="2" ry="2" />
<text  x="388.20" y="383.5" >nom::seque..</text>
</g>
<g >
<title>regex::dfa::Byte::is_ascii_word (282 samples, 0.07%)</title><rect x="238.9" y="261" width="0.8" height="15.0" fill="rgb(254,197,19)" rx="2" ry="2" />
<text  x="241.88" y="271.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (259 samples, 0.06%)</title><rect x="256.1" y="421" width="0.7" height="15.0" fill="rgb(215,79,14)" rx="2" ry="2" />
<text  x="259.11" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,721 samples, 0.89%)</title><rect x="414.5" y="181" width="10.6" height="15.0" fill="rgb(211,35,2)" rx="2" ry="2" />
<text  x="417.54" y="191.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (177 samples, 0.04%)</title><rect x="243.2" y="325" width="0.5" height="15.0" fill="rgb(234,103,8)" rx="2" ry="2" />
<text  x="246.22" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (416 samples, 0.10%)</title><rect x="362.3" y="229" width="1.2" height="15.0" fill="rgb(232,19,11)" rx="2" ry="2" />
<text  x="365.31" y="239.5" ></text>
</g>
<g >
<title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (248 samples, 0.06%)</title><rect x="286.1" y="341" width="0.7" height="15.0" fill="rgb(248,31,19)" rx="2" ry="2" />
<text  x="289.07" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (130 samples, 0.03%)</title><rect x="80.5" y="293" width="0.4" height="15.0" fill="rgb(208,208,46)" rx="2" ry="2" />
<text  x="83.55" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (117 samples, 0.03%)</title><rect x="48.5" y="325" width="0.3" height="15.0" fill="rgb(219,20,19)" rx="2" ry="2" />
<text  x="51.46" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (5,492 samples, 1.32%)</title><rect x="1027.1" y="405" width="15.6" height="15.0" fill="rgb(249,54,37)" rx="2" ry="2" />
<text  x="1030.12" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::utf16_string_parser (21,629 samples, 5.18%)</title><rect x="404.0" y="277" width="61.2" height="15.0" fill="rgb(207,68,39)" rx="2" ry="2" />
<text  x="407.01" y="287.5" >sudach..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,703 samples, 0.41%)</title><rect x="248.8" y="213" width="4.8" height="15.0" fill="rgb(224,17,35)" rx="2" ry="2" />
<text  x="251.83" y="223.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::rewrite_gen (720 samples, 0.17%)</title><rect x="271.6" y="437" width="2.0" height="15.0" fill="rgb(237,84,30)" rx="2" ry="2" />
<text  x="274.58" y="447.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,736 samples, 0.42%)</title><rect x="1095.3" y="309" width="4.9" height="15.0" fill="rgb(211,76,14)" rx="2" ry="2" />
<text  x="1098.30" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (196 samples, 0.05%)</title><rect x="1084.1" y="277" width="0.5" height="15.0" fill="rgb(237,194,45)" rx="2" ry="2" />
<text  x="1087.09" y="287.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (584 samples, 0.14%)</title><rect x="555.0" y="437" width="1.6" height="15.0" fill="rgb(229,188,11)" rx="2" ry="2" />
<text  x="557.98" y="447.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (124 samples, 0.03%)</title><rect x="978.0" y="277" width="0.4" height="15.0" fill="rgb(227,180,54)" rx="2" ry="2" />
<text  x="981.04" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (8,852 samples, 2.12%)</title><rect x="817.5" y="341" width="25.0" height="15.0" fill="rgb(250,214,3)" rx="2" ry="2" />
<text  x="820.46" y="351.5" >h..</text>
</g>
<g >
<title>__GI___libc_free (425 samples, 0.10%)</title><rect x="349.5" y="293" width="1.2" height="15.0" fill="rgb(212,187,50)" rx="2" ry="2" />
<text  x="352.49" y="303.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,639 samples, 0.39%)</title><rect x="184.7" y="293" width="4.6" height="15.0" fill="rgb(243,218,52)" rx="2" ry="2" />
<text  x="187.66" y="303.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,860 samples, 0.45%)</title><rect x="1153.4" y="293" width="5.3" height="15.0" fill="rgb(233,99,49)" rx="2" ry="2" />
<text  x="1156.43" y="303.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (2,748 samples, 0.66%)</title><rect x="258.7" y="357" width="7.8" height="15.0" fill="rgb(229,193,10)" rx="2" ry="2" />
<text  x="261.73" y="367.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1,049 samples, 0.25%)</title><rect x="874.2" y="229" width="2.9" height="15.0" fill="rgb(209,213,35)" rx="2" ry="2" />
<text  x="877.17" y="239.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (338 samples, 0.08%)</title><rect x="440.1" y="85" width="1.0" height="15.0" fill="rgb(249,219,42)" rx="2" ry="2" />
<text  x="443.13" y="95.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSync&gt; (215 samples, 0.05%)</title><rect x="243.7" y="325" width="0.6" height="15.0" fill="rgb(243,163,26)" rx="2" ry="2" />
<text  x="246.72" y="335.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (266 samples, 0.06%)</title><rect x="1184.6" y="357" width="0.8" height="15.0" fill="rgb(236,130,19)" rx="2" ry="2" />
<text  x="1187.64" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (119 samples, 0.03%)</title><rect x="402.8" y="181" width="0.4" height="15.0" fill="rgb(246,229,34)" rx="2" ry="2" />
<text  x="405.82" y="191.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (439 samples, 0.11%)</title><rect x="1039.4" y="245" width="1.3" height="15.0" fill="rgb(251,105,50)" rx="2" ry="2" />
<text  x="1042.43" y="255.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (3,217 samples, 0.77%)</title><rect x="961.7" y="325" width="9.1" height="15.0" fill="rgb(245,212,45)" rx="2" ry="2" />
<text  x="964.69" y="335.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::string_number::StringNumber::add (159 samples, 0.04%)</title><rect x="289.4" y="405" width="0.4" height="15.0" fill="rgb(221,47,43)" rx="2" ry="2" />
<text  x="292.40" y="415.5" ></text>
</g>
<g >
<title>unicode_normalization::tables::qc_nfkc (1,476 samples, 0.35%)</title><rect x="1129.0" y="309" width="4.1" height="15.0" fill="rgb(233,64,7)" rx="2" ry="2" />
<text  x="1131.95" y="319.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::is_match (285 samples, 0.07%)</title><rect x="256.0" y="437" width="0.8" height="15.0" fill="rgb(224,171,44)" rx="2" ry="2" />
<text  x="259.03" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (324 samples, 0.08%)</title><rect x="35.2" y="485" width="0.9" height="15.0" fill="rgb(211,150,45)" rx="2" ry="2" />
<text  x="38.16" y="495.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::word_info_parser (36,131 samples, 8.66%)</title><rect x="370.2" y="389" width="102.1" height="15.0" fill="rgb(207,115,10)" rx="2" ry="2" />
<text  x="373.20" y="399.5" >sudachi::dic..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::clear (4,497 samples, 1.08%)</title><rect x="1171.8" y="453" width="12.7" height="15.0" fill="rgb(230,197,15)" rx="2" ry="2" />
<text  x="1174.83" y="463.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3,828 samples, 0.92%)</title><rect x="212.2" y="245" width="10.9" height="15.0" fill="rgb(210,168,40)" rx="2" ry="2" />
<text  x="215.24" y="255.5" ></text>
</g>
<g >
<title>&lt;T as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (653 samples, 0.16%)</title><rect x="486.6" y="437" width="1.8" height="15.0" fill="rgb(222,154,7)" rx="2" ry="2" />
<text  x="489.56" y="447.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (441 samples, 0.11%)</title><rect x="1125.9" y="261" width="1.2" height="15.0" fill="rgb(208,125,37)" rx="2" ry="2" />
<text  x="1128.86" y="271.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::find_at (3,911 samples, 0.94%)</title><rect x="183.1" y="341" width="11.0" height="15.0" fill="rgb(241,158,13)" rx="2" ry="2" />
<text  x="186.07" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::set_len (214 samples, 0.05%)</title><rect x="980.4" y="293" width="0.6" height="15.0" fill="rgb(225,126,25)" rx="2" ry="2" />
<text  x="983.39" y="303.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (26,426 samples, 6.33%)</title><rect x="896.1" y="373" width="74.7" height="15.0" fill="rgb(220,183,21)" rx="2" ry="2" />
<text  x="899.07" y="383.5" >nom::seq..</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (125 samples, 0.03%)</title><rect x="10.1" y="501" width="0.3" height="15.0" fill="rgb(221,224,38)" rx="2" ry="2" />
<text  x="13.05" y="511.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (385 samples, 0.09%)</title><rect x="466.3" y="229" width="1.1" height="15.0" fill="rgb(237,90,2)" rx="2" ry="2" />
<text  x="469.27" y="239.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (239 samples, 0.06%)</title><rect x="241.7" y="277" width="0.7" height="15.0" fill="rgb(216,131,22)" rx="2" ry="2" />
<text  x="244.73" y="287.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (132 samples, 0.03%)</title><rect x="205.5" y="277" width="0.4" height="15.0" fill="rgb(233,155,15)" rx="2" ry="2" />
<text  x="208.53" y="287.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (19,227 samples, 4.61%)</title><rect x="896.1" y="277" width="54.3" height="15.0" fill="rgb(238,43,41)" rx="2" ry="2" />
<text  x="899.07" y="287.5" >&lt;F as..</text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (327 samples, 0.08%)</title><rect x="442.2" y="261" width="0.9" height="15.0" fill="rgb(218,192,26)" rx="2" ry="2" />
<text  x="445.17" y="271.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::replace_slow (5,195 samples, 1.24%)</title><rect x="1119.0" y="373" width="14.7" height="15.0" fill="rgb(220,54,22)" rx="2" ry="2" />
<text  x="1122.00" y="383.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (223 samples, 0.05%)</title><rect x="582.3" y="421" width="0.6" height="15.0" fill="rgb(226,172,40)" rx="2" ry="2" />
<text  x="585.28" y="431.5" ></text>
</g>
<g >
<title>std::sys_common::memchr::memchr (205 samples, 0.05%)</title><rect x="74.3" y="373" width="0.5" height="15.0" fill="rgb(242,212,14)" rx="2" ry="2" />
<text  x="77.26" y="383.5" ></text>
</g>
<g >
<title>core::iter::adapters::process_results (170 samples, 0.04%)</title><rect x="283.4" y="325" width="0.5" height="15.0" fill="rgb(240,100,13)" rx="2" ry="2" />
<text  x="286.40" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,619 samples, 0.39%)</title><rect x="1036.1" y="325" width="4.6" height="15.0" fill="rgb(210,183,12)" rx="2" ry="2" />
<text  x="1039.09" y="335.5" ></text>
</g>
<g >
<title>sudachi (417,359 samples, 100.00%)</title><rect x="10.1" y="517" width="1179.9" height="15.0" fill="rgb(216,123,29)" rx="2" ry="2" />
<text  x="13.05" y="527.5" >sudachi</text>
</g>
<g >
<title>nom::multi::count::{{closure}} (266 samples, 0.06%)</title><rect x="1184.6" y="341" width="0.8" height="15.0" fill="rgb(243,156,10)" rx="2" ry="2" />
<text  x="1187.64" y="351.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,052 samples, 0.49%)</title><rect x="750.5" y="389" width="5.8" height="15.0" fill="rgb(223,199,12)" rx="2" ry="2" />
<text  x="753.46" y="399.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,275 samples, 0.31%)</title><rect x="1148.2" y="293" width="3.6" height="15.0" fill="rgb(224,212,3)" rx="2" ry="2" />
<text  x="1151.15" y="303.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (602 samples, 0.14%)</title><rect x="425.1" y="165" width="1.7" height="15.0" fill="rgb(232,200,18)" rx="2" ry="2" />
<text  x="428.09" y="175.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (633 samples, 0.15%)</title><rect x="263.0" y="277" width="1.8" height="15.0" fill="rgb(221,156,13)" rx="2" ry="2" />
<text  x="266.01" y="287.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::is_katakana_node (419 samples, 0.10%)</title><rect x="272.1" y="421" width="1.2" height="15.0" fill="rgb(246,107,25)" rx="2" ry="2" />
<text  x="275.09" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (518 samples, 0.12%)</title><rect x="275.5" y="245" width="1.5" height="15.0" fill="rgb(242,209,46)" rx="2" ry="2" />
<text  x="278.54" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (137 samples, 0.03%)</title><rect x="1161.6" y="293" width="0.4" height="15.0" fill="rgb(247,202,50)" rx="2" ry="2" />
<text  x="1164.61" y="303.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (875 samples, 0.21%)</title><rect x="959.2" y="325" width="2.5" height="15.0" fill="rgb(236,139,0)" rx="2" ry="2" />
<text  x="962.21" y="335.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,234 samples, 0.54%)</title><rect x="1034.4" y="389" width="6.3" height="15.0" fill="rgb(220,194,19)" rx="2" ry="2" />
<text  x="1037.36" y="399.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3,217 samples, 0.77%)</title><rect x="961.7" y="261" width="9.1" height="15.0" fill="rgb(225,194,27)" rx="2" ry="2" />
<text  x="964.69" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (320 samples, 0.08%)</title><rect x="43.6" y="485" width="0.9" height="15.0" fill="rgb(249,70,7)" rx="2" ry="2" />
<text  x="46.58" y="495.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (250 samples, 0.06%)</title><rect x="1094.3" y="293" width="0.7" height="15.0" fill="rgb(243,69,41)" rx="2" ry="2" />
<text  x="1097.34" y="303.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,751 samples, 0.42%)</title><rect x="1147.7" y="357" width="4.9" height="15.0" fill="rgb(242,46,34)" rx="2" ry="2" />
<text  x="1150.67" y="367.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (164 samples, 0.04%)</title><rect x="411.9" y="213" width="0.5" height="15.0" fill="rgb(227,163,31)" rx="2" ry="2" />
<text  x="414.92" y="223.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (213 samples, 0.05%)</title><rect x="487.8" y="421" width="0.6" height="15.0" fill="rgb(210,55,7)" rx="2" ry="2" />
<text  x="490.80" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (151 samples, 0.04%)</title><rect x="401.3" y="277" width="0.4" height="15.0" fill="rgb(244,83,23)" rx="2" ry="2" />
<text  x="404.29" y="287.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (1,177 samples, 0.28%)</title><rect x="226.4" y="293" width="3.4" height="15.0" fill="rgb(209,182,44)" rx="2" ry="2" />
<text  x="229.43" y="303.5" ></text>
</g>
<g >
<title>fancy_regex::vm::run (54,239 samples, 13.00%)</title><rect x="94.7" y="405" width="153.3" height="15.0" fill="rgb(209,29,26)" rx="2" ry="2" />
<text  x="97.68" y="415.5" >fancy_regex::vm::run</text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (445 samples, 0.11%)</title><rect x="1161.2" y="373" width="1.2" height="15.0" fill="rgb(243,38,41)" rx="2" ry="2" />
<text  x="1164.17" y="383.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (240 samples, 0.06%)</title><rect x="363.6" y="229" width="0.7" height="15.0" fill="rgb(216,220,44)" rx="2" ry="2" />
<text  x="366.62" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::arith::AddAssign&lt;&amp;str&gt;&gt;::add_assign (125 samples, 0.03%)</title><rect x="289.4" y="389" width="0.4" height="15.0" fill="rgb(233,16,52)" rx="2" ry="2" />
<text  x="292.44" y="399.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::edit::resolve_edits (389 samples, 0.09%)</title><rect x="1111.8" y="389" width="1.1" height="15.0" fill="rgb(250,173,9)" rx="2" ry="2" />
<text  x="1114.79" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (24,301 samples, 5.82%)</title><rect x="619.8" y="405" width="68.7" height="15.0" fill="rgb(235,120,27)" rx="2" ry="2" />
<text  x="622.77" y="415.5" >alloc::..</text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (411 samples, 0.10%)</title><rect x="246.9" y="245" width="1.1" height="15.0" fill="rgb(227,85,53)" rx="2" ry="2" />
<text  x="249.86" y="255.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (419 samples, 0.10%)</title><rect x="38.4" y="485" width="1.1" height="15.0" fill="rgb(229,135,39)" rx="2" ry="2" />
<text  x="41.36" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;sudachi::analysis::node::Node&gt;&gt; (364 samples, 0.09%)</title><rect x="580.8" y="437" width="1.0" height="15.0" fill="rgb(211,28,8)" rx="2" ry="2" />
<text  x="583.77" y="447.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::with_editor (16,948 samples, 4.06%)</title><rect x="1111.4" y="421" width="47.9" height="15.0" fill="rgb(227,125,54)" rx="2" ry="2" />
<text  x="1114.41" y="431.5" >suda..</text>
</g>
<g >
<title>alloc::alloc::alloc (6,932 samples, 1.66%)</title><rect x="986.9" y="309" width="19.6" height="15.0" fill="rgb(238,22,7)" rx="2" ry="2" />
<text  x="989.88" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,056 samples, 0.73%)</title><rect x="373.4" y="245" width="8.7" height="15.0" fill="rgb(221,210,36)" rx="2" ry="2" />
<text  x="376.43" y="255.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (655 samples, 0.16%)</title><rect x="1080.6" y="357" width="1.9" height="15.0" fill="rgb(233,115,45)" rx="2" ry="2" />
<text  x="1083.62" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (278 samples, 0.07%)</title><rect x="352.5" y="181" width="0.8" height="15.0" fill="rgb(221,126,33)" rx="2" ry="2" />
<text  x="355.48" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (3,303 samples, 0.79%)</title><rect x="295.9" y="341" width="9.4" height="15.0" fill="rgb(234,138,9)" rx="2" ry="2" />
<text  x="298.91" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (136 samples, 0.03%)</title><rect x="161.8" y="341" width="0.4" height="15.0" fill="rgb(216,23,52)" rx="2" ry="2" />
<text  x="164.79" y="351.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (239 samples, 0.06%)</title><rect x="1042.0" y="277" width="0.7" height="15.0" fill="rgb(250,52,13)" rx="2" ry="2" />
<text  x="1044.97" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (265 samples, 0.06%)</title><rect x="983.8" y="357" width="0.7" height="15.0" fill="rgb(225,10,13)" rx="2" ry="2" />
<text  x="986.79" y="367.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (355 samples, 0.09%)</title><rect x="352.5" y="293" width="1.0" height="15.0" fill="rgb(240,1,9)" rx="2" ry="2" />
<text  x="355.46" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (151 samples, 0.04%)</title><rect x="285.6" y="245" width="0.4" height="15.0" fill="rgb(218,68,20)" rx="2" ry="2" />
<text  x="288.62" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (141 samples, 0.03%)</title><rect x="148.6" y="309" width="0.4" height="15.0" fill="rgb(206,138,2)" rx="2" ry="2" />
<text  x="151.60" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (489 samples, 0.12%)</title><rect x="1125.7" y="293" width="1.4" height="15.0" fill="rgb(228,229,17)" rx="2" ry="2" />
<text  x="1128.73" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,293 samples, 0.31%)</title><rect x="249.2" y="133" width="3.6" height="15.0" fill="rgb(218,159,54)" rx="2" ry="2" />
<text  x="252.18" y="143.5" ></text>
</g>
<g >
<title>_int_free (1,367 samples, 0.33%)</title><rect x="300.8" y="181" width="3.9" height="15.0" fill="rgb(229,29,48)" rx="2" ry="2" />
<text  x="303.85" y="191.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (492 samples, 0.12%)</title><rect x="142.2" y="341" width="1.4" height="15.0" fill="rgb(222,103,30)" rx="2" ry="2" />
<text  x="145.25" y="351.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (867 samples, 0.21%)</title><rect x="947.9" y="197" width="2.5" height="15.0" fill="rgb(252,46,28)" rx="2" ry="2" />
<text  x="950.91" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (559 samples, 0.13%)</title><rect x="53.5" y="485" width="1.6" height="15.0" fill="rgb(209,103,43)" rx="2" ry="2" />
<text  x="56.48" y="495.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::exec_ (679 samples, 0.16%)</title><rect x="259.6" y="277" width="1.9" height="15.0" fill="rgb(237,163,5)" rx="2" ry="2" />
<text  x="262.62" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (480 samples, 0.12%)</title><rect x="349.4" y="325" width="1.3" height="15.0" fill="rgb(238,51,1)" rx="2" ry="2" />
<text  x="352.38" y="335.5" ></text>
</g>
<g >
<title>_int_free (191 samples, 0.05%)</title><rect x="355.1" y="229" width="0.6" height="15.0" fill="rgb(231,160,49)" rx="2" ry="2" />
<text  x="358.15" y="239.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::offset (124 samples, 0.03%)</title><rect x="553.4" y="277" width="0.3" height="15.0" fill="rgb(247,72,45)" rx="2" ry="2" />
<text  x="556.37" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (1,972 samples, 0.47%)</title><rect x="299.3" y="213" width="5.5" height="15.0" fill="rgb(228,135,1)" rx="2" ry="2" />
<text  x="302.26" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (132 samples, 0.03%)</title><rect x="288.3" y="245" width="0.4" height="15.0" fill="rgb(215,134,8)" rx="2" ry="2" />
<text  x="291.30" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (6,935 samples, 1.66%)</title><rect x="986.9" y="325" width="19.6" height="15.0" fill="rgb(220,57,23)" rx="2" ry="2" />
<text  x="989.88" y="335.5" ></text>
</g>
<g >
<title>__libc_write (158 samples, 0.04%)</title><rect x="80.5" y="325" width="0.4" height="15.0" fill="rgb(207,209,43)" rx="2" ry="2" />
<text  x="83.50" y="335.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (421 samples, 0.10%)</title><rect x="127.3" y="341" width="1.2" height="15.0" fill="rgb(235,157,45)" rx="2" ry="2" />
<text  x="130.29" y="351.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (17,126 samples, 4.10%)</title><rect x="902.0" y="245" width="48.4" height="15.0" fill="rgb(245,85,24)" rx="2" ry="2" />
<text  x="905.01" y="255.5" >nom:..</text>
</g>
<g >
<title>_int_free (451 samples, 0.11%)</title><rect x="281.0" y="309" width="1.3" height="15.0" fill="rgb(206,43,45)" rx="2" ry="2" />
<text  x="283.98" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free (565 samples, 0.14%)</title><rect x="49.0" y="485" width="1.6" height="15.0" fill="rgb(250,148,52)" rx="2" ry="2" />
<text  x="51.98" y="495.5" ></text>
</g>
<g >
<title>__libc_read (112 samples, 0.03%)</title><rect x="73.2" y="309" width="0.3" height="15.0" fill="rgb(213,67,2)" rx="2" ry="2" />
<text  x="76.18" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (398 samples, 0.10%)</title><rect x="357.8" y="101" width="1.1" height="15.0" fill="rgb(205,180,17)" rx="2" ry="2" />
<text  x="360.76" y="111.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (124 samples, 0.03%)</title><rect x="1083.4" y="277" width="0.3" height="15.0" fill="rgb(223,116,1)" rx="2" ry="2" />
<text  x="1086.35" y="287.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher (199 samples, 0.05%)</title><rect x="194.5" y="341" width="0.5" height="15.0" fill="rgb(227,1,29)" rx="2" ry="2" />
<text  x="197.47" y="351.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher_str (259 samples, 0.06%)</title><rect x="194.3" y="357" width="0.7" height="15.0" fill="rgb(206,80,33)" rx="2" ry="2" />
<text  x="197.30" y="367.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (867 samples, 0.21%)</title><rect x="947.9" y="165" width="2.5" height="15.0" fill="rgb(242,222,27)" rx="2" ry="2" />
<text  x="950.91" y="175.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array (216 samples, 0.05%)</title><rect x="686.1" y="341" width="0.6" height="15.0" fill="rgb(246,81,52)" rx="2" ry="2" />
<text  x="689.08" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (117 samples, 0.03%)</title><rect x="48.5" y="405" width="0.3" height="15.0" fill="rgb(221,44,16)" rx="2" ry="2" />
<text  x="51.46" y="415.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (159 samples, 0.04%)</title><rect x="48.5" y="437" width="0.4" height="15.0" fill="rgb(246,7,1)" rx="2" ry="2" />
<text  x="51.46" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (687 samples, 0.16%)</title><rect x="359.7" y="133" width="2.0" height="15.0" fill="rgb(251,50,16)" rx="2" ry="2" />
<text  x="362.71" y="143.5" ></text>
</g>
<g >
<title>_int_malloc (1,775 samples, 0.43%)</title><rect x="376.2" y="181" width="5.1" height="15.0" fill="rgb(218,224,18)" rx="2" ry="2" />
<text  x="379.25" y="191.5" ></text>
</g>
<g >
<title>nom::combinator::cond::{{closure}} (840 samples, 0.20%)</title><rect x="465.2" y="293" width="2.3" height="15.0" fill="rgb(229,84,46)" rx="2" ry="2" />
<text  x="468.16" y="303.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state (1,030 samples, 0.25%)</title><rect x="1116.0" y="293" width="2.9" height="15.0" fill="rgb(209,123,43)" rx="2" ry="2" />
<text  x="1119.01" y="303.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::next_state_no_fail (374 samples, 0.09%)</title><rect x="1121.5" y="261" width="1.0" height="15.0" fill="rgb(251,14,14)" rx="2" ry="2" />
<text  x="1124.48" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (117 samples, 0.03%)</title><rect x="203.3" y="309" width="0.4" height="15.0" fill="rgb(230,212,6)" rx="2" ry="2" />
<text  x="206.33" y="319.5" ></text>
</g>
<g >
<title>std::io::BufRead::read_line (1,502 samples, 0.36%)</title><rect x="70.6" y="437" width="4.2" height="15.0" fill="rgb(236,96,50)" rx="2" ry="2" />
<text  x="73.60" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (137 samples, 0.03%)</title><rect x="982.2" y="245" width="0.4" height="15.0" fill="rgb(218,124,11)" rx="2" ry="2" />
<text  x="985.19" y="255.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (8,001 samples, 1.92%)</title><rect x="595.4" y="421" width="22.6" height="15.0" fill="rgb(251,216,0)" rx="2" ry="2" />
<text  x="598.37" y="431.5" >_..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (658 samples, 0.16%)</title><rect x="357.4" y="181" width="1.8" height="15.0" fill="rgb(234,195,17)" rx="2" ry="2" />
<text  x="360.38" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (208 samples, 0.05%)</title><rect x="14.2" y="485" width="0.6" height="15.0" fill="rgb(251,88,9)" rx="2" ry="2" />
<text  x="17.23" y="495.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;V&gt; as core::iter::traits::collect::FromIterator&lt;core::option::Option&lt;A&gt;&gt;&gt;::from_iter (173 samples, 0.04%)</title><rect x="283.4" y="373" width="0.5" height="15.0" fill="rgb(250,144,18)" rx="2" ry="2" />
<text  x="286.40" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1,578 samples, 0.38%)</title><rect x="1095.3" y="197" width="4.5" height="15.0" fill="rgb(239,157,12)" rx="2" ry="2" />
<text  x="1098.30" y="207.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::prefix_at (1,676 samples, 0.40%)</title><rect x="1153.7" y="261" width="4.7" height="15.0" fill="rgb(209,208,51)" rx="2" ry="2" />
<text  x="1156.67" y="271.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (270 samples, 0.06%)</title><rect x="191.9" y="293" width="0.8" height="15.0" fill="rgb(224,186,5)" rx="2" ry="2" />
<text  x="194.91" y="303.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (129 samples, 0.03%)</title><rect x="173.5" y="325" width="0.4" height="15.0" fill="rgb(252,180,14)" rx="2" ry="2" />
<text  x="176.50" y="335.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Pattern::equals (503 samples, 0.12%)</title><rect x="1155.2" y="101" width="1.5" height="15.0" fill="rgb(240,99,33)" rx="2" ry="2" />
<text  x="1158.23" y="111.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt; (203 samples, 0.05%)</title><rect x="290.1" y="453" width="0.6" height="15.0" fill="rgb(240,215,42)" rx="2" ry="2" />
<text  x="293.12" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (153 samples, 0.04%)</title><rect x="267.4" y="453" width="0.4" height="15.0" fill="rgb(220,162,52)" rx="2" ry="2" />
<text  x="270.35" y="463.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,375 samples, 0.81%)</title><rect x="373.4" y="309" width="9.6" height="15.0" fill="rgb(228,137,36)" rx="2" ry="2" />
<text  x="376.43" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2,711 samples, 0.65%)</title><rect x="373.6" y="197" width="7.7" height="15.0" fill="rgb(211,215,48)" rx="2" ry="2" />
<text  x="376.61" y="207.5" ></text>
</g>
<g >
<title>_int_realloc (1,179 samples, 0.28%)</title><rect x="249.4" y="53" width="3.4" height="15.0" fill="rgb(209,27,48)" rx="2" ry="2" />
<text  x="252.45" y="63.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,334 samples, 0.32%)</title><rect x="249.1" y="149" width="3.8" height="15.0" fill="rgb(206,56,33)" rx="2" ry="2" />
<text  x="252.11" y="159.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (258 samples, 0.06%)</title><rect x="92.1" y="373" width="0.7" height="15.0" fill="rgb(208,135,26)" rx="2" ry="2" />
<text  x="95.06" y="383.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (700 samples, 0.17%)</title><rect x="1040.7" y="357" width="2.0" height="15.0" fill="rgb(249,31,26)" rx="2" ry="2" />
<text  x="1043.67" y="367.5" ></text>
</g>
<g >
<title>_int_free (621 samples, 0.15%)</title><rect x="32.5" y="485" width="1.7" height="15.0" fill="rgb(213,97,25)" rx="2" ry="2" />
<text  x="35.46" y="495.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::mecab_oov::MeCabOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (9,608 samples, 2.30%)</title><rect x="1074.6" y="421" width="27.1" height="15.0" fill="rgb(206,128,24)" rx="2" ry="2" />
<text  x="1077.58" y="431.5" >&lt;..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,542 samples, 0.37%)</title><rect x="974.2" y="357" width="4.4" height="15.0" fill="rgb(254,122,23)" rx="2" ry="2" />
<text  x="977.19" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (429 samples, 0.10%)</title><rect x="284.0" y="357" width="1.2" height="15.0" fill="rgb(211,121,47)" rx="2" ry="2" />
<text  x="287.01" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_id_table::WordIdTable::entries (4,487 samples, 1.08%)</title><rect x="536.4" y="277" width="12.7" height="15.0" fill="rgb(211,82,38)" rx="2" ry="2" />
<text  x="539.39" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (402 samples, 0.10%)</title><rect x="362.4" y="165" width="1.1" height="15.0" fill="rgb(213,157,30)" rx="2" ry="2" />
<text  x="365.35" y="175.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (4,435 samples, 1.06%)</title><rect x="443.1" y="261" width="12.5" height="15.0" fill="rgb(232,63,38)" rx="2" ry="2" />
<text  x="446.10" y="271.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (244 samples, 0.06%)</title><rect x="1119.3" y="357" width="0.7" height="15.0" fill="rgb(228,20,51)" rx="2" ry="2" />
<text  x="1122.34" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (22,405 samples, 5.37%)</title><rect x="622.7" y="341" width="63.4" height="15.0" fill="rgb(210,220,36)" rx="2" ry="2" />
<text  x="625.74" y="351.5" >alloc:..</text>
</g>
<g >
<title>alloc::slice::hack::to_vec (3,120 samples, 0.75%)</title><rect x="1086.5" y="325" width="8.8" height="15.0" fill="rgb(215,69,26)" rx="2" ry="2" />
<text  x="1089.48" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (167 samples, 0.04%)</title><rect x="283.4" y="293" width="0.5" height="15.0" fill="rgb(206,190,17)" rx="2" ry="2" />
<text  x="286.41" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (5,045 samples, 1.21%)</title><rect x="350.8" y="389" width="14.3" height="15.0" fill="rgb(247,99,52)" rx="2" ry="2" />
<text  x="353.84" y="399.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find (4,868 samples, 1.17%)</title><rect x="181.4" y="389" width="13.7" height="15.0" fill="rgb(224,37,18)" rx="2" ry="2" />
<text  x="184.37" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (443 samples, 0.11%)</title><rect x="166.9" y="325" width="1.2" height="15.0" fill="rgb(252,65,10)" rx="2" ry="2" />
<text  x="169.89" y="335.5" ></text>
</g>
<g >
<title>regex::pool::THREAD_ID::__getit (411 samples, 0.10%)</title><rect x="246.9" y="261" width="1.1" height="15.0" fill="rgb(245,21,54)" rx="2" ry="2" />
<text  x="249.86" y="271.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (5,063 samples, 1.21%)</title><rect x="130.7" y="389" width="14.4" height="15.0" fill="rgb(240,223,42)" rx="2" ry="2" />
<text  x="133.74" y="399.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (615 samples, 0.15%)</title><rect x="1034.4" y="325" width="1.7" height="15.0" fill="rgb(228,101,40)" rx="2" ry="2" />
<text  x="1037.36" y="335.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (158 samples, 0.04%)</title><rect x="1119.6" y="325" width="0.4" height="15.0" fill="rgb(215,186,34)" rx="2" ry="2" />
<text  x="1122.58" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (249 samples, 0.06%)</title><rect x="1035.3" y="277" width="0.7" height="15.0" fill="rgb(226,187,16)" rx="2" ry="2" />
<text  x="1038.33" y="287.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (608 samples, 0.15%)</title><rect x="688.5" y="389" width="1.7" height="15.0" fill="rgb(210,105,12)" rx="2" ry="2" />
<text  x="691.47" y="399.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::mecab_oov::MeCabOovPlugin::get_oov_node (6,050 samples, 1.45%)</title><rect x="1084.6" y="389" width="17.1" height="15.0" fill="rgb(253,143,49)" rx="2" ry="2" />
<text  x="1087.64" y="399.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::reverse (1,070 samples, 0.26%)</title><rect x="329.2" y="437" width="3.0" height="15.0" fill="rgb(237,36,47)" rx="2" ry="2" />
<text  x="332.22" y="447.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (177 samples, 0.04%)</title><rect x="256.2" y="325" width="0.5" height="15.0" fill="rgb(207,162,10)" rx="2" ry="2" />
<text  x="259.24" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,234 samples, 0.54%)</title><rect x="1034.4" y="357" width="6.3" height="15.0" fill="rgb(249,69,35)" rx="2" ry="2" />
<text  x="1037.36" y="367.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::done (171 samples, 0.04%)</title><rect x="289.4" y="421" width="0.4" height="15.0" fill="rgb(237,191,16)" rx="2" ry="2" />
<text  x="292.36" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (158 samples, 0.04%)</title><rect x="80.5" y="341" width="0.4" height="15.0" fill="rgb(254,119,50)" rx="2" ry="2" />
<text  x="83.50" y="351.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (2,702 samples, 0.65%)</title><rect x="1048.3" y="245" width="7.6" height="15.0" fill="rgb(246,19,14)" rx="2" ry="2" />
<text  x="1051.30" y="255.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_eos_node (417 samples, 0.10%)</title><rect x="582.0" y="437" width="1.2" height="15.0" fill="rgb(213,67,15)" rx="2" ry="2" />
<text  x="584.99" y="447.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::shortest_dfa (4,556 samples, 1.09%)</title><rect x="229.8" y="309" width="12.8" height="15.0" fill="rgb(215,72,15)" rx="2" ry="2" />
<text  x="232.76" y="319.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (867 samples, 0.21%)</title><rect x="947.9" y="213" width="2.5" height="15.0" fill="rgb(251,9,27)" rx="2" ry="2" />
<text  x="950.91" y="223.5" ></text>
</g>
<g >
<title>core::ptr::write (251 samples, 0.06%)</title><rect x="174.3" y="341" width="0.7" height="15.0" fill="rgb(222,168,38)" rx="2" ry="2" />
<text  x="177.31" y="351.5" ></text>
</g>
<g >
<title>unicode_normalization::tables::qc_nfkc (2,844 samples, 0.68%)</title><rect x="1138.1" y="325" width="8.0" height="15.0" fill="rgb(223,1,0)" rx="2" ry="2" />
<text  x="1141.05" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6,941 samples, 1.66%)</title><rect x="986.9" y="357" width="19.6" height="15.0" fill="rgb(219,189,16)" rx="2" ry="2" />
<text  x="989.88" y="367.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (112 samples, 0.03%)</title><rect x="454.4" y="101" width="0.3" height="15.0" fill="rgb(248,13,6)" rx="2" ry="2" />
<text  x="457.41" y="111.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,079 samples, 0.50%)</title><rect x="299.1" y="261" width="5.9" height="15.0" fill="rgb(223,21,9)" rx="2" ry="2" />
<text  x="302.14" y="271.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (357 samples, 0.09%)</title><rect x="1040.7" y="261" width="1.0" height="15.0" fill="rgb(206,78,31)" rx="2" ry="2" />
<text  x="1043.67" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (307 samples, 0.07%)</title><rect x="1065.5" y="421" width="0.9" height="15.0" fill="rgb(232,16,18)" rx="2" ry="2" />
<text  x="1068.54" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt;&gt; (8,546 samples, 2.05%)</title><rect x="290.7" y="437" width="24.2" height="15.0" fill="rgb(212,51,14)" rx="2" ry="2" />
<text  x="293.73" y="447.5" >c..</text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::word_id_to_offset (138 samples, 0.03%)</title><rect x="351.7" y="373" width="0.4" height="15.0" fill="rgb(234,112,4)" rx="2" ry="2" />
<text  x="354.73" y="383.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new_oov (503 samples, 0.12%)</title><rect x="1100.3" y="373" width="1.4" height="15.0" fill="rgb(217,87,48)" rx="2" ry="2" />
<text  x="1103.32" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::decode_dictword_id (657 samples, 0.16%)</title><rect x="1066.5" y="421" width="1.9" height="15.0" fill="rgb(226,75,13)" rx="2" ry="2" />
<text  x="1069.51" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (226 samples, 0.05%)</title><rect x="73.6" y="373" width="0.7" height="15.0" fill="rgb(209,158,51)" rx="2" ry="2" />
<text  x="76.61" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (108 samples, 0.03%)</title><rect x="283.4" y="229" width="0.3" height="15.0" fill="rgb(208,206,22)" rx="2" ry="2" />
<text  x="286.44" y="239.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (523 samples, 0.13%)</title><rect x="444.5" y="213" width="1.5" height="15.0" fill="rgb(248,160,8)" rx="2" ry="2" />
<text  x="447.54" y="223.5" ></text>
</g>
<g >
<title>core::ptr::write (7,262 samples, 1.74%)</title><rect x="690.2" y="405" width="20.5" height="15.0" fill="rgb(247,43,19)" rx="2" ry="2" />
<text  x="693.19" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,935 samples, 1.66%)</title><rect x="986.9" y="341" width="19.6" height="15.0" fill="rgb(246,225,50)" rx="2" ry="2" />
<text  x="989.88" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2,541 samples, 0.61%)</title><rect x="1086.7" y="197" width="7.2" height="15.0" fill="rgb(207,115,12)" rx="2" ry="2" />
<text  x="1089.70" y="207.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (281 samples, 0.07%)</title><rect x="20.6" y="485" width="0.8" height="15.0" fill="rgb(209,148,18)" rx="2" ry="2" />
<text  x="23.64" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3,441 samples, 0.82%)</title><rect x="415.3" y="149" width="9.8" height="15.0" fill="rgb(244,98,46)" rx="2" ry="2" />
<text  x="418.33" y="159.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (489 samples, 0.12%)</title><rect x="1125.7" y="341" width="1.4" height="15.0" fill="rgb(225,148,52)" rx="2" ry="2" />
<text  x="1128.73" y="351.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (508 samples, 0.12%)</title><rect x="401.7" y="261" width="1.5" height="15.0" fill="rgb(215,152,13)" rx="2" ry="2" />
<text  x="404.72" y="271.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (234 samples, 0.06%)</title><rect x="286.1" y="309" width="0.7" height="15.0" fill="rgb(240,198,11)" rx="2" ry="2" />
<text  x="289.11" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (578 samples, 0.14%)</title><rect x="1083.0" y="341" width="1.6" height="15.0" fill="rgb(232,111,12)" rx="2" ry="2" />
<text  x="1086.01" y="351.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::string_number::StringNumber::append (501 samples, 0.12%)</title><rect x="287.9" y="405" width="1.4" height="15.0" fill="rgb(252,179,14)" rx="2" ry="2" />
<text  x="290.91" y="415.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (19,867 samples, 4.76%)</title><rect x="492.9" y="357" width="56.2" height="15.0" fill="rgb(215,72,17)" rx="2" ry="2" />
<text  x="495.91" y="367.5" >&lt;core..</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (357 samples, 0.09%)</title><rect x="1040.7" y="277" width="1.0" height="15.0" fill="rgb(220,65,2)" rx="2" ry="2" />
<text  x="1043.67" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::byte_class (298 samples, 0.07%)</title><rect x="235.2" y="245" width="0.8" height="15.0" fill="rgb(211,172,50)" rx="2" ry="2" />
<text  x="238.19" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (479 samples, 0.11%)</title><rect x="47.6" y="485" width="1.3" height="15.0" fill="rgb(221,187,12)" rx="2" ry="2" />
<text  x="50.56" y="495.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (138 samples, 0.03%)</title><rect x="13.5" y="437" width="0.4" height="15.0" fill="rgb(229,171,22)" rx="2" ry="2" />
<text  x="16.51" y="447.5" ></text>
</g>
<g >
<title>__rdl_alloc (181 samples, 0.04%)</title><rect x="441.1" y="117" width="0.5" height="15.0" fill="rgb(243,80,40)" rx="2" ry="2" />
<text  x="444.09" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,972 samples, 0.47%)</title><rect x="299.3" y="229" width="5.5" height="15.0" fill="rgb(209,131,38)" rx="2" ry="2" />
<text  x="302.26" y="239.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,654 samples, 0.64%)</title><rect x="457.7" y="229" width="7.5" height="15.0" fill="rgb(220,120,19)" rx="2" ry="2" />
<text  x="460.65" y="239.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (296 samples, 0.07%)</title><rect x="1063.8" y="341" width="0.8" height="15.0" fill="rgb(254,10,8)" rx="2" ry="2" />
<text  x="1066.78" y="351.5" ></text>
</g>
<g >
<title>_int_realloc (759 samples, 0.18%)</title><rect x="421.2" y="37" width="2.1" height="15.0" fill="rgb(250,9,47)" rx="2" ry="2" />
<text  x="424.16" y="47.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::TeddySlim2Mask128::find_at (1,423 samples, 0.34%)</title><rect x="1154.3" y="181" width="4.0" height="15.0" fill="rgb(215,46,7)" rx="2" ry="2" />
<text  x="1157.27" y="191.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state_imp (996 samples, 0.24%)</title><rect x="1116.1" y="277" width="2.8" height="15.0" fill="rgb(227,220,24)" rx="2" ry="2" />
<text  x="1119.10" y="287.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (125 samples, 0.03%)</title><rect x="1093.5" y="165" width="0.4" height="15.0" fill="rgb(227,132,22)" rx="2" ry="2" />
<text  x="1096.52" y="175.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21,831 samples, 5.23%)</title><rect x="490.5" y="405" width="61.7" height="15.0" fill="rgb(254,196,48)" rx="2" ry="2" />
<text  x="493.49" y="415.5" >&lt;core:..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (119 samples, 0.03%)</title><rect x="402.8" y="213" width="0.4" height="15.0" fill="rgb(210,206,34)" rx="2" ry="2" />
<text  x="405.82" y="223.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (894 samples, 0.21%)</title><rect x="591.5" y="405" width="2.6" height="15.0" fill="rgb(205,196,8)" rx="2" ry="2" />
<text  x="594.54" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (241 samples, 0.06%)</title><rect x="36.6" y="437" width="0.7" height="15.0" fill="rgb(239,202,48)" rx="2" ry="2" />
<text  x="39.62" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup::{{closure}} (7,704 samples, 1.85%)</title><rect x="527.3" y="293" width="21.8" height="15.0" fill="rgb(223,227,25)" rx="2" ry="2" />
<text  x="530.30" y="303.5" >s..</text>
</g>
<g >
<title>hashbrown::map::make_hash (615 samples, 0.15%)</title><rect x="1034.4" y="341" width="1.7" height="15.0" fill="rgb(229,76,26)" rx="2" ry="2" />
<text  x="1037.36" y="351.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,732 samples, 0.41%)</title><rect x="176.2" y="357" width="4.9" height="15.0" fill="rgb(239,225,0)" rx="2" ry="2" />
<text  x="179.18" y="367.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (161 samples, 0.04%)</title><rect x="661.6" y="261" width="0.4" height="15.0" fill="rgb(225,82,5)" rx="2" ry="2" />
<text  x="664.56" y="271.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (224 samples, 0.05%)</title><rect x="1037.3" y="309" width="0.7" height="15.0" fill="rgb(225,185,15)" rx="2" ry="2" />
<text  x="1040.33" y="319.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (3,217 samples, 0.77%)</title><rect x="961.7" y="277" width="9.1" height="15.0" fill="rgb(231,34,17)" rx="2" ry="2" />
<text  x="964.69" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (700 samples, 0.17%)</title><rect x="1040.7" y="389" width="2.0" height="15.0" fill="rgb(230,126,54)" rx="2" ry="2" />
<text  x="1043.67" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (948 samples, 0.23%)</title><rect x="322.9" y="341" width="2.7" height="15.0" fill="rgb(213,81,21)" rx="2" ry="2" />
<text  x="325.95" y="351.5" ></text>
</g>
<g >
<title>aho_corasick::packed::api::Searcher::find (1,602 samples, 0.38%)</title><rect x="1153.9" y="229" width="4.5" height="15.0" fill="rgb(229,14,11)" rx="2" ry="2" />
<text  x="1156.88" y="239.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match_at (258 samples, 0.06%)</title><rect x="256.1" y="405" width="0.7" height="15.0" fill="rgb(244,194,8)" rx="2" ry="2" />
<text  x="259.11" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (160 samples, 0.04%)</title><rect x="285.6" y="309" width="0.5" height="15.0" fill="rgb(253,98,44)" rx="2" ry="2" />
<text  x="288.62" y="319.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,120 samples, 0.75%)</title><rect x="1086.5" y="341" width="8.8" height="15.0" fill="rgb(205,169,19)" rx="2" ry="2" />
<text  x="1089.48" y="351.5" ></text>
</g>
<g >
<title>_int_realloc (11,489 samples, 2.75%)</title><rect x="628.8" y="261" width="32.5" height="15.0" fill="rgb(220,226,3)" rx="2" ry="2" />
<text  x="631.84" y="271.5" >_i..</text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (328 samples, 0.08%)</title><rect x="76.5" y="437" width="0.9" height="15.0" fill="rgb(241,214,10)" rx="2" ry="2" />
<text  x="79.51" y="447.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (199 samples, 0.05%)</title><rect x="80.4" y="405" width="0.5" height="15.0" fill="rgb(214,185,1)" rx="2" ry="2" />
<text  x="83.38" y="415.5" ></text>
</g>
<g >
<title>_int_free (856 samples, 0.21%)</title><rect x="16.4" y="485" width="2.5" height="15.0" fill="rgb(222,137,52)" rx="2" ry="2" />
<text  x="19.45" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (119 samples, 0.03%)</title><rect x="402.8" y="197" width="0.4" height="15.0" fill="rgb(247,105,41)" rx="2" ry="2" />
<text  x="405.82" y="207.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (188 samples, 0.05%)</title><rect x="279.4" y="421" width="0.5" height="15.0" fill="rgb(244,81,16)" rx="2" ry="2" />
<text  x="282.40" y="431.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (12,790 samples, 3.06%)</title><rect x="626.0" y="293" width="36.1" height="15.0" fill="rgb(226,155,53)" rx="2" ry="2" />
<text  x="628.95" y="303.5" >all..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24,301 samples, 5.82%)</title><rect x="619.8" y="389" width="68.7" height="15.0" fill="rgb(233,22,42)" rx="2" ry="2" />
<text  x="622.77" y="399.5" >alloc::..</text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (130 samples, 0.03%)</title><rect x="205.5" y="229" width="0.4" height="15.0" fill="rgb(207,117,18)" rx="2" ry="2" />
<text  x="208.54" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (112 samples, 0.03%)</title><rect x="467.0" y="101" width="0.3" height="15.0" fill="rgb(247,223,15)" rx="2" ry="2" />
<text  x="469.98" y="111.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (479 samples, 0.11%)</title><rect x="283.9" y="389" width="1.3" height="15.0" fill="rgb(214,9,2)" rx="2" ry="2" />
<text  x="286.89" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (155 samples, 0.04%)</title><rect x="328.7" y="421" width="0.5" height="15.0" fill="rgb(245,35,50)" rx="2" ry="2" />
<text  x="331.75" y="431.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (320 samples, 0.08%)</title><rect x="1064.6" y="341" width="0.9" height="15.0" fill="rgb(245,174,51)" rx="2" ry="2" />
<text  x="1067.61" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (364 samples, 0.09%)</title><rect x="1070.3" y="421" width="1.0" height="15.0" fill="rgb(253,188,29)" rx="2" ry="2" />
<text  x="1073.28" y="431.5" ></text>
</g>
<g >
<title>unicode_normalization::perfect_hash::mph_lookup (476 samples, 0.11%)</title><rect x="1146.1" y="325" width="1.4" height="15.0" fill="rgb(235,184,48)" rx="2" ry="2" />
<text  x="1149.15" y="335.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (158 samples, 0.04%)</title><rect x="403.4" y="229" width="0.5" height="15.0" fill="rgb(217,2,31)" rx="2" ry="2" />
<text  x="406.40" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (109 samples, 0.03%)</title><rect x="267.0" y="453" width="0.3" height="15.0" fill="rgb(242,188,22)" rx="2" ry="2" />
<text  x="270.04" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (472 samples, 0.11%)</title><rect x="1110.1" y="405" width="1.3" height="15.0" fill="rgb(237,133,47)" rx="2" ry="2" />
<text  x="1113.07" y="415.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (22,334 samples, 5.35%)</title><rect x="896.1" y="325" width="63.1" height="15.0" fill="rgb(213,138,52)" rx="2" ry="2" />
<text  x="899.07" y="335.5" >nom::n..</text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (298 samples, 0.07%)</title><rect x="1013.8" y="389" width="0.8" height="15.0" fill="rgb(247,206,33)" rx="2" ry="2" />
<text  x="1016.76" y="399.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_mul (246 samples, 0.06%)</title><rect x="982.6" y="213" width="0.7" height="15.0" fill="rgb(234,31,49)" rx="2" ry="2" />
<text  x="985.57" y="223.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (366 samples, 0.09%)</title><rect x="352.5" y="309" width="1.0" height="15.0" fill="rgb(240,203,14)" rx="2" ry="2" />
<text  x="355.46" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::u32_parser (119 samples, 0.03%)</title><rect x="351.8" y="357" width="0.3" height="15.0" fill="rgb(222,114,49)" rx="2" ry="2" />
<text  x="354.78" y="367.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (411 samples, 0.10%)</title><rect x="246.9" y="277" width="1.1" height="15.0" fill="rgb(221,90,50)" rx="2" ry="2" />
<text  x="249.86" y="287.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (592 samples, 0.14%)</title><rect x="335.3" y="421" width="1.6" height="15.0" fill="rgb(232,63,11)" rx="2" ry="2" />
<text  x="338.27" y="431.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (130 samples, 0.03%)</title><rect x="1152.3" y="309" width="0.3" height="15.0" fill="rgb(218,134,36)" rx="2" ry="2" />
<text  x="1155.25" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free (2,648 samples, 0.63%)</title><rect x="305.8" y="309" width="7.5" height="15.0" fill="rgb(252,134,17)" rx="2" ry="2" />
<text  x="308.78" y="319.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (650 samples, 0.16%)</title><rect x="333.0" y="437" width="1.9" height="15.0" fill="rgb(226,184,37)" rx="2" ry="2" />
<text  x="336.04" y="447.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (5,086 samples, 1.22%)</title><rect x="150.5" y="389" width="14.3" height="15.0" fill="rgb(213,162,18)" rx="2" ry="2" />
<text  x="153.45" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,578 samples, 0.38%)</title><rect x="1095.3" y="229" width="4.5" height="15.0" fill="rgb(240,205,25)" rx="2" ry="2" />
<text  x="1098.30" y="239.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (167 samples, 0.04%)</title><rect x="283.4" y="309" width="0.5" height="15.0" fill="rgb(224,161,4)" rx="2" ry="2" />
<text  x="286.41" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (402 samples, 0.10%)</title><rect x="362.4" y="181" width="1.1" height="15.0" fill="rgb(220,148,33)" rx="2" ry="2" />
<text  x="365.35" y="191.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::ignore_yomigana::IgnoreYomiganaPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (1,888 samples, 0.45%)</title><rect x="1147.5" y="389" width="5.3" height="15.0" fill="rgb(254,175,30)" rx="2" ry="2" />
<text  x="1150.49" y="399.5" ></text>
</g>
<g >
<title>&lt;sudachi::hash::RoMuHash as core::hash::Hasher&gt;::write_u32 (6,440 samples, 1.54%)</title><rect x="824.3" y="309" width="18.2" height="15.0" fill="rgb(226,137,16)" rx="2" ry="2" />
<text  x="827.28" y="319.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (586 samples, 0.14%)</title><rect x="338.2" y="405" width="1.7" height="15.0" fill="rgb(216,128,6)" rx="2" ry="2" />
<text  x="341.22" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (430 samples, 0.10%)</title><rect x="232.7" y="261" width="1.2" height="15.0" fill="rgb(249,204,24)" rx="2" ry="2" />
<text  x="235.67" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (151 samples, 0.04%)</title><rect x="285.6" y="261" width="0.4" height="15.0" fill="rgb(216,43,34)" rx="2" ry="2" />
<text  x="288.62" y="271.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::find_at_no_state (1,037 samples, 0.25%)</title><rect x="1116.0" y="309" width="2.9" height="15.0" fill="rgb(209,88,38)" rx="2" ry="2" />
<text  x="1118.99" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (696 samples, 0.17%)</title><rect x="275.4" y="325" width="1.9" height="15.0" fill="rgb(225,220,18)" rx="2" ry="2" />
<text  x="278.38" y="335.5" ></text>
</g>
<g >
<title>core::ptr::write (482 samples, 0.12%)</title><rect x="985.5" y="373" width="1.3" height="15.0" fill="rgb(227,166,51)" rx="2" ry="2" />
<text  x="988.48" y="383.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (109 samples, 0.03%)</title><rect x="267.0" y="469" width="0.3" height="15.0" fill="rgb(220,61,10)" rx="2" ry="2" />
<text  x="270.04" y="479.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_uppercase (760 samples, 0.18%)</title><rect x="1113.4" y="341" width="2.2" height="15.0" fill="rgb(205,60,7)" rx="2" ry="2" />
<text  x="1116.45" y="351.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (166 samples, 0.04%)</title><rect x="268.1" y="469" width="0.4" height="15.0" fill="rgb(226,183,26)" rx="2" ry="2" />
<text  x="271.08" y="479.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (211 samples, 0.05%)</title><rect x="363.7" y="181" width="0.6" height="15.0" fill="rgb(215,119,27)" rx="2" ry="2" />
<text  x="366.70" y="191.5" ></text>
</g>
<g >
<title>core::str::validations::unwrap_or_0 (115 samples, 0.03%)</title><rect x="1110.9" y="325" width="0.3" height="15.0" fill="rgb(239,45,0)" rx="2" ry="2" />
<text  x="1113.87" y="335.5" ></text>
</g>
<g >
<title>regex::pool::Pool&lt;T&gt;::get (842 samples, 0.20%)</title><rect x="245.6" y="309" width="2.4" height="15.0" fill="rgb(215,103,38)" rx="2" ry="2" />
<text  x="248.64" y="319.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (158 samples, 0.04%)</title><rect x="1099.8" y="245" width="0.4" height="15.0" fill="rgb(206,207,20)" rx="2" ry="2" />
<text  x="1102.76" y="255.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,104 samples, 0.50%)</title><rect x="1153.0" y="357" width="6.0" height="15.0" fill="rgb(218,105,19)" rx="2" ry="2" />
<text  x="1156.04" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (360 samples, 0.09%)</title><rect x="167.0" y="261" width="1.0" height="15.0" fill="rgb(241,81,16)" rx="2" ry="2" />
<text  x="170.00" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (241 samples, 0.06%)</title><rect x="36.6" y="453" width="0.7" height="15.0" fill="rgb(222,203,3)" rx="2" ry="2" />
<text  x="39.62" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (226 samples, 0.05%)</title><rect x="73.6" y="341" width="0.7" height="15.0" fill="rgb(223,55,14)" rx="2" ry="2" />
<text  x="76.61" y="351.5" ></text>
</g>
<g >
<title>malloc_consolidate (4,955 samples, 1.19%)</title><rect x="992.4" y="261" width="14.0" height="15.0" fill="rgb(214,122,43)" rx="2" ry="2" />
<text  x="995.37" y="271.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (383 samples, 0.09%)</title><rect x="1056.3" y="261" width="1.0" height="15.0" fill="rgb(250,196,45)" rx="2" ry="2" />
<text  x="1059.26" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,954 samples, 0.95%)</title><rect x="1172.8" y="309" width="11.1" height="15.0" fill="rgb(208,159,25)" rx="2" ry="2" />
<text  x="1175.76" y="319.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (4,038 samples, 0.97%)</title><rect x="353.7" y="357" width="11.4" height="15.0" fill="rgb(243,75,4)" rx="2" ry="2" />
<text  x="356.68" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::u32_parser (1,688 samples, 0.40%)</title><rect x="365.4" y="373" width="4.8" height="15.0" fill="rgb(239,175,47)" rx="2" ry="2" />
<text  x="368.42" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (136 samples, 0.03%)</title><rect x="161.8" y="357" width="0.4" height="15.0" fill="rgb(236,151,27)" rx="2" ry="2" />
<text  x="164.79" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2,472 samples, 0.59%)</title><rect x="447.7" y="133" width="7.0" height="15.0" fill="rgb(253,175,18)" rx="2" ry="2" />
<text  x="450.75" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,678 samples, 0.88%)</title><rect x="372.8" y="373" width="10.4" height="15.0" fill="rgb(236,211,31)" rx="2" ry="2" />
<text  x="375.84" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::new (266 samples, 0.06%)</title><rect x="1184.6" y="405" width="0.8" height="15.0" fill="rgb(226,65,20)" rx="2" ry="2" />
<text  x="1187.64" y="415.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::captures_read_at (2,818 samples, 0.68%)</title><rect x="258.6" y="389" width="8.0" height="15.0" fill="rgb(213,51,9)" rx="2" ry="2" />
<text  x="261.64" y="399.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (416 samples, 0.10%)</title><rect x="246.8" y="293" width="1.2" height="15.0" fill="rgb(207,65,10)" rx="2" ry="2" />
<text  x="249.84" y="303.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (126 samples, 0.03%)</title><rect x="351.3" y="373" width="0.4" height="15.0" fill="rgb(207,189,45)" rx="2" ry="2" />
<text  x="354.34" y="383.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::standard_find_at (524 samples, 0.13%)</title><rect x="1121.1" y="293" width="1.5" height="15.0" fill="rgb(221,143,29)" rx="2" ry="2" />
<text  x="1124.14" y="303.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (3,453 samples, 0.83%)</title><rect x="354.5" y="277" width="9.8" height="15.0" fill="rgb(238,208,47)" rx="2" ry="2" />
<text  x="357.54" y="287.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i32 (277 samples, 0.07%)</title><rect x="400.2" y="277" width="0.8" height="15.0" fill="rgb(214,141,3)" rx="2" ry="2" />
<text  x="403.17" y="287.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (173 samples, 0.04%)</title><rect x="283.4" y="389" width="0.5" height="15.0" fill="rgb(238,94,16)" rx="2" ry="2" />
<text  x="286.40" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (256 samples, 0.06%)</title><rect x="621.5" y="341" width="0.8" height="15.0" fill="rgb(207,130,11)" rx="2" ry="2" />
<text  x="624.53" y="351.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (136 samples, 0.03%)</title><rect x="130.4" y="357" width="0.3" height="15.0" fill="rgb(230,153,6)" rx="2" ry="2" />
<text  x="133.36" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3,056 samples, 0.73%)</title><rect x="373.4" y="261" width="8.7" height="15.0" fill="rgb(206,14,50)" rx="2" ry="2" />
<text  x="376.43" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (221 samples, 0.05%)</title><rect x="466.7" y="213" width="0.7" height="15.0" fill="rgb(212,180,10)" rx="2" ry="2" />
<text  x="469.73" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (416 samples, 0.10%)</title><rect x="1110.2" y="373" width="1.2" height="15.0" fill="rgb(209,119,3)" rx="2" ry="2" />
<text  x="1113.23" y="383.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (5,758 samples, 1.38%)</title><rect x="273.6" y="453" width="16.3" height="15.0" fill="rgb(208,111,52)" rx="2" ry="2" />
<text  x="276.62" y="463.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (157 samples, 0.04%)</title><rect x="255.0" y="277" width="0.4" height="15.0" fill="rgb(233,114,21)" rx="2" ry="2" />
<text  x="257.97" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (2,622 samples, 0.63%)</title><rect x="136.2" y="373" width="7.4" height="15.0" fill="rgb(234,30,40)" rx="2" ry="2" />
<text  x="139.23" y="383.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,709 samples, 0.89%)</title><rect x="354.1" y="293" width="10.5" height="15.0" fill="rgb(230,167,19)" rx="2" ry="2" />
<text  x="357.08" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (24,142 samples, 5.78%)</title><rect x="620.2" y="373" width="68.3" height="15.0" fill="rgb(249,148,9)" rx="2" ry="2" />
<text  x="623.22" y="383.5" >alloc::..</text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::swap_result (328 samples, 0.08%)</title><rect x="269.1" y="453" width="0.9" height="15.0" fill="rgb(250,153,54)" rx="2" ry="2" />
<text  x="272.11" y="463.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (30,702 samples, 7.36%)</title><rect x="385.2" y="357" width="86.8" height="15.0" fill="rgb(235,42,48)" rx="2" ry="2" />
<text  x="388.25" y="367.5" >&lt;F as nom:..</text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup (283 samples, 0.07%)</title><rect x="552.9" y="309" width="0.8" height="15.0" fill="rgb(207,2,28)" rx="2" ry="2" />
<text  x="555.92" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (125 samples, 0.03%)</title><rect x="289.4" y="341" width="0.4" height="15.0" fill="rgb(220,126,27)" rx="2" ry="2" />
<text  x="292.44" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (155 samples, 0.04%)</title><rect x="288.3" y="309" width="0.4" height="15.0" fill="rgb(229,211,23)" rx="2" ry="2" />
<text  x="291.29" y="319.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (3,386 samples, 0.81%)</title><rect x="183.6" y="325" width="9.6" height="15.0" fill="rgb(231,34,16)" rx="2" ry="2" />
<text  x="186.61" y="335.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,017 samples, 0.24%)</title><rect x="346.5" y="389" width="2.9" height="15.0" fill="rgb(244,190,31)" rx="2" ry="2" />
<text  x="349.49" y="399.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (249 samples, 0.06%)</title><rect x="552.2" y="341" width="0.7" height="15.0" fill="rgb(251,99,29)" rx="2" ry="2" />
<text  x="555.21" y="351.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::captures_from_pos (3,240 samples, 0.78%)</title><rect x="257.4" y="405" width="9.2" height="15.0" fill="rgb(236,65,13)" rx="2" ry="2" />
<text  x="260.45" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (124 samples, 0.03%)</title><rect x="1083.4" y="261" width="0.3" height="15.0" fill="rgb(205,63,1)" rx="2" ry="2" />
<text  x="1086.35" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free (699 samples, 0.17%)</title><rect x="280.3" y="325" width="2.0" height="15.0" fill="rgb(222,158,36)" rx="2" ry="2" />
<text  x="283.28" y="335.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (207 samples, 0.05%)</title><rect x="23.9" y="485" width="0.6" height="15.0" fill="rgb(231,111,41)" rx="2" ry="2" />
<text  x="26.89" y="495.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (2,669 samples, 0.64%)</title><rect x="81.0" y="421" width="7.5" height="15.0" fill="rgb(230,13,23)" rx="2" ry="2" />
<text  x="83.96" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (123 samples, 0.03%)</title><rect x="173.2" y="357" width="0.3" height="15.0" fill="rgb(220,82,16)" rx="2" ry="2" />
<text  x="176.15" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (197 samples, 0.05%)</title><rect x="290.1" y="421" width="0.6" height="15.0" fill="rgb(240,184,12)" rx="2" ry="2" />
<text  x="293.14" y="431.5" ></text>
</g>
<g >
<title>_int_malloc (1,110 samples, 0.27%)</title><rect x="1096.4" y="149" width="3.1" height="15.0" fill="rgb(252,8,45)" rx="2" ry="2" />
<text  x="1099.38" y="159.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;]&gt; (8,241 samples, 1.97%)</title><rect x="290.8" y="405" width="23.3" height="15.0" fill="rgb(229,188,14)" rx="2" ry="2" />
<text  x="293.80" y="415.5" >c..</text>
</g>
<g >
<title>alloc::string::String::push (5,835 samples, 1.40%)</title><rect x="412.9" y="245" width="16.5" height="15.0" fill="rgb(245,175,39)" rx="2" ry="2" />
<text  x="415.93" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (151 samples, 0.04%)</title><rect x="130.3" y="373" width="0.4" height="15.0" fill="rgb(219,81,4)" rx="2" ry="2" />
<text  x="133.32" y="383.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_state (726 samples, 0.17%)</title><rect x="239.7" y="277" width="2.0" height="15.0" fill="rgb(248,16,54)" rx="2" ry="2" />
<text  x="242.68" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,342 samples, 0.32%)</title><rect x="249.1" y="165" width="3.8" height="15.0" fill="rgb(248,87,5)" rx="2" ry="2" />
<text  x="252.11" y="175.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (25,858 samples, 6.20%)</title><rect x="392.1" y="293" width="73.1" height="15.0" fill="rgb(234,136,13)" rx="2" ry="2" />
<text  x="395.05" y="303.5" >core::op..</text>
</g>
<g >
<title>regex::dfa::Fsm::start_state (397 samples, 0.10%)</title><rect x="190.8" y="293" width="1.1" height="15.0" fill="rgb(228,167,47)" rx="2" ry="2" />
<text  x="193.79" y="303.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_mul (117 samples, 0.03%)</title><rect x="686.4" y="309" width="0.3" height="15.0" fill="rgb(215,36,22)" rx="2" ry="2" />
<text  x="689.36" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (108 samples, 0.03%)</title><rect x="283.4" y="213" width="0.3" height="15.0" fill="rgb(248,22,44)" rx="2" ry="2" />
<text  x="286.44" y="223.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (2,513 samples, 0.60%)</title><rect x="248.8" y="389" width="7.1" height="15.0" fill="rgb(239,195,17)" rx="2" ry="2" />
<text  x="251.79" y="399.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (665 samples, 0.16%)</title><rect x="262.9" y="293" width="1.9" height="15.0" fill="rgb(206,125,41)" rx="2" ry="2" />
<text  x="265.92" y="303.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (124 samples, 0.03%)</title><rect x="315.7" y="421" width="0.4" height="15.0" fill="rgb(228,192,37)" rx="2" ry="2" />
<text  x="318.71" y="431.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (259 samples, 0.06%)</title><rect x="1161.3" y="341" width="0.7" height="15.0" fill="rgb(207,118,53)" rx="2" ry="2" />
<text  x="1164.26" y="351.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (2,533 samples, 0.61%)</title><rect x="215.9" y="229" width="7.2" height="15.0" fill="rgb(230,130,9)" rx="2" ry="2" />
<text  x="218.89" y="239.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (125 samples, 0.03%)</title><rect x="194.7" y="293" width="0.3" height="15.0" fill="rgb(217,26,14)" rx="2" ry="2" />
<text  x="197.68" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_param (20,490 samples, 4.91%)</title><rect x="1010.4" y="437" width="58.0" height="15.0" fill="rgb(209,12,10)" rx="2" ry="2" />
<text  x="1013.43" y="447.5" >sudach..</text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::num_codepts (113 samples, 0.03%)</title><rect x="273.3" y="405" width="0.3" height="15.0" fill="rgb(240,28,5)" rx="2" ry="2" />
<text  x="276.30" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::truncate (4,497 samples, 1.08%)</title><rect x="1171.8" y="437" width="12.7" height="15.0" fill="rgb(248,179,0)" rx="2" ry="2" />
<text  x="1174.83" y="447.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (158 samples, 0.04%)</title><rect x="403.4" y="213" width="0.5" height="15.0" fill="rgb(234,183,46)" rx="2" ry="2" />
<text  x="406.40" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (118 samples, 0.03%)</title><rect x="750.1" y="405" width="0.4" height="15.0" fill="rgb(222,34,30)" rx="2" ry="2" />
<text  x="753.12" y="415.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::get (224 samples, 0.05%)</title><rect x="168.1" y="373" width="0.7" height="15.0" fill="rgb(237,162,41)" rx="2" ry="2" />
<text  x="171.15" y="383.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (255 samples, 0.06%)</title><rect x="252.9" y="197" width="0.7" height="15.0" fill="rgb(215,204,45)" rx="2" ry="2" />
<text  x="255.91" y="207.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (483 samples, 0.12%)</title><rect x="349.4" y="373" width="1.3" height="15.0" fill="rgb(243,6,18)" rx="2" ry="2" />
<text  x="352.38" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (123 samples, 0.03%)</title><rect x="289.4" y="325" width="0.4" height="15.0" fill="rgb(233,85,22)" rx="2" ry="2" />
<text  x="292.44" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (128 samples, 0.03%)</title><rect x="1101.4" y="341" width="0.3" height="15.0" fill="rgb(247,86,27)" rx="2" ry="2" />
<text  x="1104.39" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (415 samples, 0.10%)</title><rect x="284.0" y="325" width="1.2" height="15.0" fill="rgb(249,93,22)" rx="2" ry="2" />
<text  x="287.05" y="335.5" ></text>
</g>
<g >
<title>core::ptr::write (471 samples, 0.11%)</title><rect x="162.2" y="357" width="1.3" height="15.0" fill="rgb(211,10,3)" rx="2" ry="2" />
<text  x="165.18" y="367.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (296 samples, 0.07%)</title><rect x="1063.8" y="309" width="0.8" height="15.0" fill="rgb(208,26,5)" rx="2" ry="2" />
<text  x="1066.78" y="319.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (314 samples, 0.08%)</title><rect x="247.1" y="229" width="0.9" height="15.0" fill="rgb(253,205,15)" rx="2" ry="2" />
<text  x="250.13" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (218 samples, 0.05%)</title><rect x="315.4" y="437" width="0.7" height="15.0" fill="rgb(228,208,23)" rx="2" ry="2" />
<text  x="318.44" y="447.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (277 samples, 0.07%)</title><rect x="400.2" y="245" width="0.8" height="15.0" fill="rgb(208,48,52)" rx="2" ry="2" />
<text  x="403.17" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,578 samples, 0.38%)</title><rect x="1095.3" y="245" width="4.5" height="15.0" fill="rgb(208,84,42)" rx="2" ry="2" />
<text  x="1098.30" y="255.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify64 (1,073 samples, 0.26%)</title><rect x="1154.6" y="149" width="3.1" height="15.0" fill="rgb(246,167,4)" rx="2" ry="2" />
<text  x="1157.64" y="159.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (181 samples, 0.04%)</title><rect x="290.2" y="405" width="0.5" height="15.0" fill="rgb(221,75,12)" rx="2" ry="2" />
<text  x="293.18" y="415.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_mul (117 samples, 0.03%)</title><rect x="686.4" y="293" width="0.3" height="15.0" fill="rgb(236,114,23)" rx="2" ry="2" />
<text  x="689.36" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (173 samples, 0.04%)</title><rect x="863.0" y="261" width="0.5" height="15.0" fill="rgb(207,204,18)" rx="2" ry="2" />
<text  x="865.97" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (151 samples, 0.04%)</title><rect x="285.6" y="277" width="0.4" height="15.0" fill="rgb(225,58,38)" rx="2" ry="2" />
<text  x="288.62" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (687 samples, 0.16%)</title><rect x="359.7" y="165" width="2.0" height="15.0" fill="rgb(242,79,39)" rx="2" ry="2" />
<text  x="362.71" y="175.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,619 samples, 0.39%)</title><rect x="1036.1" y="341" width="4.6" height="15.0" fill="rgb(209,42,4)" rx="2" ry="2" />
<text  x="1039.09" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (399 samples, 0.10%)</title><rect x="362.4" y="133" width="1.1" height="15.0" fill="rgb(224,118,33)" rx="2" ry="2" />
<text  x="365.36" y="143.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (163 samples, 0.04%)</title><rect x="36.8" y="421" width="0.5" height="15.0" fill="rgb(234,188,43)" rx="2" ry="2" />
<text  x="39.84" y="431.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (316 samples, 0.08%)</title><rect x="1110.3" y="341" width="0.9" height="15.0" fill="rgb(212,18,1)" rx="2" ry="2" />
<text  x="1113.33" y="351.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,736 samples, 0.42%)</title><rect x="1095.3" y="325" width="4.9" height="15.0" fill="rgb(236,226,24)" rx="2" ry="2" />
<text  x="1098.30" y="335.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::standard_find_at_imp (487 samples, 0.12%)</title><rect x="1121.2" y="277" width="1.4" height="15.0" fill="rgb(237,214,8)" rx="2" ry="2" />
<text  x="1124.24" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (137 samples, 0.03%)</title><rect x="467.0" y="165" width="0.4" height="15.0" fill="rgb(226,171,12)" rx="2" ry="2" />
<text  x="469.96" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (120 samples, 0.03%)</title><rect x="161.8" y="325" width="0.4" height="15.0" fill="rgb(221,25,54)" rx="2" ry="2" />
<text  x="164.84" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (802 samples, 0.19%)</title><rect x="271.3" y="453" width="2.3" height="15.0" fill="rgb(244,28,32)" rx="2" ry="2" />
<text  x="274.35" y="463.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (283 samples, 0.07%)</title><rect x="552.9" y="341" width="0.8" height="15.0" fill="rgb(207,113,0)" rx="2" ry="2" />
<text  x="555.92" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,954 samples, 0.95%)</title><rect x="1172.8" y="341" width="11.1" height="15.0" fill="rgb(211,75,50)" rx="2" ry="2" />
<text  x="1175.76" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (111 samples, 0.03%)</title><rect x="73.2" y="293" width="0.3" height="15.0" fill="rgb(219,185,6)" rx="2" ry="2" />
<text  x="76.18" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (335 samples, 0.08%)</title><rect x="284.1" y="277" width="0.9" height="15.0" fill="rgb(236,95,32)" rx="2" ry="2" />
<text  x="287.05" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::common_prefix_iterator (283 samples, 0.07%)</title><rect x="552.9" y="293" width="0.8" height="15.0" fill="rgb(242,172,22)" rx="2" ry="2" />
<text  x="555.92" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_info (48,059 samples, 11.51%)</title><rect x="337.2" y="437" width="135.9" height="15.0" fill="rgb(222,87,5)" rx="2" ry="2" />
<text  x="340.19" y="447.5" >sudachi::dic::lex..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (215 samples, 0.05%)</title><rect x="1183.9" y="341" width="0.6" height="15.0" fill="rgb(221,192,41)" rx="2" ry="2" />
<text  x="1186.94" y="351.5" ></text>
</g>
<g >
<title>core::ptr::write (693 samples, 0.17%)</title><rect x="1080.5" y="373" width="2.0" height="15.0" fill="rgb(212,199,37)" rx="2" ry="2" />
<text  x="1083.51" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (209 samples, 0.05%)</title><rect x="30.0" y="485" width="0.6" height="15.0" fill="rgb(220,75,6)" rx="2" ry="2" />
<text  x="33.03" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (483 samples, 0.12%)</title><rect x="349.4" y="389" width="1.3" height="15.0" fill="rgb(221,34,23)" rx="2" ry="2" />
<text  x="352.38" y="399.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (199 samples, 0.05%)</title><rect x="400.4" y="197" width="0.5" height="15.0" fill="rgb(241,161,19)" rx="2" ry="2" />
<text  x="403.38" y="207.5" ></text>
</g>
<g >
<title>sudachi::main (394,707 samples, 94.57%)</title><rect x="69.9" y="485" width="1115.9" height="15.0" fill="rgb(242,97,17)" rx="2" ry="2" />
<text  x="72.89" y="495.5" >sudachi::main</text>
</g>
<g >
<title>alloc::alloc::dealloc (181 samples, 0.04%)</title><rect x="290.2" y="389" width="0.5" height="15.0" fill="rgb(220,228,1)" rx="2" ry="2" />
<text  x="293.18" y="399.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (339 samples, 0.08%)</title><rect x="495.7" y="277" width="0.9" height="15.0" fill="rgb(254,175,9)" rx="2" ry="2" />
<text  x="498.68" y="287.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (124 samples, 0.03%)</title><rect x="315.7" y="405" width="0.4" height="15.0" fill="rgb(232,10,53)" rx="2" ry="2" />
<text  x="318.71" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;sudachi::analysis::node::Node&gt;&gt; (517 samples, 0.12%)</title><rect x="285.3" y="389" width="1.5" height="15.0" fill="rgb(205,11,49)" rx="2" ry="2" />
<text  x="288.31" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15,592 samples, 3.74%)</title><rect x="842.5" y="325" width="44.1" height="15.0" fill="rgb(239,11,43)" rx="2" ry="2" />
<text  x="845.49" y="335.5" >hash..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (173 samples, 0.04%)</title><rect x="622.3" y="341" width="0.4" height="15.0" fill="rgb(241,67,22)" rx="2" ry="2" />
<text  x="625.25" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_right_id (2,892 samples, 0.69%)</title><rect x="1057.3" y="405" width="8.2" height="15.0" fill="rgb(211,88,4)" rx="2" ry="2" />
<text  x="1060.34" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (637 samples, 0.15%)</title><rect x="1160.9" y="437" width="1.8" height="15.0" fill="rgb(229,100,50)" rx="2" ry="2" />
<text  x="1163.90" y="447.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::find_from_pos (54,546 samples, 13.07%)</title><rect x="93.8" y="421" width="154.2" height="15.0" fill="rgb(205,57,3)" rx="2" ry="2" />
<text  x="96.82" y="431.5" >fancy_regex::Regex:..</text>
</g>
<g >
<title>regex::re_unicode::Regex::capture_locations (236 samples, 0.06%)</title><rect x="258.0" y="389" width="0.6" height="15.0" fill="rgb(242,158,27)" rx="2" ry="2" />
<text  x="260.97" y="399.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at (3,217 samples, 0.77%)</title><rect x="961.7" y="309" width="9.1" height="15.0" fill="rgb(234,223,5)" rx="2" ry="2" />
<text  x="964.69" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (410 samples, 0.10%)</title><rect x="173.9" y="357" width="1.1" height="15.0" fill="rgb(229,103,41)" rx="2" ry="2" />
<text  x="176.86" y="367.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (112 samples, 0.03%)</title><rect x="186.5" y="261" width="0.3" height="15.0" fill="rgb(213,98,17)" rx="2" ry="2" />
<text  x="189.48" y="271.5" ></text>
</g>
<g >
<title>unicode_normalization::normalize::decompose (215 samples, 0.05%)</title><rect x="1124.9" y="277" width="0.6" height="15.0" fill="rgb(208,223,49)" rx="2" ry="2" />
<text  x="1127.87" y="287.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::shortest_match_at (15,172 samples, 3.64%)</title><rect x="200.3" y="325" width="42.9" height="15.0" fill="rgb(226,28,15)" rx="2" ry="2" />
<text  x="203.33" y="335.5" >&lt;reg..</text>
</g>
<g >
<title>&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (54,609 samples, 13.08%)</title><rect x="93.6" y="437" width="154.4" height="15.0" fill="rgb(209,155,4)" rx="2" ry="2" />
<text  x="96.64" y="447.5" >&lt;fancy_regex::Match..</text>
</g>
<g >
<title>core::str::validations::run_utf8_validation (630 samples, 0.15%)</title><rect x="71.1" y="389" width="1.8" height="15.0" fill="rgb(240,142,30)" rx="2" ry="2" />
<text  x="74.15" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,462 samples, 0.59%)</title><rect x="417.1" y="101" width="7.0" height="15.0" fill="rgb(209,185,11)" rx="2" ry="2" />
<text  x="420.14" y="111.5" ></text>
</g>
<g >
<title>_int_malloc (201 samples, 0.05%)</title><rect x="325.7" y="325" width="0.6" height="15.0" fill="rgb(212,81,26)" rx="2" ry="2" />
<text  x="328.69" y="335.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (133 samples, 0.03%)</title><rect x="359.2" y="197" width="0.4" height="15.0" fill="rgb(252,221,20)" rx="2" ry="2" />
<text  x="362.24" y="207.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::quick_check (2,259 samples, 0.54%)</title><rect x="1127.3" y="341" width="6.4" height="15.0" fill="rgb(236,61,14)" rx="2" ry="2" />
<text  x="1130.30" y="351.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (178 samples, 0.04%)</title><rect x="253.1" y="181" width="0.5" height="15.0" fill="rgb(209,102,53)" rx="2" ry="2" />
<text  x="256.12" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,781 samples, 0.67%)</title><rect x="1086.5" y="261" width="7.8" height="15.0" fill="rgb(239,195,30)" rx="2" ry="2" />
<text  x="1089.48" y="271.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (1,776 samples, 0.43%)</title><rect x="356.7" y="245" width="5.0" height="15.0" fill="rgb(250,90,46)" rx="2" ry="2" />
<text  x="359.66" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (445 samples, 0.11%)</title><rect x="89.3" y="405" width="1.2" height="15.0" fill="rgb(209,17,40)" rx="2" ry="2" />
<text  x="92.28" y="415.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (816 samples, 0.20%)</title><rect x="1113.3" y="373" width="2.3" height="15.0" fill="rgb(238,150,26)" rx="2" ry="2" />
<text  x="1116.29" y="383.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3,217 samples, 0.77%)</title><rect x="961.7" y="245" width="9.1" height="15.0" fill="rgb(232,125,8)" rx="2" ry="2" />
<text  x="964.69" y="255.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (613 samples, 0.15%)</title><rect x="425.1" y="181" width="1.7" height="15.0" fill="rgb(207,130,29)" rx="2" ry="2" />
<text  x="428.06" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (318 samples, 0.08%)</title><rect x="139.8" y="357" width="0.9" height="15.0" fill="rgb(207,120,2)" rx="2" ry="2" />
<text  x="142.77" y="367.5" ></text>
</g>
<g >
<title>&lt;sudachi::output::Simple as sudachi::output::SudachiOutput&lt;T&gt;&gt;::write (6,207 samples, 1.49%)</title><rect x="75.2" y="469" width="17.6" height="15.0" fill="rgb(210,208,53)" rx="2" ry="2" />
<text  x="78.25" y="479.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::repeat (246 samples, 0.06%)</title><rect x="982.6" y="229" width="0.7" height="15.0" fill="rgb(222,58,51)" rx="2" ry="2" />
<text  x="985.57" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (344 samples, 0.08%)</title><rect x="357.9" y="85" width="0.9" height="15.0" fill="rgb(216,128,44)" rx="2" ry="2" />
<text  x="360.87" y="95.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (211 samples, 0.05%)</title><rect x="363.7" y="213" width="0.6" height="15.0" fill="rgb(245,201,2)" rx="2" ry="2" />
<text  x="366.70" y="223.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2,022 samples, 0.48%)</title><rect x="248.8" y="293" width="5.7" height="15.0" fill="rgb(225,185,20)" rx="2" ry="2" />
<text  x="251.81" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2,747 samples, 0.66%)</title><rect x="1086.6" y="213" width="7.7" height="15.0" fill="rgb(209,117,26)" rx="2" ry="2" />
<text  x="1089.57" y="223.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (150 samples, 0.04%)</title><rect x="1157.0" y="101" width="0.4" height="15.0" fill="rgb(247,99,32)" rx="2" ry="2" />
<text  x="1159.96" y="111.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::has_previous_node (176 samples, 0.04%)</title><rect x="583.2" y="437" width="0.5" height="15.0" fill="rgb(254,181,15)" rx="2" ry="2" />
<text  x="586.20" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::pool::PoolGuard&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt; (215 samples, 0.05%)</title><rect x="243.7" y="309" width="0.6" height="15.0" fill="rgb(235,36,8)" rx="2" ry="2" />
<text  x="246.72" y="319.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::stack_push (3,763 samples, 0.90%)</title><rect x="164.8" y="389" width="10.7" height="15.0" fill="rgb(223,109,35)" rx="2" ry="2" />
<text  x="167.83" y="399.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (700 samples, 0.17%)</title><rect x="1040.7" y="373" width="2.0" height="15.0" fill="rgb(215,177,48)" rx="2" ry="2" />
<text  x="1043.67" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (149 samples, 0.04%)</title><rect x="285.6" y="229" width="0.4" height="15.0" fill="rgb(247,98,46)" rx="2" ry="2" />
<text  x="288.62" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (124 samples, 0.03%)</title><rect x="160.0" y="373" width="0.3" height="15.0" fill="rgb(241,74,54)" rx="2" ry="2" />
<text  x="162.98" y="383.5" ></text>
</g>
<g >
<title>__rdl_alloc (211 samples, 0.05%)</title><rect x="684.9" y="325" width="0.6" height="15.0" fill="rgb(245,73,3)" rx="2" ry="2" />
<text  x="687.87" y="335.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::shortest_match_at (209 samples, 0.05%)</title><rect x="256.2" y="373" width="0.6" height="15.0" fill="rgb(220,18,40)" rx="2" ry="2" />
<text  x="259.17" y="383.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (319 samples, 0.08%)</title><rect x="382.1" y="293" width="0.9" height="15.0" fill="rgb(228,206,9)" rx="2" ry="2" />
<text  x="385.07" y="303.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryTypeIter as core::iter::traits::iterator::Iterator&gt;::next (530 samples, 0.13%)</title><rect x="1076.8" y="389" width="1.5" height="15.0" fill="rgb(209,133,51)" rx="2" ry="2" />
<text  x="1079.75" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (460 samples, 0.11%)</title><rect x="166.8" y="373" width="1.3" height="15.0" fill="rgb(221,36,4)" rx="2" ry="2" />
<text  x="169.84" y="383.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (206 samples, 0.05%)</title><rect x="186.2" y="277" width="0.6" height="15.0" fill="rgb(242,177,17)" rx="2" ry="2" />
<text  x="189.22" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (132 samples, 0.03%)</title><rect x="288.3" y="261" width="0.4" height="15.0" fill="rgb(222,221,33)" rx="2" ry="2" />
<text  x="291.30" y="271.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (196 samples, 0.05%)</title><rect x="205.5" y="293" width="0.6" height="15.0" fill="rgb(246,99,39)" rx="2" ry="2" />
<text  x="208.53" y="303.5" ></text>
</g>
<g >
<title>regex::pool::Pool&lt;T&gt;::get (177 samples, 0.04%)</title><rect x="194.5" y="325" width="0.5" height="15.0" fill="rgb(210,187,44)" rx="2" ry="2" />
<text  x="197.53" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (5,415 samples, 1.30%)</title><rect x="645.8" y="245" width="15.3" height="15.0" fill="rgb(208,19,6)" rx="2" ry="2" />
<text  x="648.75" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_empty (173 samples, 0.04%)</title><rect x="863.0" y="277" width="0.5" height="15.0" fill="rgb(237,28,2)" rx="2" ry="2" />
<text  x="865.97" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (129 samples, 0.03%)</title><rect x="173.5" y="357" width="0.4" height="15.0" fill="rgb(227,128,42)" rx="2" ry="2" />
<text  x="176.50" y="367.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (345 samples, 0.08%)</title><rect x="495.7" y="293" width="0.9" height="15.0" fill="rgb(236,151,28)" rx="2" ry="2" />
<text  x="498.67" y="303.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (239 samples, 0.06%)</title><rect x="1042.0" y="293" width="0.7" height="15.0" fill="rgb(211,13,31)" rx="2" ry="2" />
<text  x="1044.97" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (215 samples, 0.05%)</title><rect x="135.4" y="357" width="0.6" height="15.0" fill="rgb(221,184,24)" rx="2" ry="2" />
<text  x="138.37" y="367.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::quick_check (4,838 samples, 1.16%)</title><rect x="1133.8" y="357" width="13.7" height="15.0" fill="rgb(241,207,41)" rx="2" ry="2" />
<text  x="1136.82" y="367.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (1,783 samples, 0.43%)</title><rect x="769.4" y="405" width="5.0" height="15.0" fill="rgb(241,41,48)" rx="2" ry="2" />
<text  x="772.40" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (572 samples, 0.14%)</title><rect x="1083.0" y="325" width="1.6" height="15.0" fill="rgb(245,219,25)" rx="2" ry="2" />
<text  x="1086.03" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,942 samples, 1.66%)</title><rect x="986.9" y="373" width="19.6" height="15.0" fill="rgb(225,39,20)" rx="2" ry="2" />
<text  x="989.88" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (359 samples, 0.09%)</title><rect x="167.0" y="245" width="1.0" height="15.0" fill="rgb(231,133,26)" rx="2" ry="2" />
<text  x="170.01" y="255.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (318 samples, 0.08%)</title><rect x="329.3" y="405" width="0.9" height="15.0" fill="rgb(239,128,44)" rx="2" ry="2" />
<text  x="332.27" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (114 samples, 0.03%)</title><rect x="29.7" y="485" width="0.3" height="15.0" fill="rgb(227,128,45)" rx="2" ry="2" />
<text  x="32.71" y="495.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (2,198 samples, 0.53%)</title><rect x="230.8" y="277" width="6.2" height="15.0" fill="rgb(247,99,47)" rx="2" ry="2" />
<text  x="233.83" y="287.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (403 samples, 0.10%)</title><rect x="25.3" y="485" width="1.1" height="15.0" fill="rgb(212,106,39)" rx="2" ry="2" />
<text  x="28.25" y="495.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (22,701 samples, 5.44%)</title><rect x="489.5" y="421" width="64.2" height="15.0" fill="rgb(233,19,23)" rx="2" ry="2" />
<text  x="492.54" y="431.5" >&lt;core::..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,391 samples, 0.33%)</title><rect x="249.0" y="181" width="3.9" height="15.0" fill="rgb(213,95,29)" rx="2" ry="2" />
<text  x="251.97" y="191.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (155 samples, 0.04%)</title><rect x="21.9" y="485" width="0.4" height="15.0" fill="rgb(228,50,51)" rx="2" ry="2" />
<text  x="24.88" y="495.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (150 samples, 0.04%)</title><rect x="1157.0" y="69" width="0.4" height="15.0" fill="rgb(210,223,2)" rx="2" ry="2" />
<text  x="1159.96" y="79.5" ></text>
</g>
<g >
<title>_int_malloc (132 samples, 0.03%)</title><rect x="276.6" y="229" width="0.4" height="15.0" fill="rgb(224,111,28)" rx="2" ry="2" />
<text  x="279.63" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (118 samples, 0.03%)</title><rect x="161.8" y="309" width="0.4" height="15.0" fill="rgb(213,5,30)" rx="2" ry="2" />
<text  x="164.84" y="319.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (825 samples, 0.20%)</title><rect x="186.8" y="277" width="2.3" height="15.0" fill="rgb(211,107,19)" rx="2" ry="2" />
<text  x="189.80" y="287.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (397 samples, 0.10%)</title><rect x="204.4" y="293" width="1.1" height="15.0" fill="rgb(221,117,42)" rx="2" ry="2" />
<text  x="207.41" y="303.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (117 samples, 0.03%)</title><rect x="1110.5" y="293" width="0.4" height="15.0" fill="rgb(246,26,39)" rx="2" ry="2" />
<text  x="1113.54" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (370 samples, 0.09%)</title><rect x="352.4" y="341" width="1.1" height="15.0" fill="rgb(218,222,44)" rx="2" ry="2" />
<text  x="355.44" y="351.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,196 samples, 0.77%)</title><rect x="1048.3" y="357" width="9.0" height="15.0" fill="rgb(205,104,53)" rx="2" ry="2" />
<text  x="1051.30" y="367.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,513 samples, 0.60%)</title><rect x="248.8" y="357" width="7.1" height="15.0" fill="rgb(214,115,11)" rx="2" ry="2" />
<text  x="251.79" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (280 samples, 0.07%)</title><rect x="314.1" y="421" width="0.8" height="15.0" fill="rgb(228,124,33)" rx="2" ry="2" />
<text  x="317.10" y="431.5" ></text>
</g>
<g >
<title>_int_malloc (199 samples, 0.05%)</title><rect x="352.7" y="165" width="0.6" height="15.0" fill="rgb(206,224,53)" rx="2" ry="2" />
<text  x="355.70" y="175.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (12,130 samples, 2.91%)</title><rect x="1113.2" y="389" width="34.3" height="15.0" fill="rgb(218,90,5)" rx="2" ry="2" />
<text  x="1116.20" y="399.5" >&lt;s..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (111 samples, 0.03%)</title><rect x="750.1" y="389" width="0.3" height="15.0" fill="rgb(237,53,3)" rx="2" ry="2" />
<text  x="753.12" y="399.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_flags (529 samples, 0.13%)</title><rect x="189.3" y="293" width="1.5" height="15.0" fill="rgb(216,16,33)" rx="2" ry="2" />
<text  x="192.30" y="303.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (852 samples, 0.20%)</title><rect x="658.7" y="229" width="2.4" height="15.0" fill="rgb(208,202,35)" rx="2" ry="2" />
<text  x="661.66" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (836 samples, 0.20%)</title><rect x="981.4" y="277" width="2.4" height="15.0" fill="rgb(216,17,34)" rx="2" ry="2" />
<text  x="984.42" y="287.5" ></text>
</g>
<g >
<title>malloc_consolidate (144 samples, 0.03%)</title><rect x="68.1" y="485" width="0.4" height="15.0" fill="rgb(249,229,25)" rx="2" ry="2" />
<text  x="71.14" y="495.5" ></text>
</g>
<g >
<title>_int_free (242 samples, 0.06%)</title><rect x="350.0" y="277" width="0.7" height="15.0" fill="rgb(240,127,44)" rx="2" ry="2" />
<text  x="353.01" y="287.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (167 samples, 0.04%)</title><rect x="1083.2" y="293" width="0.5" height="15.0" fill="rgb(207,102,29)" rx="2" ry="2" />
<text  x="1086.23" y="303.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::repeat (216 samples, 0.05%)</title><rect x="686.1" y="325" width="0.6" height="15.0" fill="rgb(234,92,25)" rx="2" ry="2" />
<text  x="689.08" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::simple_oov::SimpleOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (383 samples, 0.09%)</title><rect x="1101.7" y="421" width="1.1" height="15.0" fill="rgb(209,107,27)" rx="2" ry="2" />
<text  x="1104.75" y="431.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::lexicon::trie::TrieEntryIter as core::iter::traits::iterator::Iterator&gt;::next (12,163 samples, 2.91%)</title><rect x="492.9" y="325" width="34.4" height="15.0" fill="rgb(215,151,32)" rx="2" ry="2" />
<text  x="495.91" y="335.5" >&lt;s..</text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_dictionary_id (323 samples, 0.08%)</title><rect x="1066.5" y="405" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1069.51" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,943 samples, 0.71%)</title><rect x="447.3" y="197" width="8.3" height="15.0" fill="rgb(232,85,25)" rx="2" ry="2" />
<text  x="450.28" y="207.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (133 samples, 0.03%)</title><rect x="1093.9" y="181" width="0.4" height="15.0" fill="rgb(231,149,21)" rx="2" ry="2" />
<text  x="1096.88" y="191.5" ></text>
</g>
</g>
</svg>
