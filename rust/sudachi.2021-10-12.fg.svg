<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (247 samples, 0.06%)</title><rect x="1040.8" y="245" width="0.7" height="15.0" fill="rgb(242,7,14)" rx="2" ry="2" />
<text  x="1043.77" y="255.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,704 samples, 0.87%)</title><rect x="875.1" y="293" width="10.2" height="15.0" fill="rgb(240,194,1)" rx="2" ry="2" />
<text  x="878.10" y="303.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (174 samples, 0.04%)</title><rect x="193.4" y="245" width="0.5" height="15.0" fill="rgb(216,30,41)" rx="2" ry="2" />
<text  x="196.38" y="255.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (2,067 samples, 0.48%)</title><rect x="896.1" y="229" width="5.7" height="15.0" fill="rgb(242,206,41)" rx="2" ry="2" />
<text  x="899.13" y="239.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (228 samples, 0.05%)</title><rect x="177.1" y="245" width="0.6" height="15.0" fill="rgb(224,224,17)" rx="2" ry="2" />
<text  x="180.11" y="255.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match (232 samples, 0.05%)</title><rect x="142.8" y="325" width="0.6" height="15.0" fill="rgb(219,25,26)" rx="2" ry="2" />
<text  x="145.80" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (117 samples, 0.03%)</title><rect x="216.9" y="341" width="0.3" height="15.0" fill="rgb(233,68,18)" rx="2" ry="2" />
<text  x="219.88" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (272 samples, 0.06%)</title><rect x="282.2" y="213" width="0.8" height="15.0" fill="rgb(214,49,46)" rx="2" ry="2" />
<text  x="285.22" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (496 samples, 0.12%)</title><rect x="1059.9" y="389" width="1.3" height="15.0" fill="rgb(206,211,10)" rx="2" ry="2" />
<text  x="1062.86" y="399.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (115 samples, 0.03%)</title><rect x="1135.6" y="85" width="0.3" height="15.0" fill="rgb(228,28,35)" rx="2" ry="2" />
<text  x="1138.63" y="95.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::standard_find_at (404 samples, 0.09%)</title><rect x="1107.8" y="293" width="1.1" height="15.0" fill="rgb(246,187,53)" rx="2" ry="2" />
<text  x="1110.81" y="303.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::lexicon::word_id_table::WordIdIter as core::iter::traits::iterator::Iterator&gt;::next (702 samples, 0.16%)</title><rect x="421.1" y="357" width="2.0" height="15.0" fill="rgb(217,165,49)" rx="2" ry="2" />
<text  x="424.11" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,094 samples, 1.19%)</title><rect x="982.1" y="373" width="14.0" height="15.0" fill="rgb(206,47,42)" rx="2" ry="2" />
<text  x="985.08" y="383.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (944 samples, 0.22%)</title><rect x="1111.2" y="309" width="2.6" height="15.0" fill="rgb(224,223,46)" rx="2" ry="2" />
<text  x="1114.17" y="319.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (247 samples, 0.06%)</title><rect x="1040.8" y="213" width="0.7" height="15.0" fill="rgb(233,220,51)" rx="2" ry="2" />
<text  x="1043.77" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (1,467 samples, 0.34%)</title><rect x="322.2" y="53" width="4.0" height="15.0" fill="rgb(215,82,20)" rx="2" ry="2" />
<text  x="325.19" y="63.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (224 samples, 0.05%)</title><rect x="108.9" y="357" width="0.6" height="15.0" fill="rgb(210,135,29)" rx="2" ry="2" />
<text  x="111.90" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (177 samples, 0.04%)</title><rect x="1073.0" y="341" width="0.5" height="15.0" fill="rgb(252,65,40)" rx="2" ry="2" />
<text  x="1075.99" y="351.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i32 (184 samples, 0.04%)</title><rect x="309.9" y="277" width="0.5" height="15.0" fill="rgb(237,225,14)" rx="2" ry="2" />
<text  x="312.88" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::LoadedDictionary::from_system_dictionary (217 samples, 0.05%)</title><rect x="1154.3" y="453" width="0.6" height="15.0" fill="rgb(232,6,39)" rx="2" ry="2" />
<text  x="1157.29" y="463.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::backtrack (409 samples, 0.10%)</title><rect x="197.9" y="261" width="1.1" height="15.0" fill="rgb(220,129,21)" rx="2" ry="2" />
<text  x="200.89" y="271.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (488 samples, 0.11%)</title><rect x="261.1" y="421" width="1.3" height="15.0" fill="rgb(254,60,7)" rx="2" ry="2" />
<text  x="264.09" y="431.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (176 samples, 0.04%)</title><rect x="183.1" y="277" width="0.5" height="15.0" fill="rgb(244,36,21)" rx="2" ry="2" />
<text  x="186.11" y="287.5" ></text>
</g>
<g >
<title>core::ptr::write (545 samples, 0.13%)</title><rect x="254.9" y="421" width="1.5" height="15.0" fill="rgb(249,41,10)" rx="2" ry="2" />
<text  x="257.92" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (613 samples, 0.14%)</title><rect x="225.5" y="165" width="1.7" height="15.0" fill="rgb(235,78,17)" rx="2" ry="2" />
<text  x="228.50" y="175.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::push (1,484 samples, 0.35%)</title><rect x="110.1" y="389" width="4.1" height="15.0" fill="rgb(239,216,26)" rx="2" ry="2" />
<text  x="113.12" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1,796 samples, 0.42%)</title><rect x="891.2" y="261" width="4.9" height="15.0" fill="rgb(245,100,53)" rx="2" ry="2" />
<text  x="894.17" y="271.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (2,540 samples, 0.59%)</title><rect x="1048.0" y="373" width="7.0" height="15.0" fill="rgb(237,211,7)" rx="2" ry="2" />
<text  x="1051.01" y="383.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (220 samples, 0.05%)</title><rect x="1100.1" y="341" width="0.6" height="15.0" fill="rgb(227,221,0)" rx="2" ry="2" />
<text  x="1103.13" y="351.5" ></text>
</g>
<g >
<title>nom::sequence::tuple::{{closure}} (3,064 samples, 0.72%)</title><rect x="275.6" y="325" width="8.5" height="15.0" fill="rgb(219,155,27)" rx="2" ry="2" />
<text  x="278.63" y="335.5" ></text>
</g>
<g >
<title>__rdl_alloc (168 samples, 0.04%)</title><rect x="523.4" y="325" width="0.4" height="15.0" fill="rgb(223,218,30)" rx="2" ry="2" />
<text  x="526.36" y="335.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (627 samples, 0.15%)</title><rect x="1165.8" y="373" width="1.8" height="15.0" fill="rgb(230,202,30)" rx="2" ry="2" />
<text  x="1168.84" y="383.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (173 samples, 0.04%)</title><rect x="256.5" y="437" width="0.4" height="15.0" fill="rgb(211,33,53)" rx="2" ry="2" />
<text  x="259.45" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,728 samples, 0.87%)</title><rect x="1019.0" y="293" width="10.3" height="15.0" fill="rgb(227,219,35)" rx="2" ry="2" />
<text  x="1022.03" y="303.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (799 samples, 0.19%)</title><rect x="1129.4" y="277" width="2.2" height="15.0" fill="rgb(224,102,10)" rx="2" ry="2" />
<text  x="1132.38" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (556 samples, 0.13%)</title><rect x="278.5" y="197" width="1.5" height="15.0" fill="rgb(243,82,27)" rx="2" ry="2" />
<text  x="281.46" y="207.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (121 samples, 0.03%)</title><rect x="144.0" y="293" width="0.3" height="15.0" fill="rgb(242,92,44)" rx="2" ry="2" />
<text  x="146.97" y="303.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (136 samples, 0.03%)</title><rect x="215.3" y="357" width="0.4" height="15.0" fill="rgb(251,175,5)" rx="2" ry="2" />
<text  x="218.34" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (262 samples, 0.06%)</title><rect x="282.2" y="149" width="0.8" height="15.0" fill="rgb(227,156,21)" rx="2" ry="2" />
<text  x="285.24" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (937 samples, 0.22%)</title><rect x="252.2" y="373" width="2.6" height="15.0" fill="rgb(236,70,18)" rx="2" ry="2" />
<text  x="255.25" y="383.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,092 samples, 4.23%)</title><rect x="375.5" y="437" width="49.9" height="15.0" fill="rgb(246,184,37)" rx="2" ry="2" />
<text  x="378.49" y="447.5" >&lt;core..</text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (162 samples, 0.04%)</title><rect x="339.2" y="101" width="0.4" height="15.0" fill="rgb(210,188,34)" rx="2" ry="2" />
<text  x="342.17" y="111.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (21,221 samples, 4.96%)</title><rect x="908.4" y="309" width="58.5" height="15.0" fill="rgb(252,16,22)" rx="2" ry="2" />
<text  x="911.39" y="319.5" >&lt;F as ..</text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5,979 samples, 1.40%)</title><rect x="885.3" y="277" width="16.5" height="15.0" fill="rgb(225,94,12)" rx="2" ry="2" />
<text  x="888.34" y="287.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::append (405 samples, 0.09%)</title><rect x="218.2" y="421" width="1.1" height="15.0" fill="rgb(248,107,17)" rx="2" ry="2" />
<text  x="221.17" y="431.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (268 samples, 0.06%)</title><rect x="1042.8" y="341" width="0.7" height="15.0" fill="rgb(243,52,33)" rx="2" ry="2" />
<text  x="1045.78" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (137 samples, 0.03%)</title><rect x="1040.4" y="261" width="0.4" height="15.0" fill="rgb(250,160,13)" rx="2" ry="2" />
<text  x="1043.39" y="271.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search_by (761 samples, 0.18%)</title><rect x="1141.6" y="405" width="2.1" height="15.0" fill="rgb(237,173,4)" rx="2" ry="2" />
<text  x="1144.55" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (498 samples, 0.12%)</title><rect x="280.4" y="197" width="1.3" height="15.0" fill="rgb(239,76,43)" rx="2" ry="2" />
<text  x="283.35" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (622 samples, 0.15%)</title><rect x="209.8" y="405" width="1.8" height="15.0" fill="rgb(221,22,51)" rx="2" ry="2" />
<text  x="212.84" y="415.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::ok::{{closure}} (1,688 samples, 0.39%)</title><rect x="189.3" y="309" width="4.7" height="15.0" fill="rgb(218,166,15)" rx="2" ry="2" />
<text  x="192.29" y="319.5" ></text>
</g>
<g >
<title>core::fmt::Arguments::new_v1 (113 samples, 0.03%)</title><rect x="1168.3" y="453" width="0.4" height="15.0" fill="rgb(233,11,15)" rx="2" ry="2" />
<text  x="1171.35" y="463.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (261 samples, 0.06%)</title><rect x="357.7" y="229" width="0.7" height="15.0" fill="rgb(226,149,41)" rx="2" ry="2" />
<text  x="360.68" y="239.5" ></text>
</g>
<g >
<title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (150 samples, 0.04%)</title><rect x="217.2" y="341" width="0.4" height="15.0" fill="rgb(208,71,28)" rx="2" ry="2" />
<text  x="220.20" y="351.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (119 samples, 0.03%)</title><rect x="428.2" y="405" width="0.3" height="15.0" fill="rgb(249,42,1)" rx="2" ry="2" />
<text  x="431.22" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (168 samples, 0.04%)</title><rect x="1189.1" y="501" width="0.5" height="15.0" fill="rgb(241,22,8)" rx="2" ry="2" />
<text  x="1192.14" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30,353 samples, 7.10%)</title><rect x="786.0" y="261" width="83.7" height="15.0" fill="rgb(244,28,36)" rx="2" ry="2" />
<text  x="789.00" y="271.5" >&lt;std::col..</text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,142 samples, 0.50%)</title><rect x="351.0" y="229" width="5.9" height="15.0" fill="rgb(252,138,15)" rx="2" ry="2" />
<text  x="354.03" y="239.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_flags (401 samples, 0.09%)</title><rect x="140.1" y="293" width="1.1" height="15.0" fill="rgb(249,49,51)" rx="2" ry="2" />
<text  x="143.09" y="303.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (200 samples, 0.05%)</title><rect x="95.2" y="373" width="0.6" height="15.0" fill="rgb(236,227,22)" rx="2" ry="2" />
<text  x="98.22" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2,295 samples, 0.54%)</title><rect x="290.2" y="213" width="6.3" height="15.0" fill="rgb(215,229,18)" rx="2" ry="2" />
<text  x="293.19" y="223.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (342 samples, 0.08%)</title><rect x="1079.6" y="261" width="0.9" height="15.0" fill="rgb(229,194,46)" rx="2" ry="2" />
<text  x="1082.57" y="271.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (4,950 samples, 1.16%)</title><rect x="528.1" y="389" width="13.7" height="15.0" fill="rgb(222,192,34)" rx="2" ry="2" />
<text  x="531.13" y="399.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3,670 samples, 0.86%)</title><rect x="159.1" y="245" width="10.1" height="15.0" fill="rgb(205,74,0)" rx="2" ry="2" />
<text  x="162.06" y="255.5" ></text>
</g>
<g >
<title>&lt;regex::re_unicode::Matches as core::iter::traits::iterator::Iterator&gt;::next (1,550 samples, 0.36%)</title><rect x="1132.7" y="373" width="4.3" height="15.0" fill="rgb(228,87,41)" rx="2" ry="2" />
<text  x="1135.68" y="383.5" ></text>
</g>
<g >
<title>core::ptr::write (245 samples, 0.06%)</title><rect x="130.6" y="341" width="0.7" height="15.0" fill="rgb(253,26,35)" rx="2" ry="2" />
<text  x="133.62" y="351.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::to_orig (124 samples, 0.03%)</title><rect x="205.7" y="421" width="0.3" height="15.0" fill="rgb(229,206,25)" rx="2" ry="2" />
<text  x="208.65" y="431.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (456 samples, 0.11%)</title><rect x="187.5" y="213" width="1.2" height="15.0" fill="rgb(222,42,36)" rx="2" ry="2" />
<text  x="190.46" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (135 samples, 0.03%)</title><rect x="979.5" y="261" width="0.4" height="15.0" fill="rgb(239,224,13)" rx="2" ry="2" />
<text  x="982.48" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (396 samples, 0.09%)</title><rect x="1112.7" y="277" width="1.1" height="15.0" fill="rgb(251,107,7)" rx="2" ry="2" />
<text  x="1115.68" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (262 samples, 0.06%)</title><rect x="282.2" y="165" width="0.8" height="15.0" fill="rgb(244,6,10)" rx="2" ry="2" />
<text  x="285.24" y="175.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,215 samples, 0.28%)</title><rect x="1089.6" y="309" width="3.4" height="15.0" fill="rgb(248,208,20)" rx="2" ry="2" />
<text  x="1092.62" y="319.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::exec_backtrack (621 samples, 0.15%)</title><rect x="197.6" y="309" width="1.7" height="15.0" fill="rgb(253,60,43)" rx="2" ry="2" />
<text  x="200.61" y="319.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (124 samples, 0.03%)</title><rect x="1185.2" y="389" width="0.3" height="15.0" fill="rgb(248,68,49)" rx="2" ry="2" />
<text  x="1188.18" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,798 samples, 0.65%)</title><rect x="276.0" y="293" width="7.7" height="15.0" fill="rgb(237,80,50)" rx="2" ry="2" />
<text  x="279.01" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,387 samples, 0.56%)</title><rect x="1083.0" y="373" width="6.6" height="15.0" fill="rgb(214,165,52)" rx="2" ry="2" />
<text  x="1086.04" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2,104 samples, 0.49%)</title><rect x="343.9" y="149" width="5.8" height="15.0" fill="rgb(244,95,37)" rx="2" ry="2" />
<text  x="346.86" y="159.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::quick_check (3,702 samples, 0.87%)</title><rect x="1118.6" y="357" width="10.2" height="15.0" fill="rgb(214,45,26)" rx="2" ry="2" />
<text  x="1121.59" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,010 samples, 0.24%)</title><rect x="973.4" y="405" width="2.7" height="15.0" fill="rgb(219,23,11)" rx="2" ry="2" />
<text  x="976.36" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (245 samples, 0.06%)</title><rect x="1001.2" y="421" width="0.6" height="15.0" fill="rgb(235,70,13)" rx="2" ry="2" />
<text  x="1004.16" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (653 samples, 0.15%)</title><rect x="1039.7" y="277" width="1.8" height="15.0" fill="rgb(207,100,14)" rx="2" ry="2" />
<text  x="1042.65" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (130 samples, 0.03%)</title><rect x="230.4" y="405" width="0.4" height="15.0" fill="rgb(250,118,26)" rx="2" ry="2" />
<text  x="233.40" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;sudachi::analysis::node::Node&gt;&gt; (333 samples, 0.08%)</title><rect x="216.7" y="389" width="0.9" height="15.0" fill="rgb(242,106,2)" rx="2" ry="2" />
<text  x="219.70" y="399.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (254 samples, 0.06%)</title><rect x="379.8" y="293" width="0.7" height="15.0" fill="rgb(225,118,35)" rx="2" ry="2" />
<text  x="382.77" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (642 samples, 0.15%)</title><rect x="1074.1" y="389" width="1.8" height="15.0" fill="rgb(218,25,23)" rx="2" ry="2" />
<text  x="1077.11" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (28,771 samples, 6.73%)</title><rect x="663.1" y="309" width="79.3" height="15.0" fill="rgb(253,181,36)" rx="2" ry="2" />
<text  x="666.08" y="319.5" >&lt;core::ha..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sudachi::analysis::node::Node&gt;&gt; (2,096 samples, 0.49%)</title><rect x="240.5" y="373" width="5.8" height="15.0" fill="rgb(235,94,15)" rx="2" ry="2" />
<text  x="243.55" y="383.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (935 samples, 0.22%)</title><rect x="588.8" y="405" width="2.6" height="15.0" fill="rgb(230,34,28)" rx="2" ry="2" />
<text  x="591.80" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (223 samples, 0.05%)</title><rect x="1111.3" y="229" width="0.7" height="15.0" fill="rgb(248,49,1)" rx="2" ry="2" />
<text  x="1114.34" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (155 samples, 0.04%)</title><rect x="229.5" y="277" width="0.4" height="15.0" fill="rgb(221,81,43)" rx="2" ry="2" />
<text  x="232.51" y="287.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::is_match (219 samples, 0.05%)</title><rect x="194.8" y="437" width="0.6" height="15.0" fill="rgb(220,106,2)" rx="2" ry="2" />
<text  x="197.84" y="447.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (392 samples, 0.09%)</title><rect x="341.8" y="213" width="1.1" height="15.0" fill="rgb(235,38,29)" rx="2" ry="2" />
<text  x="344.83" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::truncate (2,919 samples, 0.68%)</title><rect x="1146.2" y="437" width="8.1" height="15.0" fill="rgb(208,23,48)" rx="2" ry="2" />
<text  x="1149.21" y="447.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (535 samples, 0.13%)</title><rect x="187.2" y="245" width="1.5" height="15.0" fill="rgb(227,26,17)" rx="2" ry="2" />
<text  x="190.25" y="255.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,001 samples, 3.97%)</title><rect x="376.3" y="389" width="46.9" height="15.0" fill="rgb(227,120,48)" rx="2" ry="2" />
<text  x="379.32" y="399.5" >&lt;cor..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,010 samples, 0.24%)</title><rect x="973.4" y="389" width="2.7" height="15.0" fill="rgb(245,213,36)" rx="2" ry="2" />
<text  x="976.36" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::DictionaryLoader::read_dictionary (216 samples, 0.05%)</title><rect x="1154.3" y="421" width="0.6" height="15.0" fill="rgb(217,16,50)" rx="2" ry="2" />
<text  x="1157.29" y="431.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (114 samples, 0.03%)</title><rect x="227.6" y="149" width="0.3" height="15.0" fill="rgb(235,31,46)" rx="2" ry="2" />
<text  x="230.60" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,436 samples, 0.34%)</title><rect x="189.3" y="245" width="4.0" height="15.0" fill="rgb(224,175,54)" rx="2" ry="2" />
<text  x="192.33" y="255.5" ></text>
</g>
<g >
<title>regex::re_trait::RegularExpression::locations (136 samples, 0.03%)</title><rect x="1132.0" y="341" width="0.3" height="15.0" fill="rgb(234,142,41)" rx="2" ry="2" />
<text  x="1134.97" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,194 samples, 0.28%)</title><rect x="189.5" y="181" width="3.3" height="15.0" fill="rgb(214,198,8)" rx="2" ry="2" />
<text  x="192.47" y="191.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2,936 samples, 0.69%)</title><rect x="681.8" y="261" width="8.1" height="15.0" fill="rgb(232,28,48)" rx="2" ry="2" />
<text  x="684.77" y="271.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,245 samples, 0.52%)</title><rect x="1083.3" y="309" width="6.2" height="15.0" fill="rgb(217,0,24)" rx="2" ry="2" />
<text  x="1086.27" y="319.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::captures_nfa_type (649 samples, 0.15%)</title><rect x="197.5" y="341" width="1.8" height="15.0" fill="rgb(228,17,5)" rx="2" ry="2" />
<text  x="200.55" y="351.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (8,120 samples, 1.90%)</title><rect x="742.4" y="325" width="22.4" height="15.0" fill="rgb(225,68,40)" rx="2" ry="2" />
<text  x="745.44" y="335.5" >&lt;..</text>
</g>
<g >
<title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (131 samples, 0.03%)</title><rect x="69.6" y="373" width="0.3" height="15.0" fill="rgb(240,151,46)" rx="2" ry="2" />
<text  x="72.56" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (2,322 samples, 0.54%)</title><rect x="234.1" y="341" width="6.4" height="15.0" fill="rgb(235,51,17)" rx="2" ry="2" />
<text  x="237.14" y="351.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (111 samples, 0.03%)</title><rect x="1181.1" y="357" width="0.3" height="15.0" fill="rgb(236,205,8)" rx="2" ry="2" />
<text  x="1184.12" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,433 samples, 0.33%)</title><rect x="1033.6" y="261" width="4.0" height="15.0" fill="rgb(246,96,33)" rx="2" ry="2" />
<text  x="1036.61" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup::{{closure}} (5,902 samples, 1.38%)</title><rect x="404.8" y="293" width="16.3" height="15.0" fill="rgb(246,38,36)" rx="2" ry="2" />
<text  x="407.83" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (184 samples, 0.04%)</title><rect x="525.7" y="357" width="0.6" height="15.0" fill="rgb(207,203,52)" rx="2" ry="2" />
<text  x="528.75" y="367.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::new (143 samples, 0.03%)</title><rect x="98.6" y="389" width="0.4" height="15.0" fill="rgb(214,94,12)" rx="2" ry="2" />
<text  x="101.59" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (121 samples, 0.03%)</title><rect x="225.8" y="133" width="0.3" height="15.0" fill="rgb(222,145,7)" rx="2" ry="2" />
<text  x="228.75" y="143.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (551 samples, 0.13%)</title><rect x="1168.7" y="373" width="1.6" height="15.0" fill="rgb(231,50,0)" rx="2" ry="2" />
<text  x="1171.74" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (300 samples, 0.07%)</title><rect x="272.5" y="357" width="0.8" height="15.0" fill="rgb(226,139,38)" rx="2" ry="2" />
<text  x="275.51" y="367.5" ></text>
</g>
<g >
<title>_int_realloc (1,011 samples, 0.24%)</title><rect x="189.9" y="53" width="2.8" height="15.0" fill="rgb(211,56,13)" rx="2" ry="2" />
<text  x="192.87" y="63.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (445 samples, 0.10%)</title><rect x="209.9" y="277" width="1.2" height="15.0" fill="rgb(237,24,27)" rx="2" ry="2" />
<text  x="212.90" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (506 samples, 0.12%)</title><rect x="1161.0" y="357" width="1.4" height="15.0" fill="rgb(209,192,7)" rx="2" ry="2" />
<text  x="1164.05" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (240 samples, 0.06%)</title><rect x="125.3" y="261" width="0.7" height="15.0" fill="rgb(230,217,0)" rx="2" ry="2" />
<text  x="128.33" y="271.5" ></text>
</g>
<g >
<title>core::ptr::write (367 samples, 0.09%)</title><rect x="113.1" y="357" width="1.0" height="15.0" fill="rgb(254,113,17)" rx="2" ry="2" />
<text  x="116.10" y="367.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::next_state_no_fail (519 samples, 0.12%)</title><rect x="1104.8" y="261" width="1.4" height="15.0" fill="rgb(215,11,3)" rx="2" ry="2" />
<text  x="1107.75" y="271.5" ></text>
</g>
<g >
<title>&lt;sudachi::sentence_detector::SentenceDetector::get_eos::SENTENCE_BREAKER as core::ops::deref::Deref&gt;::deref::__stability::LAZY (550 samples, 0.13%)</title><rect x="11.0" y="501" width="1.5" height="15.0" fill="rgb(226,49,30)" rx="2" ry="2" />
<text  x="13.96" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (136 samples, 0.03%)</title><rect x="70.0" y="325" width="0.4" height="15.0" fill="rgb(224,153,16)" rx="2" ry="2" />
<text  x="72.98" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (180 samples, 0.04%)</title><rect x="13.5" y="485" width="0.5" height="15.0" fill="rgb(240,50,16)" rx="2" ry="2" />
<text  x="16.49" y="495.5" ></text>
</g>
<g >
<title>fancy_regex::vm::codepoint_len_at (109 samples, 0.03%)</title><rect x="131.5" y="389" width="0.3" height="15.0" fill="rgb(207,210,3)" rx="2" ry="2" />
<text  x="134.48" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (506 samples, 0.12%)</title><rect x="1161.0" y="373" width="1.4" height="15.0" fill="rgb(245,192,7)" rx="2" ry="2" />
<text  x="1164.05" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::TrieEntryIter::get (7,656 samples, 1.79%)</title><rect x="383.7" y="309" width="21.1" height="15.0" fill="rgb(212,101,43)" rx="2" ry="2" />
<text  x="386.71" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (143 samples, 0.03%)</title><rect x="358.0" y="213" width="0.4" height="15.0" fill="rgb(238,44,43)" rx="2" ry="2" />
<text  x="361.01" y="223.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (172 samples, 0.04%)</title><rect x="1106.5" y="357" width="0.5" height="15.0" fill="rgb(216,91,22)" rx="2" ry="2" />
<text  x="1109.52" y="367.5" ></text>
</g>
<g >
<title>_int_malloc (139 samples, 0.03%)</title><rect x="125.6" y="197" width="0.4" height="15.0" fill="rgb(247,94,12)" rx="2" ry="2" />
<text  x="128.58" y="207.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search (783 samples, 0.18%)</title><rect x="1141.6" y="421" width="2.1" height="15.0" fill="rgb(242,119,51)" rx="2" ry="2" />
<text  x="1144.55" y="431.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (128 samples, 0.03%)</title><rect x="153.2" y="213" width="0.3" height="15.0" fill="rgb(244,11,8)" rx="2" ry="2" />
<text  x="156.18" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2,042 samples, 0.48%)</title><rect x="976.4" y="389" width="5.7" height="15.0" fill="rgb(232,110,0)" rx="2" ry="2" />
<text  x="979.44" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (319 samples, 0.07%)</title><rect x="215.8" y="357" width="0.9" height="15.0" fill="rgb(240,13,29)" rx="2" ry="2" />
<text  x="218.80" y="367.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (2,660 samples, 0.62%)</title><rect x="276.2" y="277" width="7.4" height="15.0" fill="rgb(252,217,6)" rx="2" ry="2" />
<text  x="279.22" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,467 samples, 0.34%)</title><rect x="225.1" y="213" width="4.1" height="15.0" fill="rgb(239,57,19)" rx="2" ry="2" />
<text  x="228.14" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_param (23,641 samples, 5.53%)</title><rect x="998.9" y="437" width="65.2" height="15.0" fill="rgb(243,95,30)" rx="2" ry="2" />
<text  x="1001.87" y="447.5" >sudachi..</text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (200 samples, 0.05%)</title><rect x="1113.0" y="229" width="0.5" height="15.0" fill="rgb(250,122,49)" rx="2" ry="2" />
<text  x="1115.95" y="239.5" ></text>
</g>
<g >
<title>sudachi::dic::utf16_string_parser (2,201 samples, 0.51%)</title><rect x="277.5" y="261" width="6.1" height="15.0" fill="rgb(215,98,52)" rx="2" ry="2" />
<text  x="280.48" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,338 samples, 0.55%)</title><rect x="290.1" y="245" width="6.4" height="15.0" fill="rgb(211,121,23)" rx="2" ry="2" />
<text  x="293.07" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (653 samples, 0.15%)</title><rect x="1039.7" y="309" width="1.8" height="15.0" fill="rgb(244,116,16)" rx="2" ry="2" />
<text  x="1042.65" y="319.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,688 samples, 0.39%)</title><rect x="189.3" y="293" width="4.7" height="15.0" fill="rgb(208,139,39)" rx="2" ry="2" />
<text  x="192.29" y="303.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (295 samples, 0.07%)</title><rect x="1054.2" y="245" width="0.8" height="15.0" fill="rgb(216,96,29)" rx="2" ry="2" />
<text  x="1057.20" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2,158 samples, 0.50%)</title><rect x="290.2" y="197" width="6.0" height="15.0" fill="rgb(241,192,11)" rx="2" ry="2" />
<text  x="293.24" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (198 samples, 0.05%)</title><rect x="102.5" y="357" width="0.5" height="15.0" fill="rgb(246,150,32)" rx="2" ry="2" />
<text  x="105.48" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (498 samples, 0.12%)</title><rect x="280.4" y="149" width="1.3" height="15.0" fill="rgb(219,196,35)" rx="2" ry="2" />
<text  x="283.35" y="159.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (551 samples, 0.13%)</title><rect x="1168.7" y="389" width="1.6" height="15.0" fill="rgb(250,77,43)" rx="2" ry="2" />
<text  x="1171.74" y="399.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (389 samples, 0.09%)</title><rect x="152.0" y="293" width="1.1" height="15.0" fill="rgb(211,28,24)" rx="2" ry="2" />
<text  x="155.04" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (265 samples, 0.06%)</title><rect x="102.5" y="373" width="0.7" height="15.0" fill="rgb(248,181,48)" rx="2" ry="2" />
<text  x="105.48" y="383.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::handle_normalization_slow (362 samples, 0.08%)</title><rect x="1110.2" y="357" width="1.0" height="15.0" fill="rgb(209,44,14)" rx="2" ry="2" />
<text  x="1113.17" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (146 samples, 0.03%)</title><rect x="230.4" y="421" width="0.4" height="15.0" fill="rgb(247,130,12)" rx="2" ry="2" />
<text  x="233.37" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,318 samples, 0.54%)</title><rect x="1083.2" y="357" width="6.4" height="15.0" fill="rgb(212,78,38)" rx="2" ry="2" />
<text  x="1086.22" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25,360 samples, 5.93%)</title><rect x="799.5" y="229" width="70.0" height="15.0" fill="rgb(206,203,9)" rx="2" ry="2" />
<text  x="802.54" y="239.5" >&lt;core::..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (123 samples, 0.03%)</title><rect x="70.0" y="277" width="0.4" height="15.0" fill="rgb(206,12,35)" rx="2" ry="2" />
<text  x="73.02" y="287.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_i16 (38,016 samples, 8.89%)</title><rect x="764.9" y="293" width="104.8" height="15.0" fill="rgb(215,215,29)" rx="2" ry="2" />
<text  x="767.87" y="303.5" >core::hash::..</text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (944 samples, 0.22%)</title><rect x="1111.2" y="341" width="2.6" height="15.0" fill="rgb(209,147,2)" rx="2" ry="2" />
<text  x="1114.17" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt;&gt; (5,813 samples, 1.36%)</title><rect x="230.8" y="437" width="16.0" height="15.0" fill="rgb(205,95,47)" rx="2" ry="2" />
<text  x="233.79" y="447.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::build (3,023 samples, 0.71%)</title><rect x="1137.2" y="453" width="8.4" height="15.0" fill="rgb(208,69,35)" rx="2" ry="2" />
<text  x="1140.22" y="463.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (2,302 samples, 0.54%)</title><rect x="1083.3" y="325" width="6.3" height="15.0" fill="rgb(214,208,21)" rx="2" ry="2" />
<text  x="1086.27" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (503 samples, 0.12%)</title><rect x="1080.5" y="341" width="1.4" height="15.0" fill="rgb(214,147,6)" rx="2" ry="2" />
<text  x="1083.51" y="351.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (340,808 samples, 79.67%)</title><rect x="206.1" y="469" width="940.1" height="15.0" fill="rgb(220,55,1)" rx="2" ry="2" />
<text  x="209.05" y="479.5" >sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (510 samples, 0.12%)</title><rect x="357.1" y="277" width="1.4" height="15.0" fill="rgb(234,212,46)" rx="2" ry="2" />
<text  x="360.09" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (533 samples, 0.12%)</title><rect x="1156.9" y="325" width="1.5" height="15.0" fill="rgb(252,24,53)" rx="2" ry="2" />
<text  x="1159.93" y="335.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (552 samples, 0.13%)</title><rect x="341.4" y="245" width="1.5" height="15.0" fill="rgb(241,201,24)" rx="2" ry="2" />
<text  x="344.39" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (122 samples, 0.03%)</title><rect x="228.6" y="181" width="0.4" height="15.0" fill="rgb(217,85,8)" rx="2" ry="2" />
<text  x="231.62" y="191.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::captures_from_pos (2,767 samples, 0.65%)</title><rect x="195.8" y="405" width="7.7" height="15.0" fill="rgb(243,55,41)" rx="2" ry="2" />
<text  x="198.82" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (238 samples, 0.06%)</title><rect x="150.9" y="309" width="0.7" height="15.0" fill="rgb(237,213,4)" rx="2" ry="2" />
<text  x="153.92" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (201 samples, 0.05%)</title><rect x="1154.3" y="357" width="0.6" height="15.0" fill="rgb(242,192,16)" rx="2" ry="2" />
<text  x="1157.33" y="367.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (5,902 samples, 1.38%)</title><rect x="404.8" y="325" width="16.3" height="15.0" fill="rgb(245,178,3)" rx="2" ry="2" />
<text  x="407.83" y="335.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (165 samples, 0.04%)</title><rect x="447.2" y="389" width="0.5" height="15.0" fill="rgb(209,76,15)" rx="2" ry="2" />
<text  x="450.20" y="399.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (537 samples, 0.13%)</title><rect x="359.7" y="309" width="1.4" height="15.0" fill="rgb(242,17,32)" rx="2" ry="2" />
<text  x="362.66" y="319.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (748 samples, 0.17%)</title><rect x="1162.6" y="373" width="2.0" height="15.0" fill="rgb(213,227,50)" rx="2" ry="2" />
<text  x="1165.59" y="383.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_literals (6,978 samples, 1.63%)</title><rect x="151.6" y="309" width="19.2" height="15.0" fill="rgb(207,141,51)" rx="2" ry="2" />
<text  x="154.58" y="319.5" ></text>
</g>
<g >
<title>_int_free (445 samples, 0.10%)</title><rect x="15.5" y="485" width="1.3" height="15.0" fill="rgb(254,83,45)" rx="2" ry="2" />
<text  x="18.55" y="495.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::u8_class (189 samples, 0.04%)</title><rect x="178.8" y="229" width="0.5" height="15.0" fill="rgb(248,227,22)" rx="2" ry="2" />
<text  x="181.82" y="239.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,704 samples, 0.87%)</title><rect x="875.1" y="309" width="10.2" height="15.0" fill="rgb(247,68,27)" rx="2" ry="2" />
<text  x="878.10" y="319.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (422 samples, 0.10%)</title><rect x="210.0" y="261" width="1.1" height="15.0" fill="rgb(242,28,21)" rx="2" ry="2" />
<text  x="212.96" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (1,002 samples, 0.23%)</title><rect x="56.0" y="485" width="2.7" height="15.0" fill="rgb(209,59,13)" rx="2" ry="2" />
<text  x="58.96" y="495.5" ></text>
</g>
<g >
<title>__memchr_sse2 (178 samples, 0.04%)</title><rect x="70.4" y="341" width="0.5" height="15.0" fill="rgb(214,116,38)" rx="2" ry="2" />
<text  x="73.38" y="351.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (201 samples, 0.05%)</title><rect x="1154.3" y="373" width="0.6" height="15.0" fill="rgb(218,55,33)" rx="2" ry="2" />
<text  x="1157.33" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (170 samples, 0.04%)</title><rect x="978.3" y="245" width="0.5" height="15.0" fill="rgb(211,211,43)" rx="2" ry="2" />
<text  x="981.28" y="255.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (874 samples, 0.20%)</title><rect x="1129.3" y="293" width="2.4" height="15.0" fill="rgb(250,175,24)" rx="2" ry="2" />
<text  x="1132.30" y="303.5" ></text>
</g>
<g >
<title>unicode_normalization::tables::qc_nfkc (1,016 samples, 0.24%)</title><rect x="1115.1" y="309" width="2.8" height="15.0" fill="rgb(251,86,10)" rx="2" ry="2" />
<text  x="1118.11" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (130 samples, 0.03%)</title><rect x="120.9" y="373" width="0.3" height="15.0" fill="rgb(226,38,31)" rx="2" ry="2" />
<text  x="123.86" y="383.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::surface (151 samples, 0.04%)</title><rect x="1185.1" y="453" width="0.4" height="15.0" fill="rgb(218,209,43)" rx="2" ry="2" />
<text  x="1188.10" y="463.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (116 samples, 0.03%)</title><rect x="247.3" y="421" width="0.3" height="15.0" fill="rgb(247,165,38)" rx="2" ry="2" />
<text  x="250.27" y="431.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (174 samples, 0.04%)</title><rect x="193.4" y="229" width="0.5" height="15.0" fill="rgb(214,55,38)" rx="2" ry="2" />
<text  x="196.38" y="239.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,215 samples, 0.28%)</title><rect x="1089.6" y="341" width="3.4" height="15.0" fill="rgb(212,134,2)" rx="2" ry="2" />
<text  x="1092.62" y="351.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin::rewrite_gen (7,722 samples, 1.81%)</title><rect x="208.9" y="437" width="21.3" height="15.0" fill="rgb(217,212,2)" rx="2" ry="2" />
<text  x="211.86" y="447.5" >s..</text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::refresh_chars (318 samples, 0.07%)</title><rect x="1100.0" y="421" width="0.8" height="15.0" fill="rgb(229,226,4)" rx="2" ry="2" />
<text  x="1102.95" y="431.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (2,466 samples, 0.58%)</title><rect x="1147.0" y="277" width="6.8" height="15.0" fill="rgb(249,90,44)" rx="2" ry="2" />
<text  x="1149.99" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,096 samples, 0.49%)</title><rect x="240.5" y="357" width="5.8" height="15.0" fill="rgb(218,37,42)" rx="2" ry="2" />
<text  x="243.55" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,162 samples, 0.51%)</title><rect x="1075.9" y="373" width="6.0" height="15.0" fill="rgb(224,5,39)" rx="2" ry="2" />
<text  x="1078.94" y="383.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (481 samples, 0.11%)</title><rect x="1041.5" y="325" width="1.3" height="15.0" fill="rgb(232,31,21)" rx="2" ry="2" />
<text  x="1044.45" y="335.5" ></text>
</g>
<g >
<title>_int_free (1,501 samples, 0.35%)</title><rect x="491.3" y="245" width="4.2" height="15.0" fill="rgb(237,61,50)" rx="2" ry="2" />
<text  x="494.32" y="255.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::exec_nfa (641 samples, 0.15%)</title><rect x="197.6" y="325" width="1.7" height="15.0" fill="rgb(208,63,2)" rx="2" ry="2" />
<text  x="200.57" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (541 samples, 0.13%)</title><rect x="121.2" y="373" width="1.5" height="15.0" fill="rgb(239,113,9)" rx="2" ry="2" />
<text  x="124.21" y="383.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (153 samples, 0.04%)</title><rect x="1106.6" y="341" width="0.4" height="15.0" fill="rgb(217,116,35)" rx="2" ry="2" />
<text  x="1109.57" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (281 samples, 0.07%)</title><rect x="1072.9" y="373" width="0.8" height="15.0" fill="rgb(249,201,0)" rx="2" ry="2" />
<text  x="1075.93" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (150 samples, 0.04%)</title><rect x="282.5" y="101" width="0.4" height="15.0" fill="rgb(217,79,12)" rx="2" ry="2" />
<text  x="285.49" y="111.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (633 samples, 0.15%)</title><rect x="219.8" y="309" width="1.8" height="15.0" fill="rgb(221,45,45)" rx="2" ry="2" />
<text  x="222.83" y="319.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Patterns::get_unchecked (185 samples, 0.04%)</title><rect x="1135.4" y="117" width="0.5" height="15.0" fill="rgb(251,161,9)" rx="2" ry="2" />
<text  x="1138.44" y="127.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::any_bit_set (314 samples, 0.07%)</title><rect x="1038.7" y="277" width="0.9" height="15.0" fill="rgb(223,184,36)" rx="2" ry="2" />
<text  x="1041.69" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (4,167 samples, 0.97%)</title><rect x="1043.5" y="405" width="11.5" height="15.0" fill="rgb(234,31,39)" rx="2" ry="2" />
<text  x="1046.52" y="415.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (313 samples, 0.07%)</title><rect x="274.6" y="293" width="0.9" height="15.0" fill="rgb(249,44,46)" rx="2" ry="2" />
<text  x="277.63" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_info (36,152 samples, 8.45%)</title><rect x="262.6" y="437" width="99.7" height="15.0" fill="rgb(252,65,7)" rx="2" ry="2" />
<text  x="265.57" y="447.5" >sudachi::dic..</text>
</g>
<g >
<title>__memcmp_sse4_1 (141 samples, 0.03%)</title><rect x="11.0" y="485" width="0.4" height="15.0" fill="rgb(207,214,20)" rx="2" ry="2" />
<text  x="13.97" y="495.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,003 samples, 0.47%)</title><rect x="189.3" y="357" width="5.5" height="15.0" fill="rgb(205,224,7)" rx="2" ry="2" />
<text  x="192.29" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (233 samples, 0.05%)</title><rect x="524.8" y="309" width="0.7" height="15.0" fill="rgb(244,52,49)" rx="2" ry="2" />
<text  x="527.85" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (475 samples, 0.11%)</title><rect x="1138.2" y="437" width="1.3" height="15.0" fill="rgb(223,85,16)" rx="2" ry="2" />
<text  x="1141.23" y="447.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (126 samples, 0.03%)</title><rect x="227.2" y="181" width="0.3" height="15.0" fill="rgb(222,68,45)" rx="2" ry="2" />
<text  x="230.19" y="191.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,241 samples, 0.52%)</title><rect x="303.7" y="277" width="6.2" height="15.0" fill="rgb(238,138,18)" rx="2" ry="2" />
<text  x="306.70" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (331 samples, 0.08%)</title><rect x="228.3" y="197" width="0.9" height="15.0" fill="rgb(219,164,21)" rx="2" ry="2" />
<text  x="231.28" y="207.5" ></text>
</g>
<g >
<title>_int_malloc (380 samples, 0.09%)</title><rect x="280.6" y="85" width="1.0" height="15.0" fill="rgb(238,218,29)" rx="2" ry="2" />
<text  x="283.60" y="95.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (11,509 samples, 2.69%)</title><rect x="1011.8" y="405" width="31.7" height="15.0" fill="rgb(253,49,21)" rx="2" ry="2" />
<text  x="1014.77" y="415.5" >su..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (949 samples, 0.22%)</title><rect x="252.2" y="389" width="2.7" height="15.0" fill="rgb(244,39,35)" rx="2" ry="2" />
<text  x="255.23" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (123 samples, 0.03%)</title><rect x="215.4" y="245" width="0.3" height="15.0" fill="rgb(233,9,29)" rx="2" ry="2" />
<text  x="218.37" y="255.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::BufRead for alloc::boxed::Box&lt;B&gt;&gt;::read_line (1,098 samples, 0.26%)</title><rect x="67.9" y="453" width="3.0" height="15.0" fill="rgb(236,54,18)" rx="2" ry="2" />
<text  x="70.87" y="463.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,066 samples, 0.72%)</title><rect x="275.6" y="341" width="8.5" height="15.0" fill="rgb(206,83,21)" rx="2" ry="2" />
<text  x="278.63" y="351.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (149 samples, 0.03%)</title><rect x="283.1" y="181" width="0.5" height="15.0" fill="rgb(212,159,35)" rx="2" ry="2" />
<text  x="286.14" y="191.5" ></text>
</g>
<g >
<title>alloc::string::String::push (1,688 samples, 0.39%)</title><rect x="189.3" y="261" width="4.7" height="15.0" fill="rgb(229,27,38)" rx="2" ry="2" />
<text  x="192.29" y="271.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (556 samples, 0.13%)</title><rect x="209.9" y="357" width="1.5" height="15.0" fill="rgb(250,212,22)" rx="2" ry="2" />
<text  x="212.90" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,552 samples, 0.36%)</title><rect x="236.1" y="277" width="4.3" height="15.0" fill="rgb(254,103,6)" rx="2" ry="2" />
<text  x="239.11" y="287.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (295 samples, 0.07%)</title><rect x="1054.2" y="293" width="0.8" height="15.0" fill="rgb(218,15,16)" rx="2" ry="2" />
<text  x="1057.20" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_free (438 samples, 0.10%)</title><rect x="213.3" y="325" width="1.2" height="15.0" fill="rgb(217,8,40)" rx="2" ry="2" />
<text  x="216.30" y="335.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::trace_stack (218 samples, 0.05%)</title><rect x="109.5" y="373" width="0.6" height="15.0" fill="rgb(230,57,8)" rx="2" ry="2" />
<text  x="112.52" y="383.5" ></text>
</g>
<g >
<title>core::ptr::write (147 samples, 0.03%)</title><rect x="1140.6" y="421" width="0.4" height="15.0" fill="rgb(224,106,42)" rx="2" ry="2" />
<text  x="1143.63" y="431.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (601 samples, 0.14%)</title><rect x="209.9" y="389" width="1.7" height="15.0" fill="rgb(208,61,45)" rx="2" ry="2" />
<text  x="212.90" y="399.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (250 samples, 0.06%)</title><rect x="207.5" y="389" width="0.6" height="15.0" fill="rgb(205,102,12)" rx="2" ry="2" />
<text  x="210.45" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (274 samples, 0.06%)</title><rect x="1100.1" y="373" width="0.7" height="15.0" fill="rgb(254,92,20)" rx="2" ry="2" />
<text  x="1103.07" y="383.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (164 samples, 0.04%)</title><rect x="45.7" y="485" width="0.5" height="15.0" fill="rgb(240,40,46)" rx="2" ry="2" />
<text  x="48.72" y="495.5" ></text>
</g>
<g >
<title>_int_free (1,031 samples, 0.24%)</title><rect x="237.3" y="181" width="2.9" height="15.0" fill="rgb(219,130,21)" rx="2" ry="2" />
<text  x="240.34" y="191.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (1,688 samples, 0.39%)</title><rect x="189.3" y="325" width="4.7" height="15.0" fill="rgb(218,118,47)" rx="2" ry="2" />
<text  x="192.29" y="335.5" ></text>
</g>
<g >
<title>aho_corasick::dfa::DFA&lt;S&gt;::earliest_find_at (459 samples, 0.11%)</title><rect x="1107.7" y="325" width="1.3" height="15.0" fill="rgb(210,166,10)" rx="2" ry="2" />
<text  x="1110.72" y="335.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher_str (264 samples, 0.06%)</title><rect x="143.6" y="357" width="0.7" height="15.0" fill="rgb(246,89,22)" rx="2" ry="2" />
<text  x="146.58" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (667 samples, 0.16%)</title><rect x="252.4" y="325" width="1.8" height="15.0" fill="rgb(230,162,48)" rx="2" ry="2" />
<text  x="255.37" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (258 samples, 0.06%)</title><rect x="215.9" y="261" width="0.7" height="15.0" fill="rgb(206,132,52)" rx="2" ry="2" />
<text  x="218.86" y="271.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::Imp&lt;S&gt;::find_at_no_state (797 samples, 0.19%)</title><rect x="1104.0" y="341" width="2.2" height="15.0" fill="rgb(212,186,44)" rx="2" ry="2" />
<text  x="1106.99" y="351.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (120 samples, 0.03%)</title><rect x="226.9" y="117" width="0.3" height="15.0" fill="rgb(228,45,35)" rx="2" ry="2" />
<text  x="229.86" y="127.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (243 samples, 0.06%)</title><rect x="257.1" y="389" width="0.6" height="15.0" fill="rgb(215,100,3)" rx="2" ry="2" />
<text  x="260.06" y="399.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (164 samples, 0.04%)</title><rect x="1112.2" y="261" width="0.5" height="15.0" fill="rgb(229,129,3)" rx="2" ry="2" />
<text  x="1115.23" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (907 samples, 0.21%)</title><rect x="93.3" y="389" width="2.5" height="15.0" fill="rgb(214,54,48)" rx="2" ry="2" />
<text  x="96.27" y="399.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;V&gt; as core::iter::traits::collect::FromIterator&lt;core::option::Option&lt;A&gt;&gt;&gt;::from_iter (136 samples, 0.03%)</title><rect x="215.3" y="373" width="0.4" height="15.0" fill="rgb(205,62,0)" rx="2" ry="2" />
<text  x="218.34" y="383.5" ></text>
</g>
<g >
<title>nom::sequence::tuple::{{closure}} (22,678 samples, 5.30%)</title><rect x="298.9" y="341" width="62.5" height="15.0" fill="rgb(205,220,10)" rx="2" ry="2" />
<text  x="301.89" y="351.5" >nom::s..</text>
</g>
<g >
<title>nom::multi::count::{{closure}} (413 samples, 0.10%)</title><rect x="281.8" y="245" width="1.2" height="15.0" fill="rgb(239,77,1)" rx="2" ry="2" />
<text  x="284.83" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,552 samples, 0.36%)</title><rect x="236.1" y="293" width="4.3" height="15.0" fill="rgb(230,75,31)" rx="2" ry="2" />
<text  x="239.11" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,145 samples, 0.27%)</title><rect x="1089.6" y="229" width="3.2" height="15.0" fill="rgb(230,83,48)" rx="2" ry="2" />
<text  x="1092.62" y="239.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (154 samples, 0.04%)</title><rect x="1089.0" y="261" width="0.5" height="15.0" fill="rgb(220,119,45)" rx="2" ry="2" />
<text  x="1092.04" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::fill_word_info (37,357 samples, 8.73%)</title><rect x="259.2" y="453" width="103.1" height="15.0" fill="rgb(223,168,36)" rx="2" ry="2" />
<text  x="262.24" y="463.5" >sudachi::ana..</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (548 samples, 0.13%)</title><rect x="96.2" y="389" width="1.5" height="15.0" fill="rgb(218,96,24)" rx="2" ry="2" />
<text  x="99.23" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (202 samples, 0.05%)</title><rect x="34.0" y="485" width="0.5" height="15.0" fill="rgb(219,10,52)" rx="2" ry="2" />
<text  x="36.95" y="495.5" ></text>
</g>
<g >
<title>fancy_regex::vm::matches_literal (1,052 samples, 0.25%)</title><rect x="131.8" y="389" width="2.9" height="15.0" fill="rgb(208,99,8)" rx="2" ry="2" />
<text  x="134.78" y="399.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,796 samples, 0.42%)</title><rect x="891.2" y="245" width="4.9" height="15.0" fill="rgb(241,149,4)" rx="2" ry="2" />
<text  x="894.17" y="255.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::part_of_speech (265 samples, 0.06%)</title><rect x="1184.4" y="453" width="0.7" height="15.0" fill="rgb(222,199,19)" rx="2" ry="2" />
<text  x="1187.37" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (309 samples, 0.07%)</title><rect x="210.0" y="245" width="0.9" height="15.0" fill="rgb(241,167,42)" rx="2" ry="2" />
<text  x="213.02" y="255.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin::concat (1,222 samples, 0.29%)</title><rect x="214.8" y="421" width="3.4" height="15.0" fill="rgb(236,54,1)" rx="2" ry="2" />
<text  x="217.79" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (130 samples, 0.03%)</title><rect x="1154.5" y="325" width="0.4" height="15.0" fill="rgb(226,169,45)" rx="2" ry="2" />
<text  x="1157.52" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (223 samples, 0.05%)</title><rect x="1111.3" y="245" width="0.7" height="15.0" fill="rgb(244,83,43)" rx="2" ry="2" />
<text  x="1114.34" y="255.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (779 samples, 0.18%)</title><rect x="177.7" y="261" width="2.2" height="15.0" fill="rgb(241,205,47)" rx="2" ry="2" />
<text  x="180.74" y="271.5" ></text>
</g>
<g >
<title>nom::combinator::cond::{{closure}} (564 samples, 0.13%)</title><rect x="356.9" y="293" width="1.6" height="15.0" fill="rgb(229,153,2)" rx="2" ry="2" />
<text  x="359.94" y="303.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (749 samples, 0.18%)</title><rect x="1041.5" y="373" width="2.0" height="15.0" fill="rgb(235,28,33)" rx="2" ry="2" />
<text  x="1044.45" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (1,104 samples, 0.26%)</title><rect x="189.7" y="101" width="3.0" height="15.0" fill="rgb(223,16,0)" rx="2" ry="2" />
<text  x="192.66" y="111.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (502 samples, 0.12%)</title><rect x="213.2" y="341" width="1.3" height="15.0" fill="rgb(226,69,19)" rx="2" ry="2" />
<text  x="216.16" y="351.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (467 samples, 0.11%)</title><rect x="1163.4" y="293" width="1.2" height="15.0" fill="rgb(251,66,4)" rx="2" ry="2" />
<text  x="1166.36" y="303.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_of_range (273 samples, 0.06%)</title><rect x="211.7" y="421" width="0.8" height="15.0" fill="rgb(233,188,14)" rx="2" ry="2" />
<text  x="214.74" y="431.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (456 samples, 0.11%)</title><rect x="994.8" y="245" width="1.2" height="15.0" fill="rgb(251,94,27)" rx="2" ry="2" />
<text  x="997.79" y="255.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::set_word_info (592 samples, 0.14%)</title><rect x="260.9" y="437" width="1.7" height="15.0" fill="rgb(248,77,7)" rx="2" ry="2" />
<text  x="263.93" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,140 samples, 0.73%)</title><rect x="331.1" y="165" width="8.6" height="15.0" fill="rgb(250,221,47)" rx="2" ry="2" />
<text  x="334.07" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2,832 samples, 0.66%)</title><rect x="331.3" y="117" width="7.9" height="15.0" fill="rgb(231,148,9)" rx="2" ry="2" />
<text  x="334.35" y="127.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::commit (292 samples, 0.07%)</title><rect x="1101.0" y="405" width="0.8" height="15.0" fill="rgb(231,223,4)" rx="2" ry="2" />
<text  x="1104.02" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (266 samples, 0.06%)</title><rect x="274.6" y="197" width="0.8" height="15.0" fill="rgb(245,179,13)" rx="2" ry="2" />
<text  x="277.63" y="207.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (566 samples, 0.13%)</title><rect x="1030.5" y="277" width="1.6" height="15.0" fill="rgb(219,105,35)" rx="2" ry="2" />
<text  x="1033.49" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (435 samples, 0.10%)</title><rect x="978.3" y="261" width="1.2" height="15.0" fill="rgb(221,179,53)" rx="2" ry="2" />
<text  x="981.28" y="271.5" ></text>
</g>
<g >
<title>core::fmt::write (178 samples, 0.04%)</title><rect x="31.9" y="485" width="0.5" height="15.0" fill="rgb(234,150,54)" rx="2" ry="2" />
<text  x="34.94" y="495.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::mecab_oov::MeCabOovPlugin::provide_oov_gen (8,694 samples, 2.03%)</title><rect x="1070.1" y="405" width="24.0" height="15.0" fill="rgb(217,53,29)" rx="2" ry="2" />
<text  x="1073.12" y="415.5" >s..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (136 samples, 0.03%)</title><rect x="70.0" y="309" width="0.4" height="15.0" fill="rgb(216,54,43)" rx="2" ry="2" />
<text  x="72.98" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (749 samples, 0.18%)</title><rect x="1041.5" y="357" width="2.0" height="15.0" fill="rgb(221,129,43)" rx="2" ry="2" />
<text  x="1044.45" y="367.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (295 samples, 0.07%)</title><rect x="357.7" y="261" width="0.8" height="15.0" fill="rgb(221,32,38)" rx="2" ry="2" />
<text  x="360.68" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (517 samples, 0.12%)</title><rect x="200.7" y="277" width="1.4" height="15.0" fill="rgb(229,225,28)" rx="2" ry="2" />
<text  x="203.67" y="287.5" ></text>
</g>
<g >
<title>&lt;core::char::decode::DecodeUtf16&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (353 samples, 0.08%)</title><rect x="317.8" y="245" width="1.0" height="15.0" fill="rgb(236,206,44)" rx="2" ry="2" />
<text  x="320.80" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (445 samples, 0.10%)</title><rect x="209.9" y="325" width="1.2" height="15.0" fill="rgb(215,111,25)" rx="2" ry="2" />
<text  x="212.90" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (138,160 samples, 32.30%)</title><rect x="591.4" y="405" width="381.1" height="15.0" fill="rgb(215,128,0)" rx="2" ry="2" />
<text  x="594.38" y="415.5" >sudachi::dic::grammar::Grammar::get_connect_cost</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (335 samples, 0.08%)</title><rect x="1138.4" y="405" width="0.9" height="15.0" fill="rgb(218,201,23)" rx="2" ry="2" />
<text  x="1141.42" y="415.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (295 samples, 0.07%)</title><rect x="1054.2" y="277" width="0.8" height="15.0" fill="rgb(251,96,36)" rx="2" ry="2" />
<text  x="1057.20" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,091 samples, 1.19%)</title><rect x="982.1" y="341" width="14.0" height="15.0" fill="rgb(218,176,36)" rx="2" ry="2" />
<text  x="985.08" y="351.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (117 samples, 0.03%)</title><rect x="339.7" y="197" width="0.4" height="15.0" fill="rgb(234,124,27)" rx="2" ry="2" />
<text  x="342.73" y="207.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (95,603 samples, 22.35%)</title><rect x="638.1" y="373" width="263.7" height="15.0" fill="rgb(231,165,31)" rx="2" ry="2" />
<text  x="641.11" y="383.5" >hashbrown::map::HashMap&lt;K,V,S,A&gt;::get</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (542 samples, 0.13%)</title><rect x="1160.9" y="389" width="1.5" height="15.0" fill="rgb(206,227,25)" rx="2" ry="2" />
<text  x="1163.95" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1,145 samples, 0.27%)</title><rect x="1089.6" y="197" width="3.2" height="15.0" fill="rgb(215,126,27)" rx="2" ry="2" />
<text  x="1092.62" y="207.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (152 samples, 0.04%)</title><rect x="1189.2" y="453" width="0.4" height="15.0" fill="rgb(235,220,19)" rx="2" ry="2" />
<text  x="1192.19" y="463.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::find_at (2,661 samples, 0.62%)</title><rect x="136.1" y="357" width="7.4" height="15.0" fill="rgb(243,15,12)" rx="2" ry="2" />
<text  x="139.12" y="367.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (198 samples, 0.05%)</title><rect x="1139.7" y="405" width="0.5" height="15.0" fill="rgb(248,84,13)" rx="2" ry="2" />
<text  x="1142.69" y="415.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (189 samples, 0.04%)</title><rect x="252.7" y="261" width="0.5" height="15.0" fill="rgb(251,68,29)" rx="2" ry="2" />
<text  x="255.70" y="271.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (21,221 samples, 4.96%)</title><rect x="908.4" y="341" width="58.5" height="15.0" fill="rgb(246,163,7)" rx="2" ry="2" />
<text  x="911.39" y="351.5" >core::..</text>
</g>
<g >
<title>alloc::alloc::realloc (299 samples, 0.07%)</title><rect x="278.8" y="53" width="0.8" height="15.0" fill="rgb(254,227,22)" rx="2" ry="2" />
<text  x="281.83" y="63.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;sudachi::analysis::node::Node&gt;&gt; (261 samples, 0.06%)</title><rect x="446.0" y="437" width="0.7" height="15.0" fill="rgb(209,6,27)" rx="2" ry="2" />
<text  x="449.01" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::new (201 samples, 0.05%)</title><rect x="1154.3" y="405" width="0.6" height="15.0" fill="rgb(205,11,32)" rx="2" ry="2" />
<text  x="1157.33" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (5,888 samples, 1.38%)</title><rect x="507.1" y="325" width="16.3" height="15.0" fill="rgb(252,212,3)" rx="2" ry="2" />
<text  x="510.12" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (347 samples, 0.08%)</title><rect x="274.6" y="357" width="0.9" height="15.0" fill="rgb(225,205,27)" rx="2" ry="2" />
<text  x="277.57" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (453 samples, 0.11%)</title><rect x="222.3" y="213" width="1.2" height="15.0" fill="rgb(247,8,35)" rx="2" ry="2" />
<text  x="225.27" y="223.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (194 samples, 0.05%)</title><rect x="423.8" y="341" width="0.6" height="15.0" fill="rgb(207,73,44)" rx="2" ry="2" />
<text  x="426.83" y="351.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (213 samples, 0.05%)</title><rect x="1017.0" y="341" width="0.6" height="15.0" fill="rgb(230,82,54)" rx="2" ry="2" />
<text  x="1020.04" y="351.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::new (144 samples, 0.03%)</title><rect x="1181.9" y="421" width="0.4" height="15.0" fill="rgb(242,126,32)" rx="2" ry="2" />
<text  x="1184.94" y="431.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (222 samples, 0.05%)</title><rect x="1060.6" y="325" width="0.6" height="15.0" fill="rgb(213,59,47)" rx="2" ry="2" />
<text  x="1063.60" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,338 samples, 0.55%)</title><rect x="290.1" y="293" width="6.4" height="15.0" fill="rgb(235,96,12)" rx="2" ry="2" />
<text  x="293.07" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (295 samples, 0.07%)</title><rect x="125.2" y="309" width="0.9" height="15.0" fill="rgb(215,220,11)" rx="2" ry="2" />
<text  x="128.24" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9,035 samples, 2.11%)</title><rect x="1016.5" y="373" width="25.0" height="15.0" fill="rgb(215,90,25)" rx="2" ry="2" />
<text  x="1019.53" y="383.5" >h..</text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (653 samples, 0.15%)</title><rect x="1039.7" y="293" width="1.8" height="15.0" fill="rgb(248,10,21)" rx="2" ry="2" />
<text  x="1042.65" y="303.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (981 samples, 0.23%)</title><rect x="977.1" y="309" width="2.8" height="15.0" fill="rgb(208,34,31)" rx="2" ry="2" />
<text  x="980.15" y="319.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Pattern::equals (333 samples, 0.08%)</title><rect x="1134.5" y="101" width="0.9" height="15.0" fill="rgb(244,18,18)" rx="2" ry="2" />
<text  x="1137.52" y="111.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (388 samples, 0.09%)</title><rect x="310.9" y="261" width="1.0" height="15.0" fill="rgb(240,198,31)" rx="2" ry="2" />
<text  x="313.88" y="271.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt; (1,511 samples, 0.35%)</title><rect x="225.0" y="229" width="4.2" height="15.0" fill="rgb(250,190,10)" rx="2" ry="2" />
<text  x="228.02" y="239.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (160 samples, 0.04%)</title><rect x="326.4" y="37" width="0.4" height="15.0" fill="rgb(214,96,47)" rx="2" ry="2" />
<text  x="329.36" y="47.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 samples, 0.03%)</title><rect x="1153.9" y="325" width="0.4" height="15.0" fill="rgb(247,136,44)" rx="2" ry="2" />
<text  x="1156.89" y="335.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (2,016 samples, 0.47%)</title><rect x="966.9" y="341" width="5.6" height="15.0" fill="rgb(237,74,19)" rx="2" ry="2" />
<text  x="969.93" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::u8_class (137 samples, 0.03%)</title><rect x="139.3" y="245" width="0.3" height="15.0" fill="rgb(233,40,17)" rx="2" ry="2" />
<text  x="142.27" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (219 samples, 0.05%)</title><rect x="374.7" y="373" width="0.6" height="15.0" fill="rgb(244,119,32)" rx="2" ry="2" />
<text  x="377.67" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1,337 samples, 0.31%)</title><rect x="689.9" y="261" width="3.7" height="15.0" fill="rgb(224,150,23)" rx="2" ry="2" />
<text  x="692.87" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (650 samples, 0.15%)</title><rect x="252.4" y="293" width="1.8" height="15.0" fill="rgb(205,126,5)" rx="2" ry="2" />
<text  x="255.39" y="303.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (197 samples, 0.05%)</title><rect x="1054.5" y="229" width="0.5" height="15.0" fill="rgb(218,21,8)" rx="2" ry="2" />
<text  x="1057.47" y="239.5" ></text>
</g>
<g >
<title>std::io::BufRead::read_line::{{closure}} (519 samples, 0.12%)</title><rect x="69.5" y="405" width="1.4" height="15.0" fill="rgb(229,154,50)" rx="2" ry="2" />
<text  x="72.45" y="415.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (264 samples, 0.06%)</title><rect x="447.0" y="421" width="0.7" height="15.0" fill="rgb(235,80,7)" rx="2" ry="2" />
<text  x="450.01" y="431.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (769 samples, 0.18%)</title><rect x="454.6" y="405" width="2.2" height="15.0" fill="rgb(250,112,2)" rx="2" ry="2" />
<text  x="457.64" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (968 samples, 0.23%)</title><rect x="111.4" y="373" width="2.7" height="15.0" fill="rgb(250,104,28)" rx="2" ry="2" />
<text  x="114.44" y="383.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,215 samples, 0.28%)</title><rect x="1089.6" y="325" width="3.4" height="15.0" fill="rgb(253,137,54)" rx="2" ry="2" />
<text  x="1092.62" y="335.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (2,013 samples, 0.47%)</title><rect x="966.9" y="325" width="5.6" height="15.0" fill="rgb(233,21,41)" rx="2" ry="2" />
<text  x="969.93" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (749 samples, 0.18%)</title><rect x="1041.5" y="389" width="2.0" height="15.0" fill="rgb(219,90,18)" rx="2" ry="2" />
<text  x="1044.45" y="399.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (459 samples, 0.11%)</title><rect x="327.6" y="165" width="1.3" height="15.0" fill="rgb(245,73,1)" rx="2" ry="2" />
<text  x="330.64" y="175.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::pool::PoolGuard&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt; (173 samples, 0.04%)</title><rect x="184.7" y="309" width="0.5" height="15.0" fill="rgb(243,101,16)" rx="2" ry="2" />
<text  x="187.69" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (125 samples, 0.03%)</title><rect x="112.8" y="325" width="0.3" height="15.0" fill="rgb(227,8,37)" rx="2" ry="2" />
<text  x="115.75" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 samples, 0.07%)</title><rect x="1079.6" y="245" width="0.8" height="15.0" fill="rgb(226,8,1)" rx="2" ry="2" />
<text  x="1082.57" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (169 samples, 0.04%)</title><rect x="1081.4" y="309" width="0.5" height="15.0" fill="rgb(215,117,4)" rx="2" ry="2" />
<text  x="1084.43" y="319.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (225 samples, 0.05%)</title><rect x="1035.0" y="245" width="0.6" height="15.0" fill="rgb(227,78,3)" rx="2" ry="2" />
<text  x="1038.02" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (502 samples, 0.12%)</title><rect x="213.2" y="357" width="1.3" height="15.0" fill="rgb(207,117,10)" rx="2" ry="2" />
<text  x="216.16" y="367.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (481 samples, 0.11%)</title><rect x="1041.5" y="261" width="1.3" height="15.0" fill="rgb(240,225,25)" rx="2" ry="2" />
<text  x="1044.45" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (132 samples, 0.03%)</title><rect x="227.9" y="197" width="0.4" height="15.0" fill="rgb(243,150,32)" rx="2" ry="2" />
<text  x="230.91" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (667 samples, 0.16%)</title><rect x="252.4" y="341" width="1.8" height="15.0" fill="rgb(254,120,49)" rx="2" ry="2" />
<text  x="255.37" y="351.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2,003 samples, 0.47%)</title><rect x="189.3" y="341" width="5.5" height="15.0" fill="rgb(213,94,32)" rx="2" ry="2" />
<text  x="192.29" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (169 samples, 0.04%)</title><rect x="1081.4" y="293" width="0.5" height="15.0" fill="rgb(218,96,29)" rx="2" ry="2" />
<text  x="1084.43" y="303.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (164 samples, 0.04%)</title><rect x="143.0" y="309" width="0.4" height="15.0" fill="rgb(244,184,34)" rx="2" ry="2" />
<text  x="145.99" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with (115 samples, 0.03%)</title><rect x="1145.0" y="405" width="0.3" height="15.0" fill="rgb(217,82,16)" rx="2" ry="2" />
<text  x="1147.98" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::lattice::Lattice&gt; (5,814 samples, 1.36%)</title><rect x="230.8" y="453" width="16.0" height="15.0" fill="rgb(248,212,30)" rx="2" ry="2" />
<text  x="233.79" y="463.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::get (166 samples, 0.04%)</title><rect x="126.1" y="373" width="0.4" height="15.0" fill="rgb(251,208,11)" rx="2" ry="2" />
<text  x="129.08" y="383.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (15,824 samples, 3.70%)</title><rect x="145.1" y="357" width="43.6" height="15.0" fill="rgb(243,68,41)" rx="2" ry="2" />
<text  x="148.07" y="367.5" >rege..</text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (248 samples, 0.06%)</title><rect x="224.1" y="245" width="0.7" height="15.0" fill="rgb(230,112,1)" rx="2" ry="2" />
<text  x="227.12" y="255.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (3,772 samples, 0.88%)</title><rect x="219.7" y="405" width="10.5" height="15.0" fill="rgb(221,58,24)" rx="2" ry="2" />
<text  x="222.75" y="415.5" ></text>
</g>
<g >
<title>core::cmp::max (236 samples, 0.06%)</title><rect x="524.8" y="341" width="0.7" height="15.0" fill="rgb(219,128,24)" rx="2" ry="2" />
<text  x="527.85" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::decode_dictword_id (561 samples, 0.13%)</title><rect x="1062.5" y="421" width="1.6" height="15.0" fill="rgb(234,206,40)" rx="2" ry="2" />
<text  x="1065.54" y="431.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (231 samples, 0.05%)</title><rect x="1143.0" y="373" width="0.7" height="15.0" fill="rgb(236,227,18)" rx="2" ry="2" />
<text  x="1146.01" y="383.5" ></text>
</g>
<g >
<title>__rdl_alloc (214 samples, 0.05%)</title><rect x="349.0" y="133" width="0.6" height="15.0" fill="rgb(249,19,7)" rx="2" ry="2" />
<text  x="351.99" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,259 samples, 0.53%)</title><rect x="343.4" y="229" width="6.3" height="15.0" fill="rgb(226,117,31)" rx="2" ry="2" />
<text  x="346.43" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (299 samples, 0.07%)</title><rect x="278.8" y="85" width="0.8" height="15.0" fill="rgb(229,94,25)" rx="2" ry="2" />
<text  x="281.83" y="95.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::reset (2,940 samples, 0.69%)</title><rect x="1146.2" y="469" width="8.1" height="15.0" fill="rgb(246,75,15)" rx="2" ry="2" />
<text  x="1149.18" y="479.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array (203 samples, 0.05%)</title><rect x="524.3" y="341" width="0.5" height="15.0" fill="rgb(219,97,47)" rx="2" ry="2" />
<text  x="527.29" y="351.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (922 samples, 0.22%)</title><rect x="1129.3" y="309" width="2.5" height="15.0" fill="rgb(211,207,31)" rx="2" ry="2" />
<text  x="1132.27" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,551 samples, 0.60%)</title><rect x="1146.9" y="309" width="7.0" height="15.0" fill="rgb(218,160,35)" rx="2" ry="2" />
<text  x="1149.86" y="319.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (128 samples, 0.03%)</title><rect x="153.2" y="245" width="0.3" height="15.0" fill="rgb(251,105,39)" rx="2" ry="2" />
<text  x="156.18" y="255.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (480 samples, 0.11%)</title><rect x="257.8" y="389" width="1.4" height="15.0" fill="rgb(233,149,44)" rx="2" ry="2" />
<text  x="260.84" y="399.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (526 samples, 0.12%)</title><rect x="255.0" y="405" width="1.4" height="15.0" fill="rgb(213,185,50)" rx="2" ry="2" />
<text  x="257.98" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (262 samples, 0.06%)</title><rect x="282.2" y="181" width="0.8" height="15.0" fill="rgb(217,7,17)" rx="2" ry="2" />
<text  x="285.24" y="191.5" ></text>
</g>
<g >
<title>alloc::string::String::push (4,305 samples, 1.01%)</title><rect x="319.0" y="245" width="11.9" height="15.0" fill="rgb(213,84,37)" rx="2" ry="2" />
<text  x="321.99" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (300 samples, 0.07%)</title><rect x="272.5" y="389" width="0.8" height="15.0" fill="rgb(252,93,7)" rx="2" ry="2" />
<text  x="275.51" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,165 samples, 0.51%)</title><rect x="1048.0" y="277" width="6.0" height="15.0" fill="rgb(240,212,19)" rx="2" ry="2" />
<text  x="1051.01" y="287.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (356 samples, 0.08%)</title><rect x="269.6" y="389" width="1.0" height="15.0" fill="rgb(216,165,10)" rx="2" ry="2" />
<text  x="272.63" y="399.5" ></text>
</g>
<g >
<title>_int_free (124 samples, 0.03%)</title><rect x="253.2" y="261" width="0.4" height="15.0" fill="rgb(235,195,30)" rx="2" ry="2" />
<text  x="256.22" y="271.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (2,165 samples, 0.51%)</title><rect x="1048.0" y="293" width="6.0" height="15.0" fill="rgb(233,61,25)" rx="2" ry="2" />
<text  x="1051.01" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,008 samples, 0.24%)</title><rect x="973.4" y="373" width="2.7" height="15.0" fill="rgb(206,63,0)" rx="2" ry="2" />
<text  x="976.36" y="383.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (117 samples, 0.03%)</title><rect x="339.7" y="229" width="0.4" height="15.0" fill="rgb(249,141,42)" rx="2" ry="2" />
<text  x="342.73" y="239.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (210 samples, 0.05%)</title><rect x="349.0" y="117" width="0.6" height="15.0" fill="rgb(209,106,25)" rx="2" ry="2" />
<text  x="352.00" y="127.5" ></text>
</g>
<g >
<title>_int_malloc (856 samples, 0.20%)</title><rect x="190.3" y="37" width="2.3" height="15.0" fill="rgb(222,168,53)" rx="2" ry="2" />
<text  x="193.29" y="47.5" ></text>
</g>
<g >
<title>__libc_write (708 samples, 0.17%)</title><rect x="1156.6" y="357" width="1.9" height="15.0" fill="rgb(253,180,18)" rx="2" ry="2" />
<text  x="1159.57" y="367.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::shortest_match_at (184 samples, 0.04%)</title><rect x="194.9" y="357" width="0.5" height="15.0" fill="rgb(227,215,1)" rx="2" ry="2" />
<text  x="197.89" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (244 samples, 0.06%)</title><rect x="274.7" y="181" width="0.6" height="15.0" fill="rgb(221,33,53)" rx="2" ry="2" />
<text  x="277.65" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (2,003 samples, 0.47%)</title><rect x="189.3" y="389" width="5.5" height="15.0" fill="rgb(244,108,42)" rx="2" ry="2" />
<text  x="192.29" y="399.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::standard_find_at_imp (376 samples, 0.09%)</title><rect x="1107.9" y="277" width="1.0" height="15.0" fill="rgb(231,208,19)" rx="2" ry="2" />
<text  x="1110.89" y="287.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::PathRewritePlugin::concatenate::{{closure}} (340 samples, 0.08%)</title><rect x="215.7" y="373" width="1.0" height="15.0" fill="rgb(230,27,9)" rx="2" ry="2" />
<text  x="218.75" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (5,091 samples, 1.19%)</title><rect x="982.1" y="309" width="14.0" height="15.0" fill="rgb(209,179,8)" rx="2" ry="2" />
<text  x="985.08" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (126 samples, 0.03%)</title><rect x="112.7" y="341" width="0.4" height="15.0" fill="rgb(215,175,27)" rx="2" ry="2" />
<text  x="115.75" y="351.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (352 samples, 0.08%)</title><rect x="215.7" y="389" width="1.0" height="15.0" fill="rgb(244,93,49)" rx="2" ry="2" />
<text  x="218.71" y="399.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (2,325 samples, 0.54%)</title><rect x="196.9" y="373" width="6.5" height="15.0" fill="rgb(249,152,44)" rx="2" ry="2" />
<text  x="199.95" y="383.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (9,710 samples, 2.27%)</title><rect x="1102.0" y="389" width="26.8" height="15.0" fill="rgb(247,22,34)" rx="2" ry="2" />
<text  x="1105.02" y="399.5" >&lt;..</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (266 samples, 0.06%)</title><rect x="1059.9" y="309" width="0.7" height="15.0" fill="rgb(223,169,23)" rx="2" ry="2" />
<text  x="1062.86" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_id (283 samples, 0.07%)</title><rect x="1063.3" y="405" width="0.8" height="15.0" fill="rgb(233,154,25)" rx="2" ry="2" />
<text  x="1066.30" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::byte_class (202 samples, 0.05%)</title><rect x="178.8" y="245" width="0.5" height="15.0" fill="rgb(219,168,44)" rx="2" ry="2" />
<text  x="181.79" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (269 samples, 0.06%)</title><rect x="229.2" y="325" width="0.7" height="15.0" fill="rgb(221,12,35)" rx="2" ry="2" />
<text  x="232.20" y="335.5" ></text>
</g>
<g >
<title>malloc_consolidate (3,610 samples, 0.84%)</title><rect x="986.1" y="261" width="9.9" height="15.0" fill="rgb(237,73,29)" rx="2" ry="2" />
<text  x="989.09" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::common_prefix_iterator (194 samples, 0.05%)</title><rect x="423.8" y="293" width="0.6" height="15.0" fill="rgb(228,140,45)" rx="2" ry="2" />
<text  x="426.83" y="303.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (152 samples, 0.04%)</title><rect x="1189.2" y="373" width="0.4" height="15.0" fill="rgb(227,201,37)" rx="2" ry="2" />
<text  x="1192.19" y="383.5" ></text>
</g>
<g >
<title>sudachi::plugin::loader::PluginContainer&lt;T&gt;::plugins (220 samples, 0.05%)</title><rect x="374.7" y="405" width="0.6" height="15.0" fill="rgb(234,109,32)" rx="2" ry="2" />
<text  x="377.67" y="415.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::replace_slow (4,430 samples, 1.04%)</title><rect x="1106.3" y="373" width="12.2" height="15.0" fill="rgb(238,144,3)" rx="2" ry="2" />
<text  x="1109.25" y="383.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (124 samples, 0.03%)</title><rect x="1185.2" y="373" width="0.3" height="15.0" fill="rgb(221,79,24)" rx="2" ry="2" />
<text  x="1188.18" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (267 samples, 0.06%)</title><rect x="1140.3" y="437" width="0.7" height="15.0" fill="rgb(235,49,37)" rx="2" ry="2" />
<text  x="1143.30" y="447.5" ></text>
</g>
<g >
<title>&lt;fancy_regex::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (2,860 samples, 0.67%)</title><rect x="195.6" y="421" width="7.9" height="15.0" fill="rgb(254,229,1)" rx="2" ry="2" />
<text  x="198.57" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (613 samples, 0.14%)</title><rect x="225.5" y="149" width="1.7" height="15.0" fill="rgb(227,6,50)" rx="2" ry="2" />
<text  x="228.50" y="159.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (574 samples, 0.13%)</title><rect x="1102.1" y="373" width="1.6" height="15.0" fill="rgb(207,68,52)" rx="2" ry="2" />
<text  x="1105.08" y="383.5" ></text>
</g>
<g >
<title>ksys_write (397 samples, 0.09%)</title><rect x="1157.0" y="309" width="1.1" height="15.0" fill="rgb(228,59,26)" rx="2" ry="2" />
<text  x="1159.99" y="319.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,085 samples, 0.25%)</title><rect x="199.5" y="325" width="3.0" height="15.0" fill="rgb(242,59,43)" rx="2" ry="2" />
<text  x="202.52" y="335.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::fill_cat_continuity (530 samples, 0.12%)</title><rect x="1144.1" y="437" width="1.5" height="15.0" fill="rgb(217,123,10)" rx="2" ry="2" />
<text  x="1147.10" y="447.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (617 samples, 0.14%)</title><rect x="329.0" y="213" width="1.7" height="15.0" fill="rgb(218,86,10)" rx="2" ry="2" />
<text  x="332.01" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5,979 samples, 1.40%)</title><rect x="885.3" y="293" width="16.5" height="15.0" fill="rgb(248,167,38)" rx="2" ry="2" />
<text  x="888.34" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (566 samples, 0.13%)</title><rect x="1030.5" y="293" width="1.6" height="15.0" fill="rgb(228,116,7)" rx="2" ry="2" />
<text  x="1033.49" y="303.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (143 samples, 0.03%)</title><rect x="1145.6" y="405" width="0.4" height="15.0" fill="rgb(243,62,22)" rx="2" ry="2" />
<text  x="1148.60" y="415.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (270 samples, 0.06%)</title><rect x="296.7" y="261" width="0.7" height="15.0" fill="rgb(219,215,3)" rx="2" ry="2" />
<text  x="299.67" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (453 samples, 0.11%)</title><rect x="222.3" y="181" width="1.2" height="15.0" fill="rgb(241,165,24)" rx="2" ry="2" />
<text  x="225.27" y="191.5" ></text>
</g>
<g >
<title>&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (42,430 samples, 9.92%)</title><rect x="71.7" y="437" width="117.0" height="15.0" fill="rgb(250,127,38)" rx="2" ry="2" />
<text  x="74.69" y="447.5" >&lt;fancy_regex::..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (537 samples, 0.13%)</title><rect x="187.2" y="293" width="1.5" height="15.0" fill="rgb(235,62,32)" rx="2" ry="2" />
<text  x="190.24" y="303.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (290 samples, 0.07%)</title><rect x="60.6" y="485" width="0.8" height="15.0" fill="rgb(239,16,24)" rx="2" ry="2" />
<text  x="63.58" y="495.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (170 samples, 0.04%)</title><rect x="194.9" y="325" width="0.5" height="15.0" fill="rgb(226,147,1)" rx="2" ry="2" />
<text  x="197.91" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (596 samples, 0.14%)</title><rect x="1168.7" y="405" width="1.6" height="15.0" fill="rgb(237,103,17)" rx="2" ry="2" />
<text  x="1171.66" y="415.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher (971 samples, 0.23%)</title><rect x="186.0" y="325" width="2.7" height="15.0" fill="rgb(234,111,52)" rx="2" ry="2" />
<text  x="189.04" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (129 samples, 0.03%)</title><rect x="1111.6" y="213" width="0.4" height="15.0" fill="rgb(223,10,41)" rx="2" ry="2" />
<text  x="1114.60" y="223.5" ></text>
</g>
<g >
<title>alloc::string::String::push (177 samples, 0.04%)</title><rect x="61.4" y="485" width="0.5" height="15.0" fill="rgb(228,146,38)" rx="2" ry="2" />
<text  x="64.38" y="495.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3,592 samples, 0.84%)</title><rect x="754.9" y="293" width="9.9" height="15.0" fill="rgb(244,99,44)" rx="2" ry="2" />
<text  x="757.93" y="303.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (613 samples, 0.14%)</title><rect x="225.5" y="181" width="1.7" height="15.0" fill="rgb(223,143,23)" rx="2" ry="2" />
<text  x="228.50" y="191.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (2,165 samples, 0.51%)</title><rect x="1048.0" y="325" width="6.0" height="15.0" fill="rgb(210,34,14)" rx="2" ry="2" />
<text  x="1051.01" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (2,737 samples, 0.64%)</title><rect x="1146.7" y="389" width="7.6" height="15.0" fill="rgb(253,61,47)" rx="2" ry="2" />
<text  x="1149.71" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::utf16_string_parser (16,119 samples, 3.77%)</title><rect x="312.5" y="277" width="44.4" height="15.0" fill="rgb(242,100,8)" rx="2" ry="2" />
<text  x="315.48" y="287.5" >suda..</text>
</g>
<g >
<title>unicode_normalization::perfect_hash::mph_lookup (201 samples, 0.05%)</title><rect x="1117.9" y="309" width="0.6" height="15.0" fill="rgb(232,105,43)" rx="2" ry="2" />
<text  x="1120.92" y="319.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (152 samples, 0.04%)</title><rect x="1189.2" y="389" width="0.4" height="15.0" fill="rgb(253,96,51)" rx="2" ry="2" />
<text  x="1192.19" y="399.5" ></text>
</g>
<g >
<title>_int_realloc (493 samples, 0.12%)</title><rect x="58.7" y="485" width="1.4" height="15.0" fill="rgb(208,102,18)" rx="2" ry="2" />
<text  x="61.72" y="495.5" ></text>
</g>
<g >
<title>alloc::string::String::push (688 samples, 0.16%)</title><rect x="278.4" y="229" width="1.9" height="15.0" fill="rgb(251,152,41)" rx="2" ry="2" />
<text  x="281.41" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (315 samples, 0.07%)</title><rect x="1100.0" y="405" width="0.8" height="15.0" fill="rgb(208,191,33)" rx="2" ry="2" />
<text  x="1102.96" y="415.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (130 samples, 0.03%)</title><rect x="426.7" y="437" width="0.4" height="15.0" fill="rgb(248,48,30)" rx="2" ry="2" />
<text  x="429.74" y="447.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (2,761 samples, 0.65%)</title><rect x="290.1" y="325" width="7.6" height="15.0" fill="rgb(209,225,19)" rx="2" ry="2" />
<text  x="293.07" y="335.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (551 samples, 0.13%)</title><rect x="200.6" y="293" width="1.5" height="15.0" fill="rgb(253,84,21)" rx="2" ry="2" />
<text  x="203.58" y="303.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (264 samples, 0.06%)</title><rect x="1138.4" y="357" width="0.8" height="15.0" fill="rgb(242,110,16)" rx="2" ry="2" />
<text  x="1141.43" y="367.5" ></text>
</g>
<g >
<title>&lt;regex::pool::PoolGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (173 samples, 0.04%)</title><rect x="184.7" y="293" width="0.5" height="15.0" fill="rgb(234,74,33)" rx="2" ry="2" />
<text  x="187.69" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,144 samples, 0.27%)</title><rect x="189.6" y="149" width="3.1" height="15.0" fill="rgb(238,60,14)" rx="2" ry="2" />
<text  x="192.58" y="159.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::can_bow (664 samples, 0.16%)</title><rect x="1064.3" y="437" width="1.8" height="15.0" fill="rgb(250,218,47)" rx="2" ry="2" />
<text  x="1067.31" y="447.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (3,429 samples, 0.80%)</title><rect x="114.2" y="389" width="9.5" height="15.0" fill="rgb(212,7,30)" rx="2" ry="2" />
<text  x="117.22" y="399.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (3,066 samples, 0.72%)</title><rect x="275.6" y="357" width="8.5" height="15.0" fill="rgb(238,88,25)" rx="2" ry="2" />
<text  x="278.63" y="367.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (481 samples, 0.11%)</title><rect x="1041.5" y="277" width="1.3" height="15.0" fill="rgb(253,21,50)" rx="2" ry="2" />
<text  x="1044.45" y="287.5" ></text>
</g>
<g >
<title>unicode_normalization::perfect_hash::mph_lookup (421 samples, 0.10%)</title><rect x="1127.6" y="325" width="1.2" height="15.0" fill="rgb(242,143,9)" rx="2" ry="2" />
<text  x="1130.64" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11,635 samples, 2.72%)</title><rect x="869.7" y="325" width="32.1" height="15.0" fill="rgb(229,68,5)" rx="2" ry="2" />
<text  x="872.73" y="335.5" >ha..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (289 samples, 0.07%)</title><rect x="1036.8" y="229" width="0.8" height="15.0" fill="rgb(245,193,37)" rx="2" ry="2" />
<text  x="1039.77" y="239.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (140 samples, 0.03%)</title><rect x="310.0" y="229" width="0.4" height="15.0" fill="rgb(213,36,20)" rx="2" ry="2" />
<text  x="313.00" y="239.5" ></text>
</g>
<g >
<title>&lt;T as alloc::string::ToString&gt;::to_string (896 samples, 0.21%)</title><rect x="221.6" y="293" width="2.4" height="15.0" fill="rgb(242,175,26)" rx="2" ry="2" />
<text  x="224.58" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3,140 samples, 0.73%)</title><rect x="331.1" y="181" width="8.6" height="15.0" fill="rgb(206,165,54)" rx="2" ry="2" />
<text  x="334.07" y="191.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad_integral (156 samples, 0.04%)</title><rect x="223.6" y="245" width="0.4" height="15.0" fill="rgb(210,193,30)" rx="2" ry="2" />
<text  x="226.55" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::set_len (159 samples, 0.04%)</title><rect x="977.5" y="293" width="0.4" height="15.0" fill="rgb(231,45,8)" rx="2" ry="2" />
<text  x="980.51" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::label (242 samples, 0.06%)</title><rect x="380.5" y="309" width="0.6" height="15.0" fill="rgb(226,175,22)" rx="2" ry="2" />
<text  x="383.48" y="319.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::and_then (752 samples, 0.18%)</title><rect x="1162.6" y="405" width="2.0" height="15.0" fill="rgb(212,31,30)" rx="2" ry="2" />
<text  x="1165.57" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (268 samples, 0.06%)</title><rect x="274.6" y="213" width="0.8" height="15.0" fill="rgb(224,210,45)" rx="2" ry="2" />
<text  x="277.63" y="223.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (20,623 samples, 4.82%)</title><rect x="301.6" y="309" width="56.9" height="15.0" fill="rgb(236,169,9)" rx="2" ry="2" />
<text  x="304.61" y="319.5" >&lt;F as ..</text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (130 samples, 0.03%)</title><rect x="977.1" y="293" width="0.4" height="15.0" fill="rgb(220,154,10)" rx="2" ry="2" />
<text  x="980.15" y="303.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (135 samples, 0.03%)</title><rect x="227.5" y="165" width="0.4" height="15.0" fill="rgb(220,139,20)" rx="2" ry="2" />
<text  x="230.54" y="175.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (230 samples, 0.05%)</title><rect x="1060.6" y="341" width="0.6" height="15.0" fill="rgb(218,124,4)" rx="2" ry="2" />
<text  x="1063.60" y="351.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::build_lattice (265,645 samples, 62.10%)</title><rect x="362.3" y="453" width="732.8" height="15.0" fill="rgb(242,65,13)" rx="2" ry="2" />
<text  x="365.29" y="463.5" >sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::build_lattice</text>
</g>
<g >
<title>core::fmt::Formatter::pad (377 samples, 0.09%)</title><rect x="61.9" y="485" width="1.1" height="15.0" fill="rgb(225,199,51)" rx="2" ry="2" />
<text  x="64.93" y="495.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (258 samples, 0.06%)</title><rect x="338.4" y="85" width="0.8" height="15.0" fill="rgb(232,106,48)" rx="2" ry="2" />
<text  x="341.45" y="95.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state_imp (732 samples, 0.17%)</title><rect x="1104.2" y="277" width="2.0" height="15.0" fill="rgb(208,139,13)" rx="2" ry="2" />
<text  x="1107.17" y="287.5" ></text>
</g>
<g >
<title>sudachi (427,748 samples, 100.00%)</title><rect x="10.1" y="517" width="1179.9" height="15.0" fill="rgb(221,17,48)" rx="2" ry="2" />
<text  x="13.05" y="527.5" >sudachi</text>
</g>
<g >
<title>regex::dfa::Fsm::prefix_at (1,168 samples, 0.27%)</title><rect x="1133.4" y="261" width="3.3" height="15.0" fill="rgb(226,39,19)" rx="2" ry="2" />
<text  x="1136.43" y="271.5" ></text>
</g>
<g >
<title>core::option::Option&lt;&amp;T&gt;::copied (149 samples, 0.03%)</title><rect x="283.1" y="197" width="0.5" height="15.0" fill="rgb(246,86,39)" rx="2" ry="2" />
<text  x="286.14" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,772 samples, 0.41%)</title><rect x="322.0" y="101" width="4.9" height="15.0" fill="rgb(251,213,1)" rx="2" ry="2" />
<text  x="325.00" y="111.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (240 samples, 0.06%)</title><rect x="125.3" y="277" width="0.7" height="15.0" fill="rgb(247,211,0)" rx="2" ry="2" />
<text  x="128.33" y="287.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (152 samples, 0.04%)</title><rect x="1189.2" y="357" width="0.4" height="15.0" fill="rgb(251,62,14)" rx="2" ry="2" />
<text  x="1192.19" y="367.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (21,221 samples, 4.96%)</title><rect x="908.4" y="325" width="58.5" height="15.0" fill="rgb(232,101,2)" rx="2" ry="2" />
<text  x="911.39" y="335.5" >nom::n..</text>
</g>
<g >
<title>nom::number::complete::le_u16 (1,951 samples, 0.46%)</title><rect x="583.4" y="405" width="5.4" height="15.0" fill="rgb(229,99,4)" rx="2" ry="2" />
<text  x="586.41" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (596 samples, 0.14%)</title><rect x="1168.7" y="453" width="1.6" height="15.0" fill="rgb(251,190,3)" rx="2" ry="2" />
<text  x="1171.66" y="463.5" ></text>
</g>
<g >
<title>_int_free (292 samples, 0.07%)</title><rect x="213.7" y="309" width="0.8" height="15.0" fill="rgb(205,56,51)" rx="2" ry="2" />
<text  x="216.70" y="319.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (8,783 samples, 2.05%)</title><rect x="315.8" y="261" width="24.3" height="15.0" fill="rgb(237,96,46)" rx="2" ry="2" />
<text  x="318.83" y="271.5" >a..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[sudachi::analysis::node::Node]&gt; (3,257 samples, 0.76%)</title><rect x="231.6" y="357" width="8.9" height="15.0" fill="rgb(241,197,33)" rx="2" ry="2" />
<text  x="234.56" y="367.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::find_at_no_state (775 samples, 0.18%)</title><rect x="1104.0" y="309" width="2.2" height="15.0" fill="rgb(237,17,30)" rx="2" ry="2" />
<text  x="1107.05" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (215 samples, 0.05%)</title><rect x="446.1" y="421" width="0.6" height="15.0" fill="rgb(215,12,44)" rx="2" ry="2" />
<text  x="449.14" y="431.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::join (3,524 samples, 0.82%)</title><rect x="1158.6" y="453" width="9.7" height="15.0" fill="rgb(231,206,26)" rx="2" ry="2" />
<text  x="1161.62" y="463.5" ></text>
</g>
<g >
<title>_int_malloc (815 samples, 0.19%)</title><rect x="1090.4" y="149" width="2.2" height="15.0" fill="rgb(218,74,29)" rx="2" ry="2" />
<text  x="1093.38" y="159.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new (953 samples, 0.22%)</title><rect x="996.2" y="437" width="2.6" height="15.0" fill="rgb(245,117,14)" rx="2" ry="2" />
<text  x="999.22" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (3,140 samples, 0.73%)</title><rect x="331.1" y="149" width="8.6" height="15.0" fill="rgb(215,72,6)" rx="2" ry="2" />
<text  x="334.07" y="159.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,728 samples, 0.87%)</title><rect x="1019.0" y="309" width="10.3" height="15.0" fill="rgb(252,212,27)" rx="2" ry="2" />
<text  x="1022.03" y="319.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (2,067 samples, 0.48%)</title><rect x="896.1" y="213" width="5.7" height="15.0" fill="rgb(224,106,20)" rx="2" ry="2" />
<text  x="899.13" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_free (1,686 samples, 0.39%)</title><rect x="305.0" y="261" width="4.7" height="15.0" fill="rgb(212,198,15)" rx="2" ry="2" />
<text  x="308.03" y="271.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (239 samples, 0.06%)</title><rect x="183.8" y="309" width="0.6" height="15.0" fill="rgb(235,171,8)" rx="2" ry="2" />
<text  x="186.79" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,129 samples, 0.26%)</title><rect x="189.6" y="133" width="3.1" height="15.0" fill="rgb(228,220,40)" rx="2" ry="2" />
<text  x="192.60" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_free (194 samples, 0.05%)</title><rect x="224.2" y="197" width="0.5" height="15.0" fill="rgb(211,71,40)" rx="2" ry="2" />
<text  x="227.20" y="207.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad (522 samples, 0.12%)</title><rect x="1182.3" y="421" width="1.5" height="15.0" fill="rgb(234,65,3)" rx="2" ry="2" />
<text  x="1185.34" y="431.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (257 samples, 0.06%)</title><rect x="257.0" y="405" width="0.7" height="15.0" fill="rgb(225,228,2)" rx="2" ry="2" />
<text  x="260.02" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (330 samples, 0.08%)</title><rect x="274.6" y="341" width="0.9" height="15.0" fill="rgb(211,81,10)" rx="2" ry="2" />
<text  x="277.61" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (1,483 samples, 0.35%)</title><rect x="236.2" y="213" width="4.1" height="15.0" fill="rgb(209,228,24)" rx="2" ry="2" />
<text  x="239.22" y="223.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (224 samples, 0.05%)</title><rect x="224.1" y="213" width="0.7" height="15.0" fill="rgb(219,96,5)" rx="2" ry="2" />
<text  x="227.14" y="223.5" ></text>
</g>
<g >
<title>aho_corasick::packed::api::Searcher::find_at (1,100 samples, 0.26%)</title><rect x="1133.6" y="213" width="3.1" height="15.0" fill="rgb(221,173,10)" rx="2" ry="2" />
<text  x="1136.62" y="223.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::lexicon::trie::TrieEntryIter as core::iter::traits::iterator::Iterator&gt;::next (9,769 samples, 2.28%)</title><rect x="377.9" y="325" width="26.9" height="15.0" fill="rgb(224,104,4)" rx="2" ry="2" />
<text  x="380.89" y="335.5" >&lt;..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (18,257 samples, 4.27%)</title><rect x="475.9" y="405" width="50.4" height="15.0" fill="rgb(207,121,53)" rx="2" ry="2" />
<text  x="478.90" y="415.5" >alloc..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (193 samples, 0.05%)</title><rect x="1077.9" y="261" width="0.5" height="15.0" fill="rgb(240,113,47)" rx="2" ry="2" />
<text  x="1080.89" y="271.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (23,237 samples, 5.43%)</title><rect x="908.4" y="373" width="64.1" height="15.0" fill="rgb(231,212,6)" rx="2" ry="2" />
<text  x="911.39" y="383.5" >nom::se..</text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (944 samples, 0.22%)</title><rect x="1111.2" y="325" width="2.6" height="15.0" fill="rgb(248,14,20)" rx="2" ry="2" />
<text  x="1114.17" y="335.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::AhoCorasick&lt;S&gt;::earliest_find (766 samples, 0.18%)</title><rect x="1107.0" y="357" width="2.1" height="15.0" fill="rgb(242,26,21)" rx="2" ry="2" />
<text  x="1110.01" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (161 samples, 0.04%)</title><rect x="31.1" y="437" width="0.5" height="15.0" fill="rgb(234,133,14)" rx="2" ry="2" />
<text  x="34.12" y="447.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (2,067 samples, 0.48%)</title><rect x="896.1" y="245" width="5.7" height="15.0" fill="rgb(210,125,6)" rx="2" ry="2" />
<text  x="899.13" y="255.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy (3,430 samples, 0.80%)</title><rect x="1158.7" y="421" width="9.5" height="15.0" fill="rgb(235,211,6)" rx="2" ry="2" />
<text  x="1161.74" y="431.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (536 samples, 0.13%)</title><rect x="14.0" y="485" width="1.5" height="15.0" fill="rgb(238,129,47)" rx="2" ry="2" />
<text  x="17.02" y="495.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (423 samples, 0.10%)</title><rect x="358.5" y="309" width="1.2" height="15.0" fill="rgb(246,54,52)" rx="2" ry="2" />
<text  x="361.50" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::character_category::CharacterCategory::get_category_types (803 samples, 0.19%)</title><rect x="1141.5" y="437" width="2.2" height="15.0" fill="rgb(248,46,0)" rx="2" ry="2" />
<text  x="1144.50" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,707 samples, 0.63%)</title><rect x="320.2" y="181" width="7.4" height="15.0" fill="rgb(245,101,17)" rx="2" ry="2" />
<text  x="323.16" y="191.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (178 samples, 0.04%)</title><rect x="41.2" y="485" width="0.5" height="15.0" fill="rgb(211,118,46)" rx="2" ry="2" />
<text  x="44.17" y="495.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,215 samples, 0.28%)</title><rect x="1133.3" y="277" width="3.4" height="15.0" fill="rgb(242,126,8)" rx="2" ry="2" />
<text  x="1136.30" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (665 samples, 0.16%)</title><rect x="252.4" y="309" width="1.8" height="15.0" fill="rgb(220,18,51)" rx="2" ry="2" />
<text  x="255.38" y="319.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (128 samples, 0.03%)</title><rect x="153.2" y="261" width="0.3" height="15.0" fill="rgb(223,12,36)" rx="2" ry="2" />
<text  x="156.18" y="271.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (191 samples, 0.04%)</title><rect x="192.8" y="197" width="0.5" height="15.0" fill="rgb(253,169,15)" rx="2" ry="2" />
<text  x="195.76" y="207.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (119 samples, 0.03%)</title><rect x="428.2" y="389" width="0.3" height="15.0" fill="rgb(224,204,25)" rx="2" ry="2" />
<text  x="431.22" y="399.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (110 samples, 0.03%)</title><rect x="280.0" y="197" width="0.3" height="15.0" fill="rgb(241,7,42)" rx="2" ry="2" />
<text  x="282.99" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,674 samples, 0.63%)</title><rect x="320.2" y="165" width="7.4" height="15.0" fill="rgb(215,207,5)" rx="2" ry="2" />
<text  x="323.25" y="175.5" ></text>
</g>
<g >
<title>__rdl_realloc (176 samples, 0.04%)</title><rect x="506.6" y="277" width="0.5" height="15.0" fill="rgb(239,191,34)" rx="2" ry="2" />
<text  x="509.57" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3,469 samples, 0.81%)</title><rect x="319.4" y="229" width="9.6" height="15.0" fill="rgb(206,228,6)" rx="2" ry="2" />
<text  x="322.42" y="239.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i32::{{closure}} (140 samples, 0.03%)</title><rect x="310.0" y="213" width="0.4" height="15.0" fill="rgb(223,221,17)" rx="2" ry="2" />
<text  x="313.00" y="223.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (133 samples, 0.03%)</title><rect x="1153.9" y="341" width="0.4" height="15.0" fill="rgb(231,90,11)" rx="2" ry="2" />
<text  x="1156.89" y="351.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (3,592 samples, 0.84%)</title><rect x="754.9" y="277" width="9.9" height="15.0" fill="rgb(224,47,22)" rx="2" ry="2" />
<text  x="757.93" y="287.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (171 samples, 0.04%)</title><rect x="423.4" y="357" width="0.4" height="15.0" fill="rgb(225,23,11)" rx="2" ry="2" />
<text  x="426.36" y="367.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (542 samples, 0.13%)</title><rect x="138.5" y="277" width="1.5" height="15.0" fill="rgb(240,21,34)" rx="2" ry="2" />
<text  x="141.49" y="287.5" ></text>
</g>
<g >
<title>fancy_regex::vm::run (42,193 samples, 9.86%)</title><rect x="72.3" y="405" width="116.4" height="15.0" fill="rgb(236,224,32)" rx="2" ry="2" />
<text  x="75.33" y="415.5" >fancy_regex::v..</text>
</g>
<g >
<title>aho_corasick::packed::api::Searcher::find (1,100 samples, 0.26%)</title><rect x="1133.6" y="229" width="3.1" height="15.0" fill="rgb(246,89,52)" rx="2" ry="2" />
<text  x="1136.62" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;sudachi::analysis::node::Node,alloc::alloc::Global&gt;&gt; (150 samples, 0.04%)</title><rect x="217.2" y="357" width="0.4" height="15.0" fill="rgb(254,34,12)" rx="2" ry="2" />
<text  x="220.20" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (324 samples, 0.08%)</title><rect x="274.6" y="325" width="0.9" height="15.0" fill="rgb(217,174,2)" rx="2" ry="2" />
<text  x="277.63" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (111 samples, 0.03%)</title><rect x="226.6" y="117" width="0.3" height="15.0" fill="rgb(241,50,43)" rx="2" ry="2" />
<text  x="229.55" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (445 samples, 0.10%)</title><rect x="209.9" y="309" width="1.2" height="15.0" fill="rgb(218,59,43)" rx="2" ry="2" />
<text  x="212.90" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (189 samples, 0.04%)</title><rect x="342.9" y="245" width="0.5" height="15.0" fill="rgb(252,50,11)" rx="2" ry="2" />
<text  x="345.91" y="255.5" ></text>
</g>
<g >
<title>_int_realloc (8,516 samples, 1.99%)</title><rect x="483.1" y="261" width="23.5" height="15.0" fill="rgb(251,152,11)" rx="2" ry="2" />
<text  x="486.07" y="271.5" >_..</text>
</g>
<g >
<title>nom::number::complete::le_i16 (266 samples, 0.06%)</title><rect x="1059.9" y="325" width="0.7" height="15.0" fill="rgb(244,186,53)" rx="2" ry="2" />
<text  x="1062.86" y="335.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i16&gt;::hash (38,016 samples, 8.89%)</title><rect x="764.9" y="309" width="104.8" height="15.0" fill="rgb(247,67,21)" rx="2" ry="2" />
<text  x="767.87" y="319.5" >core::hash::..</text>
</g>
<g >
<title>alloc::alloc::dealloc (292 samples, 0.07%)</title><rect x="272.5" y="309" width="0.8" height="15.0" fill="rgb(230,97,18)" rx="2" ry="2" />
<text  x="275.51" y="319.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (201 samples, 0.05%)</title><rect x="1154.3" y="341" width="0.6" height="15.0" fill="rgb(253,47,43)" rx="2" ry="2" />
<text  x="1157.33" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,056 samples, 0.48%)</title><rect x="1083.3" y="277" width="5.6" height="15.0" fill="rgb(233,176,18)" rx="2" ry="2" />
<text  x="1086.27" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,379 samples, 0.32%)</title><rect x="1133.1" y="293" width="3.8" height="15.0" fill="rgb(208,96,52)" rx="2" ry="2" />
<text  x="1136.08" y="303.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy::{{closure}} (748 samples, 0.17%)</title><rect x="1162.6" y="389" width="2.0" height="15.0" fill="rgb(246,82,54)" rx="2" ry="2" />
<text  x="1165.59" y="399.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (762 samples, 0.18%)</title><rect x="421.1" y="373" width="2.1" height="15.0" fill="rgb(251,156,27)" rx="2" ry="2" />
<text  x="424.11" y="383.5" ></text>
</g>
<g >
<title>std::os::imp::unix::net::datagram::UnixDatagram::send (735 samples, 0.17%)</title><rect x="1156.5" y="405" width="2.0" height="15.0" fill="rgb(205,104,13)" rx="2" ry="2" />
<text  x="1159.50" y="415.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (423 samples, 0.10%)</title><rect x="1079.3" y="325" width="1.2" height="15.0" fill="rgb(235,191,21)" rx="2" ry="2" />
<text  x="1082.35" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl::{{closure}} (541 samples, 0.13%)</title><rect x="1102.2" y="357" width="1.5" height="15.0" fill="rgb(218,222,45)" rx="2" ry="2" />
<text  x="1105.17" y="367.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::shortest_match_at (185 samples, 0.04%)</title><rect x="194.9" y="373" width="0.5" height="15.0" fill="rgb(253,125,21)" rx="2" ry="2" />
<text  x="197.89" y="383.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (769 samples, 0.18%)</title><rect x="454.6" y="389" width="2.2" height="15.0" fill="rgb(224,67,11)" rx="2" ry="2" />
<text  x="457.64" y="399.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify128 (785 samples, 0.18%)</title><rect x="1134.1" y="165" width="2.2" height="15.0" fill="rgb(229,117,28)" rx="2" ry="2" />
<text  x="1137.09" y="175.5" ></text>
</g>
<g >
<title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,147 samples, 0.27%)</title><rect x="67.7" y="469" width="3.2" height="15.0" fill="rgb(218,107,23)" rx="2" ry="2" />
<text  x="70.73" y="479.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (380 samples, 0.09%)</title><rect x="22.0" y="485" width="1.0" height="15.0" fill="rgb(238,18,41)" rx="2" ry="2" />
<text  x="24.96" y="495.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (481 samples, 0.11%)</title><rect x="1041.5" y="293" width="1.3" height="15.0" fill="rgb(209,141,40)" rx="2" ry="2" />
<text  x="1044.45" y="303.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (936 samples, 0.22%)</title><rect x="131.9" y="357" width="2.6" height="15.0" fill="rgb(222,26,15)" rx="2" ry="2" />
<text  x="134.87" y="367.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (936 samples, 0.22%)</title><rect x="131.9" y="373" width="2.6" height="15.0" fill="rgb(224,7,33)" rx="2" ry="2" />
<text  x="134.87" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (441 samples, 0.10%)</title><rect x="49.9" y="485" width="1.2" height="15.0" fill="rgb(229,203,48)" rx="2" ry="2" />
<text  x="52.91" y="495.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,434 samples, 0.34%)</title><rect x="578.5" y="405" width="4.0" height="15.0" fill="rgb(219,183,16)" rx="2" ry="2" />
<text  x="581.51" y="415.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::spare_capacity (301 samples, 0.07%)</title><rect x="1177.4" y="389" width="0.8" height="15.0" fill="rgb(211,178,42)" rx="2" ry="2" />
<text  x="1180.39" y="399.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (120 samples, 0.03%)</title><rect x="1174.3" y="405" width="0.3" height="15.0" fill="rgb(221,141,23)" rx="2" ry="2" />
<text  x="1177.27" y="415.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (18,940 samples, 4.43%)</title><rect x="908.4" y="261" width="52.2" height="15.0" fill="rgb(219,55,31)" rx="2" ry="2" />
<text  x="911.39" y="271.5" >nom::..</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (125 samples, 0.03%)</title><rect x="192.9" y="181" width="0.4" height="15.0" fill="rgb(248,197,52)" rx="2" ry="2" />
<text  x="195.94" y="191.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (315 samples, 0.07%)</title><rect x="1100.0" y="389" width="0.8" height="15.0" fill="rgb(218,53,2)" rx="2" ry="2" />
<text  x="1102.96" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (143 samples, 0.03%)</title><rect x="217.2" y="325" width="0.4" height="15.0" fill="rgb(230,205,3)" rx="2" ry="2" />
<text  x="220.21" y="335.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (164 samples, 0.04%)</title><rect x="12.0" y="485" width="0.5" height="15.0" fill="rgb(239,112,35)" rx="2" ry="2" />
<text  x="15.03" y="495.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::next_state_no_fail (299 samples, 0.07%)</title><rect x="1108.1" y="261" width="0.8" height="15.0" fill="rgb(245,178,52)" rx="2" ry="2" />
<text  x="1111.05" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Byte::is_ascii_word (115 samples, 0.03%)</title><rect x="140.9" y="277" width="0.3" height="15.0" fill="rgb(222,192,44)" rx="2" ry="2" />
<text  x="143.88" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_mul (164 samples, 0.04%)</title><rect x="979.0" y="197" width="0.5" height="15.0" fill="rgb(225,144,16)" rx="2" ry="2" />
<text  x="982.03" y="207.5" ></text>
</g>
<g >
<title>_int_free (1,094 samples, 0.26%)</title><rect x="52.9" y="485" width="3.1" height="15.0" fill="rgb(252,215,13)" rx="2" ry="2" />
<text  x="55.94" y="495.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get (134 samples, 0.03%)</title><rect x="97.2" y="325" width="0.4" height="15.0" fill="rgb(227,141,54)" rx="2" ry="2" />
<text  x="100.20" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (3,958 samples, 0.93%)</title><rect x="495.5" y="245" width="10.9" height="15.0" fill="rgb(245,43,24)" rx="2" ry="2" />
<text  x="498.46" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,409 samples, 0.33%)</title><rect x="1037.6" y="325" width="3.9" height="15.0" fill="rgb(248,204,34)" rx="2" ry="2" />
<text  x="1040.57" y="335.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (198 samples, 0.05%)</title><rect x="1139.7" y="389" width="0.5" height="15.0" fill="rgb(225,216,39)" rx="2" ry="2" />
<text  x="1142.69" y="399.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,302 samples, 0.54%)</title><rect x="1083.3" y="341" width="6.3" height="15.0" fill="rgb(207,213,1)" rx="2" ry="2" />
<text  x="1086.27" y="351.5" ></text>
</g>
<g >
<title>core::str::validations::run_utf8_validation (451 samples, 0.11%)</title><rect x="68.2" y="389" width="1.3" height="15.0" fill="rgb(244,32,36)" rx="2" ry="2" />
<text  x="71.21" y="399.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::captures_read_at (2,395 samples, 0.56%)</title><rect x="196.8" y="389" width="6.7" height="15.0" fill="rgb(238,180,33)" rx="2" ry="2" />
<text  x="199.85" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::dictionary::JapaneseDictionary::from_cfg (230 samples, 0.05%)</title><rect x="1154.3" y="469" width="0.6" height="15.0" fill="rgb(208,57,2)" rx="2" ry="2" />
<text  x="1157.29" y="479.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (190,251 samples, 44.48%)</title><rect x="448.3" y="437" width="524.8" height="15.0" fill="rgb(227,208,27)" rx="2" ry="2" />
<text  x="451.32" y="447.5" >sudachi::analysis::lattice::Lattice::insert</text>
</g>
<g >
<title>core::ptr::write (256 samples, 0.06%)</title><rect x="122.0" y="357" width="0.7" height="15.0" fill="rgb(215,5,48)" rx="2" ry="2" />
<text  x="125.00" y="367.5" ></text>
</g>
<g >
<title>_int_malloc (443 samples, 0.10%)</title><rect x="16.8" y="485" width="1.2" height="15.0" fill="rgb(213,206,2)" rx="2" ry="2" />
<text  x="19.77" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (121 samples, 0.03%)</title><rect x="506.7" y="261" width="0.4" height="15.0" fill="rgb(235,144,13)" rx="2" ry="2" />
<text  x="509.72" y="271.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (6,176 samples, 1.44%)</title><rect x="428.6" y="437" width="17.1" height="15.0" fill="rgb(253,118,5)" rx="2" ry="2" />
<text  x="431.65" y="447.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (326 samples, 0.08%)</title><rect x="297.7" y="373" width="0.9" height="15.0" fill="rgb(222,221,27)" rx="2" ry="2" />
<text  x="300.69" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1,030 samples, 0.24%)</title><rect x="1024.6" y="261" width="2.9" height="15.0" fill="rgb(236,177,27)" rx="2" ry="2" />
<text  x="1027.62" y="271.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (952 samples, 0.22%)</title><rect x="1076.2" y="309" width="2.7" height="15.0" fill="rgb(212,172,49)" rx="2" ry="2" />
<text  x="1079.23" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (230 samples, 0.05%)</title><rect x="447.1" y="405" width="0.6" height="15.0" fill="rgb(206,65,34)" rx="2" ry="2" />
<text  x="450.10" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (542 samples, 0.13%)</title><rect x="278.5" y="181" width="1.5" height="15.0" fill="rgb(238,142,14)" rx="2" ry="2" />
<text  x="281.49" y="191.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_info (33,725 samples, 7.88%)</title><rect x="268.5" y="421" width="93.0" height="15.0" fill="rgb(222,31,38)" rx="2" ry="2" />
<text  x="271.47" y="431.5" >sudachi::di..</text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (164 samples, 0.04%)</title><rect x="1112.2" y="245" width="0.5" height="15.0" fill="rgb(245,91,24)" rx="2" ry="2" />
<text  x="1115.23" y="255.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,526 samples, 0.36%)</title><rect x="225.0" y="309" width="4.2" height="15.0" fill="rgb(229,144,51)" rx="2" ry="2" />
<text  x="227.98" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_right_id (2,254 samples, 0.53%)</title><rect x="1055.0" y="405" width="6.2" height="15.0" fill="rgb(210,22,51)" rx="2" ry="2" />
<text  x="1058.02" y="415.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (725 samples, 0.17%)</title><rect x="222.0" y="261" width="2.0" height="15.0" fill="rgb(235,90,4)" rx="2" ry="2" />
<text  x="225.02" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSync&gt; (173 samples, 0.04%)</title><rect x="184.7" y="325" width="0.5" height="15.0" fill="rgb(216,197,28)" rx="2" ry="2" />
<text  x="187.69" y="335.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt; (3,732 samples, 0.87%)</title><rect x="219.7" y="373" width="10.3" height="15.0" fill="rgb(213,40,26)" rx="2" ry="2" />
<text  x="222.75" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::word_info_parser (26,609 samples, 6.22%)</title><rect x="288.1" y="389" width="73.4" height="15.0" fill="rgb(246,144,37)" rx="2" ry="2" />
<text  x="291.10" y="399.5" >sudachi:..</text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify64 (750 samples, 0.18%)</title><rect x="1134.1" y="149" width="2.1" height="15.0" fill="rgb(225,76,10)" rx="2" ry="2" />
<text  x="1137.09" y="159.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (617 samples, 0.14%)</title><rect x="329.0" y="229" width="1.7" height="15.0" fill="rgb(208,45,46)" rx="2" ry="2" />
<text  x="332.01" y="239.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (16,461 samples, 3.85%)</title><rect x="915.2" y="245" width="45.4" height="15.0" fill="rgb(218,181,24)" rx="2" ry="2" />
<text  x="918.23" y="255.5" >nom:..</text>
</g>
<g >
<title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,245 samples, 0.29%)</title><rect x="1089.6" y="373" width="3.5" height="15.0" fill="rgb(208,140,29)" rx="2" ry="2" />
<text  x="1092.62" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::u32_array_parser (295 samples, 0.07%)</title><rect x="357.7" y="245" width="0.8" height="15.0" fill="rgb(220,195,18)" rx="2" ry="2" />
<text  x="360.68" y="255.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite::{{closure}} (12,764 samples, 2.98%)</title><rect x="1101.9" y="405" width="35.2" height="15.0" fill="rgb(238,117,28)" rx="2" ry="2" />
<text  x="1104.94" y="415.5" >su..</text>
</g>
<g >
<title>fancy_regex::vm::State::pop (145 samples, 0.03%)</title><rect x="11.4" y="485" width="0.4" height="15.0" fill="rgb(216,144,33)" rx="2" ry="2" />
<text  x="14.36" y="495.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (183 samples, 0.04%)</title><rect x="212.0" y="405" width="0.5" height="15.0" fill="rgb(206,13,49)" rx="2" ry="2" />
<text  x="214.99" y="415.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (117 samples, 0.03%)</title><rect x="339.7" y="245" width="0.4" height="15.0" fill="rgb(239,210,35)" rx="2" ry="2" />
<text  x="342.73" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (496 samples, 0.12%)</title><rect x="889.8" y="261" width="1.4" height="15.0" fill="rgb(224,110,54)" rx="2" ry="2" />
<text  x="892.78" y="271.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (115 samples, 0.03%)</title><rect x="98.7" y="357" width="0.3" height="15.0" fill="rgb(215,220,21)" rx="2" ry="2" />
<text  x="101.66" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (220 samples, 0.05%)</title><rect x="374.7" y="389" width="0.6" height="15.0" fill="rgb(244,216,33)" rx="2" ry="2" />
<text  x="377.67" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (117 samples, 0.03%)</title><rect x="60.3" y="485" width="0.3" height="15.0" fill="rgb(211,44,4)" rx="2" ry="2" />
<text  x="63.26" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (7,230 samples, 1.69%)</title><rect x="1017.6" y="341" width="20.0" height="15.0" fill="rgb(250,82,9)" rx="2" ry="2" />
<text  x="1020.62" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (337 samples, 0.08%)</title><rect x="222.4" y="117" width="0.9" height="15.0" fill="rgb(209,67,18)" rx="2" ry="2" />
<text  x="225.38" y="127.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2,138 samples, 0.50%)</title><rect x="343.8" y="165" width="5.9" height="15.0" fill="rgb(233,215,28)" rx="2" ry="2" />
<text  x="346.76" y="175.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (168 samples, 0.04%)</title><rect x="10.5" y="501" width="0.4" height="15.0" fill="rgb(246,107,38)" rx="2" ry="2" />
<text  x="13.45" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (223 samples, 0.05%)</title><rect x="1111.3" y="261" width="0.7" height="15.0" fill="rgb(248,78,24)" rx="2" ry="2" />
<text  x="1114.34" y="271.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (241 samples, 0.06%)</title><rect x="1112.8" y="245" width="0.7" height="15.0" fill="rgb(231,92,8)" rx="2" ry="2" />
<text  x="1115.84" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (129 samples, 0.03%)</title><rect x="26.3" y="485" width="0.4" height="15.0" fill="rgb(254,229,41)" rx="2" ry="2" />
<text  x="29.31" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (145 samples, 0.03%)</title><rect x="247.2" y="437" width="0.4" height="15.0" fill="rgb(221,134,43)" rx="2" ry="2" />
<text  x="250.19" y="447.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (135 samples, 0.03%)</title><rect x="227.5" y="181" width="0.4" height="15.0" fill="rgb(222,84,5)" rx="2" ry="2" />
<text  x="230.54" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (2,684 samples, 0.63%)</title><rect x="1146.9" y="373" width="7.4" height="15.0" fill="rgb(208,126,24)" rx="2" ry="2" />
<text  x="1149.86" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (1,951 samples, 0.46%)</title><rect x="240.6" y="325" width="5.4" height="15.0" fill="rgb(227,106,50)" rx="2" ry="2" />
<text  x="243.58" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,425 samples, 0.57%)</title><rect x="320.8" y="133" width="6.7" height="15.0" fill="rgb(223,9,11)" rx="2" ry="2" />
<text  x="323.80" y="143.5" ></text>
</g>
<g >
<title>&lt;T as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::oov_provider_plugins (382 samples, 0.09%)</title><rect x="374.2" y="437" width="1.1" height="15.0" fill="rgb(207,204,30)" rx="2" ry="2" />
<text  x="377.22" y="447.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (264 samples, 0.06%)</title><rect x="194.1" y="309" width="0.7" height="15.0" fill="rgb(234,148,11)" rx="2" ry="2" />
<text  x="197.08" y="319.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (7,156 samples, 1.67%)</title><rect x="976.4" y="405" width="19.8" height="15.0" fill="rgb(235,143,23)" rx="2" ry="2" />
<text  x="979.43" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_flags (602 samples, 0.14%)</title><rect x="180.1" y="277" width="1.6" height="15.0" fill="rgb(227,163,23)" rx="2" ry="2" />
<text  x="183.07" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (227 samples, 0.05%)</title><rect x="427.9" y="421" width="0.6" height="15.0" fill="rgb(234,40,12)" rx="2" ry="2" />
<text  x="430.92" y="431.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::find_at (1,444 samples, 0.34%)</title><rect x="1133.0" y="325" width="3.9" height="15.0" fill="rgb(214,140,22)" rx="2" ry="2" />
<text  x="1135.95" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (247 samples, 0.06%)</title><rect x="1040.8" y="261" width="0.7" height="15.0" fill="rgb(242,212,3)" rx="2" ry="2" />
<text  x="1043.77" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,309 samples, 0.77%)</title><rect x="231.4" y="373" width="9.1" height="15.0" fill="rgb(238,76,44)" rx="2" ry="2" />
<text  x="234.42" y="383.5" ></text>
</g>
<g >
<title>regex::re_trait::RegularExpression::locations (189 samples, 0.04%)</title><rect x="196.3" y="373" width="0.5" height="15.0" fill="rgb(249,223,18)" rx="2" ry="2" />
<text  x="199.32" y="383.5" ></text>
</g>
<g >
<title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (1,240 samples, 0.29%)</title><rect x="1128.9" y="373" width="3.5" height="15.0" fill="rgb(243,91,26)" rx="2" ry="2" />
<text  x="1131.94" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (143 samples, 0.03%)</title><rect x="1112.3" y="229" width="0.4" height="15.0" fill="rgb(222,28,15)" rx="2" ry="2" />
<text  x="1115.29" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (954 samples, 0.22%)</title><rect x="252.2" y="421" width="2.7" height="15.0" fill="rgb(244,13,38)" rx="2" ry="2" />
<text  x="255.22" y="431.5" ></text>
</g>
<g >
<title>core::ptr::write (355 samples, 0.08%)</title><rect x="981.1" y="373" width="1.0" height="15.0" fill="rgb(217,157,10)" rx="2" ry="2" />
<text  x="984.09" y="383.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (335 samples, 0.08%)</title><rect x="1138.4" y="389" width="0.9" height="15.0" fill="rgb(251,173,13)" rx="2" ry="2" />
<text  x="1141.42" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,040 samples, 0.24%)</title><rect x="1089.8" y="165" width="2.8" height="15.0" fill="rgb(206,126,4)" rx="2" ry="2" />
<text  x="1092.76" y="175.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (3,095 samples, 0.72%)</title><rect x="331.2" y="133" width="8.5" height="15.0" fill="rgb(216,130,41)" rx="2" ry="2" />
<text  x="334.19" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,338 samples, 0.55%)</title><rect x="290.1" y="277" width="6.4" height="15.0" fill="rgb(244,73,13)" rx="2" ry="2" />
<text  x="293.07" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::word_id_to_offset (1,455 samples, 0.34%)</title><rect x="284.1" y="389" width="4.0" height="15.0" fill="rgb(238,67,2)" rx="2" ry="2" />
<text  x="287.09" y="399.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,245 samples, 0.29%)</title><rect x="1089.6" y="357" width="3.5" height="15.0" fill="rgb(234,51,33)" rx="2" ry="2" />
<text  x="1092.62" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (262 samples, 0.06%)</title><rect x="125.3" y="293" width="0.7" height="15.0" fill="rgb(231,94,52)" rx="2" ry="2" />
<text  x="128.27" y="303.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (717 samples, 0.17%)</title><rect x="1156.6" y="389" width="1.9" height="15.0" fill="rgb(217,75,11)" rx="2" ry="2" />
<text  x="1159.55" y="399.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (981 samples, 0.23%)</title><rect x="977.1" y="325" width="2.8" height="15.0" fill="rgb(216,1,37)" rx="2" ry="2" />
<text  x="980.15" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (800 samples, 0.19%)</title><rect x="47.7" y="485" width="2.2" height="15.0" fill="rgb(229,73,1)" rx="2" ry="2" />
<text  x="50.71" y="495.5" ></text>
</g>
<g >
<title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (240 samples, 0.06%)</title><rect x="1110.2" y="325" width="0.7" height="15.0" fill="rgb(228,37,44)" rx="2" ry="2" />
<text  x="1113.23" y="335.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (288 samples, 0.07%)</title><rect x="32.9" y="485" width="0.8" height="15.0" fill="rgb(218,61,28)" rx="2" ry="2" />
<text  x="35.91" y="495.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (9,566 samples, 2.24%)</title><rect x="480.7" y="309" width="26.4" height="15.0" fill="rgb(211,1,33)" rx="2" ry="2" />
<text  x="483.73" y="319.5" >a..</text>
</g>
<g >
<title>_int_malloc (1,030 samples, 0.24%)</title><rect x="346.1" y="117" width="2.9" height="15.0" fill="rgb(232,27,33)" rx="2" ry="2" />
<text  x="349.15" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (143 samples, 0.03%)</title><rect x="358.0" y="197" width="0.4" height="15.0" fill="rgb(214,218,43)" rx="2" ry="2" />
<text  x="361.01" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9,566 samples, 2.24%)</title><rect x="480.7" y="325" width="26.4" height="15.0" fill="rgb(245,211,31)" rx="2" ry="2" />
<text  x="483.73" y="335.5" >&lt;..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (202 samples, 0.05%)</title><rect x="1072.9" y="357" width="0.6" height="15.0" fill="rgb(227,215,52)" rx="2" ry="2" />
<text  x="1075.93" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (558 samples, 0.13%)</title><rect x="1077.3" y="277" width="1.6" height="15.0" fill="rgb(208,113,48)" rx="2" ry="2" />
<text  x="1080.32" y="287.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (324 samples, 0.08%)</title><rect x="296.5" y="277" width="0.9" height="15.0" fill="rgb(209,175,18)" rx="2" ry="2" />
<text  x="299.52" y="287.5" ></text>
</g>
<g >
<title>__fdget_pos (145 samples, 0.03%)</title><rect x="1157.1" y="293" width="0.4" height="15.0" fill="rgb(234,114,21)" rx="2" ry="2" />
<text  x="1160.06" y="303.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (28,771 samples, 6.73%)</title><rect x="663.1" y="325" width="79.3" height="15.0" fill="rgb(245,141,48)" rx="2" ry="2" />
<text  x="666.08" y="335.5" >&lt;std::col..</text>
</g>
<g >
<title>std::io::read_until (517 samples, 0.12%)</title><rect x="69.5" y="389" width="1.4" height="15.0" fill="rgb(246,182,4)" rx="2" ry="2" />
<text  x="72.46" y="399.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,662 samples, 0.62%)</title><rect x="290.1" y="309" width="7.3" height="15.0" fill="rgb(235,119,46)" rx="2" ry="2" />
<text  x="293.07" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::connect_cost_parser (152 samples, 0.04%)</title><rect x="1189.2" y="485" width="0.4" height="15.0" fill="rgb(217,100,34)" rx="2" ry="2" />
<text  x="1192.19" y="495.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::repeat (164 samples, 0.04%)</title><rect x="979.0" y="229" width="0.5" height="15.0" fill="rgb(239,175,20)" rx="2" ry="2" />
<text  x="982.03" y="239.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (601 samples, 0.14%)</title><rect x="209.9" y="373" width="1.7" height="15.0" fill="rgb(208,117,19)" rx="2" ry="2" />
<text  x="212.90" y="383.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (136 samples, 0.03%)</title><rect x="215.3" y="341" width="0.4" height="15.0" fill="rgb(227,13,32)" rx="2" ry="2" />
<text  x="218.34" y="351.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (351 samples, 0.08%)</title><rect x="122.7" y="357" width="1.0" height="15.0" fill="rgb(240,206,14)" rx="2" ry="2" />
<text  x="125.71" y="367.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (118 samples, 0.03%)</title><rect x="1163.0" y="341" width="0.4" height="15.0" fill="rgb(208,206,2)" rx="2" ry="2" />
<text  x="1166.04" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (2,061 samples, 0.48%)</title><rect x="103.2" y="373" width="5.7" height="15.0" fill="rgb(245,24,23)" rx="2" ry="2" />
<text  x="106.21" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (498 samples, 0.12%)</title><rect x="280.4" y="213" width="1.3" height="15.0" fill="rgb(233,122,33)" rx="2" ry="2" />
<text  x="283.35" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (223 samples, 0.05%)</title><rect x="30.0" y="485" width="0.6" height="15.0" fill="rgb(206,18,53)" rx="2" ry="2" />
<text  x="32.99" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6,461 samples, 1.51%)</title><rect x="675.7" y="277" width="17.9" height="15.0" fill="rgb(233,85,17)" rx="2" ry="2" />
<text  x="678.74" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,094 samples, 0.49%)</title><rect x="1076.1" y="357" width="5.8" height="15.0" fill="rgb(250,134,25)" rx="2" ry="2" />
<text  x="1079.12" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (9,243 samples, 2.16%)</title><rect x="481.1" y="277" width="25.5" height="15.0" fill="rgb(235,34,9)" rx="2" ry="2" />
<text  x="484.07" y="287.5" >_..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,281 samples, 0.53%)</title><rect x="960.6" y="277" width="6.3" height="15.0" fill="rgb(251,73,30)" rx="2" ry="2" />
<text  x="963.64" y="287.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (115 samples, 0.03%)</title><rect x="1135.6" y="69" width="0.3" height="15.0" fill="rgb(254,171,16)" rx="2" ry="2" />
<text  x="1138.63" y="79.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (2,118 samples, 0.50%)</title><rect x="189.0" y="437" width="5.8" height="15.0" fill="rgb(228,144,48)" rx="2" ry="2" />
<text  x="191.98" y="447.5" ></text>
</g>
<g >
<title>_int_malloc (2,220 samples, 0.52%)</title><rect x="333.0" y="101" width="6.2" height="15.0" fill="rgb(245,171,29)" rx="2" ry="2" />
<text  x="336.04" y="111.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,551 samples, 0.60%)</title><rect x="1146.9" y="341" width="7.0" height="15.0" fill="rgb(209,148,52)" rx="2" ry="2" />
<text  x="1149.86" y="351.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3,607 samples, 0.84%)</title><rect x="826.1" y="213" width="9.9" height="15.0" fill="rgb(237,150,34)" rx="2" ry="2" />
<text  x="829.08" y="223.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (543 samples, 0.13%)</title><rect x="263.4" y="421" width="1.5" height="15.0" fill="rgb(232,2,11)" rx="2" ry="2" />
<text  x="266.41" y="431.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3,670 samples, 0.86%)</title><rect x="159.1" y="277" width="10.1" height="15.0" fill="rgb(219,143,28)" rx="2" ry="2" />
<text  x="162.06" y="287.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search::{{closure}} (231 samples, 0.05%)</title><rect x="1143.0" y="389" width="0.7" height="15.0" fill="rgb(228,9,42)" rx="2" ry="2" />
<text  x="1146.01" y="399.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (1,343 samples, 0.31%)</title><rect x="1114.2" y="325" width="3.7" height="15.0" fill="rgb(211,211,6)" rx="2" ry="2" />
<text  x="1117.21" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (1,772 samples, 0.41%)</title><rect x="322.0" y="85" width="4.9" height="15.0" fill="rgb(216,60,36)" rx="2" ry="2" />
<text  x="325.00" y="95.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,761 samples, 0.65%)</title><rect x="290.1" y="341" width="7.6" height="15.0" fill="rgb(247,173,5)" rx="2" ry="2" />
<text  x="293.07" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next (122 samples, 0.03%)</title><rect x="179.6" y="245" width="0.3" height="15.0" fill="rgb(206,189,10)" rx="2" ry="2" />
<text  x="182.55" y="255.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (494 samples, 0.12%)</title><rect x="1058.5" y="389" width="1.4" height="15.0" fill="rgb(207,30,38)" rx="2" ry="2" />
<text  x="1061.50" y="399.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (202 samples, 0.05%)</title><rect x="1117.9" y="325" width="0.6" height="15.0" fill="rgb(206,224,52)" rx="2" ry="2" />
<text  x="1120.92" y="335.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (152 samples, 0.04%)</title><rect x="153.1" y="277" width="0.4" height="15.0" fill="rgb(210,125,8)" rx="2" ry="2" />
<text  x="156.11" y="287.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::should_ignore (944 samples, 0.22%)</title><rect x="1111.2" y="357" width="2.6" height="15.0" fill="rgb(234,210,13)" rx="2" ry="2" />
<text  x="1114.17" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (137 samples, 0.03%)</title><rect x="70.0" y="357" width="0.4" height="15.0" fill="rgb(232,5,7)" rx="2" ry="2" />
<text  x="72.98" y="367.5" ></text>
</g>
<g >
<title>&lt; (22,586 samples, 5.28%)</title><rect x="299.0" y="325" width="62.3" height="15.0" fill="rgb(240,88,47)" rx="2" ry="2" />
<text  x="301.98" y="335.5" >&lt;</text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (649 samples, 0.15%)</title><rect x="206.8" y="453" width="1.8" height="15.0" fill="rgb(214,104,38)" rx="2" ry="2" />
<text  x="209.84" y="463.5" ></text>
</g>
<g >
<title>[[stack]] (8,457 samples, 1.98%)</title><rect x="20.7" y="501" width="23.3" height="15.0" fill="rgb(253,33,25)" rx="2" ry="2" />
<text  x="23.68" y="511.5" >[..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (126 samples, 0.03%)</title><rect x="112.7" y="357" width="0.4" height="15.0" fill="rgb(215,167,46)" rx="2" ry="2" />
<text  x="115.75" y="367.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,511 samples, 0.35%)</title><rect x="225.0" y="261" width="4.2" height="15.0" fill="rgb(238,56,26)" rx="2" ry="2" />
<text  x="228.02" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (954 samples, 0.22%)</title><rect x="252.2" y="405" width="2.7" height="15.0" fill="rgb(250,171,34)" rx="2" ry="2" />
<text  x="255.22" y="415.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,162 samples, 0.51%)</title><rect x="1075.9" y="389" width="6.0" height="15.0" fill="rgb(229,164,16)" rx="2" ry="2" />
<text  x="1078.94" y="399.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (870 samples, 0.20%)</title><rect x="1009.4" y="405" width="2.4" height="15.0" fill="rgb(232,186,28)" rx="2" ry="2" />
<text  x="1012.36" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (21,534 samples, 5.03%)</title><rect x="1001.8" y="421" width="59.4" height="15.0" fill="rgb(232,15,17)" rx="2" ry="2" />
<text  x="1004.83" y="431.5" >sudach..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,551 samples, 0.60%)</title><rect x="1146.9" y="325" width="7.0" height="15.0" fill="rgb(231,35,42)" rx="2" ry="2" />
<text  x="1149.86" y="335.5" ></text>
</g>
<g >
<title>std::io::BufRead::read_line (1,092 samples, 0.26%)</title><rect x="67.9" y="437" width="3.0" height="15.0" fill="rgb(242,68,29)" rx="2" ry="2" />
<text  x="70.88" y="447.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (588 samples, 0.14%)</title><rect x="1129.9" y="245" width="1.6" height="15.0" fill="rgb(243,124,37)" rx="2" ry="2" />
<text  x="1132.89" y="255.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::set_range (229 samples, 0.05%)</title><rect x="972.5" y="421" width="0.6" height="15.0" fill="rgb(214,164,25)" rx="2" ry="2" />
<text  x="975.49" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (224 samples, 0.05%)</title><rect x="224.1" y="229" width="0.7" height="15.0" fill="rgb(212,87,51)" rx="2" ry="2" />
<text  x="227.14" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,862 samples, 0.67%)</title><rect x="289.8" y="373" width="7.9" height="15.0" fill="rgb(218,147,47)" rx="2" ry="2" />
<text  x="292.79" y="383.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (300 samples, 0.07%)</title><rect x="1114.3" y="309" width="0.8" height="15.0" fill="rgb(220,187,27)" rx="2" ry="2" />
<text  x="1117.29" y="319.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (499 samples, 0.12%)</title><rect x="263.5" y="405" width="1.4" height="15.0" fill="rgb(231,124,52)" rx="2" ry="2" />
<text  x="266.53" y="415.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (134 samples, 0.03%)</title><rect x="97.2" y="309" width="0.4" height="15.0" fill="rgb(222,228,23)" rx="2" ry="2" />
<text  x="100.20" y="319.5" ></text>
</g>
<g >
<title>_int_realloc (196 samples, 0.05%)</title><rect x="125.4" y="213" width="0.6" height="15.0" fill="rgb(244,10,39)" rx="2" ry="2" />
<text  x="128.42" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (542 samples, 0.13%)</title><rect x="1160.9" y="405" width="1.5" height="15.0" fill="rgb(232,73,30)" rx="2" ry="2" />
<text  x="1163.95" y="415.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find (3,490 samples, 0.82%)</title><rect x="134.7" y="389" width="9.6" height="15.0" fill="rgb(210,109,30)" rx="2" ry="2" />
<text  x="137.68" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,540 samples, 0.59%)</title><rect x="1048.0" y="357" width="7.0" height="15.0" fill="rgb(228,174,38)" rx="2" ry="2" />
<text  x="1051.01" y="367.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (129 samples, 0.03%)</title><rect x="523.9" y="325" width="0.4" height="15.0" fill="rgb(228,12,16)" rx="2" ry="2" />
<text  x="526.93" y="335.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (927 samples, 0.22%)</title><rect x="1156.0" y="437" width="2.5" height="15.0" fill="rgb(224,142,51)" rx="2" ry="2" />
<text  x="1158.97" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (596 samples, 0.14%)</title><rect x="1168.7" y="421" width="1.6" height="15.0" fill="rgb(214,224,15)" rx="2" ry="2" />
<text  x="1171.66" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt; (5,405 samples, 1.26%)</title><rect x="231.4" y="389" width="14.9" height="15.0" fill="rgb(252,94,38)" rx="2" ry="2" />
<text  x="234.42" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (299 samples, 0.07%)</title><rect x="125.2" y="325" width="0.9" height="15.0" fill="rgb(217,92,31)" rx="2" ry="2" />
<text  x="128.23" y="335.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (19,316 samples, 4.52%)</title><rect x="303.7" y="293" width="53.2" height="15.0" fill="rgb(254,133,8)" rx="2" ry="2" />
<text  x="306.66" y="303.5" >core:..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (990 samples, 0.23%)</title><rect x="1178.4" y="373" width="2.7" height="15.0" fill="rgb(212,131,8)" rx="2" ry="2" />
<text  x="1181.39" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (353 samples, 0.08%)</title><rect x="222.4" y="133" width="0.9" height="15.0" fill="rgb(217,140,42)" rx="2" ry="2" />
<text  x="225.35" y="143.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_state (292 samples, 0.07%)</title><rect x="141.2" y="293" width="0.8" height="15.0" fill="rgb(206,84,20)" rx="2" ry="2" />
<text  x="144.20" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5,093 samples, 1.19%)</title><rect x="982.1" y="357" width="14.0" height="15.0" fill="rgb(234,65,27)" rx="2" ry="2" />
<text  x="985.08" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17,709 samples, 4.14%)</title><rect x="693.6" y="277" width="48.8" height="15.0" fill="rgb(223,20,22)" rx="2" ry="2" />
<text  x="696.56" y="287.5" >&lt;cor..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,628 samples, 1.32%)</title><rect x="230.8" y="421" width="15.5" height="15.0" fill="rgb(251,59,3)" rx="2" ry="2" />
<text  x="233.81" y="431.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::Imp&lt;S&gt;::earliest_find_at (459 samples, 0.11%)</title><rect x="1107.7" y="341" width="1.3" height="15.0" fill="rgb(223,198,6)" rx="2" ry="2" />
<text  x="1110.72" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18,138 samples, 4.24%)</title><rect x="476.2" y="373" width="50.1" height="15.0" fill="rgb(232,92,42)" rx="2" ry="2" />
<text  x="479.22" y="383.5" >alloc..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for  (38,016 samples, 8.89%)</title><rect x="764.9" y="325" width="104.8" height="15.0" fill="rgb(209,9,39)" rx="2" ry="2" />
<text  x="767.87" y="335.5" >core::hash::..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::is_empty (255 samples, 0.06%)</title><rect x="158.3" y="261" width="0.8" height="15.0" fill="rgb(247,142,34)" rx="2" ry="2" />
<text  x="161.35" y="271.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (152 samples, 0.04%)</title><rect x="1189.2" y="469" width="0.4" height="15.0" fill="rgb(237,109,9)" rx="2" ry="2" />
<text  x="1192.19" y="479.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (197 samples, 0.05%)</title><rect x="1054.5" y="213" width="0.5" height="15.0" fill="rgb(224,191,10)" rx="2" ry="2" />
<text  x="1057.47" y="223.5" ></text>
</g>
<g >
<title>sudachi::main (405,329 samples, 94.75%)</title><rect x="67.4" y="485" width="1118.1" height="15.0" fill="rgb(221,212,46)" rx="2" ry="2" />
<text  x="70.42" y="495.5" >sudachi::main</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (542 samples, 0.13%)</title><rect x="213.1" y="421" width="1.5" height="15.0" fill="rgb(252,159,20)" rx="2" ry="2" />
<text  x="216.06" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2,384 samples, 0.56%)</title><rect x="1022.7" y="277" width="6.6" height="15.0" fill="rgb(228,10,30)" rx="2" ry="2" />
<text  x="1025.73" y="287.5" ></text>
</g>
<g >
<title>all (427,767 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(252,82,18)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (210 samples, 0.05%)</title><rect x="1076.7" y="277" width="0.6" height="15.0" fill="rgb(247,130,14)" rx="2" ry="2" />
<text  x="1079.74" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (945 samples, 0.22%)</title><rect x="973.5" y="309" width="2.6" height="15.0" fill="rgb(249,20,6)" rx="2" ry="2" />
<text  x="976.50" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::get_best_path (4,465 samples, 1.04%)</title><rect x="246.9" y="453" width="12.3" height="15.0" fill="rgb(234,133,36)" rx="2" ry="2" />
<text  x="249.93" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (617 samples, 0.14%)</title><rect x="219.9" y="277" width="1.7" height="15.0" fill="rgb(235,40,6)" rx="2" ry="2" />
<text  x="222.87" y="287.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (194 samples, 0.05%)</title><rect x="1159.6" y="405" width="0.6" height="15.0" fill="rgb(226,132,3)" rx="2" ry="2" />
<text  x="1162.65" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,008 samples, 0.24%)</title><rect x="973.4" y="357" width="2.7" height="15.0" fill="rgb(215,157,53)" rx="2" ry="2" />
<text  x="976.36" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,552 samples, 0.36%)</title><rect x="236.1" y="261" width="4.3" height="15.0" fill="rgb(237,204,54)" rx="2" ry="2" />
<text  x="239.11" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,551 samples, 0.60%)</title><rect x="1146.9" y="357" width="7.0" height="15.0" fill="rgb(240,56,12)" rx="2" ry="2" />
<text  x="1149.86" y="367.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (453 samples, 0.11%)</title><rect x="222.3" y="229" width="1.2" height="15.0" fill="rgb(214,71,9)" rx="2" ry="2" />
<text  x="225.27" y="239.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,215 samples, 0.28%)</title><rect x="1089.6" y="277" width="3.4" height="15.0" fill="rgb(251,197,47)" rx="2" ry="2" />
<text  x="1092.62" y="287.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (136 samples, 0.03%)</title><rect x="495.1" y="229" width="0.4" height="15.0" fill="rgb(220,214,40)" rx="2" ry="2" />
<text  x="498.09" y="239.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (2,321 samples, 0.54%)</title><rect x="484.9" y="245" width="6.4" height="15.0" fill="rgb(227,91,28)" rx="2" ry="2" />
<text  x="487.92" y="255.5" ></text>
</g>
<g >
<title>regex::pool::Pool&lt;T&gt;::get (895 samples, 0.21%)</title><rect x="186.3" y="309" width="2.4" height="15.0" fill="rgb(210,99,47)" rx="2" ry="2" />
<text  x="189.25" y="319.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (342 samples, 0.08%)</title><rect x="1079.6" y="277" width="0.9" height="15.0" fill="rgb(213,41,33)" rx="2" ry="2" />
<text  x="1082.57" y="287.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,531 samples, 0.36%)</title><rect x="1132.7" y="357" width="4.2" height="15.0" fill="rgb(229,120,12)" rx="2" ry="2" />
<text  x="1135.71" y="367.5" ></text>
</g>
<g >
<title>_int_free (161 samples, 0.04%)</title><rect x="276.7" y="229" width="0.4" height="15.0" fill="rgb(248,209,46)" rx="2" ry="2" />
<text  x="279.69" y="239.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1,059 samples, 0.25%)</title><rect x="1164.6" y="389" width="3.0" height="15.0" fill="rgb(218,10,45)" rx="2" ry="2" />
<text  x="1167.65" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,794 samples, 0.42%)</title><rect x="344.0" y="133" width="5.0" height="15.0" fill="rgb(241,42,30)" rx="2" ry="2" />
<text  x="347.04" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,436 samples, 0.34%)</title><rect x="189.3" y="229" width="4.0" height="15.0" fill="rgb(209,32,39)" rx="2" ry="2" />
<text  x="192.33" y="239.5" ></text>
</g>
<g >
<title>__do_global_dtors_aux_fini_array_entry (194 samples, 0.05%)</title><rect x="1186.8" y="501" width="0.6" height="15.0" fill="rgb(250,220,54)" rx="2" ry="2" />
<text  x="1189.84" y="511.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (355 samples, 0.08%)</title><rect x="1079.5" y="309" width="1.0" height="15.0" fill="rgb(244,173,26)" rx="2" ry="2" />
<text  x="1082.53" y="319.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (299 samples, 0.07%)</title><rect x="278.8" y="69" width="0.8" height="15.0" fill="rgb(244,52,11)" rx="2" ry="2" />
<text  x="281.83" y="79.5" ></text>
</g>
<g >
<title>core::fmt::write (109 samples, 0.03%)</title><rect x="1187.0" y="485" width="0.3" height="15.0" fill="rgb(216,17,34)" rx="2" ry="2" />
<text  x="1190.05" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (265 samples, 0.06%)</title><rect x="229.2" y="309" width="0.7" height="15.0" fill="rgb(217,220,4)" rx="2" ry="2" />
<text  x="232.21" y="319.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (1,537 samples, 0.36%)</title><rect x="225.0" y="341" width="4.2" height="15.0" fill="rgb(225,14,33)" rx="2" ry="2" />
<text  x="227.96" y="351.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (136 samples, 0.03%)</title><rect x="212.7" y="421" width="0.4" height="15.0" fill="rgb(247,111,16)" rx="2" ry="2" />
<text  x="215.68" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (234 samples, 0.05%)</title><rect x="1039.7" y="261" width="0.6" height="15.0" fill="rgb(220,154,38)" rx="2" ry="2" />
<text  x="1042.68" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (131 samples, 0.03%)</title><rect x="215.3" y="261" width="0.4" height="15.0" fill="rgb(219,36,49)" rx="2" ry="2" />
<text  x="218.35" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (707 samples, 0.17%)</title><rect x="93.3" y="373" width="1.9" height="15.0" fill="rgb(214,58,37)" rx="2" ry="2" />
<text  x="96.27" y="383.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::dfa::PremultipliedByteClass&lt;S&gt; as aho_corasick::automaton::Automaton&gt;::next_state (519 samples, 0.12%)</title><rect x="1104.8" y="245" width="1.4" height="15.0" fill="rgb(225,102,51)" rx="2" ry="2" />
<text  x="1107.75" y="255.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::with_editor (13,165 samples, 3.08%)</title><rect x="1100.8" y="421" width="36.3" height="15.0" fill="rgb(243,39,28)" rx="2" ry="2" />
<text  x="1103.83" y="431.5" >sud..</text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (359 samples, 0.08%)</title><rect x="44.6" y="485" width="1.0" height="15.0" fill="rgb(206,192,47)" rx="2" ry="2" />
<text  x="47.62" y="495.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1,796 samples, 0.42%)</title><rect x="891.2" y="229" width="4.9" height="15.0" fill="rgb(248,173,26)" rx="2" ry="2" />
<text  x="894.17" y="239.5" ></text>
</g>
<g >
<title>aho_corasick::dfa::DFA&lt;S&gt;::find_at_no_state (796 samples, 0.19%)</title><rect x="1104.0" y="325" width="2.2" height="15.0" fill="rgb(243,221,46)" rx="2" ry="2" />
<text  x="1106.99" y="335.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (284 samples, 0.07%)</title><rect x="340.1" y="261" width="0.7" height="15.0" fill="rgb(231,168,3)" rx="2" ry="2" />
<text  x="343.06" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (2,754 samples, 0.64%)</title><rect x="1146.7" y="405" width="7.6" height="15.0" fill="rgb(220,226,2)" rx="2" ry="2" />
<text  x="1149.66" y="415.5" ></text>
</g>
<g >
<title>&lt;sudachi::sentence_splitter::SentenceIter as core::iter::traits::iterator::Iterator&gt;::next (48,085 samples, 11.24%)</title><rect x="71.1" y="469" width="132.6" height="15.0" fill="rgb(252,116,12)" rx="2" ry="2" />
<text  x="74.07" y="479.5" >&lt;sudachi::senten..</text>
</g>
<g >
<title>sudachi::dic::lexicon::trie_array_parser (201 samples, 0.05%)</title><rect x="1154.3" y="389" width="0.6" height="15.0" fill="rgb(217,16,47)" rx="2" ry="2" />
<text  x="1157.33" y="399.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_mut (203 samples, 0.05%)</title><rect x="1167.6" y="405" width="0.6" height="15.0" fill="rgb(240,86,32)" rx="2" ry="2" />
<text  x="1170.64" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (258 samples, 0.06%)</title><rect x="282.3" y="133" width="0.7" height="15.0" fill="rgb(236,111,38)" rx="2" ry="2" />
<text  x="285.25" y="143.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::find_at (1,445 samples, 0.34%)</title><rect x="1133.0" y="341" width="3.9" height="15.0" fill="rgb(245,13,52)" rx="2" ry="2" />
<text  x="1135.95" y="351.5" ></text>
</g>
<g >
<title>malloc_consolidate (649 samples, 0.15%)</title><rect x="974.2" y="293" width="1.8" height="15.0" fill="rgb(253,8,34)" rx="2" ry="2" />
<text  x="977.24" y="303.5" ></text>
</g>
<g >
<title>&lt;unicode_normalization::decompose::Decompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (205 samples, 0.05%)</title><rect x="1110.3" y="309" width="0.6" height="15.0" fill="rgb(251,46,37)" rx="2" ry="2" />
<text  x="1113.33" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (268 samples, 0.06%)</title><rect x="274.6" y="261" width="0.8" height="15.0" fill="rgb(217,101,16)" rx="2" ry="2" />
<text  x="277.63" y="271.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::PathRewritePlugin::concatenate (1,071 samples, 0.25%)</title><rect x="215.0" y="405" width="3.0" height="15.0" fill="rgb(226,175,16)" rx="2" ry="2" />
<text  x="218.00" y="415.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (371 samples, 0.09%)</title><rect x="96.5" y="341" width="1.1" height="15.0" fill="rgb(221,118,50)" rx="2" ry="2" />
<text  x="99.55" y="351.5" ></text>
</g>
<g >
<title>__fget_light (136 samples, 0.03%)</title><rect x="1157.1" y="277" width="0.4" height="15.0" fill="rgb(239,203,27)" rx="2" ry="2" />
<text  x="1160.09" y="287.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (1,160 samples, 0.27%)</title><rect x="1178.2" y="389" width="3.2" height="15.0" fill="rgb(226,152,54)" rx="2" ry="2" />
<text  x="1181.22" y="399.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,052 samples, 0.25%)</title><rect x="137.2" y="293" width="2.9" height="15.0" fill="rgb(223,66,53)" rx="2" ry="2" />
<text  x="140.19" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (445 samples, 0.10%)</title><rect x="209.9" y="341" width="1.2" height="15.0" fill="rgb(242,74,47)" rx="2" ry="2" />
<text  x="212.90" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (993 samples, 0.23%)</title><rect x="973.4" y="341" width="2.7" height="15.0" fill="rgb(231,66,50)" rx="2" ry="2" />
<text  x="976.39" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (776 samples, 0.18%)</title><rect x="454.6" y="421" width="2.2" height="15.0" fill="rgb(215,107,18)" rx="2" ry="2" />
<text  x="457.63" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,466 samples, 0.58%)</title><rect x="1147.0" y="293" width="6.8" height="15.0" fill="rgb(217,196,6)" rx="2" ry="2" />
<text  x="1149.99" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (161 samples, 0.04%)</title><rect x="31.1" y="469" width="0.5" height="15.0" fill="rgb(253,20,41)" rx="2" ry="2" />
<text  x="34.12" y="479.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (266 samples, 0.06%)</title><rect x="1059.9" y="277" width="0.7" height="15.0" fill="rgb(232,132,8)" rx="2" ry="2" />
<text  x="1062.86" y="287.5" ></text>
</g>
<g >
<title>__rdl_alloc (166 samples, 0.04%)</title><rect x="339.2" y="117" width="0.4" height="15.0" fill="rgb(236,2,42)" rx="2" ry="2" />
<text  x="342.16" y="127.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (356 samples, 0.08%)</title><rect x="51.1" y="485" width="1.0" height="15.0" fill="rgb(253,28,31)" rx="2" ry="2" />
<text  x="54.13" y="495.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (3,212 samples, 0.75%)</title><rect x="330.9" y="245" width="8.8" height="15.0" fill="rgb(205,109,0)" rx="2" ry="2" />
<text  x="333.87" y="255.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::is_nfkc_quick (3,745 samples, 0.88%)</title><rect x="1118.5" y="373" width="10.3" height="15.0" fill="rgb(229,84,17)" rx="2" ry="2" />
<text  x="1121.47" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (394 samples, 0.09%)</title><rect x="278.7" y="133" width="1.0" height="15.0" fill="rgb(232,159,38)" rx="2" ry="2" />
<text  x="281.66" y="143.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (21,221 samples, 4.96%)</title><rect x="908.4" y="293" width="58.5" height="15.0" fill="rgb(219,137,20)" rx="2" ry="2" />
<text  x="911.39" y="303.5" >nom::c..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,140 samples, 0.73%)</title><rect x="331.1" y="197" width="8.6" height="15.0" fill="rgb(243,175,34)" rx="2" ry="2" />
<text  x="334.07" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (169 samples, 0.04%)</title><rect x="1184.4" y="437" width="0.4" height="15.0" fill="rgb(237,28,50)" rx="2" ry="2" />
<text  x="1187.37" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_free (1,382 samples, 0.32%)</title><rect x="236.4" y="197" width="3.8" height="15.0" fill="rgb(221,194,10)" rx="2" ry="2" />
<text  x="239.37" y="207.5" ></text>
</g>
<g >
<title>__rdl_realloc (249 samples, 0.06%)</title><rect x="52.2" y="485" width="0.7" height="15.0" fill="rgb(245,191,38)" rx="2" ry="2" />
<text  x="55.25" y="495.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (242 samples, 0.06%)</title><rect x="1022.1" y="261" width="0.6" height="15.0" fill="rgb(208,184,41)" rx="2" ry="2" />
<text  x="1025.06" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (1,663 samples, 0.39%)</title><rect x="1095.1" y="453" width="4.6" height="15.0" fill="rgb(236,10,10)" rx="2" ry="2" />
<text  x="1098.08" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (303 samples, 0.07%)</title><rect x="215.8" y="293" width="0.9" height="15.0" fill="rgb(218,93,26)" rx="2" ry="2" />
<text  x="218.85" y="303.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (251 samples, 0.06%)</title><rect x="245.2" y="277" width="0.7" height="15.0" fill="rgb(214,29,39)" rx="2" ry="2" />
<text  x="248.19" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (2,634 samples, 0.62%)</title><rect x="349.7" y="261" width="7.2" height="15.0" fill="rgb(237,70,35)" rx="2" ry="2" />
<text  x="352.67" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,140 samples, 0.73%)</title><rect x="331.1" y="229" width="8.6" height="15.0" fill="rgb(213,7,29)" rx="2" ry="2" />
<text  x="334.07" y="239.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (2,358 samples, 0.55%)</title><rect x="350.4" y="245" width="6.5" height="15.0" fill="rgb(205,220,5)" rx="2" ry="2" />
<text  x="353.44" y="255.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (976 samples, 0.23%)</title><rect x="1155.9" y="453" width="2.6" height="15.0" fill="rgb(221,227,3)" rx="2" ry="2" />
<text  x="1158.85" y="463.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,429 samples, 0.33%)</title><rect x="199.3" y="341" width="4.0" height="15.0" fill="rgb(240,149,34)" rx="2" ry="2" />
<text  x="202.34" y="351.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at (295 samples, 0.07%)</title><rect x="1054.2" y="309" width="0.8" height="15.0" fill="rgb(227,171,46)" rx="2" ry="2" />
<text  x="1057.20" y="319.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,051 samples, 3.99%)</title><rect x="376.3" y="405" width="47.1" height="15.0" fill="rgb(254,126,51)" rx="2" ry="2" />
<text  x="379.32" y="415.5" >&lt;cor..</text>
</g>
<g >
<title>&lt; (220 samples, 0.05%)</title><rect x="301.0" y="309" width="0.6" height="15.0" fill="rgb(208,50,4)" rx="2" ry="2" />
<text  x="304.00" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (33,683 samples, 7.87%)</title><rect x="268.6" y="405" width="92.9" height="15.0" fill="rgb(225,18,5)" rx="2" ry="2" />
<text  x="271.59" y="415.5" >sudachi::di..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,501 samples, 0.58%)</title><rect x="320.7" y="149" width="6.9" height="15.0" fill="rgb(217,123,27)" rx="2" ry="2" />
<text  x="323.72" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,056 samples, 0.48%)</title><rect x="1083.3" y="293" width="5.6" height="15.0" fill="rgb(242,190,8)" rx="2" ry="2" />
<text  x="1086.27" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (1,125 samples, 0.26%)</title><rect x="1089.7" y="181" width="3.1" height="15.0" fill="rgb(235,19,36)" rx="2" ry="2" />
<text  x="1092.68" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[sudachi::analysis::node::Node]&gt; (2,910 samples, 0.68%)</title><rect x="1146.2" y="421" width="8.1" height="15.0" fill="rgb(208,1,51)" rx="2" ry="2" />
<text  x="1149.23" y="431.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (247 samples, 0.06%)</title><rect x="1040.8" y="229" width="0.7" height="15.0" fill="rgb(226,206,13)" rx="2" ry="2" />
<text  x="1043.77" y="239.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8 (481 samples, 0.11%)</title><rect x="68.1" y="405" width="1.4" height="15.0" fill="rgb(253,189,28)" rx="2" ry="2" />
<text  x="71.12" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (189 samples, 0.04%)</title><rect x="216.0" y="213" width="0.5" height="15.0" fill="rgb(205,154,43)" rx="2" ry="2" />
<text  x="218.96" y="223.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (269 samples, 0.06%)</title><rect x="229.2" y="341" width="0.7" height="15.0" fill="rgb(216,202,45)" rx="2" ry="2" />
<text  x="232.20" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (333 samples, 0.08%)</title><rect x="216.7" y="373" width="0.9" height="15.0" fill="rgb(207,214,33)" rx="2" ry="2" />
<text  x="219.70" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (370 samples, 0.09%)</title><rect x="1021.0" y="261" width="1.1" height="15.0" fill="rgb(206,222,25)" rx="2" ry="2" />
<text  x="1024.04" y="271.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (200 samples, 0.05%)</title><rect x="95.2" y="357" width="0.6" height="15.0" fill="rgb(207,154,38)" rx="2" ry="2" />
<text  x="98.22" y="367.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::done (114 samples, 0.03%)</title><rect x="219.3" y="421" width="0.3" height="15.0" fill="rgb(212,107,30)" rx="2" ry="2" />
<text  x="222.32" y="431.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (140 samples, 0.03%)</title><rect x="310.0" y="197" width="0.4" height="15.0" fill="rgb(223,183,53)" rx="2" ry="2" />
<text  x="313.00" y="207.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memchr (182 samples, 0.04%)</title><rect x="70.4" y="357" width="0.5" height="15.0" fill="rgb(250,144,39)" rx="2" ry="2" />
<text  x="73.38" y="367.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (184 samples, 0.04%)</title><rect x="309.9" y="261" width="0.5" height="15.0" fill="rgb(219,87,47)" rx="2" ry="2" />
<text  x="312.88" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (210 samples, 0.05%)</title><rect x="283.0" y="245" width="0.6" height="15.0" fill="rgb(227,198,23)" rx="2" ry="2" />
<text  x="285.97" y="255.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (176 samples, 0.04%)</title><rect x="1078.9" y="325" width="0.4" height="15.0" fill="rgb(233,77,27)" rx="2" ry="2" />
<text  x="1081.86" y="335.5" ></text>
</g>
<g >
<title>regex::pool::Pool&lt;T&gt;::get (182 samples, 0.04%)</title><rect x="143.8" y="325" width="0.5" height="15.0" fill="rgb(232,144,49)" rx="2" ry="2" />
<text  x="146.80" y="335.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (111 samples, 0.03%)</title><rect x="1181.1" y="373" width="0.3" height="15.0" fill="rgb(251,175,46)" rx="2" ry="2" />
<text  x="1184.12" y="383.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryTypeIter as core::iter::traits::iterator::Iterator&gt;::next (651 samples, 0.15%)</title><rect x="1070.6" y="389" width="1.8" height="15.0" fill="rgb(227,193,10)" rx="2" ry="2" />
<text  x="1073.64" y="399.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (220 samples, 0.05%)</title><rect x="1100.1" y="357" width="0.6" height="15.0" fill="rgb(231,53,0)" rx="2" ry="2" />
<text  x="1103.13" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (28,771 samples, 6.73%)</title><rect x="663.1" y="293" width="79.3" height="15.0" fill="rgb(215,207,3)" rx="2" ry="2" />
<text  x="666.08" y="303.5" >&lt;core::ha..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (596 samples, 0.14%)</title><rect x="1168.7" y="437" width="1.6" height="15.0" fill="rgb(234,144,15)" rx="2" ry="2" />
<text  x="1171.66" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,206 samples, 0.28%)</title><rect x="189.4" y="197" width="3.4" height="15.0" fill="rgb(217,84,17)" rx="2" ry="2" />
<text  x="192.43" y="207.5" ></text>
</g>
<g >
<title>_int_free (358 samples, 0.08%)</title><rect x="1169.2" y="341" width="1.0" height="15.0" fill="rgb(238,224,54)" rx="2" ry="2" />
<text  x="1172.21" y="351.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::shortest_dfa (3,291 samples, 0.77%)</title><rect x="174.7" y="309" width="9.1" height="15.0" fill="rgb(252,116,18)" rx="2" ry="2" />
<text  x="177.71" y="319.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (128 samples, 0.03%)</title><rect x="1080.7" y="293" width="0.3" height="15.0" fill="rgb(208,50,29)" rx="2" ry="2" />
<text  x="1083.69" y="303.5" ></text>
</g>
<g >
<title>&lt;T as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (524 samples, 0.12%)</title><rect x="372.8" y="437" width="1.4" height="15.0" fill="rgb(223,18,49)" rx="2" ry="2" />
<text  x="375.77" y="447.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (190 samples, 0.04%)</title><rect x="38.8" y="485" width="0.5" height="15.0" fill="rgb(225,102,1)" rx="2" ry="2" />
<text  x="41.78" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (331 samples, 0.08%)</title><rect x="1161.3" y="293" width="0.9" height="15.0" fill="rgb(225,222,34)" rx="2" ry="2" />
<text  x="1164.25" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;]&gt; (5,612 samples, 1.31%)</title><rect x="230.8" y="405" width="15.5" height="15.0" fill="rgb(249,161,34)" rx="2" ry="2" />
<text  x="233.85" y="415.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (365 samples, 0.09%)</title><rect x="423.4" y="389" width="1.0" height="15.0" fill="rgb(239,185,0)" rx="2" ry="2" />
<text  x="426.36" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_free (258 samples, 0.06%)</title><rect x="272.6" y="293" width="0.7" height="15.0" fill="rgb(226,4,45)" rx="2" ry="2" />
<text  x="275.57" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,259 samples, 0.53%)</title><rect x="343.4" y="245" width="6.3" height="15.0" fill="rgb(241,168,15)" rx="2" ry="2" />
<text  x="346.43" y="255.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::new (8,370 samples, 1.96%)</title><rect x="973.1" y="437" width="23.1" height="15.0" fill="rgb(227,31,32)" rx="2" ry="2" />
<text  x="976.13" y="447.5" >s..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (625 samples, 0.15%)</title><rect x="93.5" y="357" width="1.7" height="15.0" fill="rgb(206,7,22)" rx="2" ry="2" />
<text  x="96.49" y="367.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (171 samples, 0.04%)</title><rect x="423.4" y="341" width="0.4" height="15.0" fill="rgb(239,113,46)" rx="2" ry="2" />
<text  x="426.36" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (325 samples, 0.08%)</title><rect x="125.2" y="373" width="0.9" height="15.0" fill="rgb(225,200,13)" rx="2" ry="2" />
<text  x="128.17" y="383.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (191 samples, 0.04%)</title><rect x="318.2" y="229" width="0.6" height="15.0" fill="rgb(242,158,5)" rx="2" ry="2" />
<text  x="321.25" y="239.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::mecab_oov::MeCabOovPlugin::get_oov_node (4,424 samples, 1.03%)</title><rect x="1081.9" y="389" width="12.2" height="15.0" fill="rgb(242,64,35)" rx="2" ry="2" />
<text  x="1084.90" y="399.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (651 samples, 0.15%)</title><rect x="1030.3" y="309" width="1.8" height="15.0" fill="rgb(228,113,33)" rx="2" ry="2" />
<text  x="1033.25" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (137 samples, 0.03%)</title><rect x="70.0" y="373" width="0.4" height="15.0" fill="rgb(232,24,42)" rx="2" ry="2" />
<text  x="72.98" y="383.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,065 samples, 0.25%)</title><rect x="875.1" y="277" width="2.9" height="15.0" fill="rgb(226,223,25)" rx="2" ry="2" />
<text  x="878.10" y="287.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::quick_check (1,649 samples, 0.39%)</title><rect x="1113.9" y="341" width="4.6" height="15.0" fill="rgb(245,145,11)" rx="2" ry="2" />
<text  x="1116.93" y="351.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (110 samples, 0.03%)</title><rect x="280.0" y="213" width="0.3" height="15.0" fill="rgb(230,226,36)" rx="2" ry="2" />
<text  x="282.99" y="223.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_of_range (271 samples, 0.06%)</title><rect x="207.4" y="405" width="0.7" height="15.0" fill="rgb(242,210,39)" rx="2" ry="2" />
<text  x="210.40" y="415.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,434 samples, 0.34%)</title><rect x="1033.6" y="277" width="4.0" height="15.0" fill="rgb(249,199,52)" rx="2" ry="2" />
<text  x="1036.61" y="287.5" ></text>
</g>
<g >
<title>core::cmp::min_by (158 samples, 0.04%)</title><rect x="841.4" y="181" width="0.5" height="15.0" fill="rgb(251,125,42)" rx="2" ry="2" />
<text  x="844.43" y="191.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (365 samples, 0.09%)</title><rect x="423.4" y="373" width="1.0" height="15.0" fill="rgb(215,14,43)" rx="2" ry="2" />
<text  x="426.36" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (464 samples, 0.11%)</title><rect x="1138.2" y="421" width="1.3" height="15.0" fill="rgb(210,93,52)" rx="2" ry="2" />
<text  x="1141.23" y="431.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (1,761 samples, 0.41%)</title><rect x="322.0" y="69" width="4.9" height="15.0" fill="rgb(224,92,31)" rx="2" ry="2" />
<text  x="325.03" y="79.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (205 samples, 0.05%)</title><rect x="1079.8" y="229" width="0.6" height="15.0" fill="rgb(220,133,40)" rx="2" ry="2" />
<text  x="1082.85" y="239.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (212 samples, 0.05%)</title><rect x="1001.2" y="389" width="0.6" height="15.0" fill="rgb(248,5,17)" rx="2" ry="2" />
<text  x="1004.25" y="399.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (2,315 samples, 0.54%)</title><rect x="136.4" y="325" width="6.4" height="15.0" fill="rgb(231,178,33)" rx="2" ry="2" />
<text  x="139.41" y="335.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (10,014 samples, 2.34%)</title><rect x="841.9" y="213" width="27.6" height="15.0" fill="rgb(233,199,42)" rx="2" ry="2" />
<text  x="844.87" y="223.5" >c..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (268 samples, 0.06%)</title><rect x="274.6" y="245" width="0.8" height="15.0" fill="rgb(221,45,52)" rx="2" ry="2" />
<text  x="277.63" y="255.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (2,547 samples, 0.60%)</title><rect x="162.2" y="229" width="7.0" height="15.0" fill="rgb(228,124,22)" rx="2" ry="2" />
<text  x="165.15" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (367 samples, 0.09%)</title><rect x="222.3" y="149" width="1.0" height="15.0" fill="rgb(242,72,31)" rx="2" ry="2" />
<text  x="225.31" y="159.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (181 samples, 0.04%)</title><rect x="246.3" y="421" width="0.5" height="15.0" fill="rgb(253,180,16)" rx="2" ry="2" />
<text  x="249.33" y="431.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::is_nfkc_quick (1,703 samples, 0.40%)</title><rect x="1113.8" y="357" width="4.7" height="15.0" fill="rgb(214,102,31)" rx="2" ry="2" />
<text  x="1116.78" y="367.5" ></text>
</g>
<g >
<title>alloc::string::String::push (293 samples, 0.07%)</title><rect x="30.8" y="485" width="0.8" height="15.0" fill="rgb(236,139,33)" rx="2" ry="2" />
<text  x="33.76" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (175 samples, 0.04%)</title><rect x="979.9" y="357" width="0.4" height="15.0" fill="rgb(210,195,54)" rx="2" ry="2" />
<text  x="982.85" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (147 samples, 0.03%)</title><rect x="1184.4" y="421" width="0.4" height="15.0" fill="rgb(236,16,16)" rx="2" ry="2" />
<text  x="1187.43" y="431.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,946 samples, 0.45%)</title><rect x="836.1" y="181" width="5.3" height="15.0" fill="rgb(245,138,48)" rx="2" ry="2" />
<text  x="839.07" y="191.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (295 samples, 0.07%)</title><rect x="1054.2" y="325" width="0.8" height="15.0" fill="rgb(226,165,23)" rx="2" ry="2" />
<text  x="1057.20" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (241 samples, 0.06%)</title><rect x="278.9" y="37" width="0.6" height="15.0" fill="rgb(224,157,45)" rx="2" ry="2" />
<text  x="281.86" y="47.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (3,524 samples, 0.82%)</title><rect x="1158.6" y="437" width="9.7" height="15.0" fill="rgb(238,208,36)" rx="2" ry="2" />
<text  x="1161.62" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (3,881 samples, 0.91%)</title><rect x="273.4" y="389" width="10.7" height="15.0" fill="rgb(227,41,43)" rx="2" ry="2" />
<text  x="276.38" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (1,101 samples, 0.26%)</title><rect x="189.7" y="85" width="3.0" height="15.0" fill="rgb(210,12,43)" rx="2" ry="2" />
<text  x="192.67" y="95.5" ></text>
</g>
<g >
<title>_int_free (413 samples, 0.10%)</title><rect x="28.1" y="485" width="1.1" height="15.0" fill="rgb(246,110,52)" rx="2" ry="2" />
<text  x="31.07" y="495.5" ></text>
</g>
<g >
<title>sudachi::sentence_detector::SentenceDetector::get_eos (48,013 samples, 11.22%)</title><rect x="71.3" y="453" width="132.4" height="15.0" fill="rgb(214,150,35)" rx="2" ry="2" />
<text  x="74.27" y="463.5" >sudachi::sentenc..</text>
</g>
<g >
<title>alloc::vec::from_elem (127 samples, 0.03%)</title><rect x="98.6" y="373" width="0.4" height="15.0" fill="rgb(210,216,10)" rx="2" ry="2" />
<text  x="101.63" y="383.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (224 samples, 0.05%)</title><rect x="108.9" y="373" width="0.6" height="15.0" fill="rgb(209,98,41)" rx="2" ry="2" />
<text  x="111.90" y="383.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::exec_ (539 samples, 0.13%)</title><rect x="197.8" y="277" width="1.5" height="15.0" fill="rgb(251,185,10)" rx="2" ry="2" />
<text  x="200.84" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSyncStr&gt; (173 samples, 0.04%)</title><rect x="184.7" y="341" width="0.5" height="15.0" fill="rgb(253,198,33)" rx="2" ry="2" />
<text  x="187.69" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::byte_class (143 samples, 0.03%)</title><rect x="139.3" y="261" width="0.3" height="15.0" fill="rgb(225,154,49)" rx="2" ry="2" />
<text  x="142.25" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,138 samples, 0.50%)</title><rect x="343.8" y="197" width="5.9" height="15.0" fill="rgb(214,188,13)" rx="2" ry="2" />
<text  x="346.76" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (224 samples, 0.05%)</title><rect x="125.3" y="229" width="0.7" height="15.0" fill="rgb(206,22,6)" rx="2" ry="2" />
<text  x="128.35" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free (271 samples, 0.06%)</title><rect x="276.4" y="245" width="0.7" height="15.0" fill="rgb(250,173,16)" rx="2" ry="2" />
<text  x="279.39" y="255.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (209 samples, 0.05%)</title><rect x="194.9" y="389" width="0.5" height="15.0" fill="rgb(231,52,48)" rx="2" ry="2" />
<text  x="197.87" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (303 samples, 0.07%)</title><rect x="215.8" y="325" width="0.9" height="15.0" fill="rgb(230,18,34)" rx="2" ry="2" />
<text  x="218.85" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (553 samples, 0.13%)</title><rect x="1156.9" y="341" width="1.5" height="15.0" fill="rgb(236,119,4)" rx="2" ry="2" />
<text  x="1159.87" y="351.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (620 samples, 0.14%)</title><rect x="504.7" y="229" width="1.7" height="15.0" fill="rgb(205,120,19)" rx="2" ry="2" />
<text  x="507.67" y="239.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5,902 samples, 1.38%)</title><rect x="404.8" y="309" width="16.3" height="15.0" fill="rgb(238,155,35)" rx="2" ry="2" />
<text  x="407.83" y="319.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (456 samples, 0.11%)</title><rect x="187.5" y="229" width="1.2" height="15.0" fill="rgb(220,187,18)" rx="2" ry="2" />
<text  x="190.46" y="239.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_at_byte (526 samples, 0.12%)</title><rect x="427.1" y="437" width="1.4" height="15.0" fill="rgb(233,106,5)" rx="2" ry="2" />
<text  x="430.10" y="447.5" ></text>
</g>
<g >
<title>std::sys_common::memchr::memchr (188 samples, 0.04%)</title><rect x="70.4" y="373" width="0.5" height="15.0" fill="rgb(212,31,26)" rx="2" ry="2" />
<text  x="73.36" y="383.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (435 samples, 0.10%)</title><rect x="259.6" y="437" width="1.2" height="15.0" fill="rgb(218,130,13)" rx="2" ry="2" />
<text  x="262.63" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (1,975 samples, 0.46%)</title><rect x="235.1" y="325" width="5.4" height="15.0" fill="rgb(223,151,29)" rx="2" ry="2" />
<text  x="238.10" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5,979 samples, 1.40%)</title><rect x="885.3" y="309" width="16.5" height="15.0" fill="rgb(215,78,30)" rx="2" ry="2" />
<text  x="888.34" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (268 samples, 0.06%)</title><rect x="274.6" y="277" width="0.8" height="15.0" fill="rgb(237,10,16)" rx="2" ry="2" />
<text  x="277.63" y="287.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (687 samples, 0.16%)</title><rect x="270.6" y="389" width="1.9" height="15.0" fill="rgb(233,169,18)" rx="2" ry="2" />
<text  x="273.61" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (152 samples, 0.04%)</title><rect x="1189.2" y="405" width="0.4" height="15.0" fill="rgb(208,140,54)" rx="2" ry="2" />
<text  x="1192.19" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,056 samples, 0.48%)</title><rect x="1083.3" y="261" width="5.6" height="15.0" fill="rgb(230,196,53)" rx="2" ry="2" />
<text  x="1086.27" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::reverse (269 samples, 0.06%)</title><rect x="202.5" y="325" width="0.8" height="15.0" fill="rgb(236,189,34)" rx="2" ry="2" />
<text  x="205.51" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,151 samples, 0.27%)</title><rect x="189.6" y="165" width="3.2" height="15.0" fill="rgb(247,20,10)" rx="2" ry="2" />
<text  x="192.58" y="175.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (161 samples, 0.04%)</title><rect x="31.1" y="453" width="0.5" height="15.0" fill="rgb(215,202,2)" rx="2" ry="2" />
<text  x="34.12" y="463.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::rewrite_input (13,588 samples, 3.18%)</title><rect x="1099.7" y="453" width="37.4" height="15.0" fill="rgb(213,2,18)" rx="2" ry="2" />
<text  x="1102.66" y="463.5" >sud..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,056 samples, 0.48%)</title><rect x="1083.3" y="245" width="5.6" height="15.0" fill="rgb(244,154,52)" rx="2" ry="2" />
<text  x="1086.27" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (130 samples, 0.03%)</title><rect x="230.4" y="389" width="0.4" height="15.0" fill="rgb(208,40,31)" rx="2" ry="2" />
<text  x="233.40" y="399.5" ></text>
</g>
<g >
<title>sudachi::write_sentence (10,991 samples, 2.57%)</title><rect x="1155.2" y="469" width="30.3" height="15.0" fill="rgb(222,33,31)" rx="2" ry="2" />
<text  x="1158.20" y="479.5" >su..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9,035 samples, 2.11%)</title><rect x="1016.5" y="357" width="25.0" height="15.0" fill="rgb(246,75,35)" rx="2" ry="2" />
<text  x="1019.53" y="367.5" >h..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (498 samples, 0.12%)</title><rect x="280.4" y="133" width="1.3" height="15.0" fill="rgb(229,208,14)" rx="2" ry="2" />
<text  x="283.35" y="143.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (4,039 samples, 0.94%)</title><rect x="99.0" y="389" width="11.1" height="15.0" fill="rgb(254,55,26)" rx="2" ry="2" />
<text  x="101.98" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (264 samples, 0.06%)</title><rect x="282.2" y="197" width="0.8" height="15.0" fill="rgb(219,81,5)" rx="2" ry="2" />
<text  x="285.24" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (159 samples, 0.04%)</title><rect x="1160.4" y="373" width="0.5" height="15.0" fill="rgb(206,108,25)" rx="2" ry="2" />
<text  x="1163.43" y="383.5" ></text>
</g>
<g >
<title>&lt;&amp;T as core::fmt::Display&gt;::fmt (163 samples, 0.04%)</title><rect x="1173.6" y="421" width="0.4" height="15.0" fill="rgb(208,173,37)" rx="2" ry="2" />
<text  x="1176.58" y="431.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,718 samples, 4.14%)</title><rect x="375.5" y="421" width="48.9" height="15.0" fill="rgb(231,48,42)" rx="2" ry="2" />
<text  x="378.49" y="431.5" >&lt;cor..</text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (126 samples, 0.03%)</title><rect x="204.4" y="469" width="0.4" height="15.0" fill="rgb(233,31,49)" rx="2" ry="2" />
<text  x="207.42" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (120 samples, 0.03%)</title><rect x="1132.0" y="325" width="0.3" height="15.0" fill="rgb(226,10,44)" rx="2" ry="2" />
<text  x="1135.02" y="335.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (717 samples, 0.17%)</title><rect x="1156.6" y="373" width="1.9" height="15.0" fill="rgb(237,183,8)" rx="2" ry="2" />
<text  x="1159.55" y="383.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (335 samples, 0.08%)</title><rect x="1138.4" y="373" width="0.9" height="15.0" fill="rgb(227,191,43)" rx="2" ry="2" />
<text  x="1141.42" y="383.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (355 samples, 0.08%)</title><rect x="1079.5" y="293" width="1.0" height="15.0" fill="rgb(225,204,52)" rx="2" ry="2" />
<text  x="1082.53" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::DictionaryLoader::read_system_dictionary (216 samples, 0.05%)</title><rect x="1154.3" y="437" width="0.6" height="15.0" fill="rgb(239,146,24)" rx="2" ry="2" />
<text  x="1157.29" y="447.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (154 samples, 0.04%)</title><rect x="218.6" y="357" width="0.4" height="15.0" fill="rgb(253,186,32)" rx="2" ry="2" />
<text  x="221.57" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (454 samples, 0.11%)</title><rect x="280.4" y="101" width="1.2" height="15.0" fill="rgb(226,77,31)" rx="2" ry="2" />
<text  x="283.39" y="111.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,229 samples, 0.29%)</title><rect x="1129.0" y="357" width="3.3" height="15.0" fill="rgb(214,33,19)" rx="2" ry="2" />
<text  x="1131.96" y="367.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::step (351 samples, 0.08%)</title><rect x="198.1" y="245" width="0.9" height="15.0" fill="rgb(215,21,20)" rx="2" ry="2" />
<text  x="201.05" y="255.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (526 samples, 0.12%)</title><rect x="1074.4" y="357" width="1.5" height="15.0" fill="rgb(251,203,47)" rx="2" ry="2" />
<text  x="1077.43" y="367.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::translate_node_ranges (245 samples, 0.06%)</title><rect x="205.3" y="437" width="0.7" height="15.0" fill="rgb(231,34,11)" rx="2" ry="2" />
<text  x="208.33" y="447.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::shortest_dfa (176 samples, 0.04%)</title><rect x="194.9" y="341" width="0.5" height="15.0" fill="rgb(230,126,28)" rx="2" ry="2" />
<text  x="197.91" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,145 samples, 0.27%)</title><rect x="1089.6" y="261" width="3.2" height="15.0" fill="rgb(236,34,2)" rx="2" ry="2" />
<text  x="1092.62" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::make_insert_hash (874 samples, 0.20%)</title><rect x="225.5" y="197" width="2.4" height="15.0" fill="rgb(221,5,53)" rx="2" ry="2" />
<text  x="228.50" y="207.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (194 samples, 0.05%)</title><rect x="423.8" y="357" width="0.6" height="15.0" fill="rgb(228,190,52)" rx="2" ry="2" />
<text  x="426.83" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (2,540 samples, 0.59%)</title><rect x="1048.0" y="389" width="7.0" height="15.0" fill="rgb(215,62,32)" rx="2" ry="2" />
<text  x="1051.01" y="399.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (117 samples, 0.03%)</title><rect x="212.0" y="389" width="0.3" height="15.0" fill="rgb(240,84,19)" rx="2" ry="2" />
<text  x="214.99" y="399.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::oov_provider_plugins (272 samples, 0.06%)</title><rect x="374.5" y="421" width="0.8" height="15.0" fill="rgb(254,138,8)" rx="2" ry="2" />
<text  x="377.52" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (158 samples, 0.04%)</title><rect x="220.1" y="213" width="0.4" height="15.0" fill="rgb(227,4,19)" rx="2" ry="2" />
<text  x="223.05" y="223.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::collect_results (465 samples, 0.11%)</title><rect x="204.8" y="469" width="1.3" height="15.0" fill="rgb(249,179,50)" rx="2" ry="2" />
<text  x="207.77" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (338 samples, 0.08%)</title><rect x="278.8" y="101" width="0.9" height="15.0" fill="rgb(215,195,2)" rx="2" ry="2" />
<text  x="281.76" y="111.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (2,165 samples, 0.51%)</title><rect x="1048.0" y="341" width="6.0" height="15.0" fill="rgb(209,86,26)" rx="2" ry="2" />
<text  x="1051.01" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (248 samples, 0.06%)</title><rect x="224.1" y="293" width="0.7" height="15.0" fill="rgb(243,215,26)" rx="2" ry="2" />
<text  x="227.12" y="303.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array (164 samples, 0.04%)</title><rect x="979.0" y="245" width="0.5" height="15.0" fill="rgb(207,148,18)" rx="2" ry="2" />
<text  x="982.03" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (134 samples, 0.03%)</title><rect x="215.3" y="277" width="0.4" height="15.0" fill="rgb(254,140,6)" rx="2" ry="2" />
<text  x="218.34" y="287.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,059 samples, 0.25%)</title><rect x="1164.6" y="405" width="3.0" height="15.0" fill="rgb(249,83,33)" rx="2" ry="2" />
<text  x="1167.65" y="415.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_some (247 samples, 0.06%)</title><rect x="582.5" y="405" width="0.7" height="15.0" fill="rgb(249,18,36)" rx="2" ry="2" />
<text  x="585.51" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,613 samples, 0.38%)</title><rect x="1033.1" y="293" width="4.5" height="15.0" fill="rgb(217,224,0)" rx="2" ry="2" />
<text  x="1036.12" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (170 samples, 0.04%)</title><rect x="978.3" y="229" width="0.5" height="15.0" fill="rgb(227,156,49)" rx="2" ry="2" />
<text  x="981.28" y="239.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (155 samples, 0.04%)</title><rect x="295.8" y="165" width="0.4" height="15.0" fill="rgb(250,40,0)" rx="2" ry="2" />
<text  x="298.76" y="175.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (119 samples, 0.03%)</title><rect x="1145.6" y="389" width="0.3" height="15.0" fill="rgb(214,193,34)" rx="2" ry="2" />
<text  x="1148.60" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2,039 samples, 0.48%)</title><rect x="1083.3" y="213" width="5.6" height="15.0" fill="rgb(216,66,50)" rx="2" ry="2" />
<text  x="1086.31" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (370 samples, 0.09%)</title><rect x="222.3" y="165" width="1.0" height="15.0" fill="rgb(227,7,4)" rx="2" ry="2" />
<text  x="225.31" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (265 samples, 0.06%)</title><rect x="980.3" y="373" width="0.8" height="15.0" fill="rgb(236,8,44)" rx="2" ry="2" />
<text  x="983.34" y="383.5" ></text>
</g>
<g >
<title>[system.dic] (146 samples, 0.03%)</title><rect x="44.0" y="501" width="0.4" height="15.0" fill="rgb(206,2,53)" rx="2" ry="2" />
<text  x="47.03" y="511.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (521 samples, 0.12%)</title><rect x="257.7" y="405" width="1.5" height="15.0" fill="rgb(235,181,40)" rx="2" ry="2" />
<text  x="260.73" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,161 samples, 0.51%)</title><rect x="343.7" y="213" width="6.0" height="15.0" fill="rgb(245,126,52)" rx="2" ry="2" />
<text  x="346.70" y="223.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (127 samples, 0.03%)</title><rect x="144.0" y="309" width="0.3" height="15.0" fill="rgb(220,103,26)" rx="2" ry="2" />
<text  x="146.96" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (116 samples, 0.03%)</title><rect x="216.9" y="325" width="0.3" height="15.0" fill="rgb(213,181,2)" rx="2" ry="2" />
<text  x="219.88" y="335.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,661 samples, 0.39%)</title><rect x="175.5" y="277" width="4.6" height="15.0" fill="rgb(220,135,0)" rx="2" ry="2" />
<text  x="178.49" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (2,107 samples, 0.49%)</title><rect x="136.7" y="309" width="5.8" height="15.0" fill="rgb(206,177,43)" rx="2" ry="2" />
<text  x="139.70" y="319.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (148 samples, 0.03%)</title><rect x="361.9" y="405" width="0.4" height="15.0" fill="rgb(217,201,7)" rx="2" ry="2" />
<text  x="364.88" y="415.5" ></text>
</g>
<g >
<title>&lt; (3,055 samples, 0.71%)</title><rect x="275.6" y="309" width="8.5" height="15.0" fill="rgb(230,78,43)" rx="2" ry="2" />
<text  x="278.64" y="319.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt; (633 samples, 0.15%)</title><rect x="219.8" y="293" width="1.8" height="15.0" fill="rgb(210,48,5)" rx="2" ry="2" />
<text  x="222.83" y="303.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (312 samples, 0.07%)</title><rect x="194.0" y="325" width="0.8" height="15.0" fill="rgb(225,159,35)" rx="2" ry="2" />
<text  x="196.95" y="335.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1,526 samples, 0.36%)</title><rect x="1177.2" y="405" width="4.2" height="15.0" fill="rgb(221,33,53)" rx="2" ry="2" />
<text  x="1180.21" y="415.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher (195 samples, 0.05%)</title><rect x="143.8" y="341" width="0.5" height="15.0" fill="rgb(215,213,34)" rx="2" ry="2" />
<text  x="146.77" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (132 samples, 0.03%)</title><rect x="227.9" y="181" width="0.4" height="15.0" fill="rgb(224,114,37)" rx="2" ry="2" />
<text  x="230.91" y="191.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (467 samples, 0.11%)</title><rect x="1163.4" y="325" width="1.2" height="15.0" fill="rgb(254,195,13)" rx="2" ry="2" />
<text  x="1166.36" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::any_bit_set (2,635 samples, 0.62%)</title><rect x="878.0" y="277" width="7.3" height="15.0" fill="rgb(230,1,30)" rx="2" ry="2" />
<text  x="881.04" y="287.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (148 samples, 0.03%)</title><rect x="361.9" y="389" width="0.4" height="15.0" fill="rgb(248,163,21)" rx="2" ry="2" />
<text  x="364.88" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,140 samples, 0.73%)</title><rect x="331.1" y="213" width="8.6" height="15.0" fill="rgb(207,144,6)" rx="2" ry="2" />
<text  x="334.07" y="223.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match_at (16,060 samples, 3.75%)</title><rect x="144.4" y="373" width="44.3" height="15.0" fill="rgb(239,61,46)" rx="2" ry="2" />
<text  x="147.42" y="383.5" >rege..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (536 samples, 0.13%)</title><rect x="187.2" y="277" width="1.5" height="15.0" fill="rgb(212,174,23)" rx="2" ry="2" />
<text  x="190.24" y="287.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (401 samples, 0.09%)</title><rect x="226.1" y="133" width="1.1" height="15.0" fill="rgb(229,134,11)" rx="2" ry="2" />
<text  x="229.09" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2,111 samples, 0.49%)</title><rect x="189.0" y="421" width="5.8" height="15.0" fill="rgb(215,142,31)" rx="2" ry="2" />
<text  x="191.99" y="431.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state (770 samples, 0.18%)</title><rect x="1104.1" y="293" width="2.1" height="15.0" fill="rgb(231,65,12)" rx="2" ry="2" />
<text  x="1107.06" y="303.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (18,940 samples, 4.43%)</title><rect x="908.4" y="277" width="52.2" height="15.0" fill="rgb(208,169,0)" rx="2" ry="2" />
<text  x="911.39" y="287.5" >&lt;F as..</text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,904 samples, 0.45%)</title><rect x="573.3" y="405" width="5.2" height="15.0" fill="rgb(230,20,45)" rx="2" ry="2" />
<text  x="576.25" y="415.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify_bucket (698 samples, 0.16%)</title><rect x="1134.1" y="133" width="1.9" height="15.0" fill="rgb(232,69,11)" rx="2" ry="2" />
<text  x="1137.12" y="143.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (152 samples, 0.04%)</title><rect x="1189.2" y="421" width="0.4" height="15.0" fill="rgb(236,228,50)" rx="2" ry="2" />
<text  x="1192.19" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::index (125 samples, 0.03%)</title><rect x="1185.2" y="421" width="0.3" height="15.0" fill="rgb(252,120,17)" rx="2" ry="2" />
<text  x="1188.17" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_free (127 samples, 0.03%)</title><rect x="230.4" y="373" width="0.3" height="15.0" fill="rgb(211,75,0)" rx="2" ry="2" />
<text  x="233.40" y="383.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (1,025 samples, 0.24%)</title><rect x="1129.0" y="341" width="2.8" height="15.0" fill="rgb(216,158,9)" rx="2" ry="2" />
<text  x="1132.00" y="351.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (324 samples, 0.08%)</title><rect x="296.5" y="293" width="0.9" height="15.0" fill="rgb(235,170,35)" rx="2" ry="2" />
<text  x="299.52" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (125 samples, 0.03%)</title><rect x="256.6" y="421" width="0.3" height="15.0" fill="rgb(237,28,39)" rx="2" ry="2" />
<text  x="259.59" y="431.5" ></text>
</g>
<g >
<title>_int_realloc (509 samples, 0.12%)</title><rect x="324.8" y="37" width="1.4" height="15.0" fill="rgb(219,59,30)" rx="2" ry="2" />
<text  x="327.83" y="47.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (493 samples, 0.12%)</title><rect x="222.2" y="245" width="1.3" height="15.0" fill="rgb(222,92,5)" rx="2" ry="2" />
<text  x="225.16" y="255.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::ignore_yomigana::IgnoreYomiganaPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (1,364 samples, 0.32%)</title><rect x="1128.8" y="389" width="3.8" height="15.0" fill="rgb(233,5,50)" rx="2" ry="2" />
<text  x="1131.81" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_free (531 samples, 0.12%)</title><rect x="46.2" y="485" width="1.5" height="15.0" fill="rgb(213,151,54)" rx="2" ry="2" />
<text  x="49.24" y="495.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (9,542 samples, 2.23%)</title><rect x="480.8" y="293" width="26.3" height="15.0" fill="rgb(213,54,26)" rx="2" ry="2" />
<text  x="483.80" y="303.5" >a..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (171 samples, 0.04%)</title><rect x="311.5" y="229" width="0.4" height="15.0" fill="rgb(223,101,39)" rx="2" ry="2" />
<text  x="314.48" y="239.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (150 samples, 0.04%)</title><rect x="207.5" y="373" width="0.4" height="15.0" fill="rgb(237,39,47)" rx="2" ry="2" />
<text  x="210.45" y="383.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (1,145 samples, 0.27%)</title><rect x="171.6" y="293" width="3.1" height="15.0" fill="rgb(239,73,53)" rx="2" ry="2" />
<text  x="174.55" y="303.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite (13,507 samples, 3.16%)</title><rect x="1099.9" y="437" width="37.2" height="15.0" fill="rgb(249,66,32)" rx="2" ry="2" />
<text  x="1102.89" y="447.5" >sud..</text>
</g>
<g >
<title>alloc::slice::hack::to_vec (324 samples, 0.08%)</title><rect x="274.6" y="309" width="0.9" height="15.0" fill="rgb(241,53,36)" rx="2" ry="2" />
<text  x="277.63" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::word_info_parser (3,537 samples, 0.83%)</title><rect x="274.3" y="373" width="9.8" height="15.0" fill="rgb(209,127,4)" rx="2" ry="2" />
<text  x="277.33" y="383.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (365 samples, 0.09%)</title><rect x="423.4" y="405" width="1.0" height="15.0" fill="rgb(218,188,5)" rx="2" ry="2" />
<text  x="426.36" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (113 samples, 0.03%)</title><rect x="218.6" y="341" width="0.3" height="15.0" fill="rgb(231,214,27)" rx="2" ry="2" />
<text  x="221.59" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (140 samples, 0.03%)</title><rect x="1112.3" y="213" width="0.4" height="15.0" fill="rgb(243,139,43)" rx="2" ry="2" />
<text  x="1115.30" y="223.5" ></text>
</g>
<g >
<title>_int_free (1,730 samples, 0.40%)</title><rect x="1148.8" y="245" width="4.8" height="15.0" fill="rgb(218,189,9)" rx="2" ry="2" />
<text  x="1151.81" y="255.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (351 samples, 0.08%)</title><rect x="122.7" y="341" width="1.0" height="15.0" fill="rgb(208,62,25)" rx="2" ry="2" />
<text  x="125.71" y="351.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new (232 samples, 0.05%)</title><rect x="19.7" y="485" width="0.6" height="15.0" fill="rgb(211,34,29)" rx="2" ry="2" />
<text  x="22.70" y="495.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find (1,140 samples, 0.27%)</title><rect x="1133.5" y="245" width="3.2" height="15.0" fill="rgb(233,131,54)" rx="2" ry="2" />
<text  x="1136.51" y="255.5" ></text>
</g>
<g >
<title>fancy_regex::prev_codepoint_ix (266 samples, 0.06%)</title><rect x="97.7" y="389" width="0.8" height="15.0" fill="rgb(249,55,24)" rx="2" ry="2" />
<text  x="100.74" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (881 samples, 0.21%)</title><rect x="252.3" y="357" width="2.5" height="15.0" fill="rgb(252,55,7)" rx="2" ry="2" />
<text  x="255.33" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (95,603 samples, 22.35%)</title><rect x="638.1" y="357" width="263.7" height="15.0" fill="rgb(244,177,17)" rx="2" ry="2" />
<text  x="641.11" y="367.5" >hashbrown::map::HashMap&lt;K,V,S,A&gt;::g..</text>
</g>
<g >
<title>nom::number::complete::le_u16 (266 samples, 0.06%)</title><rect x="1059.9" y="245" width="0.7" height="15.0" fill="rgb(235,174,27)" rx="2" ry="2" />
<text  x="1062.86" y="255.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (4,500 samples, 1.05%)</title><rect x="730.0" y="261" width="12.4" height="15.0" fill="rgb(212,77,28)" rx="2" ry="2" />
<text  x="733.00" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (300 samples, 0.07%)</title><rect x="272.5" y="341" width="0.8" height="15.0" fill="rgb(244,103,34)" rx="2" ry="2" />
<text  x="275.51" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (542 samples, 0.13%)</title><rect x="213.1" y="373" width="1.5" height="15.0" fill="rgb(222,192,39)" rx="2" ry="2" />
<text  x="216.06" y="383.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (186 samples, 0.04%)</title><rect x="142.0" y="293" width="0.5" height="15.0" fill="rgb(214,207,12)" rx="2" ry="2" />
<text  x="145.00" y="303.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (465 samples, 0.11%)</title><rect x="327.6" y="181" width="1.3" height="15.0" fill="rgb(213,221,27)" rx="2" ry="2" />
<text  x="330.62" y="191.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (224 samples, 0.05%)</title><rect x="108.9" y="341" width="0.6" height="15.0" fill="rgb(254,102,31)" rx="2" ry="2" />
<text  x="111.90" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free (501 samples, 0.12%)</title><rect x="1168.8" y="357" width="1.4" height="15.0" fill="rgb(224,111,1)" rx="2" ry="2" />
<text  x="1171.82" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,239 samples, 0.29%)</title><rect x="976.4" y="357" width="3.5" height="15.0" fill="rgb(241,197,38)" rx="2" ry="2" />
<text  x="979.44" y="367.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::find_from_pos (42,392 samples, 9.91%)</title><rect x="71.8" y="421" width="116.9" height="15.0" fill="rgb(235,140,34)" rx="2" ry="2" />
<text  x="74.79" y="431.5" >fancy_regex::R..</text>
</g>
<g >
<title>_int_malloc (1,494 samples, 0.35%)</title><rect x="292.1" y="181" width="4.1" height="15.0" fill="rgb(220,45,15)" rx="2" ry="2" />
<text  x="295.07" y="191.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (882 samples, 0.21%)</title><rect x="199.8" y="309" width="2.5" height="15.0" fill="rgb(245,72,20)" rx="2" ry="2" />
<text  x="202.82" y="319.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (184 samples, 0.04%)</title><rect x="309.9" y="245" width="0.5" height="15.0" fill="rgb(211,23,28)" rx="2" ry="2" />
<text  x="312.88" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (387 samples, 0.09%)</title><rect x="278.7" y="117" width="1.0" height="15.0" fill="rgb(208,47,23)" rx="2" ry="2" />
<text  x="281.67" y="127.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::ahocorasick::FindIter&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (828 samples, 0.19%)</title><rect x="1103.9" y="357" width="2.3" height="15.0" fill="rgb(246,180,15)" rx="2" ry="2" />
<text  x="1106.90" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (1,075 samples, 0.25%)</title><rect x="189.7" y="69" width="3.0" height="15.0" fill="rgb(218,208,42)" rx="2" ry="2" />
<text  x="192.69" y="79.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher_str (1,290 samples, 0.30%)</title><rect x="185.2" y="341" width="3.5" height="15.0" fill="rgb(236,190,28)" rx="2" ry="2" />
<text  x="188.16" y="351.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (143 samples, 0.03%)</title><rect x="217.2" y="309" width="0.4" height="15.0" fill="rgb(241,187,45)" rx="2" ry="2" />
<text  x="220.21" y="319.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (212 samples, 0.05%)</title><rect x="1139.7" y="421" width="0.5" height="15.0" fill="rgb(235,104,15)" rx="2" ry="2" />
<text  x="1142.65" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (2,092 samples, 0.49%)</title><rect x="189.0" y="405" width="5.8" height="15.0" fill="rgb(244,144,26)" rx="2" ry="2" />
<text  x="192.04" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_dictionary_id (278 samples, 0.06%)</title><rect x="1062.5" y="405" width="0.8" height="15.0" fill="rgb(242,87,36)" rx="2" ry="2" />
<text  x="1065.54" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (254 samples, 0.06%)</title><rect x="222.5" y="101" width="0.7" height="15.0" fill="rgb(218,20,40)" rx="2" ry="2" />
<text  x="225.51" y="111.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max (236 samples, 0.06%)</title><rect x="524.8" y="325" width="0.7" height="15.0" fill="rgb(251,113,26)" rx="2" ry="2" />
<text  x="527.85" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (228 samples, 0.05%)</title><rect x="1061.2" y="421" width="0.7" height="15.0" fill="rgb(254,40,48)" rx="2" ry="2" />
<text  x="1064.23" y="431.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_mul (164 samples, 0.04%)</title><rect x="979.0" y="213" width="0.5" height="15.0" fill="rgb(216,222,5)" rx="2" ry="2" />
<text  x="982.03" y="223.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (552 samples, 0.13%)</title><rect x="341.4" y="229" width="1.5" height="15.0" fill="rgb(214,228,10)" rx="2" ry="2" />
<text  x="344.39" y="239.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::stack_push (2,828 samples, 0.66%)</title><rect x="123.7" y="389" width="7.8" height="15.0" fill="rgb(243,59,18)" rx="2" ry="2" />
<text  x="126.68" y="399.5" ></text>
</g>
<g >
<title>[unknown] (414,099 samples, 96.80%)</title><rect x="44.4" y="501" width="1142.3" height="15.0" fill="rgb(210,31,27)" rx="2" ry="2" />
<text  x="47.44" y="511.5" >[unknown]</text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (184 samples, 0.04%)</title><rect x="40.0" y="485" width="0.5" height="15.0" fill="rgb(219,101,18)" rx="2" ry="2" />
<text  x="42.99" y="495.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match_at (214 samples, 0.05%)</title><rect x="194.9" y="405" width="0.5" height="15.0" fill="rgb(235,203,44)" rx="2" ry="2" />
<text  x="197.85" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,951 samples, 0.46%)</title><rect x="240.6" y="341" width="5.4" height="15.0" fill="rgb(231,18,35)" rx="2" ry="2" />
<text  x="243.58" y="351.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::shortest_match_at (12,975 samples, 3.03%)</title><rect x="148.7" y="325" width="35.7" height="15.0" fill="rgb(210,180,36)" rx="2" ry="2" />
<text  x="151.66" y="335.5" >&lt;re..</text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (3,347 samples, 0.78%)</title><rect x="135.1" y="373" width="9.2" height="15.0" fill="rgb(228,227,3)" rx="2" ry="2" />
<text  x="138.07" y="383.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (152 samples, 0.04%)</title><rect x="1189.2" y="437" width="0.4" height="15.0" fill="rgb(207,119,42)" rx="2" ry="2" />
<text  x="1192.19" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (570 samples, 0.13%)</title><rect x="978.3" y="277" width="1.6" height="15.0" fill="rgb(213,174,1)" rx="2" ry="2" />
<text  x="981.28" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (258 samples, 0.06%)</title><rect x="215.9" y="277" width="0.7" height="15.0" fill="rgb(243,117,53)" rx="2" ry="2" />
<text  x="218.86" y="287.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (158 samples, 0.04%)</title><rect x="220.1" y="245" width="0.4" height="15.0" fill="rgb(218,164,0)" rx="2" ry="2" />
<text  x="223.05" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (149 samples, 0.03%)</title><rect x="1145.6" y="421" width="0.4" height="15.0" fill="rgb(239,189,5)" rx="2" ry="2" />
<text  x="1148.59" y="431.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::string_number::StringNumber::append (288 samples, 0.07%)</title><rect x="218.5" y="405" width="0.8" height="15.0" fill="rgb(227,79,39)" rx="2" ry="2" />
<text  x="221.49" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (992 samples, 0.23%)</title><rect x="1029.3" y="325" width="2.8" height="15.0" fill="rgb(237,45,46)" rx="2" ry="2" />
<text  x="1032.31" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (25,441 samples, 5.95%)</title><rect x="799.5" y="245" width="70.2" height="15.0" fill="rgb(210,107,10)" rx="2" ry="2" />
<text  x="802.54" y="255.5" >&lt;core::..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3,370 samples, 0.79%)</title><rect x="319.7" y="197" width="9.3" height="15.0" fill="rgb(236,15,38)" rx="2" ry="2" />
<text  x="322.70" y="207.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (2,165 samples, 0.51%)</title><rect x="1048.0" y="245" width="6.0" height="15.0" fill="rgb(245,200,22)" rx="2" ry="2" />
<text  x="1051.01" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18,257 samples, 4.27%)</title><rect x="475.9" y="389" width="50.4" height="15.0" fill="rgb(234,105,21)" rx="2" ry="2" />
<text  x="478.90" y="399.5" >alloc..</text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (266 samples, 0.06%)</title><rect x="1059.9" y="293" width="0.7" height="15.0" fill="rgb(217,208,14)" rx="2" ry="2" />
<text  x="1062.86" y="303.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (124 samples, 0.03%)</title><rect x="1160.5" y="357" width="0.3" height="15.0" fill="rgb(228,27,48)" rx="2" ry="2" />
<text  x="1163.51" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,138 samples, 0.50%)</title><rect x="343.8" y="181" width="5.9" height="15.0" fill="rgb(236,97,31)" rx="2" ry="2" />
<text  x="346.76" y="191.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::fill_word_info (191 samples, 0.04%)</title><rect x="204.8" y="453" width="0.5" height="15.0" fill="rgb(238,133,23)" rx="2" ry="2" />
<text  x="207.77" y="463.5" ></text>
</g>
<g >
<title>core::mem::drop (138 samples, 0.03%)</title><rect x="216.8" y="357" width="0.4" height="15.0" fill="rgb(208,150,16)" rx="2" ry="2" />
<text  x="219.82" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1,215 samples, 0.28%)</title><rect x="1089.6" y="293" width="3.4" height="15.0" fill="rgb(214,151,53)" rx="2" ry="2" />
<text  x="1092.62" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::make_insert_hash (264 samples, 0.06%)</title><rect x="220.1" y="261" width="0.7" height="15.0" fill="rgb(215,19,9)" rx="2" ry="2" />
<text  x="223.05" y="271.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (668 samples, 0.16%)</title><rect x="1027.5" y="261" width="1.8" height="15.0" fill="rgb(215,110,23)" rx="2" ry="2" />
<text  x="1030.47" y="271.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (1,994 samples, 0.47%)</title><rect x="1032.1" y="325" width="5.5" height="15.0" fill="rgb(223,112,34)" rx="2" ry="2" />
<text  x="1035.07" y="335.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::uppercase::lookup (436 samples, 0.10%)</title><rect x="1102.5" y="325" width="1.2" height="15.0" fill="rgb(243,15,33)" rx="2" ry="2" />
<text  x="1105.46" y="335.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::dfa::PremultipliedByteClass&lt;S&gt; as aho_corasick::automaton::Automaton&gt;::next_state (299 samples, 0.07%)</title><rect x="1108.1" y="245" width="0.8" height="15.0" fill="rgb(247,123,7)" rx="2" ry="2" />
<text  x="1111.05" y="255.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (513 samples, 0.12%)</title><rect x="280.3" y="229" width="1.4" height="15.0" fill="rgb(241,26,35)" rx="2" ry="2" />
<text  x="283.31" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (503 samples, 0.12%)</title><rect x="1080.5" y="325" width="1.4" height="15.0" fill="rgb(244,69,12)" rx="2" ry="2" />
<text  x="1083.51" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (149 samples, 0.03%)</title><rect x="477.9" y="341" width="0.4" height="15.0" fill="rgb(210,219,32)" rx="2" ry="2" />
<text  x="480.93" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (149 samples, 0.03%)</title><rect x="447.2" y="341" width="0.4" height="15.0" fill="rgb(235,66,12)" rx="2" ry="2" />
<text  x="450.21" y="351.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::bitset_search (205 samples, 0.05%)</title><rect x="1109.4" y="325" width="0.6" height="15.0" fill="rgb(235,12,1)" rx="2" ry="2" />
<text  x="1112.40" y="335.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::iter (238 samples, 0.06%)</title><rect x="170.2" y="277" width="0.6" height="15.0" fill="rgb(216,147,36)" rx="2" ry="2" />
<text  x="173.17" y="287.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (1,994 samples, 0.47%)</title><rect x="1032.1" y="309" width="5.5" height="15.0" fill="rgb(212,126,42)" rx="2" ry="2" />
<text  x="1035.07" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (209 samples, 0.05%)</title><rect x="229.4" y="293" width="0.5" height="15.0" fill="rgb(215,68,50)" rx="2" ry="2" />
<text  x="232.36" y="303.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (163 samples, 0.04%)</title><rect x="523.4" y="309" width="0.4" height="15.0" fill="rgb(242,206,52)" rx="2" ry="2" />
<text  x="526.38" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (219 samples, 0.05%)</title><rect x="215.9" y="229" width="0.6" height="15.0" fill="rgb(209,149,23)" rx="2" ry="2" />
<text  x="218.94" y="239.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (944 samples, 0.22%)</title><rect x="1111.2" y="293" width="2.6" height="15.0" fill="rgb(214,24,0)" rx="2" ry="2" />
<text  x="1114.17" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (1,688 samples, 0.39%)</title><rect x="189.3" y="277" width="4.7" height="15.0" fill="rgb(221,138,50)" rx="2" ry="2" />
<text  x="192.29" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1,587 samples, 0.37%)</title><rect x="252.0" y="437" width="4.4" height="15.0" fill="rgb(220,129,25)" rx="2" ry="2" />
<text  x="255.05" y="447.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (952 samples, 0.22%)</title><rect x="1076.2" y="325" width="2.7" height="15.0" fill="rgb(214,209,51)" rx="2" ry="2" />
<text  x="1079.23" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (292 samples, 0.07%)</title><rect x="272.5" y="325" width="0.8" height="15.0" fill="rgb(241,96,12)" rx="2" ry="2" />
<text  x="275.51" y="335.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (548 samples, 0.13%)</title><rect x="96.2" y="373" width="1.5" height="15.0" fill="rgb(218,130,29)" rx="2" ry="2" />
<text  x="99.23" y="383.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::get_surface (151 samples, 0.04%)</title><rect x="1185.1" y="437" width="0.4" height="15.0" fill="rgb(249,24,52)" rx="2" ry="2" />
<text  x="1188.10" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (165 samples, 0.04%)</title><rect x="447.2" y="357" width="0.5" height="15.0" fill="rgb(234,191,32)" rx="2" ry="2" />
<text  x="450.20" y="367.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,671 samples, 3.66%)</title><rect x="377.9" y="373" width="43.2" height="15.0" fill="rgb(228,34,10)" rx="2" ry="2" />
<text  x="380.89" y="383.5" >&lt;cor..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (498 samples, 0.12%)</title><rect x="280.4" y="165" width="1.3" height="15.0" fill="rgb(211,178,33)" rx="2" ry="2" />
<text  x="283.35" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (498 samples, 0.12%)</title><rect x="280.4" y="181" width="1.3" height="15.0" fill="rgb(231,29,3)" rx="2" ry="2" />
<text  x="283.35" y="191.5" ></text>
</g>
<g >
<title>unicode_normalization::normalize::decompose (168 samples, 0.04%)</title><rect x="1110.4" y="277" width="0.5" height="15.0" fill="rgb(234,57,51)" rx="2" ry="2" />
<text  x="1113.43" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_continuous_len (400 samples, 0.09%)</title><rect x="1072.6" y="389" width="1.1" height="15.0" fill="rgb(254,164,20)" rx="2" ry="2" />
<text  x="1075.60" y="399.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at_reverse (151 samples, 0.04%)</title><rect x="202.7" y="309" width="0.4" height="15.0" fill="rgb(232,3,20)" rx="2" ry="2" />
<text  x="205.67" y="319.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (119 samples, 0.03%)</title><rect x="1132.0" y="309" width="0.3" height="15.0" fill="rgb(236,43,23)" rx="2" ry="2" />
<text  x="1135.02" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (23,237 samples, 5.43%)</title><rect x="908.4" y="357" width="64.1" height="15.0" fill="rgb(244,207,17)" rx="2" ry="2" />
<text  x="911.39" y="367.5" >&lt;F as n..</text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (481 samples, 0.11%)</title><rect x="1041.5" y="341" width="1.3" height="15.0" fill="rgb(250,91,14)" rx="2" ry="2" />
<text  x="1044.45" y="351.5" ></text>
</g>
<g >
<title>&lt;sudachi::analysis::node::Node as core::clone::Clone&gt;::clone (1,581 samples, 0.37%)</title><rect x="247.6" y="437" width="4.4" height="15.0" fill="rgb(227,138,36)" rx="2" ry="2" />
<text  x="250.59" y="447.5" ></text>
</g>
<g >
<title>core::ptr::swap (778 samples, 0.18%)</title><rect x="257.0" y="421" width="2.2" height="15.0" fill="rgb(229,33,5)" rx="2" ry="2" />
<text  x="260.02" y="431.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (115 samples, 0.03%)</title><rect x="1135.6" y="101" width="0.3" height="15.0" fill="rgb(240,39,35)" rx="2" ry="2" />
<text  x="1138.63" y="111.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (6,247 samples, 1.46%)</title><rect x="153.6" y="293" width="17.2" height="15.0" fill="rgb(243,44,37)" rx="2" ry="2" />
<text  x="156.60" y="303.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (458 samples, 0.11%)</title><rect x="1038.4" y="309" width="1.3" height="15.0" fill="rgb(230,123,28)" rx="2" ry="2" />
<text  x="1041.39" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (420 samples, 0.10%)</title><rect x="278.6" y="149" width="1.1" height="15.0" fill="rgb(224,91,22)" rx="2" ry="2" />
<text  x="281.59" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (159 samples, 0.04%)</title><rect x="222.7" y="85" width="0.4" height="15.0" fill="rgb(210,65,53)" rx="2" ry="2" />
<text  x="225.71" y="95.5" ></text>
</g>
<g >
<title>_int_free (1,529 samples, 0.36%)</title><rect x="241.7" y="293" width="4.2" height="15.0" fill="rgb(243,21,31)" rx="2" ry="2" />
<text  x="244.67" y="303.5" ></text>
</g>
<g >
<title>core::ptr::write (5,170 samples, 1.21%)</title><rect x="527.5" y="405" width="14.3" height="15.0" fill="rgb(244,66,29)" rx="2" ry="2" />
<text  x="530.52" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::connect_cost_parser (25,616 samples, 5.99%)</title><rect x="901.8" y="389" width="70.7" height="15.0" fill="rgb(232,171,48)" rx="2" ry="2" />
<text  x="904.83" y="399.5" >sudachi..</text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (224 samples, 0.05%)</title><rect x="1042.8" y="325" width="0.6" height="15.0" fill="rgb(243,161,9)" rx="2" ry="2" />
<text  x="1045.78" y="335.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (374 samples, 0.09%)</title><rect x="314.8" y="261" width="1.0" height="15.0" fill="rgb(233,50,52)" rx="2" ry="2" />
<text  x="317.79" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (256 samples, 0.06%)</title><rect x="12.5" y="485" width="0.7" height="15.0" fill="rgb(220,200,35)" rx="2" ry="2" />
<text  x="15.51" y="495.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (15,671 samples, 3.66%)</title><rect x="377.9" y="357" width="43.2" height="15.0" fill="rgb(230,134,44)" rx="2" ry="2" />
<text  x="380.89" y="367.5" >&lt;cor..</text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (111 samples, 0.03%)</title><rect x="211.1" y="341" width="0.3" height="15.0" fill="rgb(245,185,7)" rx="2" ry="2" />
<text  x="214.13" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (600 samples, 0.14%)</title><rect x="1129.9" y="261" width="1.6" height="15.0" fill="rgb(229,35,17)" rx="2" ry="2" />
<text  x="1132.85" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (187 samples, 0.04%)</title><rect x="1160.4" y="405" width="0.5" height="15.0" fill="rgb(237,141,20)" rx="2" ry="2" />
<text  x="1163.35" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (1,433 samples, 0.33%)</title><rect x="1084.7" y="181" width="4.0" height="15.0" fill="rgb(237,191,4)" rx="2" ry="2" />
<text  x="1087.72" y="191.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,003 samples, 0.47%)</title><rect x="189.3" y="373" width="5.5" height="15.0" fill="rgb(229,68,49)" rx="2" ry="2" />
<text  x="192.29" y="383.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (1,792 samples, 0.42%)</title><rect x="126.5" y="373" width="5.0" height="15.0" fill="rgb(226,169,31)" rx="2" ry="2" />
<text  x="129.53" y="383.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (1,360 samples, 0.32%)</title><rect x="34.7" y="485" width="3.8" height="15.0" fill="rgb(214,162,14)" rx="2" ry="2" />
<text  x="37.74" y="495.5" ></text>
</g>
<g >
<title>core::fmt::write (4,344 samples, 1.02%)</title><rect x="1172.2" y="437" width="12.0" height="15.0" fill="rgb(253,108,0)" rx="2" ry="2" />
<text  x="1175.19" y="447.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::start_build (220 samples, 0.05%)</title><rect x="1145.6" y="453" width="0.6" height="15.0" fill="rgb(230,101,24)" rx="2" ry="2" />
<text  x="1148.56" y="463.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u16 (38,016 samples, 8.89%)</title><rect x="764.9" y="277" width="104.8" height="15.0" fill="rgb(208,228,15)" rx="2" ry="2" />
<text  x="767.87" y="287.5" >core::hash::..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (692 samples, 0.16%)</title><rect x="977.9" y="293" width="2.0" height="15.0" fill="rgb(234,47,2)" rx="2" ry="2" />
<text  x="980.94" y="303.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (156 samples, 0.04%)</title><rect x="373.8" y="421" width="0.4" height="15.0" fill="rgb(249,91,54)" rx="2" ry="2" />
<text  x="376.79" y="431.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (751 samples, 0.18%)</title><rect x="249.7" y="421" width="2.1" height="15.0" fill="rgb(254,48,14)" rx="2" ry="2" />
<text  x="252.74" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (556 samples, 0.13%)</title><rect x="278.5" y="213" width="1.5" height="15.0" fill="rgb(245,221,11)" rx="2" ry="2" />
<text  x="281.46" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (445 samples, 0.10%)</title><rect x="209.9" y="293" width="1.2" height="15.0" fill="rgb(247,120,50)" rx="2" ry="2" />
<text  x="212.90" y="303.5" ></text>
</g>
<g >
<title>sudachi::sentence_detector::parenthesis_level (2,984 samples, 0.70%)</title><rect x="195.5" y="437" width="8.2" height="15.0" fill="rgb(216,216,22)" rx="2" ry="2" />
<text  x="198.47" y="447.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (149 samples, 0.03%)</title><rect x="1080.7" y="309" width="0.4" height="15.0" fill="rgb(209,189,2)" rx="2" ry="2" />
<text  x="1083.69" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (426 samples, 0.10%)</title><rect x="278.6" y="165" width="1.1" height="15.0" fill="rgb(249,14,19)" rx="2" ry="2" />
<text  x="281.57" y="175.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (506 samples, 0.12%)</title><rect x="1161.0" y="341" width="1.4" height="15.0" fill="rgb(240,210,48)" rx="2" ry="2" />
<text  x="1164.05" y="351.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_fold::{{closure}} (1,511 samples, 0.35%)</title><rect x="225.0" y="277" width="4.2" height="15.0" fill="rgb(213,0,40)" rx="2" ry="2" />
<text  x="228.02" y="287.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt; (3,772 samples, 0.88%)</title><rect x="219.7" y="389" width="10.5" height="15.0" fill="rgb(225,185,27)" rx="2" ry="2" />
<text  x="222.75" y="399.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,511 samples, 0.35%)</title><rect x="225.0" y="245" width="4.2" height="15.0" fill="rgb(216,28,25)" rx="2" ry="2" />
<text  x="228.02" y="255.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (148 samples, 0.03%)</title><rect x="361.9" y="373" width="0.4" height="15.0" fill="rgb(217,118,37)" rx="2" ry="2" />
<text  x="364.88" y="383.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match (1,407 samples, 0.33%)</title><rect x="170.8" y="309" width="3.9" height="15.0" fill="rgb(235,199,49)" rx="2" ry="2" />
<text  x="173.83" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (197 samples, 0.05%)</title><rect x="254.2" y="341" width="0.6" height="15.0" fill="rgb(228,195,38)" rx="2" ry="2" />
<text  x="257.21" y="351.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (251 samples, 0.06%)</title><rect x="379.8" y="277" width="0.7" height="15.0" fill="rgb(249,14,33)" rx="2" ry="2" />
<text  x="382.78" y="287.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::build (139 samples, 0.03%)</title><rect x="1143.7" y="437" width="0.4" height="15.0" fill="rgb(238,182,36)" rx="2" ry="2" />
<text  x="1146.71" y="447.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::exec (615 samples, 0.14%)</title><rect x="197.6" y="293" width="1.7" height="15.0" fill="rgb(252,220,9)" rx="2" ry="2" />
<text  x="200.63" y="303.5" ></text>
</g>
<g >
<title>[[heap]] (2,965 samples, 0.69%)</title><rect x="12.5" y="501" width="8.2" height="15.0" fill="rgb(217,11,51)" rx="2" ry="2" />
<text  x="15.50" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,099 samples, 1.19%)</title><rect x="982.1" y="389" width="14.0" height="15.0" fill="rgb(241,163,44)" rx="2" ry="2" />
<text  x="985.07" y="399.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_fold::{{closure}} (1,802 samples, 0.42%)</title><rect x="219.8" y="325" width="5.0" height="15.0" fill="rgb(231,166,39)" rx="2" ry="2" />
<text  x="222.83" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt; (150 samples, 0.04%)</title><rect x="230.4" y="453" width="0.4" height="15.0" fill="rgb(210,214,53)" rx="2" ry="2" />
<text  x="233.36" y="463.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (456 samples, 0.11%)</title><rect x="526.3" y="389" width="1.2" height="15.0" fill="rgb(210,35,49)" rx="2" ry="2" />
<text  x="529.26" y="399.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (486 samples, 0.11%)</title><rect x="425.4" y="437" width="1.3" height="15.0" fill="rgb(229,177,19)" rx="2" ry="2" />
<text  x="428.40" y="447.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (496 samples, 0.12%)</title><rect x="1059.9" y="357" width="1.3" height="15.0" fill="rgb(225,207,9)" rx="2" ry="2" />
<text  x="1062.86" y="367.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::replace_fast (874 samples, 0.20%)</title><rect x="1103.8" y="373" width="2.5" height="15.0" fill="rgb(232,148,27)" rx="2" ry="2" />
<text  x="1106.84" y="383.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::OovProviderPlugin::get_oov (10,488 samples, 2.45%)</title><rect x="1066.1" y="437" width="29.0" height="15.0" fill="rgb(213,182,4)" rx="2" ry="2" />
<text  x="1069.15" y="447.5" >su..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (1,526 samples, 0.36%)</title><rect x="225.0" y="293" width="4.2" height="15.0" fill="rgb(210,169,50)" rx="2" ry="2" />
<text  x="227.98" y="303.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_try_fold::{{closure}} (467 samples, 0.11%)</title><rect x="1163.4" y="341" width="1.2" height="15.0" fill="rgb(222,127,31)" rx="2" ry="2" />
<text  x="1166.36" y="351.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (171 samples, 0.04%)</title><rect x="196.4" y="341" width="0.4" height="15.0" fill="rgb(221,153,32)" rx="2" ry="2" />
<text  x="199.37" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,409 samples, 0.33%)</title><rect x="1037.6" y="341" width="3.9" height="15.0" fill="rgb(244,216,24)" rx="2" ry="2" />
<text  x="1040.57" y="351.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (3,063 samples, 0.72%)</title><rect x="1119.2" y="341" width="8.4" height="15.0" fill="rgb(234,165,14)" rx="2" ry="2" />
<text  x="1122.16" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free (2,263 samples, 0.53%)</title><rect x="1147.3" y="261" width="6.3" height="15.0" fill="rgb(244,79,49)" rx="2" ry="2" />
<text  x="1150.34" y="271.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (548 samples, 0.13%)</title><rect x="96.2" y="357" width="1.5" height="15.0" fill="rgb(209,185,36)" rx="2" ry="2" />
<text  x="99.23" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (1,414 samples, 0.33%)</title><rect x="976.4" y="373" width="3.9" height="15.0" fill="rgb(251,152,48)" rx="2" ry="2" />
<text  x="979.44" y="383.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (143 samples, 0.03%)</title><rect x="138.1" y="277" width="0.4" height="15.0" fill="rgb(231,132,15)" rx="2" ry="2" />
<text  x="141.10" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1,585 samples, 0.37%)</title><rect x="1076.1" y="341" width="4.4" height="15.0" fill="rgb(211,132,18)" rx="2" ry="2" />
<text  x="1079.14" y="351.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (708 samples, 0.17%)</title><rect x="132.5" y="325" width="2.0" height="15.0" fill="rgb(251,110,42)" rx="2" ry="2" />
<text  x="135.50" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (364 samples, 0.09%)</title><rect x="130.3" y="357" width="1.0" height="15.0" fill="rgb(233,108,27)" rx="2" ry="2" />
<text  x="133.29" y="367.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (136 samples, 0.03%)</title><rect x="215.3" y="389" width="0.4" height="15.0" fill="rgb(240,72,6)" rx="2" ry="2" />
<text  x="218.34" y="399.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::earliest_find_at (459 samples, 0.11%)</title><rect x="1107.7" y="309" width="1.3" height="15.0" fill="rgb(211,198,49)" rx="2" ry="2" />
<text  x="1110.72" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::clear (2,919 samples, 0.68%)</title><rect x="1146.2" y="453" width="8.1" height="15.0" fill="rgb(229,42,42)" rx="2" ry="2" />
<text  x="1149.21" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17,860 samples, 4.18%)</title><rect x="476.5" y="357" width="49.2" height="15.0" fill="rgb(226,80,11)" rx="2" ry="2" />
<text  x="479.48" y="367.5" >allo..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (158 samples, 0.04%)</title><rect x="1078.4" y="261" width="0.5" height="15.0" fill="rgb(211,86,10)" rx="2" ry="2" />
<text  x="1081.42" y="271.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (149 samples, 0.03%)</title><rect x="283.1" y="213" width="0.5" height="15.0" fill="rgb(247,116,20)" rx="2" ry="2" />
<text  x="286.14" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (268 samples, 0.06%)</title><rect x="274.6" y="229" width="0.8" height="15.0" fill="rgb(231,218,50)" rx="2" ry="2" />
<text  x="277.63" y="239.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (81,731 samples, 19.11%)</title><rect x="644.3" y="341" width="225.4" height="15.0" fill="rgb(243,169,29)" rx="2" ry="2" />
<text  x="647.28" y="351.5" >hashbrown::map::make_hash</text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (380 samples, 0.09%)</title><rect x="577.5" y="389" width="1.0" height="15.0" fill="rgb(223,97,35)" rx="2" ry="2" />
<text  x="580.46" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (187 samples, 0.04%)</title><rect x="254.2" y="325" width="0.6" height="15.0" fill="rgb(217,63,36)" rx="2" ry="2" />
<text  x="257.24" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (118 samples, 0.03%)</title><rect x="1144.5" y="421" width="0.3" height="15.0" fill="rgb(218,208,10)" rx="2" ry="2" />
<text  x="1147.48" y="431.5" ></text>
</g>
<g >
<title>regex::dfa::Byte::is_ascii_word (184 samples, 0.04%)</title><rect x="181.2" y="261" width="0.5" height="15.0" fill="rgb(229,95,32)" rx="2" ry="2" />
<text  x="184.22" y="271.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,535 samples, 0.36%)</title><rect x="225.0" y="325" width="4.2" height="15.0" fill="rgb(231,48,7)" rx="2" ry="2" />
<text  x="227.96" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (171 samples, 0.04%)</title><rect x="196.4" y="357" width="0.4" height="15.0" fill="rgb(239,214,16)" rx="2" ry="2" />
<text  x="199.37" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,104 samples, 0.26%)</title><rect x="189.7" y="117" width="3.0" height="15.0" fill="rgb(209,208,7)" rx="2" ry="2" />
<text  x="192.66" y="127.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (189 samples, 0.04%)</title><rect x="1088.9" y="277" width="0.6" height="15.0" fill="rgb(237,19,48)" rx="2" ry="2" />
<text  x="1091.94" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (7,808 samples, 1.83%)</title><rect x="208.6" y="453" width="21.6" height="15.0" fill="rgb(250,201,23)" rx="2" ry="2" />
<text  x="211.63" y="463.5" >&lt;..</text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (163 samples, 0.04%)</title><rect x="218.5" y="373" width="0.5" height="15.0" fill="rgb(208,222,38)" rx="2" ry="2" />
<text  x="221.55" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (258 samples, 0.06%)</title><rect x="976.4" y="341" width="0.7" height="15.0" fill="rgb(236,85,35)" rx="2" ry="2" />
<text  x="979.44" y="351.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (120 samples, 0.03%)</title><rect x="1174.3" y="421" width="0.3" height="15.0" fill="rgb(245,95,26)" rx="2" ry="2" />
<text  x="1177.27" y="431.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (266 samples, 0.06%)</title><rect x="1059.9" y="261" width="0.7" height="15.0" fill="rgb(231,176,22)" rx="2" ry="2" />
<text  x="1062.86" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,338 samples, 0.55%)</title><rect x="290.1" y="261" width="6.4" height="15.0" fill="rgb(228,44,8)" rx="2" ry="2" />
<text  x="293.07" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup (194 samples, 0.05%)</title><rect x="423.8" y="309" width="0.6" height="15.0" fill="rgb(243,196,21)" rx="2" ry="2" />
<text  x="426.83" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (148 samples, 0.03%)</title><rect x="29.6" y="485" width="0.4" height="15.0" fill="rgb(221,27,41)" rx="2" ry="2" />
<text  x="32.58" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (967 samples, 0.23%)</title><rect x="973.4" y="325" width="2.7" height="15.0" fill="rgb(205,39,44)" rx="2" ry="2" />
<text  x="976.44" y="335.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (360 samples, 0.08%)</title><rect x="169.2" y="277" width="1.0" height="15.0" fill="rgb(248,127,47)" rx="2" ry="2" />
<text  x="172.18" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (204 samples, 0.05%)</title><rect x="221.0" y="261" width="0.6" height="15.0" fill="rgb(246,4,22)" rx="2" ry="2" />
<text  x="224.01" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::offset (876 samples, 0.20%)</title><rect x="381.1" y="309" width="2.5" height="15.0" fill="rgb(252,196,30)" rx="2" ry="2" />
<text  x="384.15" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (171 samples, 0.04%)</title><rect x="311.5" y="245" width="0.4" height="15.0" fill="rgb(228,165,27)" rx="2" ry="2" />
<text  x="314.48" y="255.5" ></text>
</g>
<g >
<title>core::ptr::read (863 samples, 0.20%)</title><rect x="106.5" y="357" width="2.4" height="15.0" fill="rgb(232,148,41)" rx="2" ry="2" />
<text  x="109.51" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,782 samples, 0.65%)</title><rect x="290.0" y="357" width="7.7" height="15.0" fill="rgb(219,129,0)" rx="2" ry="2" />
<text  x="293.01" y="367.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_uppercase (541 samples, 0.13%)</title><rect x="1102.2" y="341" width="1.5" height="15.0" fill="rgb(253,21,38)" rx="2" ry="2" />
<text  x="1105.17" y="351.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (115 samples, 0.03%)</title><rect x="1135.6" y="53" width="0.3" height="15.0" fill="rgb(230,13,32)" rx="2" ry="2" />
<text  x="1138.63" y="63.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,552 samples, 0.36%)</title><rect x="236.1" y="245" width="4.3" height="15.0" fill="rgb(238,138,3)" rx="2" ry="2" />
<text  x="239.11" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (5,341 samples, 1.25%)</title><rect x="508.6" y="309" width="14.8" height="15.0" fill="rgb(235,96,46)" rx="2" ry="2" />
<text  x="511.63" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (542 samples, 0.13%)</title><rect x="213.1" y="405" width="1.5" height="15.0" fill="rgb(223,98,12)" rx="2" ry="2" />
<text  x="216.06" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::lookup::{{closure}} (194 samples, 0.05%)</title><rect x="423.8" y="325" width="0.6" height="15.0" fill="rgb(208,166,3)" rx="2" ry="2" />
<text  x="426.83" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (122 samples, 0.03%)</title><rect x="229.6" y="261" width="0.3" height="15.0" fill="rgb(246,10,29)" rx="2" ry="2" />
<text  x="232.60" y="271.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::uppercase::lookup (229 samples, 0.05%)</title><rect x="1109.4" y="341" width="0.6" height="15.0" fill="rgb(252,226,36)" rx="2" ry="2" />
<text  x="1112.39" y="351.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (137 samples, 0.03%)</title><rect x="1040.4" y="229" width="0.4" height="15.0" fill="rgb(207,181,1)" rx="2" ry="2" />
<text  x="1043.39" y="239.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (266 samples, 0.06%)</title><rect x="1059.9" y="341" width="0.7" height="15.0" fill="rgb(225,200,7)" rx="2" ry="2" />
<text  x="1062.86" y="351.5" ></text>
</g>
<g >
<title>std::io::append_to_string (1,069 samples, 0.25%)</title><rect x="67.9" y="421" width="3.0" height="15.0" fill="rgb(221,64,37)" rx="2" ry="2" />
<text  x="70.93" y="431.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (481 samples, 0.11%)</title><rect x="1041.5" y="309" width="1.3" height="15.0" fill="rgb(218,100,24)" rx="2" ry="2" />
<text  x="1044.45" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (209 samples, 0.05%)</title><rect x="477.3" y="341" width="0.6" height="15.0" fill="rgb(246,98,17)" rx="2" ry="2" />
<text  x="480.35" y="351.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (428 samples, 0.10%)</title><rect x="1185.6" y="485" width="1.1" height="15.0" fill="rgb(242,142,27)" rx="2" ry="2" />
<text  x="1188.55" y="495.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (22,683 samples, 5.30%)</title><rect x="298.9" y="373" width="62.5" height="15.0" fill="rgb(218,171,29)" rx="2" ry="2" />
<text  x="301.87" y="383.5" >nom::s..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sudachi::analysis::node::Node&gt;&gt; (146 samples, 0.03%)</title><rect x="230.4" y="437" width="0.4" height="15.0" fill="rgb(239,195,39)" rx="2" ry="2" />
<text  x="233.37" y="447.5" ></text>
</g>
<g >
<title>core::ptr::write (556 samples, 0.13%)</title><rect x="1074.4" y="373" width="1.5" height="15.0" fill="rgb(239,67,38)" rx="2" ry="2" />
<text  x="1077.35" y="383.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (235 samples, 0.05%)</title><rect x="1139.7" y="437" width="0.6" height="15.0" fill="rgb(231,224,19)" rx="2" ry="2" />
<text  x="1142.65" y="447.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (137 samples, 0.03%)</title><rect x="1040.4" y="245" width="0.4" height="15.0" fill="rgb(240,89,49)" rx="2" ry="2" />
<text  x="1043.39" y="255.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (952 samples, 0.22%)</title><rect x="1076.2" y="293" width="2.7" height="15.0" fill="rgb(207,224,51)" rx="2" ry="2" />
<text  x="1079.23" y="303.5" ></text>
</g>
<g >
<title>core::iter::adapters::process_results (135 samples, 0.03%)</title><rect x="215.3" y="325" width="0.4" height="15.0" fill="rgb(253,87,14)" rx="2" ry="2" />
<text  x="218.34" y="335.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (496 samples, 0.12%)</title><rect x="1059.9" y="373" width="1.3" height="15.0" fill="rgb(218,61,38)" rx="2" ry="2" />
<text  x="1062.86" y="383.5" ></text>
</g>
<g >
<title>_int_free (1,075 samples, 0.25%)</title><rect x="306.7" y="245" width="3.0" height="15.0" fill="rgb(222,178,40)" rx="2" ry="2" />
<text  x="309.71" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::u32_array_parser (581 samples, 0.14%)</title><rect x="310.9" y="277" width="1.6" height="15.0" fill="rgb(217,75,22)" rx="2" ry="2" />
<text  x="313.87" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (214 samples, 0.05%)</title><rect x="1061.9" y="421" width="0.6" height="15.0" fill="rgb(237,89,28)" rx="2" ry="2" />
<text  x="1064.86" y="431.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (179 samples, 0.04%)</title><rect x="283.1" y="229" width="0.5" height="15.0" fill="rgb(223,12,18)" rx="2" ry="2" />
<text  x="286.06" y="239.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (1,376 samples, 0.32%)</title><rect x="284.3" y="357" width="3.8" height="15.0" fill="rgb(210,60,48)" rx="2" ry="2" />
<text  x="287.31" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3,469 samples, 0.81%)</title><rect x="319.4" y="213" width="9.6" height="15.0" fill="rgb(223,194,16)" rx="2" ry="2" />
<text  x="322.42" y="223.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9,035 samples, 2.11%)</title><rect x="1016.5" y="389" width="25.0" height="15.0" fill="rgb(207,202,8)" rx="2" ry="2" />
<text  x="1019.53" y="399.5" >s..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (863 samples, 0.20%)</title><rect x="1020.4" y="277" width="2.3" height="15.0" fill="rgb(240,81,12)" rx="2" ry="2" />
<text  x="1023.35" y="287.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (458 samples, 0.11%)</title><rect x="1038.4" y="293" width="1.3" height="15.0" fill="rgb(237,177,14)" rx="2" ry="2" />
<text  x="1041.39" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (126 samples, 0.03%)</title><rect x="70.0" y="293" width="0.4" height="15.0" fill="rgb(215,188,50)" rx="2" ry="2" />
<text  x="73.01" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (308 samples, 0.07%)</title><rect x="125.2" y="341" width="0.9" height="15.0" fill="rgb(213,212,40)" rx="2" ry="2" />
<text  x="128.21" y="351.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (758 samples, 0.18%)</title><rect x="1179.0" y="357" width="2.1" height="15.0" fill="rgb(220,175,10)" rx="2" ry="2" />
<text  x="1182.03" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (5,091 samples, 1.19%)</title><rect x="982.1" y="325" width="14.0" height="15.0" fill="rgb(209,98,52)" rx="2" ry="2" />
<text  x="985.08" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (238 samples, 0.06%)</title><rect x="125.3" y="245" width="0.7" height="15.0" fill="rgb(225,145,20)" rx="2" ry="2" />
<text  x="128.34" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::resize (119 samples, 0.03%)</title><rect x="1145.0" y="421" width="0.3" height="15.0" fill="rgb(248,53,2)" rx="2" ry="2" />
<text  x="1147.98" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (272 samples, 0.06%)</title><rect x="282.2" y="229" width="0.8" height="15.0" fill="rgb(245,117,10)" rx="2" ry="2" />
<text  x="285.22" y="239.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::capture_locations (235 samples, 0.05%)</title><rect x="196.2" y="389" width="0.6" height="15.0" fill="rgb(218,11,3)" rx="2" ry="2" />
<text  x="199.20" y="399.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt; (1,860 samples, 0.43%)</title><rect x="224.8" y="357" width="5.1" height="15.0" fill="rgb(224,213,38)" rx="2" ry="2" />
<text  x="227.81" y="367.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::is_katakana_node (362 samples, 0.08%)</title><rect x="207.4" y="421" width="1.0" height="15.0" fill="rgb(205,108,50)" rx="2" ry="2" />
<text  x="210.40" y="431.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2,056 samples, 0.48%)</title><rect x="1083.3" y="229" width="5.6" height="15.0" fill="rgb(225,152,47)" rx="2" ry="2" />
<text  x="1086.27" y="239.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (5,799 samples, 1.36%)</title><rect x="714.0" y="261" width="16.0" height="15.0" fill="rgb(222,214,32)" rx="2" ry="2" />
<text  x="717.00" y="271.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (936 samples, 0.22%)</title><rect x="131.9" y="341" width="2.6" height="15.0" fill="rgb(222,61,20)" rx="2" ry="2" />
<text  x="134.87" y="351.5" ></text>
</g>
<g >
<title>regex::pool::THREAD_ID::__getit (535 samples, 0.13%)</title><rect x="187.2" y="261" width="1.5" height="15.0" fill="rgb(213,205,25)" rx="2" ry="2" />
<text  x="190.25" y="271.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1,021 samples, 0.24%)</title><rect x="1129.0" y="325" width="2.8" height="15.0" fill="rgb(221,48,12)" rx="2" ry="2" />
<text  x="1132.01" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (2,067 samples, 0.48%)</title><rect x="896.1" y="261" width="5.7" height="15.0" fill="rgb(217,198,50)" rx="2" ry="2" />
<text  x="899.13" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (748 samples, 0.17%)</title><rect x="1162.6" y="357" width="2.0" height="15.0" fill="rgb(213,190,20)" rx="2" ry="2" />
<text  x="1165.59" y="367.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (2,142 samples, 0.50%)</title><rect x="351.0" y="197" width="5.9" height="15.0" fill="rgb(231,131,51)" rx="2" ry="2" />
<text  x="354.03" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,065 samples, 0.25%)</title><rect x="875.1" y="261" width="2.9" height="15.0" fill="rgb(210,99,51)" rx="2" ry="2" />
<text  x="878.10" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (24,190 samples, 5.65%)</title><rect x="475.1" y="421" width="66.7" height="15.0" fill="rgb(227,157,43)" rx="2" ry="2" />
<text  x="478.05" y="431.5" >alloc::..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (436 samples, 0.10%)</title><rect x="107.7" y="341" width="1.2" height="15.0" fill="rgb(207,4,11)" rx="2" ry="2" />
<text  x="110.69" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (133 samples, 0.03%)</title><rect x="1153.9" y="357" width="0.4" height="15.0" fill="rgb(226,156,51)" rx="2" ry="2" />
<text  x="1156.89" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (7,191 samples, 1.68%)</title><rect x="976.3" y="421" width="19.9" height="15.0" fill="rgb(237,19,23)" rx="2" ry="2" />
<text  x="979.34" y="431.5" ></text>
</g>
<g >
<title>&lt;unicode_normalization::recompose::Recompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (264 samples, 0.06%)</title><rect x="1110.2" y="341" width="0.7" height="15.0" fill="rgb(244,85,35)" rx="2" ry="2" />
<text  x="1113.22" y="351.5" ></text>
</g>
<g >
<title>_int_free (116 samples, 0.03%)</title><rect x="224.4" y="181" width="0.3" height="15.0" fill="rgb(243,222,34)" rx="2" ry="2" />
<text  x="227.42" y="191.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (351 samples, 0.08%)</title><rect x="122.7" y="373" width="1.0" height="15.0" fill="rgb(213,51,2)" rx="2" ry="2" />
<text  x="125.71" y="383.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (2,104 samples, 0.49%)</title><rect x="836.1" y="197" width="5.8" height="15.0" fill="rgb(224,217,18)" rx="2" ry="2" />
<text  x="839.07" y="207.5" ></text>
</g>
<g >
<title>vfs_write (228 samples, 0.05%)</title><rect x="1157.5" y="293" width="0.6" height="15.0" fill="rgb(205,216,2)" rx="2" ry="2" />
<text  x="1160.46" y="303.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (6,227 samples, 1.46%)</title><rect x="457.9" y="421" width="17.2" height="15.0" fill="rgb(206,24,28)" rx="2" ry="2" />
<text  x="460.87" y="431.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (212 samples, 0.05%)</title><rect x="1001.2" y="405" width="0.6" height="15.0" fill="rgb(211,144,14)" rx="2" ry="2" />
<text  x="1004.25" y="415.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (295 samples, 0.07%)</title><rect x="1054.2" y="261" width="0.8" height="15.0" fill="rgb(241,138,35)" rx="2" ry="2" />
<text  x="1057.20" y="271.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Pattern::is_prefix (368 samples, 0.09%)</title><rect x="1134.4" y="117" width="1.0" height="15.0" fill="rgb(205,62,41)" rx="2" ry="2" />
<text  x="1137.42" y="127.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (406 samples, 0.09%)</title><rect x="259.7" y="421" width="1.1" height="15.0" fill="rgb(241,224,10)" rx="2" ry="2" />
<text  x="262.71" y="431.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::rewrite_gen (584 samples, 0.14%)</title><rect x="207.0" y="437" width="1.6" height="15.0" fill="rgb(241,179,50)" rx="2" ry="2" />
<text  x="210.02" y="447.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::swap_result (271 samples, 0.06%)</title><rect x="205.3" y="453" width="0.7" height="15.0" fill="rgb(243,11,34)" rx="2" ry="2" />
<text  x="208.29" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (16,658 samples, 3.89%)</title><rect x="478.3" y="341" width="46.0" height="15.0" fill="rgb(220,125,48)" rx="2" ry="2" />
<text  x="481.34" y="351.5" >allo..</text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (254 samples, 0.06%)</title><rect x="379.8" y="309" width="0.7" height="15.0" fill="rgb(248,171,30)" rx="2" ry="2" />
<text  x="382.77" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new_oov (371 samples, 0.09%)</title><rect x="1093.1" y="373" width="1.0" height="15.0" fill="rgb(236,170,26)" rx="2" ry="2" />
<text  x="1096.08" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (118 samples, 0.03%)</title><rect x="44.0" y="485" width="0.4" height="15.0" fill="rgb(206,91,29)" rx="2" ry="2" />
<text  x="47.03" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3,728 samples, 0.87%)</title><rect x="1019.0" y="325" width="10.3" height="15.0" fill="rgb(232,132,45)" rx="2" ry="2" />
<text  x="1022.03" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (248 samples, 0.06%)</title><rect x="224.1" y="277" width="0.7" height="15.0" fill="rgb(253,228,4)" rx="2" ry="2" />
<text  x="227.12" y="287.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::repeat (203 samples, 0.05%)</title><rect x="524.3" y="325" width="0.5" height="15.0" fill="rgb(212,34,13)" rx="2" ry="2" />
<text  x="527.29" y="335.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (481 samples, 0.11%)</title><rect x="1041.5" y="245" width="1.3" height="15.0" fill="rgb(232,135,23)" rx="2" ry="2" />
<text  x="1044.45" y="255.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::new::{{closure}} (1,169 samples, 0.27%)</title><rect x="221.6" y="309" width="3.2" height="15.0" fill="rgb(236,58,20)" rx="2" ry="2" />
<text  x="224.58" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1,077 samples, 0.25%)</title><rect x="973.4" y="421" width="2.9" height="15.0" fill="rgb(234,194,6)" rx="2" ry="2" />
<text  x="976.35" y="431.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (407 samples, 0.10%)</title><rect x="26.7" y="485" width="1.1" height="15.0" fill="rgb(220,56,16)" rx="2" ry="2" />
<text  x="29.66" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (139 samples, 0.03%)</title><rect x="1112.3" y="197" width="0.4" height="15.0" fill="rgb(213,24,20)" rx="2" ry="2" />
<text  x="1115.30" y="207.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_id_table::WordIdTable::entries (3,306 samples, 0.77%)</title><rect x="412.0" y="277" width="9.1" height="15.0" fill="rgb(242,108,13)" rx="2" ry="2" />
<text  x="415.00" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (2,037 samples, 0.48%)</title><rect x="321.5" y="117" width="5.6" height="15.0" fill="rgb(253,42,25)" rx="2" ry="2" />
<text  x="324.51" y="127.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (349 samples, 0.08%)</title><rect x="276.2" y="261" width="1.0" height="15.0" fill="rgb(212,36,14)" rx="2" ry="2" />
<text  x="279.22" y="271.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (432 samples, 0.10%)</title><rect x="1127.6" y="341" width="1.2" height="15.0" fill="rgb(235,172,2)" rx="2" ry="2" />
<text  x="1130.61" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (137 samples, 0.03%)</title><rect x="70.0" y="341" width="0.4" height="15.0" fill="rgb(247,204,6)" rx="2" ry="2" />
<text  x="72.98" y="351.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (176 samples, 0.04%)</title><rect x="153.1" y="293" width="0.5" height="15.0" fill="rgb(225,151,38)" rx="2" ry="2" />
<text  x="156.11" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (220 samples, 0.05%)</title><rect x="253.6" y="261" width="0.6" height="15.0" fill="rgb(249,176,6)" rx="2" ry="2" />
<text  x="256.56" y="271.5" ></text>
</g>
<g >
<title>alloc::string::String::push (112 samples, 0.03%)</title><rect x="18.7" y="485" width="0.3" height="15.0" fill="rgb(247,7,35)" rx="2" ry="2" />
<text  x="21.73" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (187 samples, 0.04%)</title><rect x="1160.4" y="389" width="0.5" height="15.0" fill="rgb(206,122,46)" rx="2" ry="2" />
<text  x="1163.35" y="399.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::bitset_search (382 samples, 0.09%)</title><rect x="1102.5" y="309" width="1.0" height="15.0" fill="rgb(225,98,28)" rx="2" ry="2" />
<text  x="1105.49" y="319.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (151 samples, 0.04%)</title><rect x="39.6" y="485" width="0.4" height="15.0" fill="rgb(247,30,20)" rx="2" ry="2" />
<text  x="42.57" y="495.5" ></text>
</g>
<g >
<title>unicode_normalization::normalize::decompose_compatible (168 samples, 0.04%)</title><rect x="1110.4" y="293" width="0.5" height="15.0" fill="rgb(243,157,53)" rx="2" ry="2" />
<text  x="1113.43" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (232 samples, 0.05%)</title><rect x="215.9" y="245" width="0.7" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="218.93" y="255.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::TeddySlim2Mask128::find_at (976 samples, 0.23%)</title><rect x="1133.9" y="181" width="2.6" height="15.0" fill="rgb(213,194,25)" rx="2" ry="2" />
<text  x="1136.85" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (396 samples, 0.09%)</title><rect x="1112.7" y="261" width="1.1" height="15.0" fill="rgb(224,141,29)" rx="2" ry="2" />
<text  x="1115.68" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (296 samples, 0.07%)</title><rect x="111.9" y="357" width="0.8" height="15.0" fill="rgb(246,161,7)" rx="2" ry="2" />
<text  x="114.93" y="367.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::shortest_match_at (13,060 samples, 3.05%)</title><rect x="148.7" y="341" width="36.0" height="15.0" fill="rgb(242,226,33)" rx="2" ry="2" />
<text  x="151.66" y="351.5" >&lt;re..</text>
</g>
<g >
<title>_int_malloc (5,041 samples, 1.18%)</title><rect x="982.2" y="277" width="13.9" height="15.0" fill="rgb(210,46,38)" rx="2" ry="2" />
<text  x="985.20" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,145 samples, 0.27%)</title><rect x="1089.6" y="245" width="3.2" height="15.0" fill="rgb(238,19,26)" rx="2" ry="2" />
<text  x="1092.62" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,483 samples, 0.35%)</title><rect x="236.2" y="229" width="4.1" height="15.0" fill="rgb(219,9,0)" rx="2" ry="2" />
<text  x="239.22" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,913 samples, 0.45%)</title><rect x="1083.4" y="197" width="5.3" height="15.0" fill="rgb(253,73,51)" rx="2" ry="2" />
<text  x="1086.39" y="207.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (134 samples, 0.03%)</title><rect x="215.3" y="293" width="0.4" height="15.0" fill="rgb(215,53,5)" rx="2" ry="2" />
<text  x="218.34" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,145 samples, 0.27%)</title><rect x="1089.6" y="213" width="3.2" height="15.0" fill="rgb(227,161,17)" rx="2" ry="2" />
<text  x="1092.62" y="223.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (95,603 samples, 22.35%)</title><rect x="638.1" y="389" width="263.7" height="15.0" fill="rgb(254,15,29)" rx="2" ry="2" />
<text  x="641.11" y="399.5" >std::collections::hash::map::HashMa..</text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (144 samples, 0.03%)</title><rect x="318.2" y="213" width="0.4" height="15.0" fill="rgb(230,6,42)" rx="2" ry="2" />
<text  x="321.25" y="223.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (931 samples, 0.22%)</title><rect x="1119.3" y="325" width="2.5" height="15.0" fill="rgb(211,158,16)" rx="2" ry="2" />
<text  x="1122.28" y="335.5" ></text>
</g>
<g >
<title>unicode_normalization::tables::qc_nfkc (2,091 samples, 0.49%)</title><rect x="1121.8" y="325" width="5.8" height="15.0" fill="rgb(242,135,27)" rx="2" ry="2" />
<text  x="1124.85" y="335.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (456 samples, 0.11%)</title><rect x="526.3" y="405" width="1.2" height="15.0" fill="rgb(220,31,45)" rx="2" ry="2" />
<text  x="529.26" y="415.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (22,683 samples, 5.30%)</title><rect x="298.9" y="357" width="62.5" height="15.0" fill="rgb(228,185,23)" rx="2" ry="2" />
<text  x="301.87" y="367.5" >&lt;F as ..</text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::find_at (1,016 samples, 0.24%)</title><rect x="1133.7" y="197" width="2.8" height="15.0" fill="rgb(249,70,0)" rx="2" ry="2" />
<text  x="1136.74" y="207.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (3,202 samples, 0.75%)</title><rect x="340.8" y="261" width="8.9" height="15.0" fill="rgb(227,155,20)" rx="2" ry="2" />
<text  x="343.84" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (332 samples, 0.08%)</title><rect x="176.8" y="261" width="0.9" height="15.0" fill="rgb(218,17,6)" rx="2" ry="2" />
<text  x="179.83" y="271.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,524 samples, 0.36%)</title><rect x="573.3" y="389" width="4.2" height="15.0" fill="rgb(251,132,9)" rx="2" ry="2" />
<text  x="576.25" y="399.5" ></text>
</g>
<g >
<title>core::option::Option&lt;&amp;T&gt;::copied (2,142 samples, 0.50%)</title><rect x="351.0" y="213" width="5.9" height="15.0" fill="rgb(228,217,9)" rx="2" ry="2" />
<text  x="354.03" y="223.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (165 samples, 0.04%)</title><rect x="447.2" y="373" width="0.5" height="15.0" fill="rgb(250,57,11)" rx="2" ry="2" />
<text  x="450.20" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (158 samples, 0.04%)</title><rect x="220.1" y="229" width="0.4" height="15.0" fill="rgb(225,82,36)" rx="2" ry="2" />
<text  x="223.05" y="239.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::new (3,818 samples, 0.89%)</title><rect x="219.6" y="421" width="10.6" height="15.0" fill="rgb(215,73,23)" rx="2" ry="2" />
<text  x="222.63" y="431.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (128 samples, 0.03%)</title><rect x="153.2" y="229" width="0.3" height="15.0" fill="rgb(240,19,15)" rx="2" ry="2" />
<text  x="156.18" y="239.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3,670 samples, 0.86%)</title><rect x="159.1" y="261" width="10.1" height="15.0" fill="rgb(217,177,24)" rx="2" ry="2" />
<text  x="162.06" y="271.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::prolonged_sound_mark::ProlongedSoundMarkPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (1,649 samples, 0.39%)</title><rect x="1132.6" y="389" width="4.5" height="15.0" fill="rgb(228,27,29)" rx="2" ry="2" />
<text  x="1135.57" y="399.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (1,386 samples, 0.32%)</title><rect x="277.9" y="245" width="3.8" height="15.0" fill="rgb(232,219,27)" rx="2" ry="2" />
<text  x="280.92" y="255.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (16,060 samples, 3.75%)</title><rect x="144.4" y="389" width="44.3" height="15.0" fill="rgb(214,98,7)" rx="2" ry="2" />
<text  x="147.42" y="399.5" >rege..</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,165 samples, 0.51%)</title><rect x="1048.0" y="309" width="6.0" height="15.0" fill="rgb(237,135,19)" rx="2" ry="2" />
<text  x="1051.01" y="319.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (696 samples, 0.16%)</title><rect x="1035.6" y="245" width="2.0" height="15.0" fill="rgb(245,145,18)" rx="2" ry="2" />
<text  x="1038.64" y="255.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (374 samples, 0.09%)</title><rect x="424.4" y="421" width="1.0" height="15.0" fill="rgb(222,143,29)" rx="2" ry="2" />
<text  x="427.37" y="431.5" ></text>
</g>
<g >
<title>&lt;str as core::fmt::Display&gt;::fmt (187 samples, 0.04%)</title><rect x="1181.4" y="421" width="0.5" height="15.0" fill="rgb(209,90,26)" rx="2" ry="2" />
<text  x="1184.42" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (238 samples, 0.06%)</title><rect x="105.9" y="357" width="0.6" height="15.0" fill="rgb(229,63,26)" rx="2" ry="2" />
<text  x="108.86" y="367.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (303 samples, 0.07%)</title><rect x="215.8" y="341" width="0.9" height="15.0" fill="rgb(225,4,38)" rx="2" ry="2" />
<text  x="218.85" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (300 samples, 0.07%)</title><rect x="272.5" y="373" width="0.8" height="15.0" fill="rgb(246,121,21)" rx="2" ry="2" />
<text  x="275.51" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (467 samples, 0.11%)</title><rect x="1163.4" y="309" width="1.2" height="15.0" fill="rgb(223,206,16)" rx="2" ry="2" />
<text  x="1166.36" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (453 samples, 0.11%)</title><rect x="222.3" y="197" width="1.2" height="15.0" fill="rgb(249,160,28)" rx="2" ry="2" />
<text  x="225.27" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11,635 samples, 2.72%)</title><rect x="869.7" y="341" width="32.1" height="15.0" fill="rgb(242,217,26)" rx="2" ry="2" />
<text  x="872.73" y="351.5" >ha..</text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (981 samples, 0.23%)</title><rect x="977.1" y="341" width="2.8" height="15.0" fill="rgb(221,109,31)" rx="2" ry="2" />
<text  x="980.15" y="351.5" ></text>
</g>
<g >
<title>__rdl_realloc (205 samples, 0.05%)</title><rect x="326.2" y="53" width="0.6" height="15.0" fill="rgb(226,196,12)" rx="2" ry="2" />
<text  x="329.23" y="63.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (164 samples, 0.04%)</title><rect x="63.5" y="485" width="0.5" height="15.0" fill="rgb(250,215,38)" rx="2" ry="2" />
<text  x="66.54" y="495.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (134 samples, 0.03%)</title><rect x="215.3" y="309" width="0.4" height="15.0" fill="rgb(233,85,48)" rx="2" ry="2" />
<text  x="218.34" y="319.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (483 samples, 0.11%)</title><rect x="1161.1" y="309" width="1.3" height="15.0" fill="rgb(231,41,31)" rx="2" ry="2" />
<text  x="1164.11" y="319.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (214 samples, 0.05%)</title><rect x="194.9" y="421" width="0.5" height="15.0" fill="rgb(254,181,17)" rx="2" ry="2" />
<text  x="197.85" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::u32_parser (1,376 samples, 0.32%)</title><rect x="284.3" y="373" width="3.8" height="15.0" fill="rgb(231,46,14)" rx="2" ry="2" />
<text  x="287.31" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (1,610 samples, 0.38%)</title><rect x="236.1" y="309" width="4.4" height="15.0" fill="rgb(235,58,27)" rx="2" ry="2" />
<text  x="239.11" y="319.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (402 samples, 0.09%)</title><rect x="456.8" y="421" width="1.1" height="15.0" fill="rgb(240,40,0)" rx="2" ry="2" />
<text  x="459.77" y="431.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (2,317 samples, 0.54%)</title><rect x="197.0" y="357" width="6.4" height="15.0" fill="rgb(210,1,8)" rx="2" ry="2" />
<text  x="199.97" y="367.5" ></text>
</g>
<g >
<title>&lt;T as alloc::string::ToString&gt;::to_string (181 samples, 0.04%)</title><rect x="218.5" y="389" width="0.5" height="15.0" fill="rgb(250,95,12)" rx="2" ry="2" />
<text  x="221.51" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (124 samples, 0.03%)</title><rect x="112.8" y="309" width="0.3" height="15.0" fill="rgb(233,35,14)" rx="2" ry="2" />
<text  x="115.75" y="319.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (738 samples, 0.17%)</title><rect x="521.3" y="293" width="2.1" height="15.0" fill="rgb(244,12,30)" rx="2" ry="2" />
<text  x="524.33" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::capacity (112 samples, 0.03%)</title><rect x="1177.9" y="373" width="0.3" height="15.0" fill="rgb(234,108,38)" rx="2" ry="2" />
<text  x="1180.91" y="383.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (1,805 samples, 0.42%)</title><rect x="219.8" y="341" width="5.0" height="15.0" fill="rgb(231,14,26)" rx="2" ry="2" />
<text  x="222.83" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (169 samples, 0.04%)</title><rect x="1081.4" y="277" width="0.5" height="15.0" fill="rgb(248,89,9)" rx="2" ry="2" />
<text  x="1084.43" y="287.5" ></text>
</g>
<g >
<title>core::cmp::min (2,104 samples, 0.49%)</title><rect x="836.1" y="213" width="5.8" height="15.0" fill="rgb(208,19,17)" rx="2" ry="2" />
<text  x="839.07" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (666 samples, 0.16%)</title><rect x="209.7" y="421" width="1.9" height="15.0" fill="rgb(235,224,7)" rx="2" ry="2" />
<text  x="212.72" y="431.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (2,474 samples, 0.58%)</title><rect x="1174.6" y="421" width="6.8" height="15.0" fill="rgb(230,173,47)" rx="2" ry="2" />
<text  x="1177.60" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (169 samples, 0.04%)</title><rect x="1065.5" y="405" width="0.4" height="15.0" fill="rgb(221,222,0)" rx="2" ry="2" />
<text  x="1068.46" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (965 samples, 0.23%)</title><rect x="64.7" y="485" width="2.6" height="15.0" fill="rgb(219,186,54)" rx="2" ry="2" />
<text  x="67.68" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_free (535 samples, 0.13%)</title><rect x="24.6" y="485" width="1.4" height="15.0" fill="rgb(224,165,5)" rx="2" ry="2" />
<text  x="27.57" y="495.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::mecab_oov::MeCabOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (9,175 samples, 2.14%)</title><rect x="1068.8" y="421" width="25.3" height="15.0" fill="rgb(213,101,5)" rx="2" ry="2" />
<text  x="1071.79" y="431.5" >&lt;..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2,338 samples, 0.55%)</title><rect x="290.1" y="229" width="6.4" height="15.0" fill="rgb(252,77,14)" rx="2" ry="2" />
<text  x="293.07" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (5,075 samples, 1.19%)</title><rect x="982.1" y="293" width="14.0" height="15.0" fill="rgb(246,133,29)" rx="2" ry="2" />
<text  x="985.11" y="303.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (2,165 samples, 0.51%)</title><rect x="1048.0" y="261" width="6.0" height="15.0" fill="rgb(231,177,14)" rx="2" ry="2" />
<text  x="1051.01" y="271.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_uppercase (325 samples, 0.08%)</title><rect x="1109.1" y="357" width="0.9" height="15.0" fill="rgb(253,35,14)" rx="2" ry="2" />
<text  x="1112.13" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (244 samples, 0.06%)</title><rect x="1065.5" y="421" width="0.6" height="15.0" fill="rgb(239,147,13)" rx="2" ry="2" />
<text  x="1068.46" y="431.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,671 samples, 3.66%)</title><rect x="377.9" y="341" width="43.2" height="15.0" fill="rgb(205,20,13)" rx="2" ry="2" />
<text  x="380.89" y="351.5" >&lt;cor..</text>
</g>
<g >
<title>_int_free (177 samples, 0.04%)</title><rect x="272.8" y="277" width="0.5" height="15.0" fill="rgb(229,137,18)" rx="2" ry="2" />
<text  x="275.79" y="287.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (263 samples, 0.06%)</title><rect x="23.0" y="485" width="0.7" height="15.0" fill="rgb(237,34,19)" rx="2" ry="2" />
<text  x="26.01" y="495.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::find_at (2,651 samples, 0.62%)</title><rect x="136.1" y="341" width="7.3" height="15.0" fill="rgb(217,101,13)" rx="2" ry="2" />
<text  x="139.12" y="351.5" ></text>
</g>
<g >
<title>_int_malloc (161 samples, 0.04%)</title><rect x="274.9" y="165" width="0.4" height="15.0" fill="rgb(211,172,52)" rx="2" ry="2" />
<text  x="277.88" y="175.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_eos_node (436 samples, 0.10%)</title><rect x="446.7" y="437" width="1.3" height="15.0" fill="rgb(247,32,23)" rx="2" ry="2" />
<text  x="449.75" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (228 samples, 0.05%)</title><rect x="282.3" y="117" width="0.6" height="15.0" fill="rgb(211,107,45)" rx="2" ry="2" />
<text  x="285.27" y="127.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::reverse (797 samples, 0.19%)</title><rect x="257.0" y="437" width="2.2" height="15.0" fill="rgb(210,93,43)" rx="2" ry="2" />
<text  x="259.96" y="447.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::boxed::Box&lt;W&gt;&gt;::write (749 samples, 0.18%)</title><rect x="1156.5" y="421" width="2.0" height="15.0" fill="rgb(207,151,16)" rx="2" ry="2" />
<text  x="1159.46" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (248 samples, 0.06%)</title><rect x="224.1" y="261" width="0.7" height="15.0" fill="rgb(246,152,18)" rx="2" ry="2" />
<text  x="227.12" y="271.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (152 samples, 0.04%)</title><rect x="1189.2" y="341" width="0.4" height="15.0" fill="rgb(219,119,37)" rx="2" ry="2" />
<text  x="1192.19" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::update_dict_id (164 samples, 0.04%)</title><rect x="361.8" y="421" width="0.5" height="15.0" fill="rgb(247,55,28)" rx="2" ry="2" />
<text  x="364.84" y="431.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::has_previous_node (117 samples, 0.03%)</title><rect x="448.0" y="437" width="0.3" height="15.0" fill="rgb(251,183,22)" rx="2" ry="2" />
<text  x="451.00" y="447.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (111 samples, 0.03%)</title><rect x="211.1" y="325" width="0.3" height="15.0" fill="rgb(216,40,39)" rx="2" ry="2" />
<text  x="214.13" y="335.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (207 samples, 0.05%)</title><rect x="18.2" y="485" width="0.5" height="15.0" fill="rgb(208,166,28)" rx="2" ry="2" />
<text  x="21.16" y="495.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (178 samples, 0.04%)</title><rect x="1138.5" y="341" width="0.5" height="15.0" fill="rgb(254,125,1)" rx="2" ry="2" />
<text  x="1141.49" y="351.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,397 samples, 0.33%)</title><rect x="1133.0" y="309" width="3.9" height="15.0" fill="rgb(211,8,11)" rx="2" ry="2" />
<text  x="1136.03" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free (1,820 samples, 0.43%)</title><rect x="240.9" y="309" width="5.0" height="15.0" fill="rgb(246,210,3)" rx="2" ry="2" />
<text  x="243.87" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (331 samples, 0.08%)</title><rect x="41.7" y="485" width="0.9" height="15.0" fill="rgb(209,21,49)" rx="2" ry="2" />
<text  x="44.66" y="495.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (117 samples, 0.03%)</title><rect x="339.7" y="213" width="0.4" height="15.0" fill="rgb(249,225,39)" rx="2" ry="2" />
<text  x="342.73" y="223.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::mecab_oov::MeCabOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (168 samples, 0.04%)</title><rect x="1069.7" y="405" width="0.4" height="15.0" fill="rgb(225,178,16)" rx="2" ry="2" />
<text  x="1072.66" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_state (501 samples, 0.12%)</title><rect x="181.7" y="277" width="1.4" height="15.0" fill="rgb(241,87,27)" rx="2" ry="2" />
<text  x="184.73" y="287.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (191 samples, 0.04%)</title><rect x="311.9" y="261" width="0.6" height="15.0" fill="rgb(219,123,2)" rx="2" ry="2" />
<text  x="314.95" y="271.5" ></text>
</g>
<g >
<title>_int_realloc (598 samples, 0.14%)</title><rect x="252.5" y="277" width="1.7" height="15.0" fill="rgb(246,216,32)" rx="2" ry="2" />
<text  x="255.53" y="287.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (124 samples, 0.03%)</title><rect x="1185.2" y="405" width="0.3" height="15.0" fill="rgb(219,47,33)" rx="2" ry="2" />
<text  x="1188.18" y="415.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (5,031 samples, 1.18%)</title><rect x="751.0" y="309" width="13.8" height="15.0" fill="rgb(228,51,4)" rx="2" ry="2" />
<text  x="753.96" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (149 samples, 0.03%)</title><rect x="1145.6" y="437" width="0.4" height="15.0" fill="rgb(210,79,7)" rx="2" ry="2" />
<text  x="1148.59" y="447.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (150 samples, 0.04%)</title><rect x="249.3" y="421" width="0.4" height="15.0" fill="rgb(223,7,38)" rx="2" ry="2" />
<text  x="252.33" y="431.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (156,139 samples, 36.50%)</title><rect x="541.8" y="421" width="430.7" height="15.0" fill="rgb(240,211,6)" rx="2" ry="2" />
<text  x="544.78" y="431.5" >sudachi::analysis::lattice::Lattice::connect_node</text>
</g>
<g >
<title>std::io::Write::write_fmt (5,041 samples, 1.18%)</title><rect x="1170.3" y="453" width="13.9" height="15.0" fill="rgb(209,218,39)" rx="2" ry="2" />
<text  x="1173.32" y="463.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,819 samples, 0.43%)</title><rect x="219.8" y="357" width="5.0" height="15.0" fill="rgb(225,121,42)" rx="2" ry="2" />
<text  x="222.79" y="367.5" ></text>
</g>
<g >
<title>&lt;regex::literal::imp::LiteralIter as core::iter::traits::iterator::Iterator&gt;::next (1,163 samples, 0.27%)</title><rect x="155.8" y="277" width="3.3" height="15.0" fill="rgb(228,229,0)" rx="2" ry="2" />
<text  x="158.85" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (508 samples, 0.12%)</title><rect x="1111.3" y="277" width="1.4" height="15.0" fill="rgb(248,49,16)" rx="2" ry="2" />
<text  x="1114.28" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (542 samples, 0.13%)</title><rect x="213.1" y="389" width="1.5" height="15.0" fill="rgb(239,81,26)" rx="2" ry="2" />
<text  x="216.06" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (113 samples, 0.03%)</title><rect x="216.9" y="309" width="0.3" height="15.0" fill="rgb(244,166,6)" rx="2" ry="2" />
<text  x="219.89" y="319.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,293 samples, 0.30%)</title><rect x="264.9" y="421" width="3.6" height="15.0" fill="rgb(241,53,5)" rx="2" ry="2" />
<text  x="267.91" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (303 samples, 0.07%)</title><rect x="215.8" y="309" width="0.9" height="15.0" fill="rgb(208,115,28)" rx="2" ry="2" />
<text  x="218.85" y="319.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (375 samples, 0.09%)</title><rect x="1054.0" y="341" width="1.0" height="15.0" fill="rgb(245,24,24)" rx="2" ry="2" />
<text  x="1056.98" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,436 samples, 0.34%)</title><rect x="189.3" y="213" width="4.0" height="15.0" fill="rgb(205,205,23)" rx="2" ry="2" />
<text  x="192.33" y="223.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (506 samples, 0.12%)</title><rect x="1161.0" y="325" width="1.4" height="15.0" fill="rgb(234,8,28)" rx="2" ry="2" />
<text  x="1164.05" y="335.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (3,222 samples, 0.75%)</title><rect x="174.7" y="293" width="8.9" height="15.0" fill="rgb(254,65,23)" rx="2" ry="2" />
<text  x="177.71" y="303.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (764 samples, 0.18%)</title><rect x="221.9" y="277" width="2.1" height="15.0" fill="rgb(209,134,50)" rx="2" ry="2" />
<text  x="224.91" y="287.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (116 samples, 0.03%)</title><rect x="247.3" y="405" width="0.3" height="15.0" fill="rgb(253,98,36)" rx="2" ry="2" />
<text  x="250.27" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (491 samples, 0.11%)</title><rect x="280.4" y="117" width="1.3" height="15.0" fill="rgb(242,68,8)" rx="2" ry="2" />
<text  x="283.37" y="127.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::edit::resolve_edits (242 samples, 0.06%)</title><rect x="1101.2" y="389" width="0.6" height="15.0" fill="rgb(220,138,8)" rx="2" ry="2" />
<text  x="1104.15" y="399.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (189 samples, 0.04%)</title><rect x="1088.9" y="293" width="0.6" height="15.0" fill="rgb(230,33,19)" rx="2" ry="2" />
<text  x="1091.94" y="303.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::simple_oov::SimpleOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (294 samples, 0.07%)</title><rect x="1094.1" y="421" width="0.8" height="15.0" fill="rgb(231,11,26)" rx="2" ry="2" />
<text  x="1097.10" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (308 samples, 0.07%)</title><rect x="125.2" y="357" width="0.9" height="15.0" fill="rgb(215,88,6)" rx="2" ry="2" />
<text  x="128.21" y="367.5" ></text>
</g>
</g>
</svg>
