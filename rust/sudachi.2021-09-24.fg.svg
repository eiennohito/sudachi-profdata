<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="502.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="485" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="485" > </text>
<g id="frames">
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_char_category_continuous_length (72 samples, 0.01%)</title><rect x="888.2" y="229" width="0.1" height="15.0" fill="rgb(225,92,46)" rx="2" ry="2" />
<text  x="891.15" y="239.5" ></text>
</g>
<g >
<title>__rust_alloc (81 samples, 0.01%)</title><rect x="397.3" y="213" width="0.2" height="15.0" fill="rgb(220,49,23)" rx="2" ry="2" />
<text  x="400.33" y="223.5" ></text>
</g>
<g >
<title>malloc (181 samples, 0.02%)</title><rect x="890.9" y="213" width="0.3" height="15.0" fill="rgb(229,180,53)" rx="2" ry="2" />
<text  x="893.91" y="223.5" ></text>
</g>
<g >
<title>_int_realloc (94 samples, 0.01%)</title><rect x="11.9" y="373" width="0.2" height="15.0" fill="rgb(243,177,15)" rx="2" ry="2" />
<text  x="14.91" y="383.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3,527 samples, 0.45%)</title><rect x="177.9" y="309" width="5.3" height="15.0" fill="rgb(254,26,54)" rx="2" ry="2" />
<text  x="180.86" y="319.5" ></text>
</g>
<g >
<title>join_numeric::JoinNumericPlugin::concat (794 samples, 0.10%)</title><rect x="257.8" y="245" width="1.2" height="15.0" fill="rgb(207,97,10)" rx="2" ry="2" />
<text  x="260.79" y="255.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (962 samples, 0.12%)</title><rect x="1029.4" y="229" width="1.5" height="15.0" fill="rgb(243,18,12)" rx="2" ry="2" />
<text  x="1032.44" y="239.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_info (20,783 samples, 2.66%)</title><rect x="376.4" y="261" width="31.4" height="15.0" fill="rgb(236,71,26)" rx="2" ry="2" />
<text  x="379.36" y="271.5" >su..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (71 samples, 0.01%)</title><rect x="896.5" y="245" width="0.1" height="15.0" fill="rgb(218,201,9)" rx="2" ry="2" />
<text  x="899.51" y="255.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1,733 samples, 0.22%)</title><rect x="960.2" y="261" width="2.6" height="15.0" fill="rgb(236,85,9)" rx="2" ry="2" />
<text  x="963.20" y="271.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (7,667 samples, 0.98%)</title><rect x="1071.6" y="421" width="11.6" height="15.0" fill="rgb(253,213,11)" rx="2" ry="2" />
<text  x="1074.62" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_right_id (224 samples, 0.03%)</title><rect x="376.0" y="261" width="0.4" height="15.0" fill="rgb(217,30,49)" rx="2" ry="2" />
<text  x="379.02" y="271.5" ></text>
</g>
<g >
<title>alloc::string::String::push (2,224 samples, 0.29%)</title><rect x="1121.4" y="421" width="3.4" height="15.0" fill="rgb(237,165,40)" rx="2" ry="2" />
<text  x="1124.41" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::lookup (14,208 samples, 1.82%)</title><rect x="1039.4" y="309" width="21.5" height="15.0" fill="rgb(249,38,6)" rx="2" ry="2" />
<text  x="1042.44" y="319.5" >s..</text>
</g>
<g >
<title>malloc (113 samples, 0.01%)</title><rect x="1067.7" y="341" width="0.2" height="15.0" fill="rgb(220,73,53)" rx="2" ry="2" />
<text  x="1070.75" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (203 samples, 0.03%)</title><rect x="251.1" y="181" width="0.3" height="15.0" fill="rgb(215,54,13)" rx="2" ry="2" />
<text  x="254.13" y="191.5" ></text>
</g>
<g >
<title>__rdl_alloc (175 samples, 0.02%)</title><rect x="435.6" y="197" width="0.2" height="15.0" fill="rgb(243,156,7)" rx="2" ry="2" />
<text  x="438.58" y="207.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy (74 samples, 0.01%)</title><rect x="140.7" y="357" width="0.1" height="15.0" fill="rgb(244,223,42)" rx="2" ry="2" />
<text  x="143.73" y="367.5" ></text>
</g>
<g >
<title>&lt;ignore_yomigana::IgnoreYomiganaPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite (88 samples, 0.01%)</title><rect x="143.8" y="341" width="0.2" height="15.0" fill="rgb(231,124,9)" rx="2" ry="2" />
<text  x="146.84" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (833 samples, 0.11%)</title><rect x="250.2" y="213" width="1.3" height="15.0" fill="rgb(232,87,49)" rx="2" ry="2" />
<text  x="253.24" y="223.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (388 samples, 0.05%)</title><rect x="450.6" y="213" width="0.6" height="15.0" fill="rgb(233,164,10)" rx="2" ry="2" />
<text  x="453.63" y="223.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt; (2,100 samples, 0.27%)</title><rect x="261.3" y="229" width="3.2" height="15.0" fill="rgb(208,95,31)" rx="2" ry="2" />
<text  x="264.33" y="239.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (326 samples, 0.04%)</title><rect x="148.3" y="277" width="0.5" height="15.0" fill="rgb(236,42,30)" rx="2" ry="2" />
<text  x="151.29" y="287.5" ></text>
</g>
<g >
<title>__rust_dealloc (74 samples, 0.01%)</title><rect x="1062.5" y="341" width="0.1" height="15.0" fill="rgb(210,53,28)" rx="2" ry="2" />
<text  x="1065.50" y="351.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (336 samples, 0.04%)</title><rect x="926.2" y="309" width="0.5" height="15.0" fill="rgb(233,46,26)" rx="2" ry="2" />
<text  x="929.17" y="319.5" ></text>
</g>
<g >
<title>__libc_read (771 samples, 0.10%)</title><rect x="1070.3" y="325" width="1.2" height="15.0" fill="rgb(219,196,4)" rx="2" ry="2" />
<text  x="1073.30" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (269 samples, 0.03%)</title><rect x="266.0" y="197" width="0.4" height="15.0" fill="rgb(219,25,20)" rx="2" ry="2" />
<text  x="269.04" y="207.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::is_match (302 samples, 0.04%)</title><rect x="1038.8" y="309" width="0.4" height="15.0" fill="rgb(228,57,24)" rx="2" ry="2" />
<text  x="1041.79" y="319.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (754 samples, 0.10%)</title><rect x="1139.4" y="405" width="1.1" height="15.0" fill="rgb(215,110,32)" rx="2" ry="2" />
<text  x="1142.38" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (125 samples, 0.02%)</title><rect x="885.6" y="213" width="0.2" height="15.0" fill="rgb(229,140,12)" rx="2" ry="2" />
<text  x="888.58" y="223.5" ></text>
</g>
<g >
<title>__rdl_realloc (68 samples, 0.01%)</title><rect x="187.5" y="277" width="0.1" height="15.0" fill="rgb(238,185,17)" rx="2" ry="2" />
<text  x="190.49" y="287.5" ></text>
</g>
<g >
<title>malloc (140 samples, 0.02%)</title><rect x="320.4" y="197" width="0.2" height="15.0" fill="rgb(211,110,50)" rx="2" ry="2" />
<text  x="323.40" y="207.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (408 samples, 0.05%)</title><rect x="202.3" y="325" width="0.6" height="15.0" fill="rgb(245,30,25)" rx="2" ry="2" />
<text  x="205.32" y="335.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (712 samples, 0.09%)</title><rect x="403.3" y="229" width="1.1" height="15.0" fill="rgb(233,41,36)" rx="2" ry="2" />
<text  x="406.29" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (149 samples, 0.02%)</title><rect x="172.4" y="293" width="0.3" height="15.0" fill="rgb(248,5,12)" rx="2" ry="2" />
<text  x="175.44" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (457 samples, 0.06%)</title><rect x="265.9" y="213" width="0.6" height="15.0" fill="rgb(229,190,27)" rx="2" ry="2" />
<text  x="268.86" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (99 samples, 0.01%)</title><rect x="1002.4" y="245" width="0.1" height="15.0" fill="rgb(221,96,36)" rx="2" ry="2" />
<text  x="1005.37" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (110 samples, 0.01%)</title><rect x="1038.5" y="309" width="0.1" height="15.0" fill="rgb(219,160,12)" rx="2" ry="2" />
<text  x="1041.48" y="319.5" ></text>
</g>
<g >
<title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h03f11d45aae6b17c (616,928 samples, 79.06%)</title><rect x="138.7" y="389" width="932.9" height="15.0" fill="rgb(216,196,29)" rx="2" ry="2" />
<text  x="141.68" y="399.5" >std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h03f11d45aae6b17c</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (196 samples, 0.03%)</title><rect x="1070.0" y="261" width="0.3" height="15.0" fill="rgb(221,85,46)" rx="2" ry="2" />
<text  x="1072.99" y="271.5" ></text>
</g>
<g >
<title>malloc (86 samples, 0.01%)</title><rect x="950.6" y="277" width="0.2" height="15.0" fill="rgb(218,68,19)" rx="2" ry="2" />
<text  x="953.64" y="287.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (197 samples, 0.03%)</title><rect x="270.0" y="229" width="0.3" height="15.0" fill="rgb(213,219,26)" rx="2" ry="2" />
<text  x="273.01" y="239.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (579 samples, 0.07%)</title><rect x="344.6" y="229" width="0.9" height="15.0" fill="rgb(229,117,1)" rx="2" ry="2" />
<text  x="347.65" y="239.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (1,931 samples, 0.25%)</title><rect x="397.7" y="213" width="2.9" height="15.0" fill="rgb(251,211,4)" rx="2" ry="2" />
<text  x="400.71" y="223.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (213 samples, 0.03%)</title><rect x="263.1" y="197" width="0.3" height="15.0" fill="rgb(206,30,42)" rx="2" ry="2" />
<text  x="266.08" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (78 samples, 0.01%)</title><rect x="185.1" y="293" width="0.1" height="15.0" fill="rgb(249,122,12)" rx="2" ry="2" />
<text  x="188.13" y="303.5" ></text>
</g>
<g >
<title>std::io::BufRead::read_line (1,070 samples, 0.14%)</title><rect x="144.1" y="325" width="1.7" height="15.0" fill="rgb(220,198,44)" rx="2" ry="2" />
<text  x="147.15" y="335.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (149 samples, 0.02%)</title><rect x="952.0" y="309" width="0.3" height="15.0" fill="rgb(243,91,9)" rx="2" ry="2" />
<text  x="955.04" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (69 samples, 0.01%)</title><rect x="822.6" y="133" width="0.1" height="15.0" fill="rgb(223,142,49)" rx="2" ry="2" />
<text  x="825.60" y="143.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::compatibility_fully_decomposed (79 samples, 0.01%)</title><rect x="171.2" y="293" width="0.2" height="15.0" fill="rgb(224,131,48)" rx="2" ry="2" />
<text  x="174.23" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (143 samples, 0.02%)</title><rect x="456.6" y="245" width="0.3" height="15.0" fill="rgb(226,196,38)" rx="2" ry="2" />
<text  x="459.65" y="255.5" ></text>
</g>
<g >
<title>__rdl_alloc (114 samples, 0.01%)</title><rect x="307.0" y="261" width="0.2" height="15.0" fill="rgb(218,217,21)" rx="2" ry="2" />
<text  x="309.98" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (82 samples, 0.01%)</title><rect x="822.6" y="181" width="0.1" height="15.0" fill="rgb(254,77,25)" rx="2" ry="2" />
<text  x="825.60" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (630 samples, 0.08%)</title><rect x="1053.1" y="261" width="0.9" height="15.0" fill="rgb(211,88,19)" rx="2" ry="2" />
<text  x="1056.08" y="271.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (218 samples, 0.03%)</title><rect x="1009.4" y="245" width="0.4" height="15.0" fill="rgb(218,163,20)" rx="2" ry="2" />
<text  x="1012.42" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (331 samples, 0.04%)</title><rect x="1070.9" y="149" width="0.5" height="15.0" fill="rgb(229,100,3)" rx="2" ry="2" />
<text  x="1073.92" y="159.5" ></text>
</g>
<g >
<title>sudachi::lattice::node::Node::new_oov (1,580 samples, 0.20%)</title><rect x="885.8" y="213" width="2.4" height="15.0" fill="rgb(251,213,21)" rx="2" ry="2" />
<text  x="888.76" y="223.5" ></text>
</g>
<g >
<title>__rdl_alloc (126 samples, 0.02%)</title><rect x="176.6" y="309" width="0.2" height="15.0" fill="rgb(253,23,22)" rx="2" ry="2" />
<text  x="179.64" y="319.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (372 samples, 0.05%)</title><rect x="906.3" y="309" width="0.5" height="15.0" fill="rgb(208,7,15)" rx="2" ry="2" />
<text  x="909.25" y="319.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (112 samples, 0.01%)</title><rect x="893.0" y="245" width="0.1" height="15.0" fill="rgb(218,215,35)" rx="2" ry="2" />
<text  x="895.95" y="255.5" ></text>
</g>
<g >
<title>get_page_from_freelist (145 samples, 0.02%)</title><rect x="1071.0" y="69" width="0.2" height="15.0" fill="rgb(212,31,39)" rx="2" ry="2" />
<text  x="1074.01" y="79.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,203 samples, 0.15%)</title><rect x="138.8" y="357" width="1.8" height="15.0" fill="rgb(232,32,31)" rx="2" ry="2" />
<text  x="141.80" y="367.5" ></text>
</g>
<g >
<title>__rdl_realloc (160 samples, 0.02%)</title><rect x="419.7" y="213" width="0.2" height="15.0" fill="rgb(254,205,36)" rx="2" ry="2" />
<text  x="422.68" y="223.5" ></text>
</g>
<g >
<title>&lt;sudachi::lattice::node::Node as core::clone::Clone&gt;::clone (99 samples, 0.01%)</title><rect x="276.1" y="261" width="0.1" height="15.0" fill="rgb(254,88,43)" rx="2" ry="2" />
<text  x="279.06" y="271.5" ></text>
</g>
<g >
<title>__rdl_alloc (112 samples, 0.01%)</title><rect x="906.8" y="309" width="0.2" height="15.0" fill="rgb(208,5,43)" rx="2" ry="2" />
<text  x="909.81" y="319.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (4,013 samples, 0.51%)</title><rect x="1030.9" y="229" width="6.1" height="15.0" fill="rgb(205,44,25)" rx="2" ry="2" />
<text  x="1033.89" y="239.5" ></text>
</g>
<g >
<title>sudachi::lattice::Lattice::connect_node (247,350 samples, 31.70%)</title><rect x="476.2" y="245" width="374.1" height="15.0" fill="rgb(254,115,32)" rx="2" ry="2" />
<text  x="479.24" y="255.5" >sudachi::lattice::Lattice::connect_node</text>
</g>
<g >
<title>__libc_calloc (130 samples, 0.02%)</title><rect x="917.9" y="277" width="0.2" height="15.0" fill="rgb(254,34,14)" rx="2" ry="2" />
<text  x="920.85" y="287.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (126 samples, 0.02%)</title><rect x="402.7" y="213" width="0.2" height="15.0" fill="rgb(254,121,12)" rx="2" ry="2" />
<text  x="405.74" y="223.5" ></text>
</g>
<g >
<title>&lt;mecab_oov::MeCabOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (135 samples, 0.02%)</title><rect x="275.6" y="261" width="0.2" height="15.0" fill="rgb(216,142,10)" rx="2" ry="2" />
<text  x="278.61" y="271.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (669 samples, 0.09%)</title><rect x="1070.4" y="181" width="1.0" height="15.0" fill="rgb(217,78,38)" rx="2" ry="2" />
<text  x="1073.41" y="191.5" ></text>
</g>
<g >
<title>malloc (109 samples, 0.01%)</title><rect x="170.0" y="277" width="0.1" height="15.0" fill="rgb(226,154,32)" rx="2" ry="2" />
<text  x="172.97" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (492 samples, 0.06%)</title><rect x="943.9" y="261" width="0.8" height="15.0" fill="rgb(226,99,3)" rx="2" ry="2" />
<text  x="946.95" y="271.5" ></text>
</g>
<g >
<title>__rdl_realloc (115 samples, 0.01%)</title><rect x="1044.7" y="261" width="0.2" height="15.0" fill="rgb(230,13,28)" rx="2" ry="2" />
<text  x="1047.69" y="271.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (76 samples, 0.01%)</title><rect x="407.6" y="213" width="0.2" height="15.0" fill="rgb(220,114,10)" rx="2" ry="2" />
<text  x="410.64" y="223.5" ></text>
</g>
<g >
<title>std::os::imp::unix::net::datagram::UnixDatagram::send (91 samples, 0.01%)</title><rect x="149.3" y="325" width="0.1" height="15.0" fill="rgb(216,14,53)" rx="2" ry="2" />
<text  x="152.28" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::splice::Splice&lt;I,A&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.01%)</title><rect x="184.5" y="293" width="0.1" height="15.0" fill="rgb(247,222,26)" rx="2" ry="2" />
<text  x="187.50" y="303.5" ></text>
</g>
<g >
<title>&lt;fancy_regex::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (2,336 samples, 0.30%)</title><rect x="959.4" y="309" width="3.5" height="15.0" fill="rgb(238,65,37)" rx="2" ry="2" />
<text  x="962.40" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (586 samples, 0.08%)</title><rect x="375.1" y="261" width="0.9" height="15.0" fill="rgb(221,73,15)" rx="2" ry="2" />
<text  x="378.13" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (788 samples, 0.10%)</title><rect x="1119.0" y="421" width="1.2" height="15.0" fill="rgb(232,204,17)" rx="2" ry="2" />
<text  x="1122.01" y="431.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (1,005 samples, 0.13%)</title><rect x="1021.7" y="229" width="1.5" height="15.0" fill="rgb(222,137,43)" rx="2" ry="2" />
<text  x="1024.69" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (572 samples, 0.07%)</title><rect x="1120.2" y="421" width="0.9" height="15.0" fill="rgb(249,97,27)" rx="2" ry="2" />
<text  x="1123.21" y="431.5" ></text>
</g>
<g >
<title>filemap_read (765 samples, 0.10%)</title><rect x="1070.3" y="229" width="1.2" height="15.0" fill="rgb(217,174,24)" rx="2" ry="2" />
<text  x="1073.30" y="239.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (431 samples, 0.06%)</title><rect x="1037.7" y="309" width="0.7" height="15.0" fill="rgb(246,53,6)" rx="2" ry="2" />
<text  x="1040.73" y="319.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (2,110 samples, 0.27%)</title><rect x="313.1" y="213" width="3.2" height="15.0" fill="rgb(254,130,23)" rx="2" ry="2" />
<text  x="316.09" y="223.5" ></text>
</g>
<g >
<title>__rust_dealloc (74 samples, 0.01%)</title><rect x="214.4" y="277" width="0.1" height="15.0" fill="rgb(247,167,17)" rx="2" ry="2" />
<text  x="217.39" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4,291 samples, 0.55%)</title><rect x="465.4" y="245" width="6.4" height="15.0" fill="rgb(246,25,46)" rx="2" ry="2" />
<text  x="468.35" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (596 samples, 0.08%)</title><rect x="176.9" y="309" width="0.9" height="15.0" fill="rgb(249,17,32)" rx="2" ry="2" />
<text  x="179.90" y="319.5" ></text>
</g>
<g >
<title>malloc (77 samples, 0.01%)</title><rect x="919.2" y="277" width="0.1" height="15.0" fill="rgb(233,144,50)" rx="2" ry="2" />
<text  x="922.23" y="287.5" ></text>
</g>
<g >
<title>__rust_dealloc (186 samples, 0.02%)</title><rect x="239.2" y="245" width="0.2" height="15.0" fill="rgb(212,49,41)" rx="2" ry="2" />
<text  x="242.16" y="255.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (298 samples, 0.04%)</title><rect x="197.3" y="293" width="0.4" height="15.0" fill="rgb(206,38,13)" rx="2" ry="2" />
<text  x="200.28" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1,307 samples, 0.17%)</title><rect x="273.4" y="213" width="2.0" height="15.0" fill="rgb(218,54,10)" rx="2" ry="2" />
<text  x="276.45" y="223.5" ></text>
</g>
<g >
<title>__rdl_alloc (134 samples, 0.02%)</title><rect x="248.6" y="229" width="0.2" height="15.0" fill="rgb(231,12,40)" rx="2" ry="2" />
<text  x="251.62" y="239.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (554 samples, 0.07%)</title><rect x="411.7" y="245" width="0.8" height="15.0" fill="rgb(253,38,1)" rx="2" ry="2" />
<text  x="414.70" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,164 samples, 0.15%)</title><rect x="875.3" y="229" width="1.7" height="15.0" fill="rgb(229,189,27)" rx="2" ry="2" />
<text  x="878.26" y="239.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (717 samples, 0.09%)</title><rect x="196.2" y="293" width="1.1" height="15.0" fill="rgb(241,129,11)" rx="2" ry="2" />
<text  x="199.20" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (194 samples, 0.02%)</title><rect x="456.3" y="245" width="0.3" height="15.0" fill="rgb(246,102,24)" rx="2" ry="2" />
<text  x="459.34" y="255.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (343 samples, 0.04%)</title><rect x="271.6" y="213" width="0.5" height="15.0" fill="rgb(219,31,15)" rx="2" ry="2" />
<text  x="274.63" y="223.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (127,645 samples, 16.36%)</title><rect x="629.8" y="213" width="193.0" height="15.0" fill="rgb(205,50,36)" rx="2" ry="2" />
<text  x="632.78" y="223.5" >hashbrown::map::make_hash</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (124 samples, 0.02%)</title><rect x="258.7" y="213" width="0.2" height="15.0" fill="rgb(239,112,23)" rx="2" ry="2" />
<text  x="261.72" y="223.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (268 samples, 0.03%)</title><rect x="140.8" y="357" width="0.5" height="15.0" fill="rgb(252,122,48)" rx="2" ry="2" />
<text  x="143.84" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,138 samples, 0.15%)</title><rect x="270.4" y="229" width="1.7" height="15.0" fill="rgb(247,120,49)" rx="2" ry="2" />
<text  x="273.43" y="239.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,398 samples, 0.44%)</title><rect x="939.8" y="309" width="5.1" height="15.0" fill="rgb(235,184,2)" rx="2" ry="2" />
<text  x="942.78" y="319.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (85 samples, 0.01%)</title><rect x="1002.7" y="245" width="0.2" height="15.0" fill="rgb(213,37,6)" rx="2" ry="2" />
<text  x="1005.73" y="255.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (774 samples, 0.10%)</title><rect x="260.1" y="213" width="1.2" height="15.0" fill="rgb(230,17,31)" rx="2" ry="2" />
<text  x="263.14" y="223.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (1,185 samples, 0.15%)</title><rect x="1054.1" y="261" width="1.8" height="15.0" fill="rgb(243,136,3)" rx="2" ry="2" />
<text  x="1057.08" y="271.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,160 samples, 0.15%)</title><rect x="872.2" y="229" width="1.8" height="15.0" fill="rgb(213,213,28)" rx="2" ry="2" />
<text  x="875.21" y="239.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_fully_decomposed (114 samples, 0.01%)</title><rect x="171.1" y="293" width="0.1" height="15.0" fill="rgb(220,18,41)" rx="2" ry="2" />
<text  x="174.06" y="303.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (70 samples, 0.01%)</title><rect x="148.8" y="309" width="0.1" height="15.0" fill="rgb(247,58,52)" rx="2" ry="2" />
<text  x="151.82" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2,524 samples, 0.32%)</title><rect x="327.9" y="261" width="3.8" height="15.0" fill="rgb(249,208,53)" rx="2" ry="2" />
<text  x="330.87" y="271.5" ></text>
</g>
<g >
<title>__rdl_alloc (545 samples, 0.07%)</title><rect x="874.0" y="229" width="0.8" height="15.0" fill="rgb(234,172,46)" rx="2" ry="2" />
<text  x="876.97" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::input_text::utf8_input_text::Utf8InputText&gt; (418 samples, 0.05%)</title><rect x="898.2" y="325" width="0.6" height="15.0" fill="rgb(213,170,54)" rx="2" ry="2" />
<text  x="901.20" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,366 samples, 0.18%)</title><rect x="434.9" y="213" width="2.1" height="15.0" fill="rgb(230,205,41)" rx="2" ry="2" />
<text  x="437.92" y="223.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (234 samples, 0.03%)</title><rect x="203.6" y="325" width="0.4" height="15.0" fill="rgb(206,184,22)" rx="2" ry="2" />
<text  x="206.62" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::splice::Splice&lt;I,A&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.01%)</title><rect x="184.9" y="277" width="0.1" height="15.0" fill="rgb(212,202,15)" rx="2" ry="2" />
<text  x="187.88" y="287.5" ></text>
</g>
<g >
<title>__rdl_dealloc (96 samples, 0.01%)</title><rect x="239.0" y="245" width="0.2" height="15.0" fill="rgb(209,15,18)" rx="2" ry="2" />
<text  x="242.02" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (198 samples, 0.03%)</title><rect x="322.8" y="229" width="0.3" height="15.0" fill="rgb(248,229,18)" rx="2" ry="2" />
<text  x="325.85" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 0.01%)</title><rect x="258.4" y="213" width="0.1" height="15.0" fill="rgb(248,120,2)" rx="2" ry="2" />
<text  x="261.44" y="223.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl str&gt;::to_lowercase (221 samples, 0.03%)</title><rect x="1121.1" y="421" width="0.3" height="15.0" fill="rgb(230,137,50)" rx="2" ry="2" />
<text  x="1124.08" y="431.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (82 samples, 0.01%)</title><rect x="148.9" y="325" width="0.1" height="15.0" fill="rgb(216,159,48)" rx="2" ry="2" />
<text  x="151.92" y="335.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (175 samples, 0.02%)</title><rect x="402.9" y="229" width="0.3" height="15.0" fill="rgb(212,5,9)" rx="2" ry="2" />
<text  x="405.93" y="239.5" ></text>
</g>
<g >
<title>malloc (193 samples, 0.02%)</title><rect x="450.3" y="213" width="0.3" height="15.0" fill="rgb(208,120,28)" rx="2" ry="2" />
<text  x="453.34" y="223.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (67 samples, 0.01%)</title><rect x="406.7" y="181" width="0.1" height="15.0" fill="rgb(209,223,39)" rx="2" ry="2" />
<text  x="409.66" y="191.5" ></text>
</g>
<g >
<title>malloc (89 samples, 0.01%)</title><rect x="1053.9" y="245" width="0.1" height="15.0" fill="rgb(212,152,24)" rx="2" ry="2" />
<text  x="1056.89" y="255.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_char_category_types (82 samples, 0.01%)</title><rect x="897.6" y="245" width="0.1" height="15.0" fill="rgb(234,7,49)" rx="2" ry="2" />
<text  x="900.62" y="255.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::exec (275 samples, 0.04%)</title><rect x="962.4" y="229" width="0.4" height="15.0" fill="rgb(226,168,34)" rx="2" ry="2" />
<text  x="965.38" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (89 samples, 0.01%)</title><rect x="421.3" y="229" width="0.1" height="15.0" fill="rgb(207,201,3)" rx="2" ry="2" />
<text  x="424.29" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (413 samples, 0.05%)</title><rect x="326.8" y="261" width="0.7" height="15.0" fill="rgb(208,150,52)" rx="2" ry="2" />
<text  x="329.84" y="271.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6,950 samples, 0.89%)</title><rect x="310.9" y="229" width="10.5" height="15.0" fill="rgb(251,142,31)" rx="2" ry="2" />
<text  x="313.89" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,435 samples, 0.31%)</title><rect x="417.6" y="229" width="3.7" height="15.0" fill="rgb(222,108,44)" rx="2" ry="2" />
<text  x="420.61" y="239.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (869 samples, 0.11%)</title><rect x="165.1" y="277" width="1.3" height="15.0" fill="rgb(247,89,46)" rx="2" ry="2" />
<text  x="168.08" y="287.5" ></text>
</g>
<g >
<title>std::io::Write::write_fmt (648 samples, 0.08%)</title><rect x="1068.0" y="341" width="1.0" height="15.0" fill="rgb(215,168,40)" rx="2" ry="2" />
<text  x="1071.00" y="351.5" ></text>
</g>
<g >
<title>&lt;join_katakana_oov::JoinKarakanaOovPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (96 samples, 0.01%)</title><rect x="210.3" y="277" width="0.1" height="15.0" fill="rgb(228,173,38)" rx="2" ry="2" />
<text  x="213.27" y="287.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (266 samples, 0.03%)</title><rect x="406.9" y="197" width="0.4" height="15.0" fill="rgb(247,45,5)" rx="2" ry="2" />
<text  x="409.89" y="207.5" ></text>
</g>
<g >
<title>sudachi::tokenizer::Tokenizer::tokenize_input_text (449,685 samples, 57.63%)</title><rect x="217.9" y="277" width="680.1" height="15.0" fill="rgb(236,41,4)" rx="2" ry="2" />
<text  x="220.93" y="287.5" >sudachi::tokenizer::Tokenizer::tokenize_input_text</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (115 samples, 0.01%)</title><rect x="192.1" y="293" width="0.2" height="15.0" fill="rgb(232,36,25)" rx="2" ry="2" />
<text  x="195.12" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (765 samples, 0.10%)</title><rect x="1070.3" y="293" width="1.2" height="15.0" fill="rgb(208,121,50)" rx="2" ry="2" />
<text  x="1073.30" y="303.5" ></text>
</g>
<g >
<title>alloc::string::String::replace_range (249 samples, 0.03%)</title><rect x="184.7" y="293" width="0.4" height="15.0" fill="rgb(223,3,0)" rx="2" ry="2" />
<text  x="187.72" y="303.5" ></text>
</g>
<g >
<title>malloc (217 samples, 0.03%)</title><rect x="907.1" y="309" width="0.3" height="15.0" fill="rgb(226,5,12)" rx="2" ry="2" />
<text  x="910.06" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (740 samples, 0.09%)</title><rect x="169.0" y="293" width="1.1" height="15.0" fill="rgb(234,186,5)" rx="2" ry="2" />
<text  x="172.01" y="303.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_char_category_types_range (3,402 samples, 0.44%)</title><rect x="246.6" y="245" width="5.1" height="15.0" fill="rgb(233,157,44)" rx="2" ry="2" />
<text  x="249.58" y="255.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (770 samples, 0.10%)</title><rect x="1028.3" y="229" width="1.1" height="15.0" fill="rgb(228,13,51)" rx="2" ry="2" />
<text  x="1031.28" y="239.5" ></text>
</g>
<g >
<title>__do_sys_brk (117 samples, 0.01%)</title><rect x="13.8" y="357" width="0.2" height="15.0" fill="rgb(208,201,49)" rx="2" ry="2" />
<text  x="16.82" y="367.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad (1,035 samples, 0.13%)</title><rect x="1134.2" y="421" width="1.5" height="15.0" fill="rgb(223,80,20)" rx="2" ry="2" />
<text  x="1137.16" y="431.5" ></text>
</g>
<g >
<title>[unknown] (1,501 samples, 0.19%)</title><rect x="11.5" y="405" width="2.3" height="15.0" fill="rgb(237,177,40)" rx="2" ry="2" />
<text  x="14.54" y="415.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text_builder::Utf8InputTextBuilder::replace (1,317 samples, 0.17%)</title><rect x="183.3" y="309" width="1.9" height="15.0" fill="rgb(242,206,47)" rx="2" ry="2" />
<text  x="186.26" y="319.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (171 samples, 0.02%)</title><rect x="249.4" y="213" width="0.3" height="15.0" fill="rgb(229,146,24)" rx="2" ry="2" />
<text  x="252.41" y="223.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (2,243 samples, 0.29%)</title><rect x="323.3" y="245" width="3.4" height="15.0" fill="rgb(219,80,16)" rx="2" ry="2" />
<text  x="326.33" y="255.5" ></text>
</g>
<g >
<title>__rdl_alloc (146 samples, 0.02%)</title><rect x="261.5" y="213" width="0.2" height="15.0" fill="rgb(225,41,12)" rx="2" ry="2" />
<text  x="264.50" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (566 samples, 0.07%)</title><rect x="1040.4" y="293" width="0.8" height="15.0" fill="rgb(209,106,49)" rx="2" ry="2" />
<text  x="1043.39" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (122 samples, 0.02%)</title><rect x="1083.2" y="373" width="0.2" height="15.0" fill="rgb(218,10,36)" rx="2" ry="2" />
<text  x="1086.21" y="383.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (738 samples, 0.09%)</title><rect x="214.5" y="277" width="1.1" height="15.0" fill="rgb(241,202,41)" rx="2" ry="2" />
<text  x="217.50" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (68 samples, 0.01%)</title><rect x="951.7" y="293" width="0.1" height="15.0" fill="rgb(219,150,5)" rx="2" ry="2" />
<text  x="954.71" y="303.5" ></text>
</g>
<g >
<title>malloc (107 samples, 0.01%)</title><rect x="945.0" y="309" width="0.2" height="15.0" fill="rgb(212,49,39)" rx="2" ry="2" />
<text  x="948.02" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (267 samples, 0.03%)</title><rect x="169.6" y="277" width="0.4" height="15.0" fill="rgb(245,123,49)" rx="2" ry="2" />
<text  x="172.56" y="287.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf::BufGuard::new (75 samples, 0.01%)</title><rect x="149.1" y="325" width="0.2" height="15.0" fill="rgb(234,109,21)" rx="2" ry="2" />
<text  x="152.14" y="335.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::OovProviderPlugin::get_oov (366 samples, 0.05%)</title><rect x="217.4" y="277" width="0.5" height="15.0" fill="rgb(226,51,7)" rx="2" ry="2" />
<text  x="220.38" y="287.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (512 samples, 0.07%)</title><rect x="1059.5" y="245" width="0.8" height="15.0" fill="rgb(225,190,27)" rx="2" ry="2" />
<text  x="1062.49" y="255.5" ></text>
</g>
<g >
<title>&lt;ignore_yomigana::IgnoreYomiganaPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite (8,142 samples, 1.04%)</title><rect x="185.8" y="325" width="12.3" height="15.0" fill="rgb(245,51,14)" rx="2" ry="2" />
<text  x="188.82" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (194 samples, 0.02%)</title><rect x="927.9" y="309" width="0.3" height="15.0" fill="rgb(231,70,12)" rx="2" ry="2" />
<text  x="930.86" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (18,372 samples, 2.35%)</title><rect x="380.0" y="245" width="27.8" height="15.0" fill="rgb(224,108,15)" rx="2" ry="2" />
<text  x="383.00" y="255.5" >s..</text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (880 samples, 0.11%)</title><rect x="190.8" y="293" width="1.3" height="15.0" fill="rgb(226,57,40)" rx="2" ry="2" />
<text  x="193.78" y="303.5" ></text>
</g>
<g >
<title>kernel_init_free_pages.part.0 (97 samples, 0.01%)</title><rect x="1071.0" y="53" width="0.2" height="15.0" fill="rgb(215,153,53)" rx="2" ry="2" />
<text  x="1074.02" y="63.5" ></text>
</g>
<g >
<title>realloc (411 samples, 0.05%)</title><rect x="12.1" y="373" width="0.6" height="15.0" fill="rgb(238,183,5)" rx="2" ry="2" />
<text  x="15.06" y="383.5" ></text>
</g>
<g >
<title>malloc (495 samples, 0.06%)</title><rect x="401.7" y="213" width="0.7" height="15.0" fill="rgb(206,149,37)" rx="2" ry="2" />
<text  x="404.69" y="223.5" ></text>
</g>
<g >
<title>_int_malloc (3,624 samples, 0.46%)</title><rect x="1108.3" y="421" width="5.5" height="15.0" fill="rgb(223,9,54)" rx="2" ry="2" />
<text  x="1111.27" y="431.5" ></text>
</g>
<g >
<title>alloc::slice::merge_sort (351 samples, 0.04%)</title><rect x="164.5" y="277" width="0.6" height="15.0" fill="rgb(216,36,13)" rx="2" ry="2" />
<text  x="167.54" y="287.5" ></text>
</g>
<g >
<title>__rdl_realloc (414 samples, 0.05%)</title><rect x="1083.4" y="421" width="0.6" height="15.0" fill="rgb(226,218,1)" rx="2" ry="2" />
<text  x="1086.40" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (2,565 samples, 0.33%)</title><rect x="437.1" y="213" width="3.9" height="15.0" fill="rgb(237,167,50)" rx="2" ry="2" />
<text  x="440.08" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::Dictionary::from_system_dictionary (202 samples, 0.03%)</title><rect x="1070.0" y="325" width="0.3" height="15.0" fill="rgb(205,128,52)" rx="2" ry="2" />
<text  x="1072.99" y="335.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (519 samples, 0.07%)</title><rect x="869.7" y="229" width="0.8" height="15.0" fill="rgb(228,84,4)" rx="2" ry="2" />
<text  x="872.67" y="239.5" ></text>
</g>
<g >
<title>sudachi::dic::BinaryDictionary::read_dictionary (200 samples, 0.03%)</title><rect x="1070.0" y="293" width="0.3" height="15.0" fill="rgb(237,204,15)" rx="2" ry="2" />
<text  x="1072.99" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (563 samples, 0.07%)</title><rect x="435.9" y="197" width="0.8" height="15.0" fill="rgb(210,198,33)" rx="2" ry="2" />
<text  x="438.85" y="207.5" ></text>
</g>
<g >
<title>fancy_regex::vm::run (46,913 samples, 6.01%)</title><rect x="966.3" y="277" width="71.0" height="15.0" fill="rgb(254,180,2)" rx="2" ry="2" />
<text  x="969.33" y="287.5" >fancy_re..</text>
</g>
<g >
<title>unroll_tree_refs (83 samples, 0.01%)</title><rect x="148.2" y="229" width="0.1" height="15.0" fill="rgb(241,76,9)" rx="2" ry="2" />
<text  x="151.17" y="239.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find (70 samples, 0.01%)</title><rect x="1037.3" y="277" width="0.1" height="15.0" fill="rgb(216,15,41)" rx="2" ry="2" />
<text  x="1040.28" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (496 samples, 0.06%)</title><rect x="941.0" y="293" width="0.8" height="15.0" fill="rgb(238,93,13)" rx="2" ry="2" />
<text  x="944.04" y="303.5" ></text>
</g>
<g >
<title>__rust_alloc (86 samples, 0.01%)</title><rect x="316.7" y="213" width="0.1" height="15.0" fill="rgb(247,31,50)" rx="2" ry="2" />
<text  x="319.68" y="223.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (185 samples, 0.02%)</title><rect x="1009.8" y="245" width="0.2" height="15.0" fill="rgb(208,22,54)" rx="2" ry="2" />
<text  x="1012.75" y="255.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (237 samples, 0.03%)</title><rect x="950.8" y="293" width="0.3" height="15.0" fill="rgb(208,37,12)" rx="2" ry="2" />
<text  x="953.77" y="303.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (799 samples, 0.10%)</title><rect x="405.6" y="197" width="1.2" height="15.0" fill="rgb(220,69,24)" rx="2" ry="2" />
<text  x="408.55" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,635 samples, 0.21%)</title><rect x="866.4" y="229" width="2.5" height="15.0" fill="rgb(243,89,18)" rx="2" ry="2" />
<text  x="869.39" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (69 samples, 0.01%)</title><rect x="266.4" y="197" width="0.1" height="15.0" fill="rgb(205,151,22)" rx="2" ry="2" />
<text  x="269.45" y="207.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (360 samples, 0.05%)</title><rect x="10.5" y="421" width="0.5" height="15.0" fill="rgb(254,114,50)" rx="2" ry="2" />
<text  x="13.49" y="431.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (92 samples, 0.01%)</title><rect x="257.9" y="229" width="0.1" height="15.0" fill="rgb(218,2,34)" rx="2" ry="2" />
<text  x="260.88" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (67 samples, 0.01%)</title><rect x="944.9" y="309" width="0.1" height="15.0" fill="rgb(241,108,48)" rx="2" ry="2" />
<text  x="947.92" y="319.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (84 samples, 0.01%)</title><rect x="926.7" y="309" width="0.1" height="15.0" fill="rgb(213,186,14)" rx="2" ry="2" />
<text  x="929.68" y="319.5" ></text>
</g>
<g >
<title>malloc (92 samples, 0.01%)</title><rect x="1060.4" y="261" width="0.1" height="15.0" fill="rgb(236,132,47)" rx="2" ry="2" />
<text  x="1063.38" y="271.5" ></text>
</g>
<g >
<title>__rust_alloc (84 samples, 0.01%)</title><rect x="419.9" y="213" width="0.1" height="15.0" fill="rgb(231,23,1)" rx="2" ry="2" />
<text  x="422.92" y="223.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (7,379 samples, 0.95%)</title><rect x="928.6" y="309" width="11.2" height="15.0" fill="rgb(214,142,36)" rx="2" ry="2" />
<text  x="931.62" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (76 samples, 0.01%)</title><rect x="822.6" y="165" width="0.1" height="15.0" fill="rgb(231,43,0)" rx="2" ry="2" />
<text  x="825.60" y="175.5" ></text>
</g>
<g >
<title>__rdl_alloc (72 samples, 0.01%)</title><rect x="1062.3" y="341" width="0.1" height="15.0" fill="rgb(205,126,33)" rx="2" ry="2" />
<text  x="1065.26" y="351.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (354 samples, 0.05%)</title><rect x="927.3" y="309" width="0.6" height="15.0" fill="rgb(213,105,40)" rx="2" ry="2" />
<text  x="930.32" y="319.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (288 samples, 0.04%)</title><rect x="1038.8" y="277" width="0.4" height="15.0" fill="rgb(236,1,23)" rx="2" ry="2" />
<text  x="1041.81" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (122 samples, 0.02%)</title><rect x="1083.2" y="405" width="0.2" height="15.0" fill="rgb(207,121,2)" rx="2" ry="2" />
<text  x="1086.21" y="415.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (18,169 samples, 2.33%)</title><rect x="822.8" y="213" width="27.5" height="15.0" fill="rgb(206,82,17)" rx="2" ry="2" />
<text  x="825.81" y="223.5" >n..</text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (27,698 samples, 3.55%)</title><rect x="332.2" y="261" width="41.9" height="15.0" fill="rgb(254,21,1)" rx="2" ry="2" />
<text  x="335.17" y="271.5" >sud..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,015 samples, 0.13%)</title><rect x="181.7" y="293" width="1.5" height="15.0" fill="rgb(237,77,11)" rx="2" ry="2" />
<text  x="184.66" y="303.5" ></text>
</g>
<g >
<title>realloc (3,147 samples, 0.40%)</title><rect x="124.1" y="405" width="4.8" height="15.0" fill="rgb(210,57,44)" rx="2" ry="2" />
<text  x="127.13" y="415.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,941 samples, 0.38%)</title><rect x="914.9" y="293" width="4.4" height="15.0" fill="rgb(210,213,18)" rx="2" ry="2" />
<text  x="917.90" y="303.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,238 samples, 0.16%)</title><rect x="174.8" y="309" width="1.8" height="15.0" fill="rgb(250,66,8)" rx="2" ry="2" />
<text  x="177.77" y="319.5" ></text>
</g>
<g >
<title>malloc_consolidate (11,128 samples, 1.43%)</title><rect x="1168.3" y="421" width="16.8" height="15.0" fill="rgb(232,157,27)" rx="2" ry="2" />
<text  x="1171.29" y="431.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (822 samples, 0.11%)</title><rect x="265.5" y="229" width="1.3" height="15.0" fill="rgb(229,16,24)" rx="2" ry="2" />
<text  x="268.51" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (103 samples, 0.01%)</title><rect x="1069.7" y="325" width="0.2" height="15.0" fill="rgb(223,97,26)" rx="2" ry="2" />
<text  x="1072.70" y="335.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad_integral::write_prefix (157 samples, 0.02%)</title><rect x="123.1" y="405" width="0.2" height="15.0" fill="rgb(229,207,1)" rx="2" ry="2" />
<text  x="126.05" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,715 samples, 0.22%)</title><rect x="199.7" y="309" width="2.6" height="15.0" fill="rgb(220,30,42)" rx="2" ry="2" />
<text  x="202.67" y="319.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (149 samples, 0.02%)</title><rect x="951.8" y="293" width="0.2" height="15.0" fill="rgb(232,185,46)" rx="2" ry="2" />
<text  x="954.81" y="303.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_char_category_continuous_length (131 samples, 0.02%)</title><rect x="897.4" y="245" width="0.2" height="15.0" fill="rgb(236,163,6)" rx="2" ry="2" />
<text  x="900.42" y="255.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::slice (94 samples, 0.01%)</title><rect x="1069.0" y="341" width="0.1" height="15.0" fill="rgb(244,117,21)" rx="2" ry="2" />
<text  x="1071.99" y="351.5" ></text>
</g>
<g >
<title>std::io::Write::write_fmt (155 samples, 0.02%)</title><rect x="141.3" y="357" width="0.3" height="15.0" fill="rgb(237,5,12)" rx="2" ry="2" />
<text  x="144.34" y="367.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (822 samples, 0.11%)</title><rect x="256.4" y="229" width="1.2" height="15.0" fill="rgb(241,155,3)" rx="2" ry="2" />
<text  x="259.40" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (105 samples, 0.01%)</title><rect x="986.3" y="261" width="0.2" height="15.0" fill="rgb(226,121,28)" rx="2" ry="2" />
<text  x="989.35" y="271.5" ></text>
</g>
<g >
<title>__rust_alloc (98 samples, 0.01%)</title><rect x="469.0" y="229" width="0.2" height="15.0" fill="rgb(248,226,15)" rx="2" ry="2" />
<text  x="472.00" y="239.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (12,652 samples, 1.62%)</title><rect x="345.5" y="229" width="19.2" height="15.0" fill="rgb(216,149,11)" rx="2" ry="2" />
<text  x="348.53" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,418 samples, 0.57%)</title><rect x="945.4" y="309" width="6.6" height="15.0" fill="rgb(238,87,39)" rx="2" ry="2" />
<text  x="948.36" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (318 samples, 0.04%)</title><rect x="876.4" y="213" width="0.5" height="15.0" fill="rgb(215,27,42)" rx="2" ry="2" />
<text  x="879.38" y="223.5" ></text>
</g>
<g >
<title>sudachi::sentence_detector::SentenceDetector::get_eos (71,754 samples, 9.20%)</title><rect x="952.4" y="325" width="108.5" height="15.0" fill="rgb(208,65,48)" rx="2" ry="2" />
<text  x="955.42" y="335.5" >sudachi::sent..</text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup (105 samples, 0.01%)</title><rect x="1039.3" y="309" width="0.1" height="15.0" fill="rgb(214,142,30)" rx="2" ry="2" />
<text  x="1042.28" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (72 samples, 0.01%)</title><rect x="877.0" y="229" width="0.1" height="15.0" fill="rgb(225,124,45)" rx="2" ry="2" />
<text  x="880.02" y="239.5" ></text>
</g>
<g >
<title>__rdl_alloc (104 samples, 0.01%)</title><rect x="928.4" y="309" width="0.1" height="15.0" fill="rgb(207,84,44)" rx="2" ry="2" />
<text  x="931.37" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (892 samples, 0.11%)</title><rect x="274.0" y="197" width="1.4" height="15.0" fill="rgb(249,117,33)" rx="2" ry="2" />
<text  x="277.05" y="207.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::new (196 samples, 0.03%)</title><rect x="1070.0" y="277" width="0.3" height="15.0" fill="rgb(235,194,47)" rx="2" ry="2" />
<text  x="1072.99" y="287.5" ></text>
</g>
<g >
<title>malloc (100 samples, 0.01%)</title><rect x="251.6" y="229" width="0.1" height="15.0" fill="rgb(222,39,10)" rx="2" ry="2" />
<text  x="254.58" y="239.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (443 samples, 0.06%)</title><rect x="172.8" y="309" width="0.6" height="15.0" fill="rgb(242,187,6)" rx="2" ry="2" />
<text  x="175.77" y="319.5" ></text>
</g>
<g >
<title>sudachi::lattice::node::Node::set_range (85 samples, 0.01%)</title><rect x="897.8" y="245" width="0.2" height="15.0" fill="rgb(213,208,25)" rx="2" ry="2" />
<text  x="900.82" y="255.5" ></text>
</g>
<g >
<title>__libc_start_main (616,929 samples, 79.06%)</title><rect x="138.7" y="421" width="932.9" height="15.0" fill="rgb(211,3,45)" rx="2" ry="2" />
<text  x="141.68" y="431.5" >__libc_start_main</text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (172 samples, 0.02%)</title><rect x="1037.4" y="277" width="0.2" height="15.0" fill="rgb(212,36,16)" rx="2" ry="2" />
<text  x="1040.38" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2,549 samples, 0.33%)</title><rect x="253.8" y="245" width="3.8" height="15.0" fill="rgb(247,218,32)" rx="2" ry="2" />
<text  x="256.79" y="255.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (271 samples, 0.03%)</title><rect x="901.6" y="325" width="0.4" height="15.0" fill="rgb(228,138,28)" rx="2" ry="2" />
<text  x="904.57" y="335.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (71 samples, 0.01%)</title><rect x="185.2" y="309" width="0.2" height="15.0" fill="rgb(220,19,25)" rx="2" ry="2" />
<text  x="188.25" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_right_id (2,176 samples, 0.28%)</title><rect x="370.8" y="245" width="3.3" height="15.0" fill="rgb(228,103,12)" rx="2" ry="2" />
<text  x="373.77" y="255.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (87 samples, 0.01%)</title><rect x="187.8" y="309" width="0.1" height="15.0" fill="rgb(227,176,47)" rx="2" ry="2" />
<text  x="190.77" y="319.5" ></text>
</g>
<g >
<title>[unknown] (239 samples, 0.03%)</title><rect x="11.6" y="373" width="0.3" height="15.0" fill="rgb(239,192,33)" rx="2" ry="2" />
<text  x="14.55" y="383.5" ></text>
</g>
<g >
<title>std::io::read_until (74 samples, 0.01%)</title><rect x="145.7" y="309" width="0.1" height="15.0" fill="rgb(244,69,37)" rx="2" ry="2" />
<text  x="148.66" y="319.5" ></text>
</g>
<g >
<title>realloc (282 samples, 0.04%)</title><rect x="1185.1" y="421" width="0.5" height="15.0" fill="rgb(217,92,26)" rx="2" ry="2" />
<text  x="1188.13" y="431.5" ></text>
</g>
<g >
<title>__do_munmap (99 samples, 0.01%)</title><rect x="13.8" y="341" width="0.2" height="15.0" fill="rgb(254,96,47)" rx="2" ry="2" />
<text  x="16.82" y="351.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::OovProviderPlugin::get_oov (28,816 samples, 3.69%)</title><rect x="854.4" y="261" width="43.6" height="15.0" fill="rgb(210,183,23)" rx="2" ry="2" />
<text  x="857.38" y="271.5" >suda..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8,642 samples, 1.11%)</title><rect x="310.2" y="245" width="13.0" height="15.0" fill="rgb(212,167,28)" rx="2" ry="2" />
<text  x="313.18" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (330 samples, 0.04%)</title><rect x="951.2" y="293" width="0.5" height="15.0" fill="rgb(211,139,21)" rx="2" ry="2" />
<text  x="954.18" y="303.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (290 samples, 0.04%)</title><rect x="1038.8" y="293" width="0.4" height="15.0" fill="rgb(208,108,22)" rx="2" ry="2" />
<text  x="1041.80" y="303.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (88 samples, 0.01%)</title><rect x="266.5" y="213" width="0.2" height="15.0" fill="rgb(217,52,50)" rx="2" ry="2" />
<text  x="269.55" y="223.5" ></text>
</g>
<g >
<title>_int_realloc (140 samples, 0.02%)</title><rect x="12.8" y="389" width="0.2" height="15.0" fill="rgb(211,38,0)" rx="2" ry="2" />
<text  x="15.77" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (432 samples, 0.06%)</title><rect x="452.3" y="245" width="0.7" height="15.0" fill="rgb(252,38,7)" rx="2" ry="2" />
<text  x="455.34" y="255.5" ></text>
</g>
<g >
<title>malloc (270 samples, 0.03%)</title><rect x="331.8" y="261" width="0.4" height="15.0" fill="rgb(245,48,34)" rx="2" ry="2" />
<text  x="334.75" y="271.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (927 samples, 0.12%)</title><rect x="904.8" y="309" width="1.5" height="15.0" fill="rgb(251,185,13)" rx="2" ry="2" />
<text  x="907.85" y="319.5" ></text>
</g>
<g >
<title>std::io::read_until (281 samples, 0.04%)</title><rect x="145.1" y="293" width="0.4" height="15.0" fill="rgb(249,177,35)" rx="2" ry="2" />
<text  x="148.09" y="303.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (122 samples, 0.02%)</title><rect x="1008.9" y="261" width="0.2" height="15.0" fill="rgb(227,136,38)" rx="2" ry="2" />
<text  x="1011.88" y="271.5" ></text>
</g>
<g >
<title>__memchr_sse2 (307 samples, 0.04%)</title><rect x="144.5" y="293" width="0.4" height="15.0" fill="rgb(235,69,52)" rx="2" ry="2" />
<text  x="147.47" y="303.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (2,365 samples, 0.30%)</title><rect x="145.8" y="341" width="3.6" height="15.0" fill="rgb(227,53,35)" rx="2" ry="2" />
<text  x="148.85" y="351.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (82 samples, 0.01%)</title><rect x="260.8" y="197" width="0.1" height="15.0" fill="rgb(207,185,30)" rx="2" ry="2" />
<text  x="263.80" y="207.5" ></text>
</g>
<g >
<title>malloc (135 samples, 0.02%)</title><rect x="926.0" y="277" width="0.2" height="15.0" fill="rgb(236,106,19)" rx="2" ry="2" />
<text  x="928.96" y="287.5" ></text>
</g>
<g >
<title>__rust_dealloc (81 samples, 0.01%)</title><rect x="896.4" y="245" width="0.1" height="15.0" fill="rgb(227,18,9)" rx="2" ry="2" />
<text  x="899.39" y="255.5" ></text>
</g>
<g >
<title>__vm_munmap (122 samples, 0.02%)</title><rect x="1083.2" y="357" width="0.2" height="15.0" fill="rgb(240,61,53)" rx="2" ry="2" />
<text  x="1086.21" y="367.5" ></text>
</g>
<g >
<title>__rdl_alloc (112 samples, 0.01%)</title><rect x="379.3" y="245" width="0.2" height="15.0" fill="rgb(239,217,36)" rx="2" ry="2" />
<text  x="382.31" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (126 samples, 0.02%)</title><rect x="13.8" y="373" width="0.2" height="15.0" fill="rgb(251,157,7)" rx="2" ry="2" />
<text  x="16.82" y="383.5" ></text>
</g>
<g >
<title>sudachi::lattice::node::Node::set_range (85 samples, 0.01%)</title><rect x="854.2" y="261" width="0.2" height="15.0" fill="rgb(213,29,31)" rx="2" ry="2" />
<text  x="857.25" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (81 samples, 0.01%)</title><rect x="215.7" y="277" width="0.1" height="15.0" fill="rgb(207,72,26)" rx="2" ry="2" />
<text  x="218.70" y="287.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (245 samples, 0.03%)</title><rect x="148.3" y="261" width="0.4" height="15.0" fill="rgb(236,100,14)" rx="2" ry="2" />
<text  x="151.34" y="271.5" ></text>
</g>
<g >
<title>__libc_calloc (121 samples, 0.02%)</title><rect x="14.0" y="405" width="0.2" height="15.0" fill="rgb(225,111,12)" rx="2" ry="2" />
<text  x="17.01" y="415.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (255 samples, 0.03%)</title><rect x="856.8" y="245" width="0.4" height="15.0" fill="rgb(217,206,29)" rx="2" ry="2" />
<text  x="859.81" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,306 samples, 0.17%)</title><rect x="308.1" y="261" width="2.0" height="15.0" fill="rgb(246,225,7)" rx="2" ry="2" />
<text  x="311.10" y="271.5" ></text>
</g>
<g >
<title>sudachi::tokenizer::Tokenizer::from_dictionary_bytes (205 samples, 0.03%)</title><rect x="1070.0" y="341" width="0.3" height="15.0" fill="rgb(229,200,19)" rx="2" ry="2" />
<text  x="1072.99" y="351.5" ></text>
</g>
<g >
<title>malloc (140 samples, 0.02%)</title><rect x="411.4" y="229" width="0.2" height="15.0" fill="rgb(244,191,49)" rx="2" ry="2" />
<text  x="414.42" y="239.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy (2,230 samples, 0.29%)</title><rect x="1062.6" y="341" width="3.4" height="15.0" fill="rgb(211,31,6)" rx="2" ry="2" />
<text  x="1065.62" y="351.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (343 samples, 0.04%)</title><rect x="926.8" y="309" width="0.5" height="15.0" fill="rgb(241,55,24)" rx="2" ry="2" />
<text  x="929.80" y="319.5" ></text>
</g>
<g >
<title>malloc (484 samples, 0.06%)</title><rect x="316.8" y="213" width="0.7" height="15.0" fill="rgb(212,54,2)" rx="2" ry="2" />
<text  x="319.81" y="223.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (192 samples, 0.02%)</title><rect x="919.3" y="293" width="0.3" height="15.0" fill="rgb(231,75,26)" rx="2" ry="2" />
<text  x="922.35" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (85 samples, 0.01%)</title><rect x="150.0" y="325" width="0.1" height="15.0" fill="rgb(231,89,53)" rx="2" ry="2" />
<text  x="153.00" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (4,040 samples, 0.52%)</title><rect x="364.7" y="245" width="6.1" height="15.0" fill="rgb(246,21,3)" rx="2" ry="2" />
<text  x="367.66" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (71 samples, 0.01%)</title><rect x="144.4" y="261" width="0.1" height="15.0" fill="rgb(252,185,45)" rx="2" ry="2" />
<text  x="147.36" y="271.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (345 samples, 0.04%)</title><rect x="925.2" y="277" width="0.6" height="15.0" fill="rgb(209,17,11)" rx="2" ry="2" />
<text  x="928.24" y="287.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find (4,165 samples, 0.53%)</title><rect x="1002.6" y="261" width="6.3" height="15.0" fill="rgb(244,176,53)" rx="2" ry="2" />
<text  x="1005.58" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (82 samples, 0.01%)</title><rect x="266.3" y="181" width="0.1" height="15.0" fill="rgb(206,170,34)" rx="2" ry="2" />
<text  x="269.25" y="191.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad_integral (87 samples, 0.01%)</title><rect x="265.4" y="229" width="0.1" height="15.0" fill="rgb(213,217,24)" rx="2" ry="2" />
<text  x="268.38" y="239.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (543 samples, 0.07%)</title><rect x="374.3" y="261" width="0.8" height="15.0" fill="rgb(231,135,12)" rx="2" ry="2" />
<text  x="377.31" y="271.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::capture_locations (196 samples, 0.03%)</title><rect x="959.8" y="277" width="0.3" height="15.0" fill="rgb(206,31,0)" rx="2" ry="2" />
<text  x="962.81" y="287.5" ></text>
</g>
<g >
<title>__rust_alloc (91 samples, 0.01%)</title><rect x="307.3" y="261" width="0.2" height="15.0" fill="rgb(253,220,29)" rx="2" ry="2" />
<text  x="310.31" y="271.5" ></text>
</g>
<g >
<title>vfs_write (349 samples, 0.04%)</title><rect x="146.7" y="261" width="0.5" height="15.0" fill="rgb(250,214,43)" rx="2" ry="2" />
<text  x="149.71" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (76 samples, 0.01%)</title><rect x="822.6" y="149" width="0.1" height="15.0" fill="rgb(252,129,16)" rx="2" ry="2" />
<text  x="825.60" y="159.5" ></text>
</g>
<g >
<title>unicode_normalization::normalize::is_hangul_syllable (126 samples, 0.02%)</title><rect x="171.6" y="293" width="0.1" height="15.0" fill="rgb(207,26,48)" rx="2" ry="2" />
<text  x="174.56" y="303.5" ></text>
</g>
<g >
<title>__alloc_pages (155 samples, 0.02%)</title><rect x="1071.0" y="85" width="0.2" height="15.0" fill="rgb(224,145,37)" rx="2" ry="2" />
<text  x="1074.00" y="95.5" ></text>
</g>
<g >
<title>&lt;join_katakana_oov::JoinKarakanaOovPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (5,567 samples, 0.71%)</title><rect x="243.4" y="261" width="8.4" height="15.0" fill="rgb(224,147,41)" rx="2" ry="2" />
<text  x="246.40" y="271.5" ></text>
</g>
<g >
<title>sudachi::lattice::Lattice::get_best_path (2,564 samples, 0.33%)</title><rect x="453.0" y="261" width="3.9" height="15.0" fill="rgb(238,29,20)" rx="2" ry="2" />
<text  x="455.99" y="271.5" ></text>
</g>
<g >
<title>__fsnotify_parent (141 samples, 0.02%)</title><rect x="146.9" y="245" width="0.2" height="15.0" fill="rgb(223,19,34)" rx="2" ry="2" />
<text  x="149.91" y="255.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (362 samples, 0.05%)</title><rect x="396.2" y="197" width="0.6" height="15.0" fill="rgb(230,181,27)" rx="2" ry="2" />
<text  x="399.24" y="207.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_code_points_offset_length (271 samples, 0.03%)</title><rect x="891.2" y="229" width="0.4" height="15.0" fill="rgb(216,78,20)" rx="2" ry="2" />
<text  x="894.18" y="239.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (773 samples, 0.10%)</title><rect x="242.2" y="261" width="1.2" height="15.0" fill="rgb(210,11,22)" rx="2" ry="2" />
<text  x="245.23" y="271.5" ></text>
</g>
<g >
<title>&lt;join_numeric::JoinNumericPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (165 samples, 0.02%)</title><rect x="210.4" y="277" width="0.3" height="15.0" fill="rgb(249,216,52)" rx="2" ry="2" />
<text  x="213.41" y="287.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad_integral (199 samples, 0.03%)</title><rect x="122.8" y="405" width="0.3" height="15.0" fill="rgb(214,34,29)" rx="2" ry="2" />
<text  x="125.75" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (9,377 samples, 1.20%)</title><rect x="157.6" y="309" width="14.1" height="15.0" fill="rgb(240,192,25)" rx="2" ry="2" />
<text  x="160.57" y="319.5" ></text>
</g>
<g >
<title>_int_realloc (662 samples, 0.08%)</title><rect x="121.3" y="405" width="1.0" height="15.0" fill="rgb(214,171,3)" rx="2" ry="2" />
<text  x="124.34" y="415.5" ></text>
</g>
<g >
<title>join_numeric::numeric_parser::NumericParser::append (369 samples, 0.05%)</title><rect x="259.0" y="245" width="0.5" height="15.0" fill="rgb(208,137,2)" rx="2" ry="2" />
<text  x="261.99" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (254 samples, 0.03%)</title><rect x="985.9" y="261" width="0.3" height="15.0" fill="rgb(230,209,36)" rx="2" ry="2" />
<text  x="988.86" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (138 samples, 0.02%)</title><rect x="177.5" y="293" width="0.2" height="15.0" fill="rgb(223,77,1)" rx="2" ry="2" />
<text  x="180.52" y="303.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (177 samples, 0.02%)</title><rect x="1008.6" y="229" width="0.3" height="15.0" fill="rgb(213,168,13)" rx="2" ry="2" />
<text  x="1011.61" y="239.5" ></text>
</g>
<g >
<title>exc_page_fault (67 samples, 0.01%)</title><rect x="121.1" y="373" width="0.1" height="15.0" fill="rgb(244,100,29)" rx="2" ry="2" />
<text  x="124.07" y="383.5" ></text>
</g>
<g >
<title>__rust_dealloc (91 samples, 0.01%)</title><rect x="409.7" y="245" width="0.1" height="15.0" fill="rgb(238,55,10)" rx="2" ry="2" />
<text  x="412.69" y="255.5" ></text>
</g>
<g >
<title>[unknown] (755 samples, 0.10%)</title><rect x="11.6" y="389" width="1.1" height="15.0" fill="rgb(222,107,2)" rx="2" ry="2" />
<text  x="14.55" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (100 samples, 0.01%)</title><rect x="452.8" y="213" width="0.1" height="15.0" fill="rgb(221,131,1)" rx="2" ry="2" />
<text  x="455.77" y="223.5" ></text>
</g>
<g >
<title>std::rt::lang_start_internal (616,928 samples, 79.06%)</title><rect x="138.7" y="405" width="932.9" height="15.0" fill="rgb(211,166,49)" rx="2" ry="2" />
<text  x="141.68" y="415.5" >std::rt::lang_start_internal</text>
</g>
<g >
<title>alloc::vec::from_elem (658 samples, 0.08%)</title><rect x="918.2" y="277" width="1.0" height="15.0" fill="rgb(205,88,34)" rx="2" ry="2" />
<text  x="921.23" y="287.5" ></text>
</g>
<g >
<title>__fget_light (207 samples, 0.03%)</title><rect x="146.4" y="245" width="0.3" height="15.0" fill="rgb(236,33,1)" rx="2" ry="2" />
<text  x="149.39" y="255.5" ></text>
</g>
<g >
<title>core::fmt::write (3,176 samples, 0.41%)</title><rect x="1135.7" y="421" width="4.8" height="15.0" fill="rgb(205,99,0)" rx="2" ry="2" />
<text  x="1138.72" y="431.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (171 samples, 0.02%)</title><rect x="248.4" y="229" width="0.2" height="15.0" fill="rgb(212,101,40)" rx="2" ry="2" />
<text  x="251.36" y="239.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (2,398 samples, 0.31%)</title><rect x="936.1" y="293" width="3.7" height="15.0" fill="rgb(209,31,49)" rx="2" ry="2" />
<text  x="939.13" y="303.5" ></text>
</g>
<g >
<title>_int_free (15,978 samples, 2.05%)</title><rect x="1084.1" y="421" width="24.2" height="15.0" fill="rgb(219,59,14)" rx="2" ry="2" />
<text  x="1087.11" y="431.5" >_..</text>
</g>
<g >
<title>path_put (86 samples, 0.01%)</title><rect x="148.0" y="229" width="0.2" height="15.0" fill="rgb(226,89,5)" rx="2" ry="2" />
<text  x="151.04" y="239.5" ></text>
</g>
<g >
<title>all (780,310 samples, 100%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(224,211,43)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (68 samples, 0.01%)</title><rect x="121.2" y="389" width="0.1" height="15.0" fill="rgb(219,142,8)" rx="2" ry="2" />
<text  x="124.17" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (308 samples, 0.04%)</title><rect x="336.5" y="245" width="0.5" height="15.0" fill="rgb(215,179,7)" rx="2" ry="2" />
<text  x="339.52" y="255.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::find_from_pos (49,311 samples, 6.32%)</title><rect x="963.1" y="293" width="74.5" height="15.0" fill="rgb(235,40,46)" rx="2" ry="2" />
<text  x="966.07" y="303.5" >fancy_re..</text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (616,928 samples, 79.06%)</title><rect x="138.7" y="373" width="932.9" height="15.0" fill="rgb(250,106,48)" rx="2" ry="2" />
<text  x="141.68" y="383.5" >std::sys_common::backtrace::__rust_begin_short_backtrace</text>
</g>
<g >
<title>&lt;prolonged_sound_mark::ProlongedSoundMarkPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite (2,735 samples, 0.35%)</title><rect x="198.1" y="325" width="4.2" height="15.0" fill="rgb(218,208,24)" rx="2" ry="2" />
<text  x="201.13" y="335.5" ></text>
</g>
<g >
<title>__rdl_dealloc (107 samples, 0.01%)</title><rect x="307.2" y="261" width="0.1" height="15.0" fill="rgb(216,87,46)" rx="2" ry="2" />
<text  x="310.15" y="271.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (4,361 samples, 0.56%)</title><rect x="986.6" y="261" width="6.5" height="15.0" fill="rgb(242,228,46)" rx="2" ry="2" />
<text  x="989.56" y="271.5" ></text>
</g>
<g >
<title>alloc::string::String::push (251 samples, 0.03%)</title><rect x="400.6" y="213" width="0.4" height="15.0" fill="rgb(218,152,50)" rx="2" ry="2" />
<text  x="403.63" y="223.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (207 samples, 0.03%)</title><rect x="1037.0" y="261" width="0.3" height="15.0" fill="rgb(216,64,10)" rx="2" ry="2" />
<text  x="1039.96" y="271.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (3,335 samples, 0.43%)</title><rect x="1023.2" y="229" width="5.1" height="15.0" fill="rgb(206,101,22)" rx="2" ry="2" />
<text  x="1026.21" y="239.5" ></text>
</g>
<g >
<title>core::iter::adapters::process_results (455,341 samples, 58.35%)</title><rect x="209.6" y="325" width="688.6" height="15.0" fill="rgb(250,60,23)" rx="2" ry="2" />
<text  x="212.62" y="335.5" >core::iter::adapters::process_results</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,477 samples, 0.19%)</title><rect x="261.8" y="213" width="2.2" height="15.0" fill="rgb(237,33,17)" rx="2" ry="2" />
<text  x="264.81" y="223.5" ></text>
</g>
<g >
<title>__rdl_dealloc (202 samples, 0.03%)</title><rect x="204.6" y="325" width="0.3" height="15.0" fill="rgb(233,147,3)" rx="2" ry="2" />
<text  x="207.62" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,054 samples, 0.52%)</title><rect x="236.1" y="261" width="6.1" height="15.0" fill="rgb(226,134,21)" rx="2" ry="2" />
<text  x="239.07" y="271.5" ></text>
</g>
<g >
<title>__libc_write (1,977 samples, 0.25%)</title><rect x="145.9" y="325" width="3.0" height="15.0" fill="rgb(214,38,10)" rx="2" ry="2" />
<text  x="148.93" y="335.5" ></text>
</g>
<g >
<title>&lt;simple_oov::SimpleOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (411 samples, 0.05%)</title><rect x="892.3" y="245" width="0.7" height="15.0" fill="rgb(221,147,31)" rx="2" ry="2" />
<text  x="895.33" y="255.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memchr (91 samples, 0.01%)</title><rect x="145.5" y="293" width="0.2" height="15.0" fill="rgb(229,217,40)" rx="2" ry="2" />
<text  x="148.52" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::common_prefix_search (11,934 samples, 1.53%)</title><rect x="422.9" y="229" width="18.1" height="15.0" fill="rgb(250,160,0)" rx="2" ry="2" />
<text  x="425.91" y="239.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2,676 samples, 0.34%)</title><rect x="188.2" y="309" width="4.1" height="15.0" fill="rgb(240,210,8)" rx="2" ry="2" />
<text  x="191.24" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,739 samples, 0.61%)</title><rect x="442.8" y="213" width="7.2" height="15.0" fill="rgb(214,21,39)" rx="2" ry="2" />
<text  x="445.84" y="223.5" ></text>
</g>
<g >
<title>&lt;default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite (165 samples, 0.02%)</title><rect x="143.6" y="341" width="0.2" height="15.0" fill="rgb(232,197,17)" rx="2" ry="2" />
<text  x="146.59" y="351.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,922 samples, 0.37%)</title><rect x="946.4" y="293" width="4.4" height="15.0" fill="rgb(243,138,46)" rx="2" ry="2" />
<text  x="949.35" y="303.5" ></text>
</g>
<g >
<title>__rdl_alloc (107 samples, 0.01%)</title><rect x="187.9" y="309" width="0.2" height="15.0" fill="rgb(236,137,30)" rx="2" ry="2" />
<text  x="190.90" y="319.5" ></text>
</g>
<g >
<title>__rdl_alloc (87 samples, 0.01%)</title><rect x="197.7" y="293" width="0.2" height="15.0" fill="rgb(240,60,33)" rx="2" ry="2" />
<text  x="200.73" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (711 samples, 0.09%)</title><rect x="186.7" y="309" width="1.1" height="15.0" fill="rgb(215,14,39)" rx="2" ry="2" />
<text  x="189.69" y="319.5" ></text>
</g>
<g >
<title>__rdl_alloc (89 samples, 0.01%)</title><rect x="1053.4" y="245" width="0.1" height="15.0" fill="rgb(238,111,4)" rx="2" ry="2" />
<text  x="1056.40" y="255.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (187 samples, 0.02%)</title><rect x="174.5" y="309" width="0.3" height="15.0" fill="rgb(216,116,48)" rx="2" ry="2" />
<text  x="177.48" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (490 samples, 0.06%)</title><rect x="377.1" y="245" width="0.8" height="15.0" fill="rgb(232,217,32)" rx="2" ry="2" />
<text  x="380.14" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (76 samples, 0.01%)</title><rect x="407.3" y="197" width="0.2" height="15.0" fill="rgb(238,228,31)" rx="2" ry="2" />
<text  x="410.34" y="207.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (2,915 samples, 0.37%)</title><rect x="1185.6" y="421" width="4.4" height="15.0" fill="rgb(230,215,39)" rx="2" ry="2" />
<text  x="1188.59" y="431.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (479 samples, 0.06%)</title><rect x="245.7" y="229" width="0.7" height="15.0" fill="rgb(246,105,9)" rx="2" ry="2" />
<text  x="248.66" y="239.5" ></text>
</g>
<g >
<title>sudachi::lattice::Lattice::new (81 samples, 0.01%)</title><rect x="217.3" y="277" width="0.1" height="15.0" fill="rgb(235,228,24)" rx="2" ry="2" />
<text  x="220.25" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (88 samples, 0.01%)</title><rect x="951.5" y="277" width="0.1" height="15.0" fill="rgb(241,103,10)" rx="2" ry="2" />
<text  x="954.47" y="287.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (489 samples, 0.06%)</title><rect x="147.6" y="245" width="0.7" height="15.0" fill="rgb(205,7,41)" rx="2" ry="2" />
<text  x="150.55" y="255.5" ></text>
</g>
<g >
<title>alloc::slice::merge_sort (143 samples, 0.02%)</title><rect x="170.2" y="293" width="0.2" height="15.0" fill="rgb(248,101,32)" rx="2" ry="2" />
<text  x="173.20" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,692 samples, 0.22%)</title><rect x="146.2" y="293" width="2.6" height="15.0" fill="rgb(252,163,24)" rx="2" ry="2" />
<text  x="149.23" y="303.5" ></text>
</g>
<g >
<title>unmap_page_range (108 samples, 0.01%)</title><rect x="1083.2" y="293" width="0.2" height="15.0" fill="rgb(237,66,32)" rx="2" ry="2" />
<text  x="1086.23" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (542 samples, 0.07%)</title><rect x="420.1" y="213" width="0.8" height="15.0" fill="rgb(223,18,20)" rx="2" ry="2" />
<text  x="423.10" y="223.5" ></text>
</g>
<g >
<title>malloc_consolidate (415 samples, 0.05%)</title><rect x="123.5" y="405" width="0.6" height="15.0" fill="rgb(217,45,51)" rx="2" ry="2" />
<text  x="126.48" y="415.5" ></text>
</g>
<g >
<title>core::fmt::write (393 samples, 0.05%)</title><rect x="1066.7" y="341" width="0.6" height="15.0" fill="rgb(217,175,13)" rx="2" ry="2" />
<text  x="1069.73" y="351.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (81 samples, 0.01%)</title><rect x="259.3" y="229" width="0.1" height="15.0" fill="rgb(225,228,23)" rx="2" ry="2" />
<text  x="262.26" y="239.5" ></text>
</g>
<g >
<title>&lt; (12,148 samples, 1.56%)</title><rect x="384.6" y="229" width="18.3" height="15.0" fill="rgb(213,186,28)" rx="2" ry="2" />
<text  x="387.56" y="239.5" ></text>
</g>
<g >
<title>&lt;join_numeric::JoinNumericPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (15,736 samples, 2.02%)</title><rect x="251.8" y="261" width="23.8" height="15.0" fill="rgb(205,107,13)" rx="2" ry="2" />
<text  x="254.81" y="271.5" >&lt;..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (85 samples, 0.01%)</title><rect x="822.6" y="197" width="0.1" height="15.0" fill="rgb(233,170,24)" rx="2" ry="2" />
<text  x="825.59" y="207.5" ></text>
</g>
<g >
<title>vfs_read (765 samples, 0.10%)</title><rect x="1070.3" y="261" width="1.2" height="15.0" fill="rgb(248,14,27)" rx="2" ry="2" />
<text  x="1073.30" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (253 samples, 0.03%)</title><rect x="260.9" y="197" width="0.4" height="15.0" fill="rgb(237,149,21)" rx="2" ry="2" />
<text  x="263.93" y="207.5" ></text>
</g>
<g >
<title>_int_free (21,661 samples, 2.78%)</title><rect x="14.2" y="405" width="32.8" height="15.0" fill="rgb(237,50,3)" rx="2" ry="2" />
<text  x="17.23" y="415.5" >_i..</text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (180 samples, 0.02%)</title><rect x="471.8" y="245" width="0.3" height="15.0" fill="rgb(206,70,13)" rx="2" ry="2" />
<text  x="474.84" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,004 samples, 0.13%)</title><rect x="311.6" y="213" width="1.5" height="15.0" fill="rgb(251,98,41)" rx="2" ry="2" />
<text  x="314.57" y="223.5" ></text>
</g>
<g >
<title>&lt;default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite (23,094 samples, 2.96%)</title><rect x="150.5" y="325" width="34.9" height="15.0" fill="rgb(248,190,42)" rx="2" ry="2" />
<text  x="153.51" y="335.5" >&lt;d..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (483 samples, 0.06%)</title><rect x="1066.0" y="341" width="0.7" height="15.0" fill="rgb(222,60,53)" rx="2" ry="2" />
<text  x="1069.00" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (765 samples, 0.10%)</title><rect x="1070.3" y="309" width="1.2" height="15.0" fill="rgb(212,194,30)" rx="2" ry="2" />
<text  x="1073.30" y="319.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::exec_nfa (320 samples, 0.04%)</title><rect x="962.3" y="245" width="0.5" height="15.0" fill="rgb(232,58,7)" rx="2" ry="2" />
<text  x="965.33" y="255.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (785 samples, 0.10%)</title><rect x="963.1" y="277" width="1.2" height="15.0" fill="rgb(209,24,34)" rx="2" ry="2" />
<text  x="966.14" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (280 samples, 0.04%)</title><rect x="235.6" y="261" width="0.5" height="15.0" fill="rgb(217,7,39)" rx="2" ry="2" />
<text  x="238.65" y="271.5" ></text>
</g>
<g >
<title>[unknown] (84,091 samples, 10.78%)</title><rect x="11.5" y="421" width="127.2" height="15.0" fill="rgb(234,137,11)" rx="2" ry="2" />
<text  x="14.51" y="431.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (208 samples, 0.03%)</title><rect x="11.6" y="357" width="0.3" height="15.0" fill="rgb(206,216,18)" rx="2" ry="2" />
<text  x="14.55" y="367.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text_builder::Utf8InputTextBuilder::new (4,717 samples, 0.60%)</title><rect x="945.3" y="325" width="7.1" height="15.0" fill="rgb(205,197,1)" rx="2" ry="2" />
<text  x="948.26" y="335.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8 (87 samples, 0.01%)</title><rect x="123.3" y="405" width="0.1" height="15.0" fill="rgb(205,195,15)" rx="2" ry="2" />
<text  x="126.29" y="415.5" ></text>
</g>
<g >
<title>__tls_get_addr (137 samples, 0.02%)</title><rect x="244.2" y="245" width="0.2" height="15.0" fill="rgb(216,204,23)" rx="2" ry="2" />
<text  x="247.20" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (213,061 samples, 27.30%)</title><rect x="528.1" y="229" width="322.2" height="15.0" fill="rgb(205,50,48)" rx="2" ry="2" />
<text  x="531.09" y="239.5" >sudachi::dic::grammar::Grammar::get_connect..</text>
</g>
<g >
<title>__rdl_alloc (88 samples, 0.01%)</title><rect x="925.8" y="277" width="0.1" height="15.0" fill="rgb(235,63,41)" rx="2" ry="2" />
<text  x="928.76" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (239 samples, 0.03%)</title><rect x="1053.5" y="245" width="0.4" height="15.0" fill="rgb(206,113,38)" rx="2" ry="2" />
<text  x="1056.53" y="255.5" ></text>
</g>
<g >
<title>new_sync_read (765 samples, 0.10%)</title><rect x="1070.3" y="245" width="1.2" height="15.0" fill="rgb(252,182,18)" rx="2" ry="2" />
<text  x="1073.30" y="255.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (1,099 samples, 0.14%)</title><rect x="448.3" y="197" width="1.7" height="15.0" fill="rgb(217,191,43)" rx="2" ry="2" />
<text  x="451.35" y="207.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (499 samples, 0.06%)</title><rect x="1045.5" y="277" width="0.8" height="15.0" fill="rgb(245,100,7)" rx="2" ry="2" />
<text  x="1048.52" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (316 samples, 0.04%)</title><rect x="273.0" y="213" width="0.4" height="15.0" fill="rgb(243,56,28)" rx="2" ry="2" />
<text  x="275.97" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1,039 samples, 0.13%)</title><rect x="957.8" y="309" width="1.6" height="15.0" fill="rgb(241,12,0)" rx="2" ry="2" />
<text  x="960.83" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,248 samples, 0.16%)</title><rect x="249.7" y="229" width="1.9" height="15.0" fill="rgb(246,35,46)" rx="2" ry="2" />
<text  x="252.67" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 0.01%)</title><rect x="157.4" y="309" width="0.2" height="15.0" fill="rgb(205,62,45)" rx="2" ry="2" />
<text  x="160.43" y="319.5" ></text>
</g>
<g >
<title>_int_realloc (3,478 samples, 0.45%)</title><rect x="1113.8" y="421" width="5.2" height="15.0" fill="rgb(221,123,15)" rx="2" ry="2" />
<text  x="1116.75" y="431.5" ></text>
</g>
<g >
<title>__do_munmap (122 samples, 0.02%)</title><rect x="1083.2" y="341" width="0.2" height="15.0" fill="rgb(248,51,8)" rx="2" ry="2" />
<text  x="1086.21" y="351.5" ></text>
</g>
<g >
<title>__rust_alloc (310 samples, 0.04%)</title><rect x="874.8" y="229" width="0.5" height="15.0" fill="rgb(222,1,45)" rx="2" ry="2" />
<text  x="877.79" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (122 samples, 0.02%)</title><rect x="1083.2" y="389" width="0.2" height="15.0" fill="rgb(254,12,17)" rx="2" ry="2" />
<text  x="1086.21" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (297 samples, 0.04%)</title><rect x="1071.0" y="117" width="0.4" height="15.0" fill="rgb(235,131,7)" rx="2" ry="2" />
<text  x="1073.96" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (650 samples, 0.08%)</title><rect x="949.7" y="277" width="0.9" height="15.0" fill="rgb(211,150,15)" rx="2" ry="2" />
<text  x="952.65" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (78 samples, 0.01%)</title><rect x="269.9" y="229" width="0.1" height="15.0" fill="rgb(219,226,9)" rx="2" ry="2" />
<text  x="272.89" y="239.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::captures_from_pos (2,238 samples, 0.29%)</title><rect x="959.5" y="293" width="3.4" height="15.0" fill="rgb(242,53,8)" rx="2" ry="2" />
<text  x="962.49" y="303.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (1,010 samples, 0.13%)</title><rect x="330.2" y="245" width="1.5" height="15.0" fill="rgb(251,215,48)" rx="2" ry="2" />
<text  x="333.16" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (155 samples, 0.02%)</title><rect x="1067.3" y="341" width="0.3" height="15.0" fill="rgb(252,204,25)" rx="2" ry="2" />
<text  x="1070.33" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (145 samples, 0.02%)</title><rect x="266.8" y="229" width="0.2" height="15.0" fill="rgb(234,199,10)" rx="2" ry="2" />
<text  x="269.75" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2,037 samples, 0.26%)</title><rect x="941.8" y="293" width="3.1" height="15.0" fill="rgb(246,99,35)" rx="2" ry="2" />
<text  x="944.79" y="303.5" ></text>
</g>
<g >
<title>realloc (266 samples, 0.03%)</title><rect x="471.4" y="229" width="0.4" height="15.0" fill="rgb(205,115,32)" rx="2" ry="2" />
<text  x="474.44" y="239.5" ></text>
</g>
<g >
<title>ksys_write (614 samples, 0.08%)</title><rect x="146.3" y="277" width="0.9" height="15.0" fill="rgb(234,145,32)" rx="2" ry="2" />
<text  x="149.31" y="287.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (84 samples, 0.01%)</title><rect x="379.6" y="245" width="0.1" height="15.0" fill="rgb(220,88,52)" rx="2" ry="2" />
<text  x="382.60" y="255.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_substring (282 samples, 0.04%)</title><rect x="891.6" y="229" width="0.4" height="15.0" fill="rgb(225,182,17)" rx="2" ry="2" />
<text  x="894.59" y="239.5" ></text>
</g>
<g >
<title>sudachi::lattice::Lattice::insert (260,157 samples, 33.34%)</title><rect x="456.9" y="261" width="393.4" height="15.0" fill="rgb(207,21,48)" rx="2" ry="2" />
<text  x="459.87" y="271.5" >sudachi::lattice::Lattice::insert</text>
</g>
<g >
<title>regex::re_unicode::Regex::captures_read_at (1,833 samples, 0.23%)</title><rect x="960.1" y="277" width="2.8" height="15.0" fill="rgb(227,136,16)" rx="2" ry="2" />
<text  x="963.10" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (76 samples, 0.01%)</title><rect x="959.2" y="277" width="0.1" height="15.0" fill="rgb(228,21,19)" rx="2" ry="2" />
<text  x="962.23" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::lattice::node::Node as core::clone::Clone&gt;::clone (800 samples, 0.10%)</title><rect x="453.9" y="245" width="1.2" height="15.0" fill="rgb(220,85,29)" rx="2" ry="2" />
<text  x="456.87" y="255.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,271 samples, 0.16%)</title><rect x="244.5" y="245" width="1.9" height="15.0" fill="rgb(245,173,31)" rx="2" ry="2" />
<text  x="247.47" y="255.5" ></text>
</g>
<g >
<title>__rdl_alloc (405 samples, 0.05%)</title><rect x="204.0" y="325" width="0.6" height="15.0" fill="rgb(251,112,28)" rx="2" ry="2" />
<text  x="206.98" y="335.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (269 samples, 0.03%)</title><rect x="890.1" y="213" width="0.4" height="15.0" fill="rgb(217,142,41)" rx="2" ry="2" />
<text  x="893.05" y="223.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_original_substring (519 samples, 0.07%)</title><rect x="320.6" y="197" width="0.8" height="15.0" fill="rgb(227,45,35)" rx="2" ry="2" />
<text  x="323.62" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9,819 samples, 1.26%)</title><rect x="911.3" y="309" width="14.9" height="15.0" fill="rgb(245,39,34)" rx="2" ry="2" />
<text  x="914.32" y="319.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (6,202 samples, 0.79%)</title><rect x="1124.8" y="421" width="9.4" height="15.0" fill="rgb(211,136,11)" rx="2" ry="2" />
<text  x="1127.78" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup (82 samples, 0.01%)</title><rect x="374.1" y="261" width="0.1" height="15.0" fill="rgb(249,50,9)" rx="2" ry="2" />
<text  x="377.06" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (395 samples, 0.05%)</title><rect x="919.8" y="293" width="0.6" height="15.0" fill="rgb(250,112,49)" rx="2" ry="2" />
<text  x="922.78" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (219 samples, 0.03%)</title><rect x="216.0" y="277" width="0.3" height="15.0" fill="rgb(214,207,7)" rx="2" ry="2" />
<text  x="219.01" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (248 samples, 0.03%)</title><rect x="1044.9" y="261" width="0.4" height="15.0" fill="rgb(239,52,46)" rx="2" ry="2" />
<text  x="1047.94" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (425 samples, 0.05%)</title><rect x="263.4" y="197" width="0.6" height="15.0" fill="rgb(247,218,43)" rx="2" ry="2" />
<text  x="266.41" y="207.5" ></text>
</g>
<g >
<title>sudachi::dic::character_category::CharacterCategory::get_category_types (3,584 samples, 0.46%)</title><rect x="920.7" y="293" width="5.5" height="15.0" fill="rgb(247,150,3)" rx="2" ry="2" />
<text  x="923.75" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (4,500 samples, 0.58%)</title><rect x="512.5" y="229" width="6.8" height="15.0" fill="rgb(242,41,20)" rx="2" ry="2" />
<text  x="515.48" y="239.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (79 samples, 0.01%)</title><rect x="869.6" y="229" width="0.1" height="15.0" fill="rgb(235,222,20)" rx="2" ry="2" />
<text  x="872.55" y="239.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (1,163 samples, 0.15%)</title><rect x="870.5" y="229" width="1.7" height="15.0" fill="rgb(234,20,31)" rx="2" ry="2" />
<text  x="873.46" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (217 samples, 0.03%)</title><rect x="887.8" y="197" width="0.4" height="15.0" fill="rgb(206,202,40)" rx="2" ry="2" />
<text  x="890.83" y="207.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,196 samples, 0.28%)</title><rect x="272.1" y="229" width="3.4" height="15.0" fill="rgb(244,126,23)" rx="2" ry="2" />
<text  x="275.15" y="239.5" ></text>
</g>
<g >
<title>__tls_get_addr (315 samples, 0.04%)</title><rect x="264.6" y="229" width="0.4" height="15.0" fill="rgb(235,51,51)" rx="2" ry="2" />
<text  x="267.56" y="239.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (86 samples, 0.01%)</title><rect x="121.0" y="389" width="0.2" height="15.0" fill="rgb(239,6,27)" rx="2" ry="2" />
<text  x="124.04" y="399.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::compatibility_fully_decomposed (1,125 samples, 0.14%)</title><rect x="167.2" y="277" width="1.8" height="15.0" fill="rgb(254,191,54)" rx="2" ry="2" />
<text  x="170.25" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (2,070 samples, 0.27%)</title><rect x="404.7" y="229" width="3.1" height="15.0" fill="rgb(223,194,53)" rx="2" ry="2" />
<text  x="407.65" y="239.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (113 samples, 0.01%)</title><rect x="320.1" y="197" width="0.2" height="15.0" fill="rgb(209,79,15)" rx="2" ry="2" />
<text  x="323.11" y="207.5" ></text>
</g>
<g >
<title>__rust_alloc (96 samples, 0.01%)</title><rect x="450.2" y="213" width="0.1" height="15.0" fill="rgb(226,43,47)" rx="2" ry="2" />
<text  x="453.19" y="223.5" ></text>
</g>
<g >
<title>std::io::append_to_string (892 samples, 0.11%)</title><rect x="144.3" y="309" width="1.4" height="15.0" fill="rgb(242,171,12)" rx="2" ry="2" />
<text  x="147.31" y="319.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (74 samples, 0.01%)</title><rect x="184.6" y="293" width="0.1" height="15.0" fill="rgb(252,99,9)" rx="2" ry="2" />
<text  x="187.61" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup (12,694 samples, 1.63%)</title><rect x="1041.6" y="293" width="19.2" height="15.0" fill="rgb(224,102,13)" rx="2" ry="2" />
<text  x="1044.56" y="303.5" ></text>
</g>
<g >
<title>&lt;&amp;T as core::fmt::Display&gt;::fmt (92 samples, 0.01%)</title><rect x="1137.1" y="405" width="0.1" height="15.0" fill="rgb(224,18,43)" rx="2" ry="2" />
<text  x="1140.07" y="415.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_char_category_types_range (5,533 samples, 0.71%)</title><rect x="267.2" y="245" width="8.4" height="15.0" fill="rgb(240,17,34)" rx="2" ry="2" />
<text  x="270.23" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (201 samples, 0.03%)</title><rect x="920.4" y="293" width="0.3" height="15.0" fill="rgb(214,99,43)" rx="2" ry="2" />
<text  x="923.45" y="303.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (447 samples, 0.06%)</title><rect x="401.0" y="213" width="0.7" height="15.0" fill="rgb(207,144,17)" rx="2" ry="2" />
<text  x="404.01" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::character_category::CharacterCategory::get_category_types (3,833 samples, 0.49%)</title><rect x="192.3" y="309" width="5.8" height="15.0" fill="rgb(218,129,14)" rx="2" ry="2" />
<text  x="195.33" y="319.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (454,985 samples, 58.31%)</title><rect x="209.9" y="293" width="688.1" height="15.0" fill="rgb(211,213,6)" rx="2" ry="2" />
<text  x="212.92" y="303.5" >&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold</text>
</g>
<g >
<title>handle_mm_fault (309 samples, 0.04%)</title><rect x="1070.9" y="133" width="0.5" height="15.0" fill="rgb(244,155,23)" rx="2" ry="2" />
<text  x="1073.95" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (660 samples, 0.08%)</title><rect x="171.7" y="309" width="1.0" height="15.0" fill="rgb(224,108,21)" rx="2" ry="2" />
<text  x="174.75" y="319.5" ></text>
</g>
<g >
<title>&lt;&amp;T as core::fmt::Display&gt;::fmt (180 samples, 0.02%)</title><rect x="10.1" y="421" width="0.3" height="15.0" fill="rgb(237,163,14)" rx="2" ry="2" />
<text  x="13.12" y="431.5" ></text>
</g>
<g >
<title>exc_page_fault (345 samples, 0.04%)</title><rect x="1070.9" y="165" width="0.5" height="15.0" fill="rgb(205,121,39)" rx="2" ry="2" />
<text  x="1073.90" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (71 samples, 0.01%)</title><rect x="144.4" y="277" width="0.1" height="15.0" fill="rgb(232,157,31)" rx="2" ry="2" />
<text  x="147.36" y="287.5" ></text>
</g>
<g >
<title>__rdl_alloc (120 samples, 0.02%)</title><rect x="450.0" y="213" width="0.2" height="15.0" fill="rgb(230,94,20)" rx="2" ry="2" />
<text  x="453.01" y="223.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (6,590 samples, 0.84%)</title><rect x="386.9" y="213" width="10.0" height="15.0" fill="rgb(250,47,25)" rx="2" ry="2" />
<text  x="389.90" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (2,416 samples, 0.31%)</title><rect x="850.6" y="245" width="3.6" height="15.0" fill="rgb(219,120,3)" rx="2" ry="2" />
<text  x="853.57" y="255.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (756 samples, 0.10%)</title><rect x="1007.5" y="229" width="1.1" height="15.0" fill="rgb(226,220,32)" rx="2" ry="2" />
<text  x="1010.47" y="239.5" ></text>
</g>
<g >
<title>core::iter::adapters::process_results (11,021 samples, 1.41%)</title><rect x="310.1" y="261" width="16.6" height="15.0" fill="rgb(207,218,29)" rx="2" ry="2" />
<text  x="313.08" y="271.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,015 samples, 0.13%)</title><rect x="259.8" y="229" width="1.5" height="15.0" fill="rgb(221,52,44)" rx="2" ry="2" />
<text  x="262.79" y="239.5" ></text>
</g>
<g >
<title>__munmap (122 samples, 0.02%)</title><rect x="1083.2" y="421" width="0.2" height="15.0" fill="rgb(214,59,44)" rx="2" ry="2" />
<text  x="1086.21" y="431.5" ></text>
</g>
<g >
<title>sudachi::main (614,918 samples, 78.80%)</title><rect x="141.6" y="357" width="929.9" height="15.0" fill="rgb(224,122,25)" rx="2" ry="2" />
<text  x="144.57" y="367.5" >sudachi::main</text>
</g>
<g >
<title>sudachi::dic::BinaryDictionary::from_system_dictionary (200 samples, 0.03%)</title><rect x="1070.0" y="309" width="0.3" height="15.0" fill="rgb(225,155,14)" rx="2" ry="2" />
<text  x="1072.99" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::lookup (28,880 samples, 3.70%)</title><rect x="407.8" y="261" width="43.7" height="15.0" fill="rgb(216,13,49)" rx="2" ry="2" />
<text  x="410.78" y="271.5" >suda..</text>
</g>
<g >
<title>__rust_alloc (84 samples, 0.01%)</title><rect x="890.8" y="213" width="0.1" height="15.0" fill="rgb(239,194,41)" rx="2" ry="2" />
<text  x="893.77" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (126 samples, 0.02%)</title><rect x="13.8" y="389" width="0.2" height="15.0" fill="rgb(215,196,0)" rx="2" ry="2" />
<text  x="16.82" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (455,138 samples, 58.33%)</title><rect x="209.8" y="309" width="688.2" height="15.0" fill="rgb(214,196,28)" rx="2" ry="2" />
<text  x="212.76" y="319.5" >&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text>
</g>
<g >
<title>sudachi::dic::lexicon::word_id_table::WordIdTable::get (3,235 samples, 0.41%)</title><rect x="1055.9" y="277" width="4.9" height="15.0" fill="rgb(228,144,46)" rx="2" ry="2" />
<text  x="1058.87" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (977 samples, 0.13%)</title><rect x="421.4" y="229" width="1.5" height="15.0" fill="rgb(220,31,45)" rx="2" ry="2" />
<text  x="424.43" y="239.5" ></text>
</g>
<g >
<title>sudachi::lattice::Lattice::insert (465 samples, 0.06%)</title><rect x="216.6" y="277" width="0.7" height="15.0" fill="rgb(238,220,48)" rx="2" ry="2" />
<text  x="219.55" y="287.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (331 samples, 0.04%)</title><rect x="247.8" y="229" width="0.5" height="15.0" fill="rgb(249,195,19)" rx="2" ry="2" />
<text  x="250.82" y="239.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (426 samples, 0.05%)</title><rect x="170.4" y="293" width="0.7" height="15.0" fill="rgb(249,107,29)" rx="2" ry="2" />
<text  x="173.42" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,196 samples, 0.15%)</title><rect x="409.8" y="245" width="1.8" height="15.0" fill="rgb(228,77,20)" rx="2" ry="2" />
<text  x="412.82" y="255.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4,856 samples, 0.62%)</title><rect x="622.3" y="213" width="7.3" height="15.0" fill="rgb(227,40,7)" rx="2" ry="2" />
<text  x="625.30" y="223.5" ></text>
</g>
<g >
<title>sudachi::morpheme::Morpheme::new (2,501 samples, 0.32%)</title><rect x="317.6" y="213" width="3.8" height="15.0" fill="rgb(225,175,26)" rx="2" ry="2" />
<text  x="320.62" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (117 samples, 0.01%)</title><rect x="149.8" y="325" width="0.2" height="15.0" fill="rgb(229,211,9)" rx="2" ry="2" />
<text  x="152.83" y="335.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (98 samples, 0.01%)</title><rect x="265.0" y="229" width="0.2" height="15.0" fill="rgb(244,100,36)" rx="2" ry="2" />
<text  x="268.05" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (115 samples, 0.01%)</title><rect x="253.6" y="245" width="0.2" height="15.0" fill="rgb(248,216,9)" rx="2" ry="2" />
<text  x="256.62" y="255.5" ></text>
</g>
<g >
<title>__tls_get_addr (112 samples, 0.01%)</title><rect x="253.3" y="245" width="0.2" height="15.0" fill="rgb(233,13,48)" rx="2" ry="2" />
<text  x="256.28" y="255.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (197 samples, 0.03%)</title><rect x="402.4" y="213" width="0.3" height="15.0" fill="rgb(207,79,33)" rx="2" ry="2" />
<text  x="405.44" y="223.5" ></text>
</g>
<g >
<title>[unknown] (82 samples, 0.01%)</title><rect x="11.6" y="325" width="0.1" height="15.0" fill="rgb(225,90,17)" rx="2" ry="2" />
<text  x="14.55" y="335.5" ></text>
</g>
<g >
<title>copy_page_to_iter (734 samples, 0.09%)</title><rect x="1070.3" y="213" width="1.1" height="15.0" fill="rgb(223,120,54)" rx="2" ry="2" />
<text  x="1073.32" y="223.5" ></text>
</g>
<g >
<title>__rdl_realloc (431 samples, 0.06%)</title><rect x="468.4" y="229" width="0.6" height="15.0" fill="rgb(231,193,8)" rx="2" ry="2" />
<text  x="471.35" y="239.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_char_category_types (1,929 samples, 0.25%)</title><rect x="888.3" y="229" width="2.9" height="15.0" fill="rgb(205,61,20)" rx="2" ry="2" />
<text  x="891.26" y="239.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (47,011 samples, 6.02%)</title><rect x="751.5" y="197" width="71.1" height="15.0" fill="rgb(214,215,32)" rx="2" ry="2" />
<text  x="754.50" y="207.5" >&lt;std::co..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::input_text::utf8_input_text::Utf8InputText&gt; (79 samples, 0.01%)</title><rect x="1067.6" y="341" width="0.1" height="15.0" fill="rgb(243,19,33)" rx="2" ry="2" />
<text  x="1070.63" y="351.5" ></text>
</g>
<g >
<title>&lt; (1,559 samples, 0.20%)</title><rect x="405.2" y="213" width="2.4" height="15.0" fill="rgb(250,118,7)" rx="2" ry="2" />
<text  x="408.24" y="223.5" ></text>
</g>
<g >
<title>sudachi::lattice::Lattice::connect_node (805 samples, 0.10%)</title><rect x="451.8" y="261" width="1.2" height="15.0" fill="rgb(211,171,33)" rx="2" ry="2" />
<text  x="454.78" y="271.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (92 samples, 0.01%)</title><rect x="253.5" y="245" width="0.1" height="15.0" fill="rgb(208,136,12)" rx="2" ry="2" />
<text  x="256.48" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (208 samples, 0.03%)</title><rect x="264.1" y="213" width="0.3" height="15.0" fill="rgb(244,174,35)" rx="2" ry="2" />
<text  x="267.11" y="223.5" ></text>
</g>
<g >
<title>malloc (116 samples, 0.01%)</title><rect x="198.0" y="293" width="0.1" height="15.0" fill="rgb(222,155,29)" rx="2" ry="2" />
<text  x="200.96" y="303.5" ></text>
</g>
<g >
<title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (5,717 samples, 0.73%)</title><rect x="160.4" y="293" width="8.6" height="15.0" fill="rgb(244,71,8)" rx="2" ry="2" />
<text  x="163.37" y="303.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (6,214 samples, 0.80%)</title><rect x="993.1" y="261" width="9.4" height="15.0" fill="rgb(220,147,18)" rx="2" ry="2" />
<text  x="996.15" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::lookup (78 samples, 0.01%)</title><rect x="216.4" y="277" width="0.1" height="15.0" fill="rgb(210,200,33)" rx="2" ry="2" />
<text  x="219.40" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,224 samples, 0.16%)</title><rect x="469.3" y="229" width="1.8" height="15.0" fill="rgb(205,95,14)" rx="2" ry="2" />
<text  x="472.25" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (274 samples, 0.04%)</title><rect x="411.0" y="229" width="0.4" height="15.0" fill="rgb(230,63,53)" rx="2" ry="2" />
<text  x="414.00" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (715 samples, 0.09%)</title><rect x="241.1" y="245" width="1.1" height="15.0" fill="rgb(251,72,7)" rx="2" ry="2" />
<text  x="244.12" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (84 samples, 0.01%)</title><rect x="205.6" y="325" width="0.1" height="15.0" fill="rgb(218,110,15)" rx="2" ry="2" />
<text  x="208.62" y="335.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (690 samples, 0.09%)</title><rect x="173.4" y="309" width="1.1" height="15.0" fill="rgb(228,71,36)" rx="2" ry="2" />
<text  x="176.44" y="319.5" ></text>
</g>
<g >
<title>clear_page_erms (94 samples, 0.01%)</title><rect x="1071.0" y="37" width="0.2" height="15.0" fill="rgb(243,53,36)" rx="2" ry="2" />
<text  x="1074.03" y="47.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (6,437 samples, 0.82%)</title><rect x="128.9" y="405" width="9.8" height="15.0" fill="rgb(245,77,31)" rx="2" ry="2" />
<text  x="131.94" y="415.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (834 samples, 0.11%)</title><rect x="455.1" y="245" width="1.2" height="15.0" fill="rgb(226,80,1)" rx="2" ry="2" />
<text  x="458.07" y="255.5" ></text>
</g>
<g >
<title>__rdl_alloc (209 samples, 0.03%)</title><rect x="890.5" y="213" width="0.3" height="15.0" fill="rgb(215,148,29)" rx="2" ry="2" />
<text  x="893.46" y="223.5" ></text>
</g>
<g >
<title>join_numeric::numeric_parser::NumericParser::new (4,955 samples, 0.64%)</title><rect x="259.5" y="245" width="7.5" height="15.0" fill="rgb(226,122,29)" rx="2" ry="2" />
<text  x="262.54" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (67 samples, 0.01%)</title><rect x="403.2" y="229" width="0.1" height="15.0" fill="rgb(235,104,29)" rx="2" ry="2" />
<text  x="406.19" y="239.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (5,820 samples, 0.75%)</title><rect x="519.3" y="229" width="8.8" height="15.0" fill="rgb(250,221,27)" rx="2" ry="2" />
<text  x="522.29" y="239.5" ></text>
</g>
<g >
<title>__fdget_pos (218 samples, 0.03%)</title><rect x="146.4" y="261" width="0.3" height="15.0" fill="rgb(207,2,5)" rx="2" ry="2" />
<text  x="149.38" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with (100 samples, 0.01%)</title><rect x="959.9" y="261" width="0.2" height="15.0" fill="rgb(237,122,31)" rx="2" ry="2" />
<text  x="962.93" y="271.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (119 samples, 0.02%)</title><rect x="258.5" y="213" width="0.2" height="15.0" fill="rgb(231,165,48)" rx="2" ry="2" />
<text  x="261.54" y="223.5" ></text>
</g>
<g >
<title>realloc (539 samples, 0.07%)</title><rect x="13.0" y="389" width="0.8" height="15.0" fill="rgb(209,12,23)" rx="2" ry="2" />
<text  x="15.99" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,470 samples, 0.19%)</title><rect x="942.6" y="277" width="2.2" height="15.0" fill="rgb(237,99,7)" rx="2" ry="2" />
<text  x="945.59" y="287.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (203 samples, 0.03%)</title><rect x="1041.3" y="293" width="0.3" height="15.0" fill="rgb(224,33,43)" rx="2" ry="2" />
<text  x="1044.26" y="303.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (3,936 samples, 0.50%)</title><rect x="1002.9" y="245" width="6.0" height="15.0" fill="rgb(238,161,38)" rx="2" ry="2" />
<text  x="1005.93" y="255.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (728 samples, 0.09%)</title><rect x="1070.3" y="197" width="1.1" height="15.0" fill="rgb(211,84,46)" rx="2" ry="2" />
<text  x="1073.33" y="207.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,814 samples, 0.23%)</title><rect x="361.9" y="213" width="2.7" height="15.0" fill="rgb(236,23,18)" rx="2" ry="2" />
<text  x="364.88" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (109 samples, 0.01%)</title><rect x="920.1" y="277" width="0.2" height="15.0" fill="rgb(229,25,39)" rx="2" ry="2" />
<text  x="923.15" y="287.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (67 samples, 0.01%)</title><rect x="11.4" y="421" width="0.1" height="15.0" fill="rgb(221,223,29)" rx="2" ry="2" />
<text  x="14.41" y="431.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::composition_table (130 samples, 0.02%)</title><rect x="171.4" y="293" width="0.1" height="15.0" fill="rgb(233,219,3)" rx="2" ry="2" />
<text  x="174.35" y="303.5" ></text>
</g>
<g >
<title>mecab_oov::MeCabOovPlugin::get_oov_node (100 samples, 0.01%)</title><rect x="897.3" y="245" width="0.1" height="15.0" fill="rgb(251,4,39)" rx="2" ry="2" />
<text  x="900.27" y="255.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::slice (2,829 samples, 0.36%)</title><rect x="903.1" y="325" width="4.3" height="15.0" fill="rgb(229,17,50)" rx="2" ry="2" />
<text  x="906.11" y="335.5" ></text>
</g>
<g >
<title>sudachi (780,292 samples, 100.00%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(224,153,20)" rx="2" ry="2" />
<text  x="13.03" y="447.5" >sudachi</text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (2,716 samples, 0.35%)</title><rect x="472.1" y="245" width="4.1" height="15.0" fill="rgb(210,68,3)" rx="2" ry="2" />
<text  x="475.13" y="255.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (942 samples, 0.12%)</title><rect x="377.9" y="245" width="1.4" height="15.0" fill="rgb(231,33,15)" rx="2" ry="2" />
<text  x="380.88" y="255.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (470 samples, 0.06%)</title><rect x="964.6" y="277" width="0.7" height="15.0" fill="rgb(242,11,5)" rx="2" ry="2" />
<text  x="967.61" y="287.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (18,450 samples, 2.36%)</title><rect x="1009.1" y="261" width="27.9" height="15.0" fill="rgb(243,130,18)" rx="2" ry="2" />
<text  x="1012.06" y="271.5" >r..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (137 samples, 0.02%)</title><rect x="145.3" y="277" width="0.2" height="15.0" fill="rgb(214,35,11)" rx="2" ry="2" />
<text  x="148.27" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::common_prefix_search (6,342 samples, 0.81%)</title><rect x="1046.3" y="277" width="9.6" height="15.0" fill="rgb(209,179,45)" rx="2" ry="2" />
<text  x="1049.28" y="287.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (880 samples, 0.11%)</title><rect x="1060.9" y="341" width="1.4" height="15.0" fill="rgb(219,137,48)" rx="2" ry="2" />
<text  x="1063.92" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (71 samples, 0.01%)</title><rect x="986.2" y="261" width="0.1" height="15.0" fill="rgb(234,20,20)" rx="2" ry="2" />
<text  x="989.24" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (111 samples, 0.01%)</title><rect x="902.1" y="325" width="0.1" height="15.0" fill="rgb(240,37,35)" rx="2" ry="2" />
<text  x="905.07" y="335.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl str&gt;::to_lowercase (746 samples, 0.10%)</title><rect x="205.8" y="325" width="1.1" height="15.0" fill="rgb(243,45,35)" rx="2" ry="2" />
<text  x="208.75" y="335.5" ></text>
</g>
<g >
<title>malloc (73 samples, 0.01%)</title><rect x="1041.1" y="277" width="0.1" height="15.0" fill="rgb(226,123,20)" rx="2" ry="2" />
<text  x="1044.13" y="287.5" ></text>
</g>
<g >
<title>syscall_exit_work (569 samples, 0.07%)</title><rect x="147.4" y="261" width="0.9" height="15.0" fill="rgb(233,67,15)" rx="2" ry="2" />
<text  x="150.43" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (163 samples, 0.02%)</title><rect x="1040.9" y="277" width="0.2" height="15.0" fill="rgb(217,189,15)" rx="2" ry="2" />
<text  x="1043.88" y="287.5" ></text>
</g>
<g >
<title>malloc (96 samples, 0.01%)</title><rect x="420.9" y="213" width="0.2" height="15.0" fill="rgb(211,173,8)" rx="2" ry="2" />
<text  x="423.92" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_id_table::WordIdTable::get (76 samples, 0.01%)</title><rect x="1060.8" y="293" width="0.1" height="15.0" fill="rgb(239,9,38)" rx="2" ry="2" />
<text  x="1063.81" y="303.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (17,810 samples, 2.28%)</title><rect x="1010.0" y="245" width="27.0" height="15.0" fill="rgb(234,104,39)" rx="2" ry="2" />
<text  x="1013.03" y="255.5" >r..</text>
</g>
<g >
<title>malloc (1,070 samples, 0.14%)</title><rect x="877.1" y="229" width="1.7" height="15.0" fill="rgb(206,209,35)" rx="2" ry="2" />
<text  x="880.15" y="239.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (123 samples, 0.02%)</title><rect x="250.1" y="213" width="0.1" height="15.0" fill="rgb(215,124,30)" rx="2" ry="2" />
<text  x="253.06" y="223.5" ></text>
</g>
<g >
<title>sudachi::morpheme::Morpheme::pos (391 samples, 0.05%)</title><rect x="1069.3" y="341" width="0.6" height="15.0" fill="rgb(218,164,47)" rx="2" ry="2" />
<text  x="1072.26" y="351.5" ></text>
</g>
<g >
<title>__brk (131 samples, 0.02%)</title><rect x="13.8" y="405" width="0.2" height="15.0" fill="rgb(242,134,26)" rx="2" ry="2" />
<text  x="16.81" y="415.5" ></text>
</g>
<g >
<title>malloc (370 samples, 0.05%)</title><rect x="902.4" y="325" width="0.5" height="15.0" fill="rgb(243,215,28)" rx="2" ry="2" />
<text  x="905.38" y="335.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,102 samples, 0.14%)</title><rect x="239.5" y="245" width="1.6" height="15.0" fill="rgb(247,200,16)" rx="2" ry="2" />
<text  x="242.45" y="255.5" ></text>
</g>
<g >
<title>unmap_region (122 samples, 0.02%)</title><rect x="1083.2" y="325" width="0.2" height="15.0" fill="rgb(227,115,30)" rx="2" ry="2" />
<text  x="1086.21" y="335.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (75 samples, 0.01%)</title><rect x="185.7" y="325" width="0.1" height="15.0" fill="rgb(245,93,44)" rx="2" ry="2" />
<text  x="188.70" y="335.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (427 samples, 0.05%)</title><rect x="269.2" y="229" width="0.7" height="15.0" fill="rgb(241,7,24)" rx="2" ry="2" />
<text  x="272.25" y="239.5" ></text>
</g>
<g >
<title>ksys_read (765 samples, 0.10%)</title><rect x="1070.3" y="277" width="1.2" height="15.0" fill="rgb(210,77,0)" rx="2" ry="2" />
<text  x="1073.30" y="287.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1,409 samples, 0.18%)</title><rect x="1137.3" y="405" width="2.1" height="15.0" fill="rgb(232,143,51)" rx="2" ry="2" />
<text  x="1140.25" y="415.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8 (517 samples, 0.07%)</title><rect x="1140.5" y="421" width="0.8" height="15.0" fill="rgb(240,169,15)" rx="2" ry="2" />
<text  x="1143.52" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,736 samples, 0.22%)</title><rect x="146.2" y="309" width="2.6" height="15.0" fill="rgb(219,216,12)" rx="2" ry="2" />
<text  x="149.16" y="319.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (740 samples, 0.09%)</title><rect x="888.9" y="213" width="1.2" height="15.0" fill="rgb(243,25,22)" rx="2" ry="2" />
<text  x="891.93" y="223.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_char_category_types_range (77 samples, 0.01%)</title><rect x="451.7" y="261" width="0.1" height="15.0" fill="rgb(244,179,44)" rx="2" ry="2" />
<text  x="454.66" y="271.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::backtrack (188 samples, 0.02%)</title><rect x="962.5" y="213" width="0.3" height="15.0" fill="rgb(242,150,26)" rx="2" ry="2" />
<text  x="965.49" y="223.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (161 samples, 0.02%)</title><rect x="1060.5" y="261" width="0.3" height="15.0" fill="rgb(223,194,52)" rx="2" ry="2" />
<text  x="1063.52" y="271.5" ></text>
</g>
<g >
<title>malloc (190 samples, 0.02%)</title><rect x="436.7" y="197" width="0.3" height="15.0" fill="rgb(254,42,24)" rx="2" ry="2" />
<text  x="439.70" y="207.5" ></text>
</g>
<g >
<title>sudachi::lattice::Lattice::new (2,621 samples, 0.34%)</title><rect x="850.3" y="261" width="3.9" height="15.0" fill="rgb(222,46,5)" rx="2" ry="2" />
<text  x="853.28" y="271.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_fully_decomposed (569 samples, 0.07%)</title><rect x="166.4" y="277" width="0.8" height="15.0" fill="rgb(213,165,0)" rx="2" ry="2" />
<text  x="169.39" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::static_empty (90 samples, 0.01%)</title><rect x="902.2" y="325" width="0.2" height="15.0" fill="rgb(213,117,34)" rx="2" ry="2" />
<text  x="905.24" y="335.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (146 samples, 0.02%)</title><rect x="928.2" y="309" width="0.2" height="15.0" fill="rgb(226,216,21)" rx="2" ry="2" />
<text  x="931.15" y="319.5" ></text>
</g>
<g >
<title>&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (49,457 samples, 6.34%)</title><rect x="962.9" y="309" width="74.8" height="15.0" fill="rgb(246,103,9)" rx="2" ry="2" />
<text  x="965.94" y="319.5" >&lt;fancy_r..</text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (20,349 samples, 2.61%)</title><rect x="276.2" y="261" width="30.8" height="15.0" fill="rgb(239,58,32)" rx="2" ry="2" />
<text  x="279.21" y="271.5" >__..</text>
</g>
<g >
<title>nom::number::complete::le_u32 (110 samples, 0.01%)</title><rect x="404.5" y="229" width="0.2" height="15.0" fill="rgb(239,59,20)" rx="2" ry="2" />
<text  x="407.49" y="239.5" ></text>
</g>
<g >
<title>__rust_dealloc (241 samples, 0.03%)</title><rect x="307.5" y="261" width="0.3" height="15.0" fill="rgb(241,18,19)" rx="2" ry="2" />
<text  x="310.45" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (68 samples, 0.01%)</title><rect x="822.6" y="117" width="0.1" height="15.0" fill="rgb(209,44,17)" rx="2" ry="2" />
<text  x="825.60" y="127.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (108 samples, 0.01%)</title><rect x="185.5" y="325" width="0.1" height="15.0" fill="rgb(213,20,33)" rx="2" ry="2" />
<text  x="188.46" y="335.5" ></text>
</g>
<g >
<title>&lt;simple_oov::SimpleOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (101 samples, 0.01%)</title><rect x="275.8" y="261" width="0.2" height="15.0" fill="rgb(209,33,50)" rx="2" ry="2" />
<text  x="278.81" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (588 samples, 0.08%)</title><rect x="250.6" y="197" width="0.9" height="15.0" fill="rgb(217,13,48)" rx="2" ry="2" />
<text  x="253.59" y="207.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (671 samples, 0.09%)</title><rect x="965.3" y="277" width="1.0" height="15.0" fill="rgb(253,105,15)" rx="2" ry="2" />
<text  x="968.32" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (157 samples, 0.02%)</title><rect x="307.8" y="261" width="0.3" height="15.0" fill="rgb(254,180,49)" rx="2" ry="2" />
<text  x="310.82" y="271.5" ></text>
</g>
<g >
<title>alloc_perturb (266 samples, 0.03%)</title><rect x="122.3" y="405" width="0.4" height="15.0" fill="rgb(233,78,28)" rx="2" ry="2" />
<text  x="125.35" y="415.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,992 samples, 0.26%)</title><rect x="882.6" y="213" width="3.0" height="15.0" fill="rgb(246,152,25)" rx="2" ry="2" />
<text  x="885.56" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (220 samples, 0.03%)</title><rect x="959.0" y="293" width="0.4" height="15.0" fill="rgb(206,219,24)" rx="2" ry="2" />
<text  x="962.05" y="303.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::code_point_count (133 samples, 0.02%)</title><rect x="451.5" y="261" width="0.2" height="15.0" fill="rgb(213,184,10)" rx="2" ry="2" />
<text  x="454.46" y="271.5" ></text>
</g>
<g >
<title>unmap_vmas (108 samples, 0.01%)</title><rect x="1083.2" y="309" width="0.2" height="15.0" fill="rgb(208,48,37)" rx="2" ry="2" />
<text  x="1086.23" y="319.5" ></text>
</g>
<g >
<title>__rdl_alloc (277 samples, 0.04%)</title><rect x="396.9" y="213" width="0.4" height="15.0" fill="rgb(253,51,46)" rx="2" ry="2" />
<text  x="399.86" y="223.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,349 samples, 0.30%)</title><rect x="1056.7" y="261" width="3.6" height="15.0" fill="rgb(246,148,53)" rx="2" ry="2" />
<text  x="1059.71" y="271.5" ></text>
</g>
<g >
<title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,175 samples, 0.15%)</title><rect x="144.1" y="341" width="1.7" height="15.0" fill="rgb(232,36,45)" rx="2" ry="2" />
<text  x="147.07" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (252 samples, 0.03%)</title><rect x="150.1" y="325" width="0.4" height="15.0" fill="rgb(211,20,44)" rx="2" ry="2" />
<text  x="153.13" y="335.5" ></text>
</g>
<g >
<title>[unknown] (109 samples, 0.01%)</title><rect x="11.6" y="341" width="0.1" height="15.0" fill="rgb(224,174,33)" rx="2" ry="2" />
<text  x="14.55" y="351.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (345 samples, 0.04%)</title><rect x="201.7" y="293" width="0.6" height="15.0" fill="rgb(216,120,45)" rx="2" ry="2" />
<text  x="204.74" y="303.5" ></text>
</g>
<g >
<title>sudachi::tokenizer::dictionary_bytes_from_path (771 samples, 0.10%)</title><rect x="1070.3" y="341" width="1.2" height="15.0" fill="rgb(233,158,51)" rx="2" ry="2" />
<text  x="1073.30" y="351.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::PathRewritePlugin::concatenate (567 samples, 0.07%)</title><rect x="258.1" y="229" width="0.9" height="15.0" fill="rgb(218,137,4)" rx="2" ry="2" />
<text  x="261.13" y="239.5" ></text>
</g>
<g >
<title>malloc (17,838 samples, 2.29%)</title><rect x="1141.3" y="421" width="27.0" height="15.0" fill="rgb(223,74,21)" rx="2" ry="2" />
<text  x="1144.32" y="431.5" >m..</text>
</g>
<g >
<title>__rust_realloc (67 samples, 0.01%)</title><rect x="469.2" y="229" width="0.1" height="15.0" fill="rgb(238,128,14)" rx="2" ry="2" />
<text  x="472.15" y="239.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (18,298 samples, 2.34%)</title><rect x="337.0" y="245" width="27.7" height="15.0" fill="rgb(249,163,47)" rx="2" ry="2" />
<text  x="339.99" y="255.5" >s..</text>
</g>
<g >
<title>sudachi::dic::lexicon::word_id_table::WordIdTable::get (104 samples, 0.01%)</title><rect x="451.3" y="245" width="0.2" height="15.0" fill="rgb(230,186,13)" rx="2" ry="2" />
<text  x="454.30" y="255.5" ></text>
</g>
<g >
<title>kfree (93 samples, 0.01%)</title><rect x="147.9" y="229" width="0.1" height="15.0" fill="rgb(206,74,37)" rx="2" ry="2" />
<text  x="150.86" y="239.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,815 samples, 0.23%)</title><rect x="206.9" y="325" width="2.7" height="15.0" fill="rgb(243,216,16)" rx="2" ry="2" />
<text  x="209.88" y="335.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::new (120 samples, 0.02%)</title><rect x="265.2" y="229" width="0.2" height="15.0" fill="rgb(248,200,11)" rx="2" ry="2" />
<text  x="268.19" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (72 samples, 0.01%)</title><rect x="964.4" y="277" width="0.1" height="15.0" fill="rgb(222,4,22)" rx="2" ry="2" />
<text  x="967.41" y="287.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (956 samples, 0.12%)</title><rect x="321.4" y="229" width="1.4" height="15.0" fill="rgb(248,54,47)" rx="2" ry="2" />
<text  x="324.40" y="239.5" ></text>
</g>
<g >
<title>malloc (185 samples, 0.02%)</title><rect x="379.7" y="245" width="0.3" height="15.0" fill="rgb(227,97,20)" rx="2" ry="2" />
<text  x="382.72" y="255.5" ></text>
</g>
<g >
<title>__rust_alloc (83 samples, 0.01%)</title><rect x="204.9" y="325" width="0.1" height="15.0" fill="rgb(233,156,45)" rx="2" ry="2" />
<text  x="207.92" y="335.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text_builder::Utf8InputTextBuilder::build (25,042 samples, 3.21%)</title><rect x="907.4" y="325" width="37.9" height="15.0" fill="rgb(207,164,11)" rx="2" ry="2" />
<text  x="910.39" y="335.5" >sud..</text>
</g>
<g >
<title>hashbrown::map::make_hash (262 samples, 0.03%)</title><rect x="452.5" y="229" width="0.4" height="15.0" fill="rgb(245,175,47)" rx="2" ry="2" />
<text  x="455.53" y="239.5" ></text>
</g>
<g >
<title>&lt;sudachi::tokenizer::Tokenizer as sudachi::tokenizer::Tokenize&gt;::tokenize_sentences (602,758 samples, 77.25%)</title><rect x="149.4" y="341" width="911.5" height="15.0" fill="rgb(217,113,36)" rx="2" ry="2" />
<text  x="152.42" y="351.5" >&lt;sudachi::tokenizer::Tokenizer as sudachi::tokenizer::Tokenize&gt;::tokenize_sentences</text>
</g>
<g >
<title>mecab_oov::MeCabOovPlugin::get_oov_node (6,207 samples, 0.80%)</title><rect x="878.8" y="229" width="9.4" height="15.0" fill="rgb(237,107,3)" rx="2" ry="2" />
<text  x="881.77" y="239.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (76 samples, 0.01%)</title><rect x="898.0" y="309" width="0.1" height="15.0" fill="rgb(254,90,37)" rx="2" ry="2" />
<text  x="901.03" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (234 samples, 0.03%)</title><rect x="327.5" y="261" width="0.3" height="15.0" fill="rgb(214,47,18)" rx="2" ry="2" />
<text  x="330.47" y="271.5" ></text>
</g>
<g >
<title>realloc (147 samples, 0.02%)</title><rect x="421.1" y="213" width="0.2" height="15.0" fill="rgb(221,105,8)" rx="2" ry="2" />
<text  x="424.07" y="223.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (458 samples, 0.06%)</title><rect x="868.9" y="229" width="0.7" height="15.0" fill="rgb(253,8,44)" rx="2" ry="2" />
<text  x="871.86" y="239.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::conversions::to_lower (1,757 samples, 0.23%)</title><rect x="898.8" y="325" width="2.7" height="15.0" fill="rgb(208,28,2)" rx="2" ry="2" />
<text  x="901.83" y="335.5" ></text>
</g>
<g >
<title>__rdl_realloc (143 samples, 0.02%)</title><rect x="876.1" y="213" width="0.2" height="15.0" fill="rgb(235,47,32)" rx="2" ry="2" />
<text  x="879.10" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (84 samples, 0.01%)</title><rect x="374.2" y="261" width="0.1" height="15.0" fill="rgb(242,175,24)" rx="2" ry="2" />
<text  x="377.18" y="271.5" ></text>
</g>
<g >
<title>malloc (80 samples, 0.01%)</title><rect x="275.5" y="229" width="0.1" height="15.0" fill="rgb(208,171,34)" rx="2" ry="2" />
<text  x="278.48" y="239.5" ></text>
</g>
<g >
<title>malloc (220 samples, 0.03%)</title><rect x="471.1" y="229" width="0.3" height="15.0" fill="rgb(254,130,27)" rx="2" ry="2" />
<text  x="474.11" y="239.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (2,118 samples, 0.27%)</title><rect x="893.1" y="245" width="3.2" height="15.0" fill="rgb(247,97,11)" rx="2" ry="2" />
<text  x="896.12" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (301 samples, 0.04%)</title><rect x="274.9" y="181" width="0.4" height="15.0" fill="rgb(248,157,51)" rx="2" ry="2" />
<text  x="277.89" y="191.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup (25,580 samples, 3.28%)</title><rect x="412.5" y="245" width="38.7" height="15.0" fill="rgb(221,146,14)" rx="2" ry="2" />
<text  x="415.53" y="255.5" >sud..</text>
</g>
<g >
<title>malloc (79 samples, 0.01%)</title><rect x="944.7" y="261" width="0.1" height="15.0" fill="rgb(248,168,24)" rx="2" ry="2" />
<text  x="947.69" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_id_table::WordIdTable::get (6,786 samples, 0.87%)</title><rect x="441.0" y="229" width="10.2" height="15.0" fill="rgb(219,25,0)" rx="2" ry="2" />
<text  x="443.96" y="239.5" ></text>
</g>
<g >
<title>__rust_dealloc (371 samples, 0.05%)</title><rect x="205.1" y="325" width="0.5" height="15.0" fill="rgb(243,83,4)" rx="2" ry="2" />
<text  x="208.06" y="335.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (713 samples, 0.09%)</title><rect x="924.2" y="277" width="1.0" height="15.0" fill="rgb(216,20,29)" rx="2" ry="2" />
<text  x="927.16" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (49,169 samples, 6.30%)</title><rect x="47.0" y="405" width="74.3" height="15.0" fill="rgb(240,12,45)" rx="2" ry="2" />
<text  x="49.99" y="415.5" >_int_mal..</text>
</g>
<g >
<title>&lt;mecab_oov::MeCabOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (23,177 samples, 2.97%)</title><rect x="857.3" y="245" width="35.0" height="15.0" fill="rgb(228,103,36)" rx="2" ry="2" />
<text  x="860.28" y="255.5" >&lt;m..</text>
</g>
<g >
<title>sudachi::lattice::node::Node::new_oov (210 samples, 0.03%)</title><rect x="892.0" y="229" width="0.3" height="15.0" fill="rgb(242,34,16)" rx="2" ry="2" />
<text  x="895.02" y="239.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (147 samples, 0.02%)</title><rect x="269.0" y="229" width="0.2" height="15.0" fill="rgb(208,99,9)" rx="2" ry="2" />
<text  x="272.02" y="239.5" ></text>
</g>
<g >
<title>__rdl_alloc (130 samples, 0.02%)</title><rect x="468.2" y="229" width="0.2" height="15.0" fill="rgb(207,94,21)" rx="2" ry="2" />
<text  x="471.15" y="239.5" ></text>
</g>
<g >
<title>__rust_dealloc (166 samples, 0.02%)</title><rect x="397.5" y="213" width="0.2" height="15.0" fill="rgb(222,160,30)" rx="2" ry="2" />
<text  x="400.45" y="223.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (421 samples, 0.05%)</title><rect x="896.6" y="245" width="0.7" height="15.0" fill="rgb(210,217,40)" rx="2" ry="2" />
<text  x="899.62" y="255.5" ></text>
</g>
<g >
<title>__rdl_alloc (260 samples, 0.03%)</title><rect x="316.3" y="213" width="0.4" height="15.0" fill="rgb(254,22,52)" rx="2" ry="2" />
<text  x="319.28" y="223.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (667 samples, 0.09%)</title><rect x="147.3" y="277" width="1.0" height="15.0" fill="rgb(231,21,29)" rx="2" ry="2" />
<text  x="150.28" y="287.5" ></text>
</g>
<g >
<title>alloc_pages_vma (163 samples, 0.02%)</title><rect x="1071.0" y="101" width="0.2" height="15.0" fill="rgb(213,158,8)" rx="2" ry="2" />
<text  x="1073.99" y="111.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 samples, 0.02%)</title><rect x="187.4" y="293" width="0.3" height="15.0" fill="rgb(228,209,5)" rx="2" ry="2" />
<text  x="190.43" y="303.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (452 samples, 0.06%)</title><rect x="202.9" y="325" width="0.7" height="15.0" fill="rgb(252,170,4)" rx="2" ry="2" />
<text  x="205.93" y="335.5" ></text>
</g>
<g >
<title>realloc (85 samples, 0.01%)</title><rect x="11.7" y="341" width="0.2" height="15.0" fill="rgb(226,171,10)" rx="2" ry="2" />
<text  x="14.74" y="351.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (2,425 samples, 0.31%)</title><rect x="210.7" y="277" width="3.6" height="15.0" fill="rgb(253,57,47)" rx="2" ry="2" />
<text  x="213.66" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (523 samples, 0.07%)</title><rect x="248.9" y="229" width="0.8" height="15.0" fill="rgb(229,129,18)" rx="2" ry="2" />
<text  x="251.88" y="239.5" ></text>
</g>
<g >
<title>&lt;str as core::fmt::Display&gt;::fmt (245 samples, 0.03%)</title><rect x="11.0" y="421" width="0.4" height="15.0" fill="rgb(208,145,28)" rx="2" ry="2" />
<text  x="14.04" y="431.5" ></text>
</g>
<g >
<title>__libc_read (73 samples, 0.01%)</title><rect x="144.4" y="293" width="0.1" height="15.0" fill="rgb(212,190,2)" rx="2" ry="2" />
<text  x="147.36" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,115 samples, 0.14%)</title><rect x="1043.8" y="277" width="1.7" height="15.0" fill="rgb(222,197,10)" rx="2" ry="2" />
<text  x="1046.78" y="287.5" ></text>
</g>
</g>
</svg>
