<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (984 samples, 0.21%)</title><rect x="477.8" y="389" width="2.5" height="15.0" fill="rgb(231,214,25)" rx="2" ry="2" />
<text  x="480.76" y="399.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (1,375 samples, 0.30%)</title><rect x="1154.5" y="357" width="3.5" height="15.0" fill="rgb(209,139,3)" rx="2" ry="2" />
<text  x="1157.48" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (643 samples, 0.14%)</title><rect x="1065.3" y="405" width="1.6" height="15.0" fill="rgb(232,23,18)" rx="2" ry="2" />
<text  x="1068.30" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_free (2,023 samples, 0.44%)</title><rect x="340.6" y="277" width="5.2" height="15.0" fill="rgb(215,36,54)" rx="2" ry="2" />
<text  x="343.63" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (462 samples, 0.10%)</title><rect x="311.9" y="165" width="1.2" height="15.0" fill="rgb(205,109,39)" rx="2" ry="2" />
<text  x="314.88" y="175.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (132 samples, 0.03%)</title><rect x="1158.3" y="325" width="0.3" height="15.0" fill="rgb(240,107,4)" rx="2" ry="2" />
<text  x="1161.26" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::word_id_to_offset (1,659 samples, 0.36%)</title><rect x="314.7" y="405" width="4.2" height="15.0" fill="rgb(252,190,36)" rx="2" ry="2" />
<text  x="317.66" y="415.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::refresh_chars (477 samples, 0.10%)</title><rect x="1123.4" y="437" width="1.2" height="15.0" fill="rgb(238,204,19)" rx="2" ry="2" />
<text  x="1126.43" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::common_prefix_iterator (240 samples, 0.05%)</title><rect x="480.9" y="309" width="0.7" height="15.0" fill="rgb(240,46,20)" rx="2" ry="2" />
<text  x="483.95" y="319.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (474 samples, 0.10%)</title><rect x="1098.9" y="373" width="1.2" height="15.0" fill="rgb(205,54,6)" rx="2" ry="2" />
<text  x="1101.91" y="383.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (355 samples, 0.08%)</title><rect x="37.3" y="501" width="0.9" height="15.0" fill="rgb(227,139,8)" rx="2" ry="2" />
<text  x="40.30" y="511.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (414 samples, 0.09%)</title><rect x="1165.7" y="405" width="1.0" height="15.0" fill="rgb(253,190,25)" rx="2" ry="2" />
<text  x="1168.68" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (3,759 samples, 0.81%)</title><rect x="1175.0" y="421" width="9.6" height="15.0" fill="rgb(248,65,26)" rx="2" ry="2" />
<text  x="1177.99" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (393 samples, 0.08%)</title><rect x="299.8" y="341" width="1.0" height="15.0" fill="rgb(213,98,5)" rx="2" ry="2" />
<text  x="302.83" y="351.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::captures_from_pos (3,064 samples, 0.66%)</title><rect x="222.8" y="421" width="7.8" height="15.0" fill="rgb(225,93,15)" rx="2" ry="2" />
<text  x="225.82" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::capacity (325 samples, 0.07%)</title><rect x="80.9" y="421" width="0.9" height="15.0" fill="rgb(216,57,34)" rx="2" ry="2" />
<text  x="83.93" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (127 samples, 0.03%)</title><rect x="485.3" y="421" width="0.4" height="15.0" fill="rgb(225,10,49)" rx="2" ry="2" />
<text  x="488.35" y="431.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (861 samples, 0.19%)</title><rect x="309.0" y="149" width="2.2" height="15.0" fill="rgb(220,124,15)" rx="2" ry="2" />
<text  x="311.99" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (404 samples, 0.09%)</title><rect x="245.4" y="341" width="1.0" height="15.0" fill="rgb(248,110,14)" rx="2" ry="2" />
<text  x="248.41" y="351.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (211 samples, 0.05%)</title><rect x="329.6" y="181" width="0.5" height="15.0" fill="rgb(252,224,27)" rx="2" ry="2" />
<text  x="332.59" y="191.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (166 samples, 0.04%)</title><rect x="1066.5" y="229" width="0.4" height="15.0" fill="rgb(232,22,34)" rx="2" ry="2" />
<text  x="1069.52" y="239.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,748 samples, 0.38%)</title><rect x="1111.4" y="357" width="4.4" height="15.0" fill="rgb(240,126,17)" rx="2" ry="2" />
<text  x="1114.38" y="367.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,657 samples, 0.57%)</title><rect x="399.9" y="245" width="6.8" height="15.0" fill="rgb(242,42,52)" rx="2" ry="2" />
<text  x="402.90" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (150 samples, 0.03%)</title><rect x="231.1" y="453" width="0.4" height="15.0" fill="rgb(239,126,42)" rx="2" ry="2" />
<text  x="234.13" y="463.5" ></text>
</g>
<g >
<title>_int_free (2,389 samples, 0.52%)</title><rect x="1177.5" y="261" width="6.1" height="15.0" fill="rgb(243,105,6)" rx="2" ry="2" />
<text  x="1180.49" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,892 samples, 0.84%)</title><rect x="358.5" y="197" width="9.9" height="15.0" fill="rgb(246,132,10)" rx="2" ry="2" />
<text  x="361.45" y="207.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (317 samples, 0.07%)</title><rect x="1065.3" y="277" width="0.8" height="15.0" fill="rgb(211,80,20)" rx="2" ry="2" />
<text  x="1068.30" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (809 samples, 0.17%)</title><rect x="27.1" y="501" width="2.1" height="15.0" fill="rgb(249,175,41)" rx="2" ry="2" />
<text  x="30.10" y="511.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (882 samples, 0.19%)</title><rect x="238.1" y="405" width="2.2" height="15.0" fill="rgb(254,18,0)" rx="2" ry="2" />
<text  x="241.06" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (315 samples, 0.07%)</title><rect x="148.8" y="245" width="0.8" height="15.0" fill="rgb(243,41,8)" rx="2" ry="2" />
<text  x="151.78" y="255.5" ></text>
</g>
<g >
<title>core::mem::drop (176 samples, 0.04%)</title><rect x="246.7" y="373" width="0.4" height="15.0" fill="rgb(245,4,49)" rx="2" ry="2" />
<text  x="249.66" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::label (342 samples, 0.07%)</title><rect x="434.1" y="325" width="0.9" height="15.0" fill="rgb(210,112,35)" rx="2" ry="2" />
<text  x="437.08" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1,076 samples, 0.23%)</title><rect x="66.9" y="501" width="2.8" height="15.0" fill="rgb(226,143,16)" rx="2" ry="2" />
<text  x="69.92" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (128 samples, 0.03%)</title><rect x="505.4" y="389" width="0.3" height="15.0" fill="rgb(222,134,40)" rx="2" ry="2" />
<text  x="508.42" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (769 samples, 0.17%)</title><rect x="242.0" y="389" width="2.0" height="15.0" fill="rgb(229,41,32)" rx="2" ry="2" />
<text  x="245.00" y="399.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::captures_read_at (2,655 samples, 0.57%)</title><rect x="223.9" y="405" width="6.7" height="15.0" fill="rgb(214,69,9)" rx="2" ry="2" />
<text  x="226.86" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4,898 samples, 1.06%)</title><rect x="357.6" y="229" width="12.5" height="15.0" fill="rgb(243,216,35)" rx="2" ry="2" />
<text  x="360.64" y="239.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::stack_push (3,652 samples, 0.79%)</title><rect x="146.8" y="405" width="9.3" height="15.0" fill="rgb(221,109,16)" rx="2" ry="2" />
<text  x="149.76" y="415.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (213 samples, 0.05%)</title><rect x="1189.2" y="389" width="0.6" height="15.0" fill="rgb(230,24,53)" rx="2" ry="2" />
<text  x="1192.24" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (208 samples, 0.04%)</title><rect x="149.1" y="213" width="0.5" height="15.0" fill="rgb(248,31,43)" rx="2" ry="2" />
<text  x="152.05" y="223.5" ></text>
</g>
<g >
<title>_int_malloc (1,253 samples, 0.27%)</title><rect x="59.4" y="501" width="3.2" height="15.0" fill="rgb(229,165,19)" rx="2" ry="2" />
<text  x="62.35" y="511.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (119 samples, 0.03%)</title><rect x="1115.5" y="261" width="0.3" height="15.0" fill="rgb(212,204,46)" rx="2" ry="2" />
<text  x="1118.54" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new (1,279 samples, 0.28%)</title><rect x="1036.4" y="453" width="3.2" height="15.0" fill="rgb(234,34,14)" rx="2" ry="2" />
<text  x="1039.37" y="463.5" ></text>
</g>
<g >
<title>&lt;sudachi::output::Simple as sudachi::output::SudachiOutput&lt;T&gt;&gt;::write (142 samples, 0.03%)</title><rect x="88.7" y="453" width="0.4" height="15.0" fill="rgb(235,25,22)" rx="2" ry="2" />
<text  x="91.69" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,218 samples, 0.26%)</title><rect x="277.2" y="405" width="3.1" height="15.0" fill="rgb(221,117,35)" rx="2" ry="2" />
<text  x="280.19" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,638 samples, 0.35%)</title><rect x="215.5" y="229" width="4.2" height="15.0" fill="rgb(211,33,12)" rx="2" ry="2" />
<text  x="218.49" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (2,358 samples, 0.51%)</title><rect x="1002.4" y="341" width="6.0" height="15.0" fill="rgb(248,147,51)" rx="2" ry="2" />
<text  x="1005.39" y="351.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::earliest_find_at (557 samples, 0.12%)</title><rect x="1132.2" y="325" width="1.4" height="15.0" fill="rgb(245,189,40)" rx="2" ry="2" />
<text  x="1135.21" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (249 samples, 0.05%)</title><rect x="1060.6" y="293" width="0.6" height="15.0" fill="rgb(208,152,44)" rx="2" ry="2" />
<text  x="1063.58" y="303.5" ></text>
</g>
<g >
<title>regex::pool::Pool&lt;T&gt;::get (806 samples, 0.17%)</title><rect x="212.7" y="325" width="2.0" height="15.0" fill="rgb(249,146,27)" rx="2" ry="2" />
<text  x="215.66" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (8,992 samples, 1.94%)</title><rect x="787.7" y="277" width="22.9" height="15.0" fill="rgb(243,125,33)" rx="2" ry="2" />
<text  x="790.66" y="287.5" >c..</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,438 samples, 0.53%)</title><rect x="1071.7" y="325" width="6.3" height="15.0" fill="rgb(208,204,37)" rx="2" ry="2" />
<text  x="1074.75" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt;&gt; (7,754 samples, 1.68%)</title><rect x="251.3" y="453" width="19.8" height="15.0" fill="rgb(210,174,5)" rx="2" ry="2" />
<text  x="254.33" y="463.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (324 samples, 0.07%)</title><rect x="1078.2" y="277" width="0.9" height="15.0" fill="rgb(209,222,25)" rx="2" ry="2" />
<text  x="1081.24" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::word_info_parser (37,186 samples, 8.04%)</title><rect x="318.9" y="405" width="94.8" height="15.0" fill="rgb(227,80,26)" rx="2" ry="2" />
<text  x="321.90" y="415.5" >sudachi::di..</text>
</g>
<g >
<title>alloc::alloc::realloc (1,215 samples, 0.26%)</title><rect x="215.9" y="101" width="3.1" height="15.0" fill="rgb(242,36,44)" rx="2" ry="2" />
<text  x="218.91" y="111.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (156 samples, 0.03%)</title><rect x="575.9" y="277" width="0.4" height="15.0" fill="rgb(226,96,15)" rx="2" ry="2" />
<text  x="578.93" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::lexicon::word_id_table::WordIdIter as core::iter::traits::iterator::Iterator&gt;::next (890 samples, 0.19%)</title><rect x="477.8" y="373" width="2.2" height="15.0" fill="rgb(222,226,2)" rx="2" ry="2" />
<text  x="480.76" y="383.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,263 samples, 0.71%)</title><rect x="1103.1" y="357" width="8.3" height="15.0" fill="rgb(254,199,43)" rx="2" ry="2" />
<text  x="1106.06" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (207 samples, 0.04%)</title><rect x="598.1" y="373" width="0.5" height="15.0" fill="rgb(249,18,11)" rx="2" ry="2" />
<text  x="601.10" y="383.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (368 samples, 0.08%)</title><rect x="65.0" y="501" width="1.0" height="15.0" fill="rgb(208,227,40)" rx="2" ry="2" />
<text  x="68.01" y="511.5" ></text>
</g>
<g >
<title>_int_free (1,958 samples, 0.42%)</title><rect x="557.1" y="261" width="5.0" height="15.0" fill="rgb(218,179,50)" rx="2" ry="2" />
<text  x="560.10" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free (1,632 samples, 0.35%)</title><rect x="258.6" y="213" width="4.1" height="15.0" fill="rgb(246,135,10)" rx="2" ry="2" />
<text  x="261.59" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (896 samples, 0.19%)</title><rect x="238.0" y="421" width="2.3" height="15.0" fill="rgb(237,27,5)" rx="2" ry="2" />
<text  x="241.02" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_id (301 samples, 0.07%)</title><rect x="1087.8" y="421" width="0.8" height="15.0" fill="rgb(249,73,38)" rx="2" ry="2" />
<text  x="1090.82" y="431.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::fill_cat_continuity (658 samples, 0.14%)</title><rect x="1172.2" y="453" width="1.7" height="15.0" fill="rgb(253,153,15)" rx="2" ry="2" />
<text  x="1175.20" y="463.5" ></text>
</g>
<g >
<title>&lt;regex::pool::PoolGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (223 samples, 0.05%)</title><rect x="211.0" y="309" width="0.6" height="15.0" fill="rgb(224,181,39)" rx="2" ry="2" />
<text  x="214.01" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::word_info_parser (4,943 samples, 1.07%)</title><rect x="302.1" y="389" width="12.6" height="15.0" fill="rgb(241,199,41)" rx="2" ry="2" />
<text  x="305.06" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (979 samples, 0.21%)</title><rect x="133.7" y="389" width="2.5" height="15.0" fill="rgb(215,219,1)" rx="2" ry="2" />
<text  x="136.75" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (167 samples, 0.04%)</title><rect x="1173.9" y="453" width="0.4" height="15.0" fill="rgb(226,78,11)" rx="2" ry="2" />
<text  x="1176.90" y="463.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,430 samples, 0.53%)</title><rect x="215.5" y="373" width="6.2" height="15.0" fill="rgb(237,170,3)" rx="2" ry="2" />
<text  x="218.46" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;sudachi::analysis::node::Node&gt;&gt; (485 samples, 0.10%)</title><rect x="246.5" y="405" width="1.2" height="15.0" fill="rgb(251,180,47)" rx="2" ry="2" />
<text  x="249.50" y="415.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (120 samples, 0.03%)</title><rect x="301.4" y="389" width="0.3" height="15.0" fill="rgb(250,190,27)" rx="2" ry="2" />
<text  x="304.40" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (150 samples, 0.03%)</title><rect x="231.1" y="469" width="0.4" height="15.0" fill="rgb(253,89,46)" rx="2" ry="2" />
<text  x="234.13" y="479.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,970 samples, 0.86%)</title><rect x="321.5" y="325" width="10.1" height="15.0" fill="rgb(249,99,12)" rx="2" ry="2" />
<text  x="324.45" y="335.5" ></text>
</g>
<g >
<title>alloc::string::String::push (5,941 samples, 1.28%)</title><rect x="357.0" y="261" width="15.1" height="15.0" fill="rgb(243,57,40)" rx="2" ry="2" />
<text  x="359.99" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (1,950 samples, 0.42%)</title><rect x="1118.0" y="469" width="5.0" height="15.0" fill="rgb(215,180,5)" rx="2" ry="2" />
<text  x="1121.02" y="479.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (530 samples, 0.11%)</title><rect x="598.6" y="405" width="1.4" height="15.0" fill="rgb(214,79,48)" rx="2" ry="2" />
<text  x="601.63" y="415.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (381 samples, 0.08%)</title><rect x="213.7" y="309" width="1.0" height="15.0" fill="rgb(207,98,39)" rx="2" ry="2" />
<text  x="216.75" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (861 samples, 0.19%)</title><rect x="309.0" y="165" width="2.2" height="15.0" fill="rgb(244,225,35)" rx="2" ry="2" />
<text  x="311.99" y="175.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (148 samples, 0.03%)</title><rect x="170.6" y="309" width="0.4" height="15.0" fill="rgb(248,112,42)" rx="2" ry="2" />
<text  x="173.58" y="319.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (2,653 samples, 0.57%)</title><rect x="1002.4" y="357" width="6.8" height="15.0" fill="rgb(253,220,21)" rx="2" ry="2" />
<text  x="1005.39" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::lattice::Lattice&gt; (7,755 samples, 1.68%)</title><rect x="251.3" y="469" width="19.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="254.33" y="479.5" ></text>
</g>
<g >
<title>__rdl_alloc (126 samples, 0.03%)</title><rect x="330.1" y="213" width="0.4" height="15.0" fill="rgb(218,175,24)" rx="2" ry="2" />
<text  x="333.14" y="223.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (317 samples, 0.07%)</title><rect x="1065.3" y="309" width="0.8" height="15.0" fill="rgb(228,87,46)" rx="2" ry="2" />
<text  x="1068.30" y="319.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,900 samples, 0.41%)</title><rect x="655.8" y="421" width="4.9" height="15.0" fill="rgb(217,210,22)" rx="2" ry="2" />
<text  x="658.80" y="431.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (317 samples, 0.07%)</title><rect x="1065.3" y="261" width="0.8" height="15.0" fill="rgb(240,57,45)" rx="2" ry="2" />
<text  x="1068.30" y="271.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (1,668 samples, 0.36%)</title><rect x="1137.7" y="341" width="4.3" height="15.0" fill="rgb(238,59,39)" rx="2" ry="2" />
<text  x="1140.73" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (12,334 samples, 2.67%)</title><rect x="544.3" y="293" width="31.4" height="15.0" fill="rgb(253,44,24)" rx="2" ry="2" />
<text  x="547.28" y="303.5" >__..</text>
</g>
<g >
<title>unicode_normalization::perfect_hash::mph_lookup (471 samples, 0.10%)</title><rect x="1153.0" y="341" width="1.2" height="15.0" fill="rgb(217,198,16)" rx="2" ry="2" />
<text  x="1156.00" y="351.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (180 samples, 0.04%)</title><rect x="561.6" y="245" width="0.5" height="15.0" fill="rgb(218,151,43)" rx="2" ry="2" />
<text  x="564.64" y="255.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::fill_word_info (50,603 samples, 10.94%)</title><rect x="285.2" y="469" width="129.1" height="15.0" fill="rgb(232,4,2)" rx="2" ry="2" />
<text  x="288.23" y="479.5" >sudachi::analysi..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (326 samples, 0.07%)</title><rect x="148.8" y="277" width="0.8" height="15.0" fill="rgb(237,41,16)" rx="2" ry="2" />
<text  x="151.77" y="287.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::TeddySlim2Mask128::find_at (1,186 samples, 0.26%)</title><rect x="1160.2" y="197" width="3.1" height="15.0" fill="rgb(252,208,54)" rx="2" ry="2" />
<text  x="1163.24" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (477 samples, 0.10%)</title><rect x="307.0" y="117" width="1.3" height="15.0" fill="rgb(249,102,28)" rx="2" ry="2" />
<text  x="310.05" y="127.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (139 samples, 0.03%)</title><rect x="1162.2" y="101" width="0.4" height="15.0" fill="rgb(220,48,19)" rx="2" ry="2" />
<text  x="1165.22" y="111.5" ></text>
</g>
<g >
<title>__rdl_realloc (252 samples, 0.05%)</title><rect x="56.1" y="501" width="0.7" height="15.0" fill="rgb(207,131,3)" rx="2" ry="2" />
<text  x="59.12" y="511.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (547 samples, 0.12%)</title><rect x="285.9" y="437" width="1.4" height="15.0" fill="rgb(246,125,9)" rx="2" ry="2" />
<text  x="288.91" y="447.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (244 samples, 0.05%)</title><rect x="131.1" y="357" width="0.7" height="15.0" fill="rgb(222,146,34)" rx="2" ry="2" />
<text  x="134.14" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (489 samples, 0.11%)</title><rect x="311.8" y="245" width="1.3" height="15.0" fill="rgb(238,202,28)" rx="2" ry="2" />
<text  x="314.81" y="255.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (288 samples, 0.06%)</title><rect x="91.6" y="405" width="0.7" height="15.0" fill="rgb(237,140,52)" rx="2" ry="2" />
<text  x="94.59" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (181 samples, 0.04%)</title><rect x="125.2" y="373" width="0.5" height="15.0" fill="rgb(217,122,48)" rx="2" ry="2" />
<text  x="128.25" y="383.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (3,014 samples, 0.65%)</title><rect x="161.4" y="341" width="7.7" height="15.0" fill="rgb(239,196,39)" rx="2" ry="2" />
<text  x="164.40" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (142 samples, 0.03%)</title><rect x="135.0" y="373" width="0.3" height="15.0" fill="rgb(236,212,23)" rx="2" ry="2" />
<text  x="137.97" y="383.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (152 samples, 0.03%)</title><rect x="1110.0" y="181" width="0.4" height="15.0" fill="rgb(252,67,39)" rx="2" ry="2" />
<text  x="1113.01" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (569 samples, 0.12%)</title><rect x="115.8" y="373" width="1.5" height="15.0" fill="rgb(227,158,22)" rx="2" ry="2" />
<text  x="118.82" y="383.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (326 samples, 0.07%)</title><rect x="1066.1" y="357" width="0.8" height="15.0" fill="rgb(222,146,5)" rx="2" ry="2" />
<text  x="1069.11" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,550 samples, 0.34%)</title><rect x="1013.9" y="373" width="3.9" height="15.0" fill="rgb(239,89,42)" rx="2" ry="2" />
<text  x="1016.88" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1,944 samples, 0.42%)</title><rect x="277.1" y="453" width="4.9" height="15.0" fill="rgb(233,49,1)" rx="2" ry="2" />
<text  x="280.07" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6,186 samples, 1.34%)</title><rect x="1020.5" y="373" width="15.8" height="15.0" fill="rgb(209,26,31)" rx="2" ry="2" />
<text  x="1023.49" y="383.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (128 samples, 0.03%)</title><rect x="505.4" y="373" width="0.3" height="15.0" fill="rgb(220,80,43)" rx="2" ry="2" />
<text  x="508.42" y="383.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (123 samples, 0.03%)</title><rect x="330.1" y="197" width="0.4" height="15.0" fill="rgb(213,112,35)" rx="2" ry="2" />
<text  x="333.14" y="207.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (393 samples, 0.08%)</title><rect x="299.8" y="325" width="1.0" height="15.0" fill="rgb(253,15,42)" rx="2" ry="2" />
<text  x="302.83" y="335.5" ></text>
</g>
<g >
<title>_int_free (1,207 samples, 0.26%)</title><rect x="259.7" y="197" width="3.0" height="15.0" fill="rgb(216,127,19)" rx="2" ry="2" />
<text  x="262.66" y="207.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie_array_parser (269 samples, 0.06%)</title><rect x="1184.7" y="405" width="0.7" height="15.0" fill="rgb(207,184,15)" rx="2" ry="2" />
<text  x="1187.68" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,226 samples, 0.26%)</title><rect x="226.6" y="341" width="3.1" height="15.0" fill="rgb(244,209,48)" rx="2" ry="2" />
<text  x="229.56" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (391 samples, 0.08%)</title><rect x="201.7" y="277" width="1.0" height="15.0" fill="rgb(235,37,40)" rx="2" ry="2" />
<text  x="204.74" y="287.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find (4,517 samples, 0.98%)</title><rect x="159.4" y="405" width="11.6" height="15.0" fill="rgb(217,14,1)" rx="2" ry="2" />
<text  x="162.44" y="415.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::find_from_pos (47,703 samples, 10.31%)</title><rect x="93.1" y="437" width="121.6" height="15.0" fill="rgb(247,183,20)" rx="2" ry="2" />
<text  x="96.06" y="447.5" >fancy_regex::Re..</text>
</g>
<g >
<title>&lt;regex::re_unicode::Matches as core::iter::traits::iterator::Iterator&gt;::next (1,976 samples, 0.43%)</title><rect x="1159.0" y="389" width="5.0" height="15.0" fill="rgb(220,52,7)" rx="2" ry="2" />
<text  x="1161.95" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (32,993 samples, 7.13%)</title><rect x="739.3" y="309" width="84.1" height="15.0" fill="rgb(213,132,35)" rx="2" ry="2" />
<text  x="742.28" y="319.5" >&lt;core::ha..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8,339 samples, 1.80%)</title><rect x="750.1" y="293" width="21.3" height="15.0" fill="rgb(221,131,28)" rx="2" ry="2" />
<text  x="753.13" y="303.5" >&lt;..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (604 samples, 0.13%)</title><rect x="290.0" y="437" width="1.5" height="15.0" fill="rgb(215,154,29)" rx="2" ry="2" />
<text  x="292.96" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (880 samples, 0.19%)</title><rect x="277.3" y="357" width="2.3" height="15.0" fill="rgb(236,216,32)" rx="2" ry="2" />
<text  x="280.32" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::DictionaryLoader::read_system_dictionary (287 samples, 0.06%)</title><rect x="1184.6" y="453" width="0.8" height="15.0" fill="rgb(234,25,43)" rx="2" ry="2" />
<text  x="1187.63" y="463.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (402 samples, 0.09%)</title><rect x="330.6" y="293" width="1.0" height="15.0" fill="rgb(242,155,25)" rx="2" ry="2" />
<text  x="333.55" y="303.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (291 samples, 0.06%)</title><rect x="1084.7" y="261" width="0.7" height="15.0" fill="rgb(231,55,47)" rx="2" ry="2" />
<text  x="1087.71" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (360 samples, 0.08%)</title><rect x="307.2" y="53" width="0.9" height="15.0" fill="rgb(241,200,23)" rx="2" ry="2" />
<text  x="310.19" y="63.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (135 samples, 0.03%)</title><rect x="246.7" y="293" width="0.4" height="15.0" fill="rgb(208,224,44)" rx="2" ry="2" />
<text  x="249.74" y="303.5" ></text>
</g>
<g >
<title>&lt;sudachi::analysis::node::Node as core::clone::Clone&gt;::clone (1,959 samples, 0.42%)</title><rect x="272.0" y="453" width="5.0" height="15.0" fill="rgb(231,101,16)" rx="2" ry="2" />
<text  x="274.99" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (394 samples, 0.09%)</title><rect x="302.4" y="293" width="1.0" height="15.0" fill="rgb(228,75,50)" rx="2" ry="2" />
<text  x="305.37" y="303.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (138 samples, 0.03%)</title><rect x="220.9" y="277" width="0.3" height="15.0" fill="rgb(251,214,49)" rx="2" ry="2" />
<text  x="223.85" y="287.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (870 samples, 0.19%)</title><rect x="309.0" y="245" width="2.2" height="15.0" fill="rgb(224,104,49)" rx="2" ry="2" />
<text  x="311.96" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (239 samples, 0.05%)</title><rect x="302.7" y="181" width="0.6" height="15.0" fill="rgb(211,202,22)" rx="2" ry="2" />
<text  x="305.69" y="191.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::ok::{{closure}} (1,927 samples, 0.42%)</title><rect x="215.5" y="325" width="4.9" height="15.0" fill="rgb(238,214,47)" rx="2" ry="2" />
<text  x="218.47" y="335.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (257 samples, 0.06%)</title><rect x="346.0" y="277" width="0.7" height="15.0" fill="rgb(218,100,41)" rx="2" ry="2" />
<text  x="349.01" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (205 samples, 0.04%)</title><rect x="1184.1" y="373" width="0.5" height="15.0" fill="rgb(210,133,10)" rx="2" ry="2" />
<text  x="1187.05" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,227 samples, 0.27%)</title><rect x="1010.5" y="341" width="3.1" height="15.0" fill="rgb(218,58,10)" rx="2" ry="2" />
<text  x="1013.46" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (181 samples, 0.04%)</title><rect x="223.4" y="373" width="0.5" height="15.0" fill="rgb(245,181,21)" rx="2" ry="2" />
<text  x="226.40" y="383.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (22,780 samples, 4.92%)</title><rect x="944.3" y="325" width="58.1" height="15.0" fill="rgb(251,98,0)" rx="2" ry="2" />
<text  x="947.29" y="335.5" >&lt;F as ..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (301 samples, 0.07%)</title><rect x="214.0" y="229" width="0.7" height="15.0" fill="rgb(249,169,26)" rx="2" ry="2" />
<text  x="216.95" y="239.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (126 samples, 0.03%)</title><rect x="994.9" y="197" width="0.3" height="15.0" fill="rgb(217,151,18)" rx="2" ry="2" />
<text  x="997.88" y="207.5" ></text>
</g>
<g >
<title>core::ptr::write (644 samples, 0.14%)</title><rect x="280.4" y="437" width="1.6" height="15.0" fill="rgb(247,82,9)" rx="2" ry="2" />
<text  x="283.39" y="447.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_flags (460 samples, 0.10%)</title><rect x="165.9" y="309" width="1.2" height="15.0" fill="rgb(210,214,25)" rx="2" ry="2" />
<text  x="168.90" y="319.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::edit::resolve_edits (329 samples, 0.07%)</title><rect x="1125.0" y="405" width="0.9" height="15.0" fill="rgb(223,30,12)" rx="2" ry="2" />
<text  x="1128.01" y="415.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (198 samples, 0.04%)</title><rect x="11.4" y="501" width="0.5" height="15.0" fill="rgb(254,82,22)" rx="2" ry="2" />
<text  x="14.38" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (419 samples, 0.09%)</title><rect x="307.1" y="101" width="1.1" height="15.0" fill="rgb(216,191,8)" rx="2" ry="2" />
<text  x="310.14" y="111.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (394 samples, 0.09%)</title><rect x="299.8" y="357" width="1.0" height="15.0" fill="rgb(213,35,39)" rx="2" ry="2" />
<text  x="302.83" y="367.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::backtrack (445 samples, 0.10%)</title><rect x="224.9" y="277" width="1.2" height="15.0" fill="rgb(238,106,52)" rx="2" ry="2" />
<text  x="227.92" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,179 samples, 1.34%)</title><rect x="1020.5" y="357" width="15.8" height="15.0" fill="rgb(249,144,10)" rx="2" ry="2" />
<text  x="1023.49" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (693 samples, 0.15%)</title><rect x="238.1" y="325" width="1.7" height="15.0" fill="rgb(211,61,31)" rx="2" ry="2" />
<text  x="241.06" y="335.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::find_at_no_state (901 samples, 0.19%)</title><rect x="1128.3" y="325" width="2.3" height="15.0" fill="rgb(242,223,23)" rx="2" ry="2" />
<text  x="1131.26" y="335.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (705 samples, 0.15%)</title><rect x="387.3" y="261" width="1.7" height="15.0" fill="rgb(227,83,7)" rx="2" ry="2" />
<text  x="390.25" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::decode_dictword_id (638 samples, 0.14%)</title><rect x="1087.0" y="437" width="1.6" height="15.0" fill="rgb(206,57,1)" rx="2" ry="2" />
<text  x="1089.96" y="447.5" ></text>
</g>
<g >
<title>_int_malloc (1,675 samples, 0.36%)</title><rect x="393.1" y="133" width="4.3" height="15.0" fill="rgb(251,35,54)" rx="2" ry="2" />
<text  x="396.09" y="143.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::reverse (305 samples, 0.07%)</title><rect x="229.7" y="341" width="0.8" height="15.0" fill="rgb(249,87,28)" rx="2" ry="2" />
<text  x="232.69" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (415 samples, 0.09%)</title><rect x="311.9" y="133" width="1.1" height="15.0" fill="rgb(218,177,14)" rx="2" ry="2" />
<text  x="314.92" y="143.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite (16,037 samples, 3.47%)</title><rect x="1123.3" y="453" width="40.9" height="15.0" fill="rgb(250,22,42)" rx="2" ry="2" />
<text  x="1126.34" y="463.5" >sud..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (617 samples, 0.13%)</title><rect x="1059.7" y="341" width="1.6" height="15.0" fill="rgb(245,48,38)" rx="2" ry="2" />
<text  x="1062.68" y="351.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (129 samples, 0.03%)</title><rect x="155.7" y="357" width="0.4" height="15.0" fill="rgb(218,149,24)" rx="2" ry="2" />
<text  x="158.74" y="367.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (292 samples, 0.06%)</title><rect x="920.5" y="261" width="0.7" height="15.0" fill="rgb(250,1,39)" rx="2" ry="2" />
<text  x="923.47" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (559 samples, 0.12%)</title><rect x="306.9" y="149" width="1.5" height="15.0" fill="rgb(225,24,39)" rx="2" ry="2" />
<text  x="309.93" y="159.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (124 samples, 0.03%)</title><rect x="1166.1" y="309" width="0.3" height="15.0" fill="rgb(241,142,34)" rx="2" ry="2" />
<text  x="1169.06" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free (128 samples, 0.03%)</title><rect x="231.2" y="389" width="0.3" height="15.0" fill="rgb(250,18,7)" rx="2" ry="2" />
<text  x="234.17" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,207 samples, 0.26%)</title><rect x="277.2" y="389" width="3.1" height="15.0" fill="rgb(237,76,35)" rx="2" ry="2" />
<text  x="280.19" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (170 samples, 0.04%)</title><rect x="1187.5" y="517" width="0.4" height="15.0" fill="rgb(218,183,34)" rx="2" ry="2" />
<text  x="1190.46" y="527.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (22,780 samples, 4.92%)</title><rect x="944.3" y="341" width="58.1" height="15.0" fill="rgb(224,205,15)" rx="2" ry="2" />
<text  x="947.29" y="351.5" >nom::n..</text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (6,165 samples, 1.33%)</title><rect x="179.8" y="309" width="15.8" height="15.0" fill="rgb(209,143,4)" rx="2" ry="2" />
<text  x="182.85" y="319.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::replace_slow (4,632 samples, 1.00%)</title><rect x="1130.7" y="389" width="11.8" height="15.0" fill="rgb(234,0,14)" rx="2" ry="2" />
<text  x="1133.68" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4,813 samples, 1.04%)</title><rect x="357.9" y="213" width="12.2" height="15.0" fill="rgb(249,54,38)" rx="2" ry="2" />
<text  x="360.85" y="223.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (19,991 samples, 4.32%)</title><rect x="944.3" y="277" width="51.0" height="15.0" fill="rgb(215,228,52)" rx="2" ry="2" />
<text  x="947.29" y="287.5" >nom::..</text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (128 samples, 0.03%)</title><rect x="331.6" y="325" width="0.3" height="15.0" fill="rgb(207,117,12)" rx="2" ry="2" />
<text  x="334.58" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (1,758 samples, 0.38%)</title><rect x="258.4" y="229" width="4.5" height="15.0" fill="rgb(250,92,52)" rx="2" ry="2" />
<text  x="261.40" y="239.5" ></text>
</g>
<g >
<title>sudachi::sentence_detector::parenthesis_level (3,331 samples, 0.72%)</title><rect x="222.4" y="453" width="8.5" height="15.0" fill="rgb(215,117,2)" rx="2" ry="2" />
<text  x="225.40" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (735 samples, 0.16%)</title><rect x="306.8" y="197" width="1.8" height="15.0" fill="rgb(209,227,11)" rx="2" ry="2" />
<text  x="309.76" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (178 samples, 0.04%)</title><rect x="408.1" y="181" width="0.5" height="15.0" fill="rgb(253,64,39)" rx="2" ry="2" />
<text  x="411.15" y="191.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (126 samples, 0.03%)</title><rect x="994.9" y="181" width="0.3" height="15.0" fill="rgb(239,117,30)" rx="2" ry="2" />
<text  x="997.88" y="191.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (4,351 samples, 0.94%)</title><rect x="159.9" y="389" width="11.1" height="15.0" fill="rgb(251,102,32)" rx="2" ry="2" />
<text  x="162.86" y="399.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (252 samples, 0.05%)</title><rect x="235.5" y="405" width="0.7" height="15.0" fill="rgb(230,81,3)" rx="2" ry="2" />
<text  x="238.53" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,274 samples, 0.28%)</title><rect x="215.8" y="165" width="3.3" height="15.0" fill="rgb(217,217,21)" rx="2" ry="2" />
<text  x="218.80" y="175.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::capture_locations (251 samples, 0.05%)</title><rect x="223.2" y="405" width="0.7" height="15.0" fill="rgb(226,103,18)" rx="2" ry="2" />
<text  x="226.22" y="415.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (224 samples, 0.05%)</title><rect x="277.7" y="277" width="0.6" height="15.0" fill="rgb(240,214,1)" rx="2" ry="2" />
<text  x="280.71" y="287.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (210 samples, 0.05%)</title><rect x="1136.4" y="261" width="0.6" height="15.0" fill="rgb(205,214,3)" rx="2" ry="2" />
<text  x="1139.42" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (585 samples, 0.13%)</title><rect x="306.9" y="165" width="1.5" height="15.0" fill="rgb(225,15,26)" rx="2" ry="2" />
<text  x="309.86" y="175.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (10,607 samples, 2.29%)</title><rect x="823.4" y="341" width="27.1" height="15.0" fill="rgb(231,116,34)" rx="2" ry="2" />
<text  x="826.43" y="351.5" >&lt;..</text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_dictionary_id (337 samples, 0.07%)</title><rect x="1087.0" y="421" width="0.8" height="15.0" fill="rgb(209,226,51)" rx="2" ry="2" />
<text  x="1089.96" y="431.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (213 samples, 0.05%)</title><rect x="1189.2" y="437" width="0.6" height="15.0" fill="rgb(210,207,9)" rx="2" ry="2" />
<text  x="1192.24" y="447.5" ></text>
</g>
<g >
<title>aho_corasick::dfa::DFA&lt;S&gt;::find_at_no_state (922 samples, 0.20%)</title><rect x="1128.2" y="341" width="2.4" height="15.0" fill="rgb(221,224,0)" rx="2" ry="2" />
<text  x="1131.20" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,026 samples, 0.65%)</title><rect x="1103.1" y="261" width="7.7" height="15.0" fill="rgb(215,157,54)" rx="2" ry="2" />
<text  x="1106.06" y="271.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::handle_normalization_slow (395 samples, 0.09%)</title><rect x="1135.2" y="373" width="1.0" height="15.0" fill="rgb(248,66,24)" rx="2" ry="2" />
<text  x="1138.16" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (177 samples, 0.04%)</title><rect x="1101.3" y="309" width="0.4" height="15.0" fill="rgb(229,99,30)" rx="2" ry="2" />
<text  x="1104.27" y="319.5" ></text>
</g>
<g >
<title>[system.dic] (167 samples, 0.04%)</title><rect x="48.3" y="517" width="0.4" height="15.0" fill="rgb(235,209,36)" rx="2" ry="2" />
<text  x="51.29" y="527.5" ></text>
</g>
<g >
<title>unicode_normalization::perfect_hash::mph_lookup (198 samples, 0.04%)</title><rect x="1142.0" y="325" width="0.5" height="15.0" fill="rgb(213,203,3)" rx="2" ry="2" />
<text  x="1144.99" y="335.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,789 samples, 0.60%)</title><rect x="995.3" y="293" width="7.1" height="15.0" fill="rgb(212,160,18)" rx="2" ry="2" />
<text  x="998.27" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,830 samples, 0.40%)</title><rect x="258.3" y="261" width="4.7" height="15.0" fill="rgb(236,170,47)" rx="2" ry="2" />
<text  x="261.31" y="271.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search (996 samples, 0.22%)</title><rect x="1169.3" y="437" width="2.5" height="15.0" fill="rgb(243,134,3)" rx="2" ry="2" />
<text  x="1172.27" y="447.5" ></text>
</g>
<g >
<title>unicode_normalization::tables::qc_nfkc (2,701 samples, 0.58%)</title><rect x="1146.1" y="341" width="6.9" height="15.0" fill="rgb(215,161,36)" rx="2" ry="2" />
<text  x="1149.08" y="351.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (207 samples, 0.04%)</title><rect x="480.4" y="373" width="0.5" height="15.0" fill="rgb(230,115,51)" rx="2" ry="2" />
<text  x="483.42" y="383.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (323 samples, 0.07%)</title><rect x="1165.7" y="373" width="0.8" height="15.0" fill="rgb(238,41,29)" rx="2" ry="2" />
<text  x="1168.70" y="383.5" ></text>
</g>
<g >
<title>core::str::validations::run_utf8_validation (522 samples, 0.11%)</title><rect x="74.3" y="405" width="1.3" height="15.0" fill="rgb(237,75,26)" rx="2" ry="2" />
<text  x="77.28" y="415.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (268 samples, 0.06%)</title><rect x="248.9" y="373" width="0.6" height="15.0" fill="rgb(221,160,28)" rx="2" ry="2" />
<text  x="251.85" y="383.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (616 samples, 0.13%)</title><rect x="227.7" y="293" width="1.5" height="15.0" fill="rgb(218,221,37)" rx="2" ry="2" />
<text  x="230.66" y="303.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (696 samples, 0.15%)</title><rect x="118.5" y="405" width="1.8" height="15.0" fill="rgb(233,127,16)" rx="2" ry="2" />
<text  x="121.50" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::u8_class (211 samples, 0.05%)</title><rect x="164.8" y="261" width="0.5" height="15.0" fill="rgb(248,158,45)" rx="2" ry="2" />
<text  x="167.79" y="271.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (143 samples, 0.03%)</title><rect x="81.9" y="373" width="0.3" height="15.0" fill="rgb(254,219,27)" rx="2" ry="2" />
<text  x="84.88" y="383.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryTypeIter as core::iter::traits::iterator::Iterator&gt;::next (468 samples, 0.10%)</title><rect x="1095.7" y="405" width="1.1" height="15.0" fill="rgb(217,29,38)" rx="2" ry="2" />
<text  x="1098.65" y="415.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::shortest_match_at (13,831 samples, 2.99%)</title><rect x="175.3" y="341" width="35.3" height="15.0" fill="rgb(239,122,30)" rx="2" ry="2" />
<text  x="178.27" y="351.5" >&lt;r..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (173 samples, 0.04%)</title><rect x="1184.9" y="341" width="0.4" height="15.0" fill="rgb(249,92,18)" rx="2" ry="2" />
<text  x="1187.91" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_id_table::WordIdTable::entries (4,019 samples, 0.87%)</title><rect x="467.5" y="293" width="10.3" height="15.0" fill="rgb(239,173,12)" rx="2" ry="2" />
<text  x="470.51" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (129 samples, 0.03%)</title><rect x="33.8" y="501" width="0.3" height="15.0" fill="rgb(233,211,39)" rx="2" ry="2" />
<text  x="36.79" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (1,927 samples, 0.42%)</title><rect x="215.5" y="293" width="4.9" height="15.0" fill="rgb(224,205,39)" rx="2" ry="2" />
<text  x="218.47" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,289 samples, 0.71%)</title><rect x="1103.0" y="373" width="8.4" height="15.0" fill="rgb(217,23,8)" rx="2" ry="2" />
<text  x="1106.00" y="383.5" ></text>
</g>
<g >
<title>aho_corasick::packed::api::Searcher::find (1,377 samples, 0.30%)</title><rect x="1160.0" y="245" width="3.5" height="15.0" fill="rgb(253,214,8)" rx="2" ry="2" />
<text  x="1163.00" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (688 samples, 0.15%)</title><rect x="242.2" y="357" width="1.7" height="15.0" fill="rgb(245,165,16)" rx="2" ry="2" />
<text  x="245.19" y="367.5" ></text>
</g>
<g >
<title>_int_free (1,016 samples, 0.22%)</title><rect x="56.8" y="501" width="2.6" height="15.0" fill="rgb(208,118,38)" rx="2" ry="2" />
<text  x="59.76" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,629 samples, 0.35%)</title><rect x="1111.4" y="261" width="4.1" height="15.0" fill="rgb(212,59,31)" rx="2" ry="2" />
<text  x="1114.38" y="271.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (679 samples, 0.15%)</title><rect x="311.3" y="261" width="1.8" height="15.0" fill="rgb(232,190,24)" rx="2" ry="2" />
<text  x="314.33" y="271.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::reverse (972 samples, 0.21%)</title><rect x="282.6" y="453" width="2.5" height="15.0" fill="rgb(244,214,23)" rx="2" ry="2" />
<text  x="285.57" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (570 samples, 0.12%)</title><rect x="1165.5" y="437" width="1.5" height="15.0" fill="rgb(249,49,39)" rx="2" ry="2" />
<text  x="1168.51" y="447.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (153,768 samples, 33.24%)</title><rect x="617.0" y="437" width="392.2" height="15.0" fill="rgb(236,63,4)" rx="2" ry="2" />
<text  x="619.97" y="447.5" >sudachi::analysis::lattice::Lattice::connect_node</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sudachi::analysis::node::Node&gt;&gt; (2,901 samples, 0.63%)</title><rect x="263.2" y="389" width="7.4" height="15.0" fill="rgb(206,209,2)" rx="2" ry="2" />
<text  x="266.18" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (6,144 samples, 1.33%)</title><rect x="1020.6" y="309" width="15.6" height="15.0" fill="rgb(209,201,47)" rx="2" ry="2" />
<text  x="1023.55" y="319.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (449 samples, 0.10%)</title><rect x="1136.2" y="341" width="1.1" height="15.0" fill="rgb(253,169,42)" rx="2" ry="2" />
<text  x="1139.17" y="351.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (330 samples, 0.07%)</title><rect x="330.7" y="277" width="0.9" height="15.0" fill="rgb(239,199,23)" rx="2" ry="2" />
<text  x="333.74" y="287.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (896 samples, 0.19%)</title><rect x="513.0" y="421" width="2.3" height="15.0" fill="rgb(210,197,0)" rx="2" ry="2" />
<text  x="515.98" y="431.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::new (141 samples, 0.03%)</title><rect x="121.6" y="405" width="0.3" height="15.0" fill="rgb(247,15,49)" rx="2" ry="2" />
<text  x="124.57" y="415.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (204 samples, 0.04%)</title><rect x="1078.5" y="229" width="0.6" height="15.0" fill="rgb(236,82,48)" rx="2" ry="2" />
<text  x="1081.54" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (161 samples, 0.03%)</title><rect x="245.7" y="213" width="0.4" height="15.0" fill="rgb(218,229,33)" rx="2" ry="2" />
<text  x="248.72" y="223.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,297 samples, 3.95%)</title><rect x="431.1" y="389" width="46.7" height="15.0" fill="rgb(218,194,22)" rx="2" ry="2" />
<text  x="434.09" y="399.5" >&lt;cor..</text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_empty (292 samples, 0.06%)</title><rect x="920.5" y="293" width="0.7" height="15.0" fill="rgb(225,197,0)" rx="2" ry="2" />
<text  x="923.47" y="303.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (296 samples, 0.06%)</title><rect x="1042.4" y="405" width="0.7" height="15.0" fill="rgb(205,88,18)" rx="2" ry="2" />
<text  x="1045.39" y="415.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (315 samples, 0.07%)</title><rect x="1123.7" y="357" width="0.8" height="15.0" fill="rgb(253,25,37)" rx="2" ry="2" />
<text  x="1126.69" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (462 samples, 0.10%)</title><rect x="311.9" y="181" width="1.2" height="15.0" fill="rgb(213,6,20)" rx="2" ry="2" />
<text  x="314.88" y="191.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (3,807 samples, 0.82%)</title><rect x="1143.3" y="357" width="9.7" height="15.0" fill="rgb(247,32,23)" rx="2" ry="2" />
<text  x="1146.26" y="367.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (269 samples, 0.06%)</title><rect x="1184.7" y="357" width="0.7" height="15.0" fill="rgb(239,141,31)" rx="2" ry="2" />
<text  x="1187.68" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (12,732 samples, 2.75%)</title><rect x="544.0" y="309" width="32.4" height="15.0" fill="rgb(229,76,46)" rx="2" ry="2" />
<text  x="546.95" y="319.5" >al..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (131 samples, 0.03%)</title><rect x="250.0" y="373" width="0.4" height="15.0" fill="rgb(233,46,12)" rx="2" ry="2" />
<text  x="253.04" y="383.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (129 samples, 0.03%)</title><rect x="155.7" y="341" width="0.4" height="15.0" fill="rgb(248,115,29)" rx="2" ry="2" />
<text  x="158.74" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (158 samples, 0.03%)</title><rect x="244.8" y="277" width="0.4" height="15.0" fill="rgb(206,130,10)" rx="2" ry="2" />
<text  x="247.84" y="287.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (462 samples, 0.10%)</title><rect x="30.0" y="501" width="1.2" height="15.0" fill="rgb(231,228,53)" rx="2" ry="2" />
<text  x="33.04" y="511.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max (127 samples, 0.03%)</title><rect x="367.8" y="117" width="0.3" height="15.0" fill="rgb(241,8,41)" rx="2" ry="2" />
<text  x="370.80" y="127.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6,210 samples, 1.34%)</title><rect x="921.2" y="325" width="15.9" height="15.0" fill="rgb(234,216,18)" rx="2" ry="2" />
<text  x="924.25" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (3,103 samples, 0.67%)</title><rect x="359.9" y="133" width="7.9" height="15.0" fill="rgb(207,12,6)" rx="2" ry="2" />
<text  x="362.89" y="143.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (150 samples, 0.03%)</title><rect x="1014.7" y="309" width="0.3" height="15.0" fill="rgb(240,142,2)" rx="2" ry="2" />
<text  x="1017.66" y="319.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (163 samples, 0.04%)</title><rect x="213.3" y="309" width="0.4" height="15.0" fill="rgb(232,193,15)" rx="2" ry="2" />
<text  x="216.33" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (243 samples, 0.05%)</title><rect x="245.5" y="229" width="0.6" height="15.0" fill="rgb(242,197,8)" rx="2" ry="2" />
<text  x="248.53" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,258 samples, 0.92%)</title><rect x="321.0" y="389" width="10.9" height="15.0" fill="rgb(224,192,41)" rx="2" ry="2" />
<text  x="324.05" y="399.5" ></text>
</g>
<g >
<title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (247 samples, 0.05%)</title><rect x="247.1" y="357" width="0.6" height="15.0" fill="rgb(251,163,53)" rx="2" ry="2" />
<text  x="250.11" y="367.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (126 samples, 0.03%)</title><rect x="994.9" y="213" width="0.3" height="15.0" fill="rgb(212,207,0)" rx="2" ry="2" />
<text  x="997.88" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (376 samples, 0.08%)</title><rect x="148.7" y="341" width="1.0" height="15.0" fill="rgb(251,2,12)" rx="2" ry="2" />
<text  x="151.70" y="351.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14,796 samples, 3.20%)</title><rect x="866.5" y="309" width="37.7" height="15.0" fill="rgb(226,9,48)" rx="2" ry="2" />
<text  x="869.50" y="319.5" >&lt;st..</text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (484 samples, 0.10%)</title><rect x="1153.0" y="357" width="1.2" height="15.0" fill="rgb(216,25,21)" rx="2" ry="2" />
<text  x="1155.97" y="367.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,249 samples, 0.27%)</title><rect x="291.5" y="437" width="3.2" height="15.0" fill="rgb(221,157,1)" rx="2" ry="2" />
<text  x="294.50" y="447.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (493 samples, 0.11%)</title><rect x="193.7" y="293" width="1.2" height="15.0" fill="rgb(238,27,25)" rx="2" ry="2" />
<text  x="196.68" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6,210 samples, 1.34%)</title><rect x="921.2" y="309" width="15.9" height="15.0" fill="rgb(221,175,4)" rx="2" ry="2" />
<text  x="924.25" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (693 samples, 0.15%)</title><rect x="238.1" y="357" width="1.7" height="15.0" fill="rgb(235,173,28)" rx="2" ry="2" />
<text  x="241.06" y="367.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (387 samples, 0.08%)</title><rect x="433.1" y="293" width="1.0" height="15.0" fill="rgb(222,126,27)" rx="2" ry="2" />
<text  x="436.08" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (205 samples, 0.04%)</title><rect x="1184.1" y="357" width="0.5" height="15.0" fill="rgb(237,200,35)" rx="2" ry="2" />
<text  x="1187.05" y="367.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1,373 samples, 0.30%)</title><rect x="1154.5" y="341" width="3.5" height="15.0" fill="rgb(230,123,9)" rx="2" ry="2" />
<text  x="1157.49" y="351.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (406 samples, 0.09%)</title><rect x="352.3" y="277" width="1.0" height="15.0" fill="rgb(232,22,42)" rx="2" ry="2" />
<text  x="355.31" y="287.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (25,433 samples, 5.50%)</title><rect x="944.3" y="373" width="64.9" height="15.0" fill="rgb(254,122,52)" rx="2" ry="2" />
<text  x="947.29" y="383.5" >&lt;F as n..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (524 samples, 0.11%)</title><rect x="1100.4" y="357" width="1.3" height="15.0" fill="rgb(229,62,32)" rx="2" ry="2" />
<text  x="1103.39" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (242 samples, 0.05%)</title><rect x="408.0" y="229" width="0.6" height="15.0" fill="rgb(222,204,11)" rx="2" ry="2" />
<text  x="410.98" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (394 samples, 0.09%)</title><rect x="299.8" y="389" width="1.0" height="15.0" fill="rgb(251,219,7)" rx="2" ry="2" />
<text  x="302.83" y="399.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (220 samples, 0.05%)</title><rect x="209.3" y="293" width="0.6" height="15.0" fill="rgb(233,181,44)" rx="2" ry="2" />
<text  x="212.32" y="303.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_literals (6,920 samples, 1.50%)</title><rect x="177.9" y="325" width="17.7" height="15.0" fill="rgb(206,80,0)" rx="2" ry="2" />
<text  x="180.92" y="335.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,781 samples, 0.38%)</title><rect x="1111.4" y="373" width="4.5" height="15.0" fill="rgb(229,166,2)" rx="2" ry="2" />
<text  x="1114.38" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (5,024 samples, 1.09%)</title><rect x="810.6" y="277" width="12.8" height="15.0" fill="rgb(243,179,24)" rx="2" ry="2" />
<text  x="813.59" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (5,144 samples, 1.11%)</title><rect x="372.4" y="165" width="13.1" height="15.0" fill="rgb(214,160,35)" rx="2" ry="2" />
<text  x="375.38" y="175.5" ></text>
</g>
<g >
<title>core::ptr::write (244 samples, 0.05%)</title><rect x="155.1" y="357" width="0.6" height="15.0" fill="rgb(246,37,54)" rx="2" ry="2" />
<text  x="158.12" y="367.5" ></text>
</g>
<g >
<title>core::ptr::write (503 samples, 0.11%)</title><rect x="1098.8" y="389" width="1.3" height="15.0" fill="rgb(245,94,48)" rx="2" ry="2" />
<text  x="1101.83" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (672 samples, 0.15%)</title><rect x="238.1" y="277" width="1.7" height="15.0" fill="rgb(220,89,15)" rx="2" ry="2" />
<text  x="241.11" y="287.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (551 samples, 0.12%)</title><rect x="1034.7" y="261" width="1.4" height="15.0" fill="rgb(240,173,8)" rx="2" ry="2" />
<text  x="1037.73" y="271.5" ></text>
</g>
<g >
<title>std::sys_common::memchr::memchr (193 samples, 0.04%)</title><rect x="76.6" y="389" width="0.5" height="15.0" fill="rgb(206,81,11)" rx="2" ry="2" />
<text  x="79.58" y="399.5" ></text>
</g>
<g >
<title>_int_free (1,229 samples, 0.27%)</title><rect x="342.7" y="261" width="3.1" height="15.0" fill="rgb(221,78,40)" rx="2" ry="2" />
<text  x="345.65" y="271.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::is_nfkc_quick (2,032 samples, 0.44%)</title><rect x="1137.3" y="373" width="5.2" height="15.0" fill="rgb(230,24,42)" rx="2" ry="2" />
<text  x="1140.31" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,830 samples, 0.40%)</title><rect x="258.3" y="293" width="4.7" height="15.0" fill="rgb(243,214,43)" rx="2" ry="2" />
<text  x="261.31" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_info (49,048 samples, 10.60%)</title><rect x="289.2" y="453" width="125.1" height="15.0" fill="rgb(224,187,54)" rx="2" ry="2" />
<text  x="292.19" y="463.5" >sudachi::dic::l..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1,955 samples, 0.42%)</title><rect x="922.1" y="277" width="5.0" height="15.0" fill="rgb(238,71,17)" rx="2" ry="2" />
<text  x="925.11" y="287.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,246 samples, 0.27%)</title><rect x="1014.7" y="325" width="3.1" height="15.0" fill="rgb(214,120,19)" rx="2" ry="2" />
<text  x="1017.65" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (239 samples, 0.05%)</title><rect x="128.5" y="373" width="0.6" height="15.0" fill="rgb(244,123,9)" rx="2" ry="2" />
<text  x="131.48" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (139 samples, 0.03%)</title><rect x="241.6" y="421" width="0.4" height="15.0" fill="rgb(222,125,18)" rx="2" ry="2" />
<text  x="244.65" y="431.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (123 samples, 0.03%)</title><rect x="308.6" y="213" width="0.3" height="15.0" fill="rgb(249,196,32)" rx="2" ry="2" />
<text  x="311.63" y="223.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (145 samples, 0.03%)</title><rect x="240.7" y="405" width="0.4" height="15.0" fill="rgb(230,203,2)" rx="2" ry="2" />
<text  x="243.70" y="415.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::fill_word_info (133 samples, 0.03%)</title><rect x="232.5" y="453" width="0.4" height="15.0" fill="rgb(239,1,16)" rx="2" ry="2" />
<text  x="235.54" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,323 samples, 0.72%)</title><rect x="389.7" y="261" width="8.4" height="15.0" fill="rgb(247,49,31)" rx="2" ry="2" />
<text  x="392.65" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next (167 samples, 0.04%)</title><rect x="204.7" y="261" width="0.5" height="15.0" fill="rgb(207,150,24)" rx="2" ry="2" />
<text  x="207.75" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (689 samples, 0.15%)</title><rect x="309.4" y="101" width="1.7" height="15.0" fill="rgb(233,154,35)" rx="2" ry="2" />
<text  x="312.36" y="111.5" ></text>
</g>
<g >
<title>&lt;regex::literal::imp::LiteralIter as core::iter::traits::iterator::Iterator&gt;::next (1,136 samples, 0.25%)</title><rect x="182.1" y="293" width="2.9" height="15.0" fill="rgb(205,168,41)" rx="2" ry="2" />
<text  x="185.08" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (2,574 samples, 0.56%)</title><rect x="215.1" y="421" width="6.6" height="15.0" fill="rgb(205,29,24)" rx="2" ry="2" />
<text  x="218.09" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (23,614 samples, 5.10%)</title><rect x="538.4" y="421" width="60.2" height="15.0" fill="rgb(241,80,49)" rx="2" ry="2" />
<text  x="541.41" y="431.5" >alloc:..</text>
</g>
<g >
<title>alloc::alloc::alloc (3,003 samples, 0.65%)</title><rect x="1103.1" y="229" width="7.7" height="15.0" fill="rgb(230,38,31)" rx="2" ry="2" />
<text  x="1106.12" y="239.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (3,742 samples, 0.81%)</title><rect x="304.4" y="293" width="9.5" height="15.0" fill="rgb(219,134,37)" rx="2" ry="2" />
<text  x="307.35" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,007 samples, 0.22%)</title><rect x="51.4" y="501" width="2.6" height="15.0" fill="rgb(246,29,10)" rx="2" ry="2" />
<text  x="54.41" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::resize (127 samples, 0.03%)</title><rect x="1173.2" y="437" width="0.4" height="15.0" fill="rgb(227,2,36)" rx="2" ry="2" />
<text  x="1176.25" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (485 samples, 0.10%)</title><rect x="246.5" y="389" width="1.2" height="15.0" fill="rgb(215,6,48)" rx="2" ry="2" />
<text  x="249.50" y="399.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (17,122 samples, 3.70%)</title><rect x="171.1" y="405" width="43.6" height="15.0" fill="rgb(230,187,38)" rx="2" ry="2" />
<text  x="174.05" y="415.5" >rege..</text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::get_best_path (5,502 samples, 1.19%)</title><rect x="271.2" y="469" width="14.0" height="15.0" fill="rgb(254,55,28)" rx="2" ry="2" />
<text  x="274.20" y="479.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (659 samples, 0.14%)</title><rect x="408.8" y="325" width="1.7" height="15.0" fill="rgb(222,198,12)" rx="2" ry="2" />
<text  x="411.78" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (313 samples, 0.07%)</title><rect x="11.9" y="501" width="0.8" height="15.0" fill="rgb(234,154,51)" rx="2" ry="2" />
<text  x="14.94" y="511.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (148 samples, 0.03%)</title><rect x="235.5" y="389" width="0.4" height="15.0" fill="rgb(236,50,6)" rx="2" ry="2" />
<text  x="238.53" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (131 samples, 0.03%)</title><rect x="250.0" y="341" width="0.4" height="15.0" fill="rgb(241,27,29)" rx="2" ry="2" />
<text  x="253.04" y="351.5" ></text>
</g>
<g >
<title>core::str::validations::unwrap_or_0 (165 samples, 0.04%)</title><rect x="221.2" y="309" width="0.4" height="15.0" fill="rgb(244,216,38)" rx="2" ry="2" />
<text  x="224.20" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (16,839 samples, 3.64%)</title><rect x="1043.1" y="437" width="43.0" height="15.0" fill="rgb(235,188,14)" rx="2" ry="2" />
<text  x="1046.14" y="447.5" >suda..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,153 samples, 0.68%)</title><rect x="390.1" y="197" width="8.0" height="15.0" fill="rgb(209,91,26)" rx="2" ry="2" />
<text  x="393.08" y="207.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,277 samples, 0.92%)</title><rect x="303.7" y="357" width="10.9" height="15.0" fill="rgb(205,107,41)" rx="2" ry="2" />
<text  x="306.72" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (123 samples, 0.03%)</title><rect x="121.6" y="389" width="0.3" height="15.0" fill="rgb(222,89,39)" rx="2" ry="2" />
<text  x="124.61" y="399.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (124 samples, 0.03%)</title><rect x="994.9" y="165" width="0.3" height="15.0" fill="rgb(251,66,19)" rx="2" ry="2" />
<text  x="997.88" y="175.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;V&gt; as core::iter::traits::collect::FromIterator&lt;core::option::Option&lt;A&gt;&gt;&gt;::from_iter (170 samples, 0.04%)</title><rect x="244.8" y="389" width="0.5" height="15.0" fill="rgb(244,24,52)" rx="2" ry="2" />
<text  x="247.83" y="399.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (153 samples, 0.03%)</title><rect x="219.3" y="197" width="0.4" height="15.0" fill="rgb(238,102,39)" rx="2" ry="2" />
<text  x="222.27" y="207.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (19,991 samples, 4.32%)</title><rect x="944.3" y="293" width="51.0" height="15.0" fill="rgb(233,150,43)" rx="2" ry="2" />
<text  x="947.29" y="303.5" >&lt;F as..</text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (31,597 samples, 6.83%)</title><rect x="333.1" y="389" width="80.6" height="15.0" fill="rgb(247,20,0)" rx="2" ry="2" />
<text  x="336.09" y="399.5" >nom::sequ..</text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_eos_node (409 samples, 0.09%)</title><rect x="505.0" y="453" width="1.1" height="15.0" fill="rgb(209,77,49)" rx="2" ry="2" />
<text  x="508.01" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (359 samples, 0.08%)</title><rect x="1063.0" y="277" width="0.9" height="15.0" fill="rgb(218,99,37)" rx="2" ry="2" />
<text  x="1065.98" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,758 samples, 0.38%)</title><rect x="258.4" y="245" width="4.5" height="15.0" fill="rgb(252,164,11)" rx="2" ry="2" />
<text  x="261.40" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;]&gt; (7,527 samples, 1.63%)</title><rect x="251.4" y="421" width="19.2" height="15.0" fill="rgb(233,80,48)" rx="2" ry="2" />
<text  x="254.39" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,244 samples, 0.27%)</title><rect x="1010.4" y="357" width="3.2" height="15.0" fill="rgb(244,202,11)" rx="2" ry="2" />
<text  x="1013.43" y="367.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at_reverse (164 samples, 0.04%)</title><rect x="229.9" y="325" width="0.4" height="15.0" fill="rgb(222,61,47)" rx="2" ry="2" />
<text  x="232.89" y="335.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (301 samples, 0.07%)</title><rect x="214.0" y="245" width="0.7" height="15.0" fill="rgb(249,207,32)" rx="2" ry="2" />
<text  x="216.95" y="255.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,582 samples, 0.34%)</title><rect x="226.4" y="357" width="4.1" height="15.0" fill="rgb(246,140,12)" rx="2" ry="2" />
<text  x="229.45" y="367.5" ></text>
</g>
<g >
<title>&lt;T as alloc::string::ToString&gt;::to_string (333 samples, 0.07%)</title><rect x="248.7" y="405" width="0.8" height="15.0" fill="rgb(227,33,4)" rx="2" ry="2" />
<text  x="251.70" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (1,213 samples, 0.26%)</title><rect x="1010.5" y="325" width="3.1" height="15.0" fill="rgb(217,135,30)" rx="2" ry="2" />
<text  x="1013.50" y="335.5" ></text>
</g>
<g >
<title>unicode_normalization::tables::qc_nfkc (1,274 samples, 0.28%)</title><rect x="1138.7" y="325" width="3.3" height="15.0" fill="rgb(217,127,17)" rx="2" ry="2" />
<text  x="1141.73" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::utf16_string_parser (22,365 samples, 4.83%)</title><rect x="349.6" y="293" width="57.1" height="15.0" fill="rgb(210,32,12)" rx="2" ry="2" />
<text  x="352.64" y="303.5" >sudach..</text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,098 samples, 0.89%)</title><rect x="321.5" y="357" width="10.4" height="15.0" fill="rgb(219,204,11)" rx="2" ry="2" />
<text  x="324.45" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (217 samples, 0.05%)</title><rect x="29.5" y="501" width="0.5" height="15.0" fill="rgb(236,75,45)" rx="2" ry="2" />
<text  x="32.48" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3,659 samples, 0.79%)</title><rect x="359.0" y="165" width="9.4" height="15.0" fill="rgb(217,42,36)" rx="2" ry="2" />
<text  x="362.04" y="175.5" ></text>
</g>
<g >
<title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,330 samples, 0.29%)</title><rect x="73.7" y="485" width="3.4" height="15.0" fill="rgb(235,218,46)" rx="2" ry="2" />
<text  x="76.68" y="495.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::shortest_match_at (192 samples, 0.04%)</title><rect x="221.8" y="389" width="0.5" height="15.0" fill="rgb(210,99,12)" rx="2" ry="2" />
<text  x="224.80" y="399.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::string_number::StringNumber::append (522 samples, 0.11%)</title><rect x="248.6" y="421" width="1.4" height="15.0" fill="rgb(207,7,1)" rx="2" ry="2" />
<text  x="251.64" y="431.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,056 samples, 0.23%)</title><rect x="156.7" y="357" width="2.6" height="15.0" fill="rgb(246,99,21)" rx="2" ry="2" />
<text  x="159.65" y="367.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_state (404 samples, 0.09%)</title><rect x="167.1" y="309" width="1.0" height="15.0" fill="rgb(235,122,14)" rx="2" ry="2" />
<text  x="170.08" y="319.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Pattern::equals (408 samples, 0.09%)</title><rect x="1161.0" y="117" width="1.0" height="15.0" fill="rgb(232,126,18)" rx="2" ry="2" />
<text  x="1163.98" y="127.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (138 samples, 0.03%)</title><rect x="1098.0" y="373" width="0.4" height="15.0" fill="rgb(214,64,26)" rx="2" ry="2" />
<text  x="1101.00" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4,898 samples, 1.06%)</title><rect x="357.6" y="245" width="12.5" height="15.0" fill="rgb(239,74,54)" rx="2" ry="2" />
<text  x="360.64" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,568 samples, 0.77%)</title><rect x="321.5" y="309" width="9.1" height="15.0" fill="rgb(246,123,27)" rx="2" ry="2" />
<text  x="324.45" y="319.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (138 samples, 0.03%)</title><rect x="12.4" y="469" width="0.3" height="15.0" fill="rgb(222,31,36)" rx="2" ry="2" />
<text  x="15.38" y="479.5" ></text>
</g>
<g >
<title>core::cmp::max (306 samples, 0.07%)</title><rect x="597.0" y="357" width="0.8" height="15.0" fill="rgb(229,107,7)" rx="2" ry="2" />
<text  x="600.02" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (304 samples, 0.07%)</title><rect x="1013.9" y="357" width="0.8" height="15.0" fill="rgb(237,219,43)" rx="2" ry="2" />
<text  x="1016.88" y="367.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (2,840 samples, 0.61%)</title><rect x="549.9" y="261" width="7.2" height="15.0" fill="rgb(236,32,51)" rx="2" ry="2" />
<text  x="552.86" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (519 samples, 0.11%)</title><rect x="1100.4" y="341" width="1.3" height="15.0" fill="rgb(252,222,32)" rx="2" ry="2" />
<text  x="1103.40" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3,026 samples, 0.65%)</title><rect x="1103.1" y="277" width="7.7" height="15.0" fill="rgb(221,145,4)" rx="2" ry="2" />
<text  x="1106.06" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (861 samples, 0.19%)</title><rect x="309.0" y="229" width="2.2" height="15.0" fill="rgb(205,88,22)" rx="2" ry="2" />
<text  x="311.99" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,264 samples, 0.27%)</title><rect x="1010.4" y="373" width="3.2" height="15.0" fill="rgb(213,157,4)" rx="2" ry="2" />
<text  x="1013.39" y="383.5" ></text>
</g>
<g >
<title>__rdl_realloc (139 samples, 0.03%)</title><rect x="31.3" y="501" width="0.3" height="15.0" fill="rgb(231,213,44)" rx="2" ry="2" />
<text  x="34.26" y="511.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (324 samples, 0.07%)</title><rect x="148.8" y="261" width="0.8" height="15.0" fill="rgb(209,71,13)" rx="2" ry="2" />
<text  x="151.78" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (190 samples, 0.04%)</title><rect x="248.9" y="293" width="0.5" height="15.0" fill="rgb(236,10,11)" rx="2" ry="2" />
<text  x="251.92" y="303.5" ></text>
</g>
<g >
<title>std::io::BufRead::read_line::{{closure}} (571 samples, 0.12%)</title><rect x="75.6" y="421" width="1.5" height="15.0" fill="rgb(218,84,51)" rx="2" ry="2" />
<text  x="78.61" y="431.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (276 samples, 0.06%)</title><rect x="78.6" y="453" width="0.7" height="15.0" fill="rgb(234,121,54)" rx="2" ry="2" />
<text  x="81.60" y="463.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::exec_backtrack (723 samples, 0.16%)</title><rect x="224.6" y="325" width="1.8" height="15.0" fill="rgb(237,110,28)" rx="2" ry="2" />
<text  x="227.59" y="335.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,214 samples, 0.91%)</title><rect x="910.5" y="325" width="10.7" height="15.0" fill="rgb(233,190,44)" rx="2" ry="2" />
<text  x="913.47" y="335.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (2,059 samples, 0.45%)</title><rect x="661.4" y="421" width="5.3" height="15.0" fill="rgb(254,19,8)" rx="2" ry="2" />
<text  x="664.43" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (194 samples, 0.04%)</title><rect x="35.7" y="453" width="0.5" height="15.0" fill="rgb(226,167,13)" rx="2" ry="2" />
<text  x="38.67" y="463.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (232 samples, 0.05%)</title><rect x="247.1" y="341" width="0.6" height="15.0" fill="rgb(253,122,47)" rx="2" ry="2" />
<text  x="250.13" y="351.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::replace_fast (1,030 samples, 0.22%)</title><rect x="1128.1" y="389" width="2.6" height="15.0" fill="rgb(242,190,34)" rx="2" ry="2" />
<text  x="1131.06" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (459 samples, 0.10%)</title><rect x="311.9" y="149" width="1.2" height="15.0" fill="rgb(217,14,18)" rx="2" ry="2" />
<text  x="314.89" y="159.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::trace_stack (259 samples, 0.06%)</title><rect x="131.8" y="389" width="0.6" height="15.0" fill="rgb(207,71,20)" rx="2" ry="2" />
<text  x="134.76" y="399.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (248 samples, 0.05%)</title><rect x="1062.2" y="309" width="0.7" height="15.0" fill="rgb(225,86,40)" rx="2" ry="2" />
<text  x="1065.22" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,587 samples, 0.34%)</title><rect x="1061.3" y="341" width="4.0" height="15.0" fill="rgb(242,150,28)" rx="2" ry="2" />
<text  x="1064.25" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (2,705 samples, 0.58%)</title><rect x="360.6" y="85" width="6.9" height="15.0" fill="rgb(247,23,48)" rx="2" ry="2" />
<text  x="363.63" y="95.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::clear (3,963 samples, 0.86%)</title><rect x="1174.5" y="469" width="10.1" height="15.0" fill="rgb(219,62,48)" rx="2" ry="2" />
<text  x="1177.47" y="479.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (1,217 samples, 0.26%)</title><rect x="215.9" y="117" width="3.1" height="15.0" fill="rgb(215,172,41)" rx="2" ry="2" />
<text  x="218.91" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,479 samples, 0.75%)</title><rect x="1175.2" y="325" width="8.9" height="15.0" fill="rgb(228,160,51)" rx="2" ry="2" />
<text  x="1178.18" y="335.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (181 samples, 0.04%)</title><rect x="223.4" y="357" width="0.5" height="15.0" fill="rgb(242,21,9)" rx="2" ry="2" />
<text  x="226.40" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2,680 samples, 0.58%)</title><rect x="390.5" y="149" width="6.9" height="15.0" fill="rgb(220,14,45)" rx="2" ry="2" />
<text  x="393.53" y="159.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,830 samples, 0.40%)</title><rect x="258.3" y="277" width="4.7" height="15.0" fill="rgb(241,182,20)" rx="2" ry="2" />
<text  x="261.31" y="287.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (284 samples, 0.06%)</title><rect x="248.8" y="389" width="0.7" height="15.0" fill="rgb(223,34,24)" rx="2" ry="2" />
<text  x="251.81" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::new (269 samples, 0.06%)</title><rect x="1184.7" y="421" width="0.7" height="15.0" fill="rgb(212,90,18)" rx="2" ry="2" />
<text  x="1187.68" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_right_id (2,755 samples, 0.60%)</title><rect x="1079.1" y="421" width="7.0" height="15.0" fill="rgb(238,150,25)" rx="2" ry="2" />
<text  x="1082.06" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,190 samples, 1.34%)</title><rect x="1020.5" y="389" width="15.8" height="15.0" fill="rgb(241,215,21)" rx="2" ry="2" />
<text  x="1023.49" y="399.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::build_lattice (275,918 samples, 59.64%)</title><rect x="414.3" y="469" width="703.7" height="15.0" fill="rgb(209,65,27)" rx="2" ry="2" />
<text  x="417.29" y="479.5" >sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::build_lattice</text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (128 samples, 0.03%)</title><rect x="505.4" y="405" width="0.3" height="15.0" fill="rgb(241,21,10)" rx="2" ry="2" />
<text  x="508.42" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23,614 samples, 5.10%)</title><rect x="538.4" y="405" width="60.2" height="15.0" fill="rgb(223,0,52)" rx="2" ry="2" />
<text  x="541.41" y="415.5" >alloc:..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (414 samples, 0.09%)</title><rect x="1165.7" y="421" width="1.0" height="15.0" fill="rgb(245,46,18)" rx="2" ry="2" />
<text  x="1168.68" y="431.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (202 samples, 0.04%)</title><rect x="1142.0" y="341" width="0.5" height="15.0" fill="rgb(235,139,6)" rx="2" ry="2" />
<text  x="1144.98" y="351.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (291 samples, 0.06%)</title><rect x="1084.7" y="357" width="0.7" height="15.0" fill="rgb(210,199,18)" rx="2" ry="2" />
<text  x="1087.71" y="367.5" ></text>
</g>
<g >
<title>[unknown] (446,384 samples, 96.48%)</title><rect x="48.7" y="517" width="1138.5" height="15.0" fill="rgb(205,60,1)" rx="2" ry="2" />
<text  x="51.71" y="527.5" >[unknown]</text>
</g>
<g >
<title>__rdl_alloc (188 samples, 0.04%)</title><rect x="384.9" y="133" width="0.5" height="15.0" fill="rgb(206,56,11)" rx="2" ry="2" />
<text  x="387.90" y="143.5" ></text>
</g>
<g >
<title>fancy_regex::vm::run (47,385 samples, 10.24%)</title><rect x="93.9" y="421" width="120.8" height="15.0" fill="rgb(251,144,26)" rx="2" ry="2" />
<text  x="96.87" y="431.5" >fancy_regex::vm..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (142 samples, 0.03%)</title><rect x="135.0" y="357" width="0.3" height="15.0" fill="rgb(238,26,10)" rx="2" ry="2" />
<text  x="137.97" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::get (138 samples, 0.03%)</title><rect x="480.9" y="293" width="0.4" height="15.0" fill="rgb(229,44,27)" rx="2" ry="2" />
<text  x="483.95" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (85,463 samples, 18.47%)</title><rect x="719.1" y="389" width="218.0" height="15.0" fill="rgb(247,9,39)" rx="2" ry="2" />
<text  x="722.11" y="399.5" >hashbrown::map::HashMap&lt;K,V,..</text>
</g>
<g >
<title>alloc::string::String::from_utf16 (252 samples, 0.05%)</title><rect x="18.4" y="501" width="0.7" height="15.0" fill="rgb(227,52,29)" rx="2" ry="2" />
<text  x="21.42" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (141 samples, 0.03%)</title><rect x="215.1" y="373" width="0.4" height="15.0" fill="rgb(252,226,4)" rx="2" ry="2" />
<text  x="218.10" y="383.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6,996 samples, 1.51%)</title><rect x="459.9" y="325" width="17.9" height="15.0" fill="rgb(250,214,16)" rx="2" ry="2" />
<text  x="462.91" y="335.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (414 samples, 0.09%)</title><rect x="1165.7" y="389" width="1.0" height="15.0" fill="rgb(240,97,40)" rx="2" ry="2" />
<text  x="1168.68" y="399.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (543 samples, 0.12%)</title><rect x="1084.7" y="389" width="1.4" height="15.0" fill="rgb(217,24,44)" rx="2" ry="2" />
<text  x="1087.71" y="399.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (162 samples, 0.04%)</title><rect x="1100.6" y="325" width="0.4" height="15.0" fill="rgb(233,98,23)" rx="2" ry="2" />
<text  x="1103.58" y="335.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,021 samples, 0.22%)</title><rect x="226.8" y="325" width="2.6" height="15.0" fill="rgb(246,14,26)" rx="2" ry="2" />
<text  x="229.80" y="335.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (162 samples, 0.04%)</title><rect x="93.5" y="421" width="0.4" height="15.0" fill="rgb(248,121,5)" rx="2" ry="2" />
<text  x="96.46" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (543 samples, 0.12%)</title><rect x="1084.7" y="405" width="1.4" height="15.0" fill="rgb(207,45,0)" rx="2" ry="2" />
<text  x="1087.71" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (128 samples, 0.03%)</title><rect x="358.7" y="165" width="0.3" height="15.0" fill="rgb(244,111,11)" rx="2" ry="2" />
<text  x="361.72" y="175.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (191 samples, 0.04%)</title><rect x="346.2" y="213" width="0.5" height="15.0" fill="rgb(210,222,32)" rx="2" ry="2" />
<text  x="349.18" y="223.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (12,771 samples, 2.76%)</title><rect x="543.9" y="325" width="32.5" height="15.0" fill="rgb(222,159,46)" rx="2" ry="2" />
<text  x="546.85" y="335.5" >al..</text>
</g>
<g >
<title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,637 samples, 0.35%)</title><rect x="1154.4" y="373" width="4.2" height="15.0" fill="rgb(209,46,54)" rx="2" ry="2" />
<text  x="1157.42" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_param (19,172 samples, 4.14%)</title><rect x="1039.7" y="453" width="48.9" height="15.0" fill="rgb(216,176,32)" rx="2" ry="2" />
<text  x="1042.69" y="463.5" >suda..</text>
</g>
<g >
<title>nom::number::complete::le_u8 (285 samples, 0.06%)</title><rect x="313.2" y="245" width="0.7" height="15.0" fill="rgb(222,134,27)" rx="2" ry="2" />
<text  x="316.17" y="255.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::rewrite_input (16,174 samples, 3.50%)</title><rect x="1123.0" y="469" width="41.2" height="15.0" fill="rgb(207,184,31)" rx="2" ry="2" />
<text  x="1125.99" y="479.5" >sud..</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (121 samples, 0.03%)</title><rect x="314.3" y="309" width="0.3" height="15.0" fill="rgb(207,99,27)" rx="2" ry="2" />
<text  x="317.28" y="319.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::mecab_oov::MeCabOovPlugin::get_oov_node (5,964 samples, 1.29%)</title><rect x="1101.7" y="405" width="15.2" height="15.0" fill="rgb(214,65,6)" rx="2" ry="2" />
<text  x="1104.72" y="415.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (296 samples, 0.06%)</title><rect x="1042.4" y="421" width="0.7" height="15.0" fill="rgb(245,165,43)" rx="2" ry="2" />
<text  x="1045.39" y="431.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::is_empty (195 samples, 0.04%)</title><rect x="184.5" y="277" width="0.5" height="15.0" fill="rgb(229,3,6)" rx="2" ry="2" />
<text  x="187.48" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (368 samples, 0.08%)</title><rect x="45.9" y="501" width="0.9" height="15.0" fill="rgb(211,71,54)" rx="2" ry="2" />
<text  x="48.88" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::pool::PoolGuard&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt; (223 samples, 0.05%)</title><rect x="211.0" y="325" width="0.6" height="15.0" fill="rgb(242,193,45)" rx="2" ry="2" />
<text  x="214.01" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::output::Simple as sudachi::output::SudachiOutput&lt;T&gt;&gt;::write (163 samples, 0.04%)</title><rect x="78.1" y="469" width="0.4" height="15.0" fill="rgb(206,221,47)" rx="2" ry="2" />
<text  x="81.10" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,138 samples, 0.89%)</title><rect x="321.4" y="373" width="10.5" height="15.0" fill="rgb(243,157,6)" rx="2" ry="2" />
<text  x="324.35" y="383.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::mecab_oov::MeCabOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (9,054 samples, 1.96%)</title><rect x="1093.8" y="437" width="23.1" height="15.0" fill="rgb(209,117,17)" rx="2" ry="2" />
<text  x="1096.84" y="447.5" >&lt;..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (404 samples, 0.09%)</title><rect x="1123.6" y="389" width="1.0" height="15.0" fill="rgb(229,35,3)" rx="2" ry="2" />
<text  x="1126.61" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (5,073 samples, 1.10%)</title><rect x="372.6" y="149" width="12.9" height="15.0" fill="rgb(245,127,50)" rx="2" ry="2" />
<text  x="375.56" y="159.5" ></text>
</g>
<g >
<title>core::iter::adapters::process_results (164 samples, 0.04%)</title><rect x="244.8" y="341" width="0.4" height="15.0" fill="rgb(222,87,13)" rx="2" ry="2" />
<text  x="247.83" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20,390 samples, 4.41%)</title><rect x="771.4" y="293" width="52.0" height="15.0" fill="rgb(237,65,37)" rx="2" ry="2" />
<text  x="774.40" y="303.5" >&lt;core..</text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1,246 samples, 0.27%)</title><rect x="1014.7" y="341" width="3.1" height="15.0" fill="rgb(249,70,31)" rx="2" ry="2" />
<text  x="1017.65" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (693 samples, 0.15%)</title><rect x="238.1" y="341" width="1.7" height="15.0" fill="rgb(249,224,35)" rx="2" ry="2" />
<text  x="241.06" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (956 samples, 0.21%)</title><rect x="202.7" y="277" width="2.5" height="15.0" fill="rgb(243,38,11)" rx="2" ry="2" />
<text  x="205.74" y="287.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (632 samples, 0.14%)</title><rect x="1083.1" y="405" width="1.6" height="15.0" fill="rgb(254,147,11)" rx="2" ry="2" />
<text  x="1086.09" y="415.5" ></text>
</g>
<g >
<title>_int_realloc (861 samples, 0.19%)</title><rect x="364.7" y="53" width="2.2" height="15.0" fill="rgb(220,13,32)" rx="2" ry="2" />
<text  x="367.66" y="63.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (6,590 samples, 1.42%)</title><rect x="887.4" y="261" width="16.8" height="15.0" fill="rgb(215,102,48)" rx="2" ry="2" />
<text  x="890.42" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (291 samples, 0.06%)</title><rect x="1086.1" y="437" width="0.8" height="15.0" fill="rgb(222,219,19)" rx="2" ry="2" />
<text  x="1089.13" y="447.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,337 samples, 0.29%)</title><rect x="85.1" y="405" width="3.4" height="15.0" fill="rgb(248,114,45)" rx="2" ry="2" />
<text  x="88.13" y="415.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (400 samples, 0.09%)</title><rect x="1064.3" y="245" width="1.0" height="15.0" fill="rgb(245,192,25)" rx="2" ry="2" />
<text  x="1067.28" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (860 samples, 0.19%)</title><rect x="277.3" y="309" width="2.2" height="15.0" fill="rgb(246,223,38)" rx="2" ry="2" />
<text  x="280.34" y="319.5" ></text>
</g>
<g >
<title>nom::sequence::tuple::{{closure}} (4,244 samples, 0.92%)</title><rect x="303.8" y="341" width="10.8" height="15.0" fill="rgb(234,121,35)" rx="2" ry="2" />
<text  x="306.81" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2,829 samples, 0.61%)</title><rect x="1103.2" y="213" width="7.2" height="15.0" fill="rgb(248,79,10)" rx="2" ry="2" />
<text  x="1106.19" y="223.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (190 samples, 0.04%)</title><rect x="248.9" y="341" width="0.5" height="15.0" fill="rgb(212,140,36)" rx="2" ry="2" />
<text  x="251.92" y="351.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (447 samples, 0.10%)</title><rect x="480.4" y="389" width="1.2" height="15.0" fill="rgb(220,45,23)" rx="2" ry="2" />
<text  x="483.42" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::connect_cost_parser (28,256 samples, 6.11%)</title><rect x="937.1" y="405" width="72.1" height="15.0" fill="rgb(236,161,25)" rx="2" ry="2" />
<text  x="940.09" y="415.5" >sudachi:..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (32,993 samples, 7.13%)</title><rect x="739.3" y="325" width="84.1" height="15.0" fill="rgb(252,136,49)" rx="2" ry="2" />
<text  x="742.28" y="335.5" >&lt;core::ha..</text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (46,626 samples, 10.08%)</title><rect x="294.8" y="421" width="118.9" height="15.0" fill="rgb(222,217,52)" rx="2" ry="2" />
<text  x="297.82" y="431.5" >sudachi::dic::..</text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::build (151 samples, 0.03%)</title><rect x="1171.8" y="453" width="0.4" height="15.0" fill="rgb(234,24,11)" rx="2" ry="2" />
<text  x="1174.81" y="463.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (1,101 samples, 0.24%)</title><rect x="196.4" y="309" width="2.9" height="15.0" fill="rgb(213,45,26)" rx="2" ry="2" />
<text  x="199.45" y="319.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (273 samples, 0.06%)</title><rect x="348.9" y="277" width="0.7" height="15.0" fill="rgb(248,7,54)" rx="2" ry="2" />
<text  x="351.94" y="287.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::push (1,550 samples, 0.34%)</title><rect x="132.4" y="405" width="4.0" height="15.0" fill="rgb(231,14,9)" rx="2" ry="2" />
<text  x="135.42" y="415.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (150 samples, 0.03%)</title><rect x="349.1" y="197" width="0.4" height="15.0" fill="rgb(219,2,6)" rx="2" ry="2" />
<text  x="352.14" y="207.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (317 samples, 0.07%)</title><rect x="1065.3" y="357" width="0.8" height="15.0" fill="rgb(208,161,3)" rx="2" ry="2" />
<text  x="1068.30" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (138 samples, 0.03%)</title><rect x="12.4" y="453" width="0.3" height="15.0" fill="rgb(209,32,0)" rx="2" ry="2" />
<text  x="15.38" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (742 samples, 0.16%)</title><rect x="306.7" y="229" width="1.9" height="15.0" fill="rgb(243,61,48)" rx="2" ry="2" />
<text  x="309.74" y="239.5" ></text>
</g>
<g >
<title>core::cmp::max (127 samples, 0.03%)</title><rect x="367.8" y="133" width="0.3" height="15.0" fill="rgb(239,214,28)" rx="2" ry="2" />
<text  x="370.80" y="143.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (199 samples, 0.04%)</title><rect x="505.3" y="421" width="0.5" height="15.0" fill="rgb(206,89,33)" rx="2" ry="2" />
<text  x="508.32" y="431.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (213 samples, 0.05%)</title><rect x="1189.2" y="453" width="0.6" height="15.0" fill="rgb(244,52,51)" rx="2" ry="2" />
<text  x="1192.24" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (194 samples, 0.04%)</title><rect x="35.7" y="469" width="0.5" height="15.0" fill="rgb(246,114,31)" rx="2" ry="2" />
<text  x="38.67" y="479.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (2,587 samples, 0.56%)</title><rect x="223.9" y="389" width="6.6" height="15.0" fill="rgb(233,68,11)" rx="2" ry="2" />
<text  x="226.95" y="399.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (543 samples, 0.12%)</title><rect x="287.6" y="437" width="1.4" height="15.0" fill="rgb(218,35,4)" rx="2" ry="2" />
<text  x="290.61" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::TrieEntryIter::get (8,747 samples, 1.89%)</title><rect x="437.6" y="325" width="22.3" height="15.0" fill="rgb(249,180,12)" rx="2" ry="2" />
<text  x="440.61" y="335.5" >s..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (898 samples, 0.19%)</title><rect x="513.0" y="437" width="2.3" height="15.0" fill="rgb(218,193,16)" rx="2" ry="2" />
<text  x="515.98" y="447.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (178 samples, 0.04%)</title><rect x="1110.8" y="309" width="0.4" height="15.0" fill="rgb(222,58,41)" rx="2" ry="2" />
<text  x="1113.78" y="319.5" ></text>
</g>
<g >
<title>core::ptr::write (6,655 samples, 1.44%)</title><rect x="600.0" y="421" width="17.0" height="15.0" fill="rgb(228,199,51)" rx="2" ry="2" />
<text  x="602.98" y="431.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::reset (3,992 samples, 0.86%)</title><rect x="1174.4" y="485" width="10.2" height="15.0" fill="rgb(223,175,44)" rx="2" ry="2" />
<text  x="1177.45" y="495.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::Imp&lt;S&gt;::earliest_find_at (557 samples, 0.12%)</title><rect x="1132.2" y="357" width="1.4" height="15.0" fill="rgb(232,124,51)" rx="2" ry="2" />
<text  x="1135.21" y="367.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (239 samples, 0.05%)</title><rect x="1085.4" y="341" width="0.7" height="15.0" fill="rgb(248,215,52)" rx="2" ry="2" />
<text  x="1088.45" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (3,102 samples, 0.67%)</title><rect x="390.2" y="165" width="7.9" height="15.0" fill="rgb(248,216,39)" rx="2" ry="2" />
<text  x="393.21" y="175.5" ></text>
</g>
<g >
<title>_int_free (393 samples, 0.08%)</title><rect x="242.9" y="325" width="1.0" height="15.0" fill="rgb(222,67,46)" rx="2" ry="2" />
<text  x="245.87" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (475 samples, 0.10%)</title><rect x="302.4" y="357" width="1.2" height="15.0" fill="rgb(211,126,31)" rx="2" ry="2" />
<text  x="305.35" y="367.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (317 samples, 0.07%)</title><rect x="1065.3" y="293" width="0.8" height="15.0" fill="rgb(225,41,27)" rx="2" ry="2" />
<text  x="1068.30" y="303.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (543 samples, 0.12%)</title><rect x="1084.7" y="373" width="1.4" height="15.0" fill="rgb(226,85,25)" rx="2" ry="2" />
<text  x="1087.71" y="383.5" ></text>
</g>
<g >
<title>[[heap]] (3,602 samples, 0.78%)</title><rect x="11.9" y="517" width="9.2" height="15.0" fill="rgb(207,147,12)" rx="2" ry="2" />
<text  x="14.93" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (417 samples, 0.09%)</title><rect x="245.4" y="373" width="1.0" height="15.0" fill="rgb(229,206,11)" rx="2" ry="2" />
<text  x="248.38" y="383.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (126 samples, 0.03%)</title><rect x="49.8" y="453" width="0.3" height="15.0" fill="rgb(223,135,21)" rx="2" ry="2" />
<text  x="52.76" y="463.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,748 samples, 0.38%)</title><rect x="1111.4" y="341" width="4.4" height="15.0" fill="rgb(232,146,17)" rx="2" ry="2" />
<text  x="1114.38" y="351.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (3,263 samples, 0.71%)</title><rect x="1103.1" y="341" width="8.3" height="15.0" fill="rgb(233,108,1)" rx="2" ry="2" />
<text  x="1106.06" y="351.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (200 samples, 0.04%)</title><rect x="219.8" y="245" width="0.5" height="15.0" fill="rgb(242,97,33)" rx="2" ry="2" />
<text  x="222.78" y="255.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (152 samples, 0.03%)</title><rect x="385.5" y="261" width="0.4" height="15.0" fill="rgb(228,171,19)" rx="2" ry="2" />
<text  x="388.50" y="271.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (138 samples, 0.03%)</title><rect x="1098.0" y="357" width="0.4" height="15.0" fill="rgb(248,175,38)" rx="2" ry="2" />
<text  x="1101.00" y="367.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (317 samples, 0.07%)</title><rect x="1065.3" y="341" width="0.8" height="15.0" fill="rgb(223,217,3)" rx="2" ry="2" />
<text  x="1068.30" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (178 samples, 0.04%)</title><rect x="90.3" y="437" width="0.5" height="15.0" fill="rgb(243,66,4)" rx="2" ry="2" />
<text  x="93.32" y="447.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,722 samples, 0.59%)</title><rect x="339.1" y="293" width="6.9" height="15.0" fill="rgb(251,146,14)" rx="2" ry="2" />
<text  x="342.07" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (5,145 samples, 1.11%)</title><rect x="372.4" y="245" width="13.1" height="15.0" fill="rgb(209,176,30)" rx="2" ry="2" />
<text  x="375.37" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (264 samples, 0.06%)</title><rect x="312.3" y="117" width="0.7" height="15.0" fill="rgb(236,104,38)" rx="2" ry="2" />
<text  x="315.31" y="127.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::uppercase::lookup (347 samples, 0.08%)</title><rect x="1134.0" y="357" width="0.9" height="15.0" fill="rgb(222,213,1)" rx="2" ry="2" />
<text  x="1137.04" y="367.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (16,844 samples, 3.64%)</title><rect x="171.8" y="373" width="42.9" height="15.0" fill="rgb(230,127,14)" rx="2" ry="2" />
<text  x="174.76" y="383.5" >rege..</text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (396 samples, 0.09%)</title><rect x="433.1" y="325" width="1.0" height="15.0" fill="rgb(251,61,44)" rx="2" ry="2" />
<text  x="436.06" y="335.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max (306 samples, 0.07%)</title><rect x="597.0" y="341" width="0.8" height="15.0" fill="rgb(212,85,28)" rx="2" ry="2" />
<text  x="600.02" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,350 samples, 0.72%)</title><rect x="1175.3" y="309" width="8.6" height="15.0" fill="rgb(248,4,38)" rx="2" ry="2" />
<text  x="1178.34" y="319.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (255 samples, 0.06%)</title><rect x="117.3" y="389" width="0.6" height="15.0" fill="rgb(225,220,44)" rx="2" ry="2" />
<text  x="120.28" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (85,463 samples, 18.47%)</title><rect x="719.1" y="373" width="218.0" height="15.0" fill="rgb(224,104,11)" rx="2" ry="2" />
<text  x="722.11" y="383.5" >hashbrown::map::HashMap&lt;K,V,..</text>
</g>
<g >
<title>regex::re_trait::RegularExpression::locations (174 samples, 0.04%)</title><rect x="1158.2" y="357" width="0.4" height="15.0" fill="rgb(249,100,10)" rx="2" ry="2" />
<text  x="1161.15" y="367.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::PathRewritePlugin::concatenate::{{closure}} (446 samples, 0.10%)</title><rect x="245.3" y="389" width="1.2" height="15.0" fill="rgb(254,103,20)" rx="2" ry="2" />
<text  x="248.32" y="399.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (139 samples, 0.03%)</title><rect x="1162.2" y="69" width="0.4" height="15.0" fill="rgb(218,20,32)" rx="2" ry="2" />
<text  x="1165.22" y="79.5" ></text>
</g>
<g >
<title>aho_corasick::dfa::DFA&lt;S&gt;::earliest_find_at (557 samples, 0.12%)</title><rect x="1132.2" y="341" width="1.4" height="15.0" fill="rgb(205,205,46)" rx="2" ry="2" />
<text  x="1135.21" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (164 samples, 0.04%)</title><rect x="271.6" y="453" width="0.4" height="15.0" fill="rgb(243,120,37)" rx="2" ry="2" />
<text  x="274.57" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (1,180 samples, 0.26%)</title><rect x="215.9" y="85" width="3.0" height="15.0" fill="rgb(227,110,29)" rx="2" ry="2" />
<text  x="218.94" y="95.5" ></text>
</g>
<g >
<title>malloc_consolidate (127 samples, 0.03%)</title><rect x="69.7" y="501" width="0.3" height="15.0" fill="rgb(249,66,3)" rx="2" ry="2" />
<text  x="72.67" y="511.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (213 samples, 0.05%)</title><rect x="1189.2" y="357" width="0.6" height="15.0" fill="rgb(246,148,54)" rx="2" ry="2" />
<text  x="1192.24" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (139 samples, 0.03%)</title><rect x="1162.2" y="85" width="0.4" height="15.0" fill="rgb(228,121,45)" rx="2" ry="2" />
<text  x="1165.22" y="95.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,960 samples, 0.86%)</title><rect x="304.0" y="309" width="10.1" height="15.0" fill="rgb(207,73,47)" rx="2" ry="2" />
<text  x="306.99" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (128 samples, 0.03%)</title><rect x="348.6" y="213" width="0.3" height="15.0" fill="rgb(235,185,24)" rx="2" ry="2" />
<text  x="351.61" y="223.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::next_state_no_fail (582 samples, 0.13%)</title><rect x="1129.1" y="277" width="1.5" height="15.0" fill="rgb(229,157,28)" rx="2" ry="2" />
<text  x="1132.07" y="287.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (148 samples, 0.03%)</title><rect x="231.8" y="485" width="0.4" height="15.0" fill="rgb(245,97,48)" rx="2" ry="2" />
<text  x="234.84" y="495.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (332 samples, 0.07%)</title><rect x="282.6" y="421" width="0.9" height="15.0" fill="rgb(252,37,23)" rx="2" ry="2" />
<text  x="285.62" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,479 samples, 0.75%)</title><rect x="1175.2" y="373" width="8.9" height="15.0" fill="rgb(247,0,48)" rx="2" ry="2" />
<text  x="1178.18" y="383.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i32 (257 samples, 0.06%)</title><rect x="346.0" y="293" width="0.7" height="15.0" fill="rgb(208,144,35)" rx="2" ry="2" />
<text  x="349.01" y="303.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (150 samples, 0.03%)</title><rect x="349.1" y="245" width="0.4" height="15.0" fill="rgb(226,148,16)" rx="2" ry="2" />
<text  x="352.14" y="255.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (236 samples, 0.05%)</title><rect x="1167.2" y="421" width="0.6" height="15.0" fill="rgb(225,143,5)" rx="2" ry="2" />
<text  x="1170.17" y="431.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::ahocorasick::FindIter&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (950 samples, 0.21%)</title><rect x="1128.1" y="373" width="2.5" height="15.0" fill="rgb(209,122,35)" rx="2" ry="2" />
<text  x="1131.13" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,248 samples, 0.27%)</title><rect x="215.9" y="149" width="3.1" height="15.0" fill="rgb(207,68,4)" rx="2" ry="2" />
<text  x="218.85" y="159.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::PathRewritePlugin::concatenate (1,436 samples, 0.31%)</title><rect x="244.4" y="421" width="3.6" height="15.0" fill="rgb(228,6,12)" rx="2" ry="2" />
<text  x="247.37" y="431.5" ></text>
</g>
<g >
<title>__rdl_alloc (124 samples, 0.03%)</title><rect x="1110.4" y="213" width="0.3" height="15.0" fill="rgb(251,105,29)" rx="2" ry="2" />
<text  x="1113.40" y="223.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (138 samples, 0.03%)</title><rect x="220.9" y="293" width="0.3" height="15.0" fill="rgb(231,216,8)" rx="2" ry="2" />
<text  x="223.85" y="303.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2,355 samples, 0.51%)</title><rect x="765.4" y="277" width="6.0" height="15.0" fill="rgb(212,181,37)" rx="2" ry="2" />
<text  x="768.39" y="287.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (244 samples, 0.05%)</title><rect x="131.1" y="389" width="0.7" height="15.0" fill="rgb(208,30,23)" rx="2" ry="2" />
<text  x="134.14" y="399.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (242 samples, 0.05%)</title><rect x="1165.8" y="357" width="0.6" height="15.0" fill="rgb(238,159,28)" rx="2" ry="2" />
<text  x="1168.76" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (491 samples, 0.11%)</title><rect x="302.3" y="373" width="1.3" height="15.0" fill="rgb(220,209,19)" rx="2" ry="2" />
<text  x="305.31" y="383.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (214 samples, 0.05%)</title><rect x="1066.4" y="309" width="0.5" height="15.0" fill="rgb(221,30,13)" rx="2" ry="2" />
<text  x="1069.40" y="319.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (413 samples, 0.09%)</title><rect x="307.2" y="69" width="1.0" height="15.0" fill="rgb(225,204,30)" rx="2" ry="2" />
<text  x="310.16" y="79.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (146 samples, 0.03%)</title><rect x="55.6" y="501" width="0.3" height="15.0" fill="rgb(241,127,54)" rx="2" ry="2" />
<text  x="58.56" y="511.5" ></text>
</g>
<g >
<title>&lt;fancy_regex::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (3,173 samples, 0.69%)</title><rect x="222.5" y="437" width="8.1" height="15.0" fill="rgb(217,161,7)" rx="2" ry="2" />
<text  x="225.54" y="447.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (602 samples, 0.13%)</title><rect x="1185.7" y="501" width="1.5" height="15.0" fill="rgb(210,74,39)" rx="2" ry="2" />
<text  x="1188.68" y="511.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (141 samples, 0.03%)</title><rect x="43.8" y="501" width="0.3" height="15.0" fill="rgb(231,212,54)" rx="2" ry="2" />
<text  x="46.76" y="511.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (128 samples, 0.03%)</title><rect x="348.6" y="181" width="0.3" height="15.0" fill="rgb(208,185,25)" rx="2" ry="2" />
<text  x="351.61" y="191.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (213 samples, 0.05%)</title><rect x="1189.2" y="485" width="0.6" height="15.0" fill="rgb(225,60,14)" rx="2" ry="2" />
<text  x="1192.24" y="495.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (4,167 samples, 0.90%)</title><rect x="199.3" y="309" width="10.6" height="15.0" fill="rgb(242,87,43)" rx="2" ry="2" />
<text  x="202.25" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (120 samples, 0.03%)</title><rect x="1137.0" y="245" width="0.3" height="15.0" fill="rgb(246,67,10)" rx="2" ry="2" />
<text  x="1140.01" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (6,179 samples, 1.34%)</title><rect x="1020.5" y="341" width="15.8" height="15.0" fill="rgb(229,43,10)" rx="2" ry="2" />
<text  x="1023.49" y="351.5" ></text>
</g>
<g >
<title>_int_free (166 samples, 0.04%)</title><rect x="304.8" y="245" width="0.4" height="15.0" fill="rgb(233,190,5)" rx="2" ry="2" />
<text  x="307.81" y="255.5" ></text>
</g>
<g >
<title>_int_free (154 samples, 0.03%)</title><rect x="278.3" y="277" width="0.4" height="15.0" fill="rgb(215,215,36)" rx="2" ry="2" />
<text  x="281.29" y="287.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (85,463 samples, 18.47%)</title><rect x="719.1" y="405" width="218.0" height="15.0" fill="rgb(218,150,7)" rx="2" ry="2" />
<text  x="722.11" y="415.5" >std::collections::hash::map:..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (271 samples, 0.06%)</title><rect x="597.0" y="325" width="0.7" height="15.0" fill="rgb(214,30,29)" rx="2" ry="2" />
<text  x="600.02" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (144 samples, 0.03%)</title><rect x="246.7" y="325" width="0.4" height="15.0" fill="rgb(224,219,51)" rx="2" ry="2" />
<text  x="249.74" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (283 samples, 0.06%)</title><rect x="245.5" y="245" width="0.7" height="15.0" fill="rgb(210,31,24)" rx="2" ry="2" />
<text  x="248.49" y="255.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (136 samples, 0.03%)</title><rect x="1123.9" y="341" width="0.3" height="15.0" fill="rgb(245,140,10)" rx="2" ry="2" />
<text  x="1126.88" y="351.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (139 samples, 0.03%)</title><rect x="1100.6" y="309" width="0.3" height="15.0" fill="rgb(207,133,9)" rx="2" ry="2" />
<text  x="1103.58" y="319.5" ></text>
</g>
<g >
<title>__libc_write (143 samples, 0.03%)</title><rect x="81.9" y="341" width="0.3" height="15.0" fill="rgb(218,150,7)" rx="2" ry="2" />
<text  x="84.88" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,184 samples, 0.69%)</title><rect x="390.0" y="229" width="8.1" height="15.0" fill="rgb(230,134,36)" rx="2" ry="2" />
<text  x="393.01" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (341 samples, 0.07%)</title><rect x="148.7" y="309" width="0.9" height="15.0" fill="rgb(212,82,7)" rx="2" ry="2" />
<text  x="151.74" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (648 samples, 0.14%)</title><rect x="144.2" y="389" width="1.6" height="15.0" fill="rgb(216,227,37)" rx="2" ry="2" />
<text  x="147.17" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (316 samples, 0.07%)</title><rect x="1018.5" y="389" width="0.8" height="15.0" fill="rgb(247,116,30)" rx="2" ry="2" />
<text  x="1021.50" y="399.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (4,515 samples, 0.98%)</title><rect x="386.6" y="277" width="11.6" height="15.0" fill="rgb(222,32,33)" rx="2" ry="2" />
<text  x="389.64" y="287.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::swap_result (289 samples, 0.06%)</title><rect x="232.9" y="469" width="0.7" height="15.0" fill="rgb(222,133,49)" rx="2" ry="2" />
<text  x="235.88" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (185 samples, 0.04%)</title><rect x="1017.4" y="277" width="0.4" height="15.0" fill="rgb(206,20,25)" rx="2" ry="2" />
<text  x="1020.36" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_state (629 samples, 0.14%)</title><rect x="207.7" y="293" width="1.6" height="15.0" fill="rgb(252,7,6)" rx="2" ry="2" />
<text  x="210.72" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (68,103 samples, 14.72%)</title><rect x="730.6" y="357" width="173.7" height="15.0" fill="rgb(210,193,11)" rx="2" ry="2" />
<text  x="733.57" y="367.5" >hashbrown::map::make_h..</text>
</g>
<g >
<title>core::str::validations::next_code_point (412 samples, 0.09%)</title><rect x="220.6" y="325" width="1.1" height="15.0" fill="rgb(221,189,23)" rx="2" ry="2" />
<text  x="223.61" y="335.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify_bucket (853 samples, 0.18%)</title><rect x="1160.5" y="149" width="2.2" height="15.0" fill="rgb(227,208,24)" rx="2" ry="2" />
<text  x="1163.50" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (418 samples, 0.09%)</title><rect x="1136.2" y="293" width="1.1" height="15.0" fill="rgb(233,149,28)" rx="2" ry="2" />
<text  x="1139.25" y="303.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (264 samples, 0.06%)</title><rect x="202.1" y="261" width="0.6" height="15.0" fill="rgb(247,153,35)" rx="2" ry="2" />
<text  x="205.06" y="271.5" ></text>
</g>
<g >
<title>&lt;unicode_normalization::recompose::Recompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (296 samples, 0.06%)</title><rect x="1135.2" y="357" width="0.8" height="15.0" fill="rgb(211,157,38)" rx="2" ry="2" />
<text  x="1138.20" y="367.5" ></text>
</g>
<g >
<title>_int_free (2,029 samples, 0.44%)</title><rect x="264.7" y="309" width="5.2" height="15.0" fill="rgb(251,111,48)" rx="2" ry="2" />
<text  x="267.68" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::connect_cost_parser (213 samples, 0.05%)</title><rect x="1189.2" y="501" width="0.6" height="15.0" fill="rgb(216,185,13)" rx="2" ry="2" />
<text  x="1192.24" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,144 samples, 0.25%)</title><rect x="277.3" y="373" width="2.9" height="15.0" fill="rgb(220,147,21)" rx="2" ry="2" />
<text  x="280.26" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (118 samples, 0.03%)</title><rect x="249.0" y="213" width="0.3" height="15.0" fill="rgb(211,183,50)" rx="2" ry="2" />
<text  x="251.98" y="223.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (170 samples, 0.04%)</title><rect x="44.1" y="501" width="0.5" height="15.0" fill="rgb(235,145,50)" rx="2" ry="2" />
<text  x="47.12" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (150 samples, 0.03%)</title><rect x="231.1" y="485" width="0.4" height="15.0" fill="rgb(233,67,41)" rx="2" ry="2" />
<text  x="234.13" y="495.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (22,780 samples, 4.92%)</title><rect x="944.3" y="309" width="58.1" height="15.0" fill="rgb(243,154,23)" rx="2" ry="2" />
<text  x="947.29" y="319.5" >nom::c..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (188 samples, 0.04%)</title><rect x="143.7" y="389" width="0.5" height="15.0" fill="rgb(244,169,24)" rx="2" ry="2" />
<text  x="146.69" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (462 samples, 0.10%)</title><rect x="311.9" y="197" width="1.2" height="15.0" fill="rgb(227,88,0)" rx="2" ry="2" />
<text  x="314.88" y="207.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::quick_check (4,553 samples, 0.98%)</title><rect x="1142.6" y="373" width="11.6" height="15.0" fill="rgb(243,1,20)" rx="2" ry="2" />
<text  x="1145.59" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (2,463 samples, 0.53%)</title><rect x="256.9" y="341" width="6.3" height="15.0" fill="rgb(205,193,1)" rx="2" ry="2" />
<text  x="259.90" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (170 samples, 0.04%)</title><rect x="163.5" y="293" width="0.4" height="15.0" fill="rgb(215,178,25)" rx="2" ry="2" />
<text  x="166.45" y="303.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (825 samples, 0.18%)</title><rect x="573.4" y="245" width="2.1" height="15.0" fill="rgb(241,59,49)" rx="2" ry="2" />
<text  x="576.38" y="255.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at (214 samples, 0.05%)</title><rect x="1066.4" y="325" width="0.5" height="15.0" fill="rgb(254,169,16)" rx="2" ry="2" />
<text  x="1069.40" y="335.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (211 samples, 0.05%)</title><rect x="1188.5" y="469" width="0.5" height="15.0" fill="rgb(214,97,4)" rx="2" ry="2" />
<text  x="1191.47" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (190 samples, 0.04%)</title><rect x="248.9" y="325" width="0.5" height="15.0" fill="rgb(251,2,40)" rx="2" ry="2" />
<text  x="251.92" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::index (292 samples, 0.06%)</title><rect x="91.6" y="421" width="0.7" height="15.0" fill="rgb(222,164,12)" rx="2" ry="2" />
<text  x="94.58" y="431.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,223 samples, 0.26%)</title><rect x="1154.8" y="325" width="3.1" height="15.0" fill="rgb(219,145,19)" rx="2" ry="2" />
<text  x="1157.82" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (281 samples, 0.06%)</title><rect x="504.1" y="437" width="0.7" height="15.0" fill="rgb(232,104,15)" rx="2" ry="2" />
<text  x="507.10" y="447.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (123 samples, 0.03%)</title><rect x="308.6" y="229" width="0.3" height="15.0" fill="rgb(243,226,10)" rx="2" ry="2" />
<text  x="311.63" y="239.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (2,355 samples, 0.51%)</title><rect x="931.1" y="229" width="6.0" height="15.0" fill="rgb(219,26,35)" rx="2" ry="2" />
<text  x="934.08" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,200 samples, 0.26%)</title><rect x="910.5" y="277" width="3.0" height="15.0" fill="rgb(215,134,17)" rx="2" ry="2" />
<text  x="913.47" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::dictionary::JapaneseDictionary::from_cfg (307 samples, 0.07%)</title><rect x="1184.6" y="485" width="0.8" height="15.0" fill="rgb(241,155,6)" rx="2" ry="2" />
<text  x="1187.63" y="495.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (613 samples, 0.13%)</title><rect x="285.7" y="453" width="1.6" height="15.0" fill="rgb(238,73,47)" rx="2" ry="2" />
<text  x="288.74" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,546 samples, 1.63%)</title><rect x="251.3" y="437" width="19.3" height="15.0" fill="rgb(207,60,47)" rx="2" ry="2" />
<text  x="254.34" y="447.5" ></text>
</g>
<g >
<title>_int_free (142 samples, 0.03%)</title><rect x="250.9" y="373" width="0.3" height="15.0" fill="rgb(216,120,6)" rx="2" ry="2" />
<text  x="253.87" y="383.5" ></text>
</g>
<g >
<title>sudachi (462,638 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(222,70,26)" rx="2" ry="2" />
<text  x="13.05" y="543.5" >sudachi</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (124 samples, 0.03%)</title><rect x="215.1" y="357" width="0.4" height="15.0" fill="rgb(222,173,30)" rx="2" ry="2" />
<text  x="218.14" y="367.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite::{{closure}} (15,001 samples, 3.24%)</title><rect x="1126.0" y="421" width="38.2" height="15.0" fill="rgb(213,165,23)" rx="2" ry="2" />
<text  x="1128.98" y="431.5" >sud..</text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (225 samples, 0.05%)</title><rect x="221.8" y="437" width="0.6" height="15.0" fill="rgb(215,162,29)" rx="2" ry="2" />
<text  x="224.79" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (151 samples, 0.03%)</title><rect x="282.1" y="437" width="0.4" height="15.0" fill="rgb(243,174,13)" rx="2" ry="2" />
<text  x="285.14" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (185 samples, 0.04%)</title><rect x="72.8" y="501" width="0.4" height="15.0" fill="rgb(254,115,29)" rx="2" ry="2" />
<text  x="75.77" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,384 samples, 0.95%)</title><rect x="252.0" y="389" width="11.2" height="15.0" fill="rgb(246,72,25)" rx="2" ry="2" />
<text  x="255.00" y="399.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (166 samples, 0.04%)</title><rect x="1066.5" y="245" width="0.4" height="15.0" fill="rgb(218,33,15)" rx="2" ry="2" />
<text  x="1069.52" y="255.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (31,453 samples, 6.80%)</title><rect x="333.2" y="373" width="80.2" height="15.0" fill="rgb(254,77,46)" rx="2" ry="2" />
<text  x="336.23" y="383.5" >&lt;F as nom..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (693 samples, 0.15%)</title><rect x="238.1" y="293" width="1.7" height="15.0" fill="rgb(253,53,22)" rx="2" ry="2" />
<text  x="241.06" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (129 samples, 0.03%)</title><rect x="348.6" y="229" width="0.3" height="15.0" fill="rgb(236,53,15)" rx="2" ry="2" />
<text  x="351.61" y="239.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,943 samples, 0.42%)</title><rect x="1159.0" y="373" width="5.0" height="15.0" fill="rgb(221,13,26)" rx="2" ry="2" />
<text  x="1162.01" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (861 samples, 0.19%)</title><rect x="309.0" y="213" width="2.2" height="15.0" fill="rgb(245,192,29)" rx="2" ry="2" />
<text  x="311.99" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (150 samples, 0.03%)</title><rect x="64.6" y="501" width="0.4" height="15.0" fill="rgb(248,185,1)" rx="2" ry="2" />
<text  x="67.63" y="511.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::grammar::ConnPair as core::hash::Hash&gt;::hash (21,081 samples, 4.56%)</title><rect x="850.5" y="341" width="53.7" height="15.0" fill="rgb(244,105,50)" rx="2" ry="2" />
<text  x="853.48" y="351.5" >&lt;suda..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (259 samples, 0.06%)</title><rect x="540.1" y="357" width="0.7" height="15.0" fill="rgb(250,26,23)" rx="2" ry="2" />
<text  x="543.11" y="367.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (170 samples, 0.04%)</title><rect x="356.1" y="229" width="0.5" height="15.0" fill="rgb(205,224,22)" rx="2" ry="2" />
<text  x="359.12" y="239.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (836 samples, 0.18%)</title><rect x="238.1" y="373" width="2.1" height="15.0" fill="rgb(212,227,50)" rx="2" ry="2" />
<text  x="241.06" y="383.5" ></text>
</g>
<g >
<title>&lt;T as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (668 samples, 0.14%)</title><rect x="425.7" y="453" width="1.7" height="15.0" fill="rgb(241,40,45)" rx="2" ry="2" />
<text  x="428.69" y="463.5" ></text>
</g>
<g >
<title>_int_free (594 samples, 0.13%)</title><rect x="31.6" y="501" width="1.5" height="15.0" fill="rgb(213,151,51)" rx="2" ry="2" />
<text  x="34.62" y="511.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (587 samples, 0.13%)</title><rect x="283.6" y="405" width="1.5" height="15.0" fill="rgb(239,73,7)" rx="2" ry="2" />
<text  x="286.56" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (769 samples, 0.17%)</title><rect x="242.0" y="437" width="2.0" height="15.0" fill="rgb(210,151,50)" rx="2" ry="2" />
<text  x="245.00" y="447.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::repeat (195 samples, 0.04%)</title><rect x="1016.9" y="245" width="0.5" height="15.0" fill="rgb(206,23,5)" rx="2" ry="2" />
<text  x="1019.86" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,587 samples, 0.34%)</title><rect x="1061.3" y="357" width="4.0" height="15.0" fill="rgb(215,57,48)" rx="2" ry="2" />
<text  x="1064.25" y="367.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search_by (968 samples, 0.21%)</title><rect x="1169.3" y="421" width="2.4" height="15.0" fill="rgb(250,168,25)" rx="2" ry="2" />
<text  x="1172.27" y="431.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (705 samples, 0.15%)</title><rect x="387.3" y="245" width="1.7" height="15.0" fill="rgb(221,153,20)" rx="2" ry="2" />
<text  x="390.25" y="255.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (375 samples, 0.08%)</title><rect x="213.8" y="293" width="0.9" height="15.0" fill="rgb(233,28,44)" rx="2" ry="2" />
<text  x="216.76" y="303.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memchr (189 samples, 0.04%)</title><rect x="76.6" y="373" width="0.5" height="15.0" fill="rgb(211,176,24)" rx="2" ry="2" />
<text  x="79.59" y="383.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (1,208 samples, 0.26%)</title><rect x="666.7" y="421" width="3.1" height="15.0" fill="rgb(217,60,50)" rx="2" ry="2" />
<text  x="669.68" y="431.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::bitset_search (477 samples, 0.10%)</title><rect x="1126.5" y="325" width="1.3" height="15.0" fill="rgb(249,67,23)" rx="2" ry="2" />
<text  x="1129.54" y="335.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (172 samples, 0.04%)</title><rect x="241.6" y="437" width="0.4" height="15.0" fill="rgb(220,7,44)" rx="2" ry="2" />
<text  x="244.56" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (6,177 samples, 1.34%)</title><rect x="1020.5" y="325" width="15.8" height="15.0" fill="rgb(224,14,27)" rx="2" ry="2" />
<text  x="1023.50" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (119 samples, 0.03%)</title><rect x="215.2" y="341" width="0.3" height="15.0" fill="rgb(236,67,52)" rx="2" ry="2" />
<text  x="218.15" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3,153 samples, 0.68%)</title><rect x="390.1" y="213" width="8.0" height="15.0" fill="rgb(214,96,46)" rx="2" ry="2" />
<text  x="393.08" y="223.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,030 samples, 0.22%)</title><rect x="1051.2" y="421" width="2.7" height="15.0" fill="rgb(253,224,28)" rx="2" ry="2" />
<text  x="1054.23" y="431.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,927 samples, 0.42%)</title><rect x="215.5" y="309" width="4.9" height="15.0" fill="rgb(249,56,34)" rx="2" ry="2" />
<text  x="218.47" y="319.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (752 samples, 0.16%)</title><rect x="157.4" y="341" width="1.9" height="15.0" fill="rgb(223,147,46)" rx="2" ry="2" />
<text  x="160.43" y="351.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (255 samples, 0.06%)</title><rect x="117.3" y="373" width="0.6" height="15.0" fill="rgb(226,133,53)" rx="2" ry="2" />
<text  x="120.28" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,704 samples, 0.58%)</title><rect x="880.5" y="261" width="6.9" height="15.0" fill="rgb(208,135,26)" rx="2" ry="2" />
<text  x="883.50" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::set_range (358 samples, 0.08%)</title><rect x="1009.2" y="437" width="0.9" height="15.0" fill="rgb(248,64,41)" rx="2" ry="2" />
<text  x="1012.16" y="447.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (794 samples, 0.17%)</title><rect x="1155.6" y="261" width="2.0" height="15.0" fill="rgb(223,130,4)" rx="2" ry="2" />
<text  x="1158.57" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (2,764 samples, 0.60%)</title><rect x="161.7" y="325" width="7.1" height="15.0" fill="rgb(252,99,13)" rx="2" ry="2" />
<text  x="164.73" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (760 samples, 0.16%)</title><rect x="234.8" y="469" width="2.0" height="15.0" fill="rgb(207,8,41)" rx="2" ry="2" />
<text  x="237.83" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (7,510 samples, 1.62%)</title><rect x="576.4" y="341" width="19.2" height="15.0" fill="rgb(250,97,20)" rx="2" ry="2" />
<text  x="579.42" y="351.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (295 samples, 0.06%)</title><rect x="1008.4" y="309" width="0.8" height="15.0" fill="rgb(224,91,1)" rx="2" ry="2" />
<text  x="1011.40" y="319.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (238 samples, 0.05%)</title><rect x="313.3" y="197" width="0.6" height="15.0" fill="rgb(211,90,38)" rx="2" ry="2" />
<text  x="316.29" y="207.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (2,061 samples, 0.45%)</title><rect x="200.2" y="293" width="5.2" height="15.0" fill="rgb(226,101,10)" rx="2" ry="2" />
<text  x="203.17" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (5,249 samples, 1.13%)</title><rect x="562.1" y="261" width="13.4" height="15.0" fill="rgb(211,107,53)" rx="2" ry="2" />
<text  x="565.09" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (176 samples, 0.04%)</title><rect x="250.8" y="421" width="0.4" height="15.0" fill="rgb(230,86,37)" rx="2" ry="2" />
<text  x="253.79" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,568 samples, 0.77%)</title><rect x="321.5" y="261" width="9.1" height="15.0" fill="rgb(216,62,13)" rx="2" ry="2" />
<text  x="324.45" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::arith::AddAssign&lt;&amp;str&gt;&gt;::add_assign (131 samples, 0.03%)</title><rect x="250.0" y="405" width="0.4" height="15.0" fill="rgb(253,188,53)" rx="2" ry="2" />
<text  x="253.04" y="415.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,006 samples, 0.22%)</title><rect x="410.5" y="325" width="2.5" height="15.0" fill="rgb(225,221,32)" rx="2" ry="2" />
<text  x="413.46" y="335.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,430 samples, 0.53%)</title><rect x="215.5" y="389" width="6.2" height="15.0" fill="rgb(223,70,46)" rx="2" ry="2" />
<text  x="218.46" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (124 samples, 0.03%)</title><rect x="1110.4" y="197" width="0.3" height="15.0" fill="rgb(233,153,9)" rx="2" ry="2" />
<text  x="1113.40" y="207.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (129 samples, 0.03%)</title><rect x="155.7" y="373" width="0.4" height="15.0" fill="rgb(232,187,48)" rx="2" ry="2" />
<text  x="158.74" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (769 samples, 0.17%)</title><rect x="242.0" y="421" width="2.0" height="15.0" fill="rgb(208,176,3)" rx="2" ry="2" />
<text  x="245.00" y="431.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (214 samples, 0.05%)</title><rect x="1066.4" y="261" width="0.5" height="15.0" fill="rgb(214,164,45)" rx="2" ry="2" />
<text  x="1069.40" y="271.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (731 samples, 0.16%)</title><rect x="370.1" y="245" width="1.9" height="15.0" fill="rgb(238,94,40)" rx="2" ry="2" />
<text  x="373.14" y="255.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (734 samples, 0.16%)</title><rect x="163.9" y="293" width="1.9" height="15.0" fill="rgb(236,170,53)" rx="2" ry="2" />
<text  x="166.89" y="303.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (2,355 samples, 0.51%)</title><rect x="931.1" y="245" width="6.0" height="15.0" fill="rgb(225,22,36)" rx="2" ry="2" />
<text  x="934.08" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,629 samples, 0.35%)</title><rect x="1111.4" y="245" width="4.1" height="15.0" fill="rgb(245,21,14)" rx="2" ry="2" />
<text  x="1114.38" y="255.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (447 samples, 0.10%)</title><rect x="480.4" y="421" width="1.2" height="15.0" fill="rgb(245,30,17)" rx="2" ry="2" />
<text  x="483.42" y="431.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::dfa::PremultipliedByteClass&lt;S&gt; as aho_corasick::automaton::Automaton&gt;::next_state (361 samples, 0.08%)</title><rect x="1132.6" y="261" width="0.9" height="15.0" fill="rgb(252,61,12)" rx="2" ry="2" />
<text  x="1135.59" y="271.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (213 samples, 0.05%)</title><rect x="1189.2" y="373" width="0.6" height="15.0" fill="rgb(252,9,30)" rx="2" ry="2" />
<text  x="1192.24" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (226 samples, 0.05%)</title><rect x="1189.2" y="517" width="0.6" height="15.0" fill="rgb(248,47,31)" rx="2" ry="2" />
<text  x="1192.21" y="527.5" ></text>
</g>
<g >
<title>__rdl_alloc (258 samples, 0.06%)</title><rect x="397.4" y="149" width="0.6" height="15.0" fill="rgb(249,140,4)" rx="2" ry="2" />
<text  x="400.37" y="159.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (174 samples, 0.04%)</title><rect x="91.8" y="357" width="0.5" height="15.0" fill="rgb(245,47,50)" rx="2" ry="2" />
<text  x="94.81" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (449 samples, 0.10%)</title><rect x="1136.2" y="325" width="1.1" height="15.0" fill="rgb(220,65,42)" rx="2" ry="2" />
<text  x="1139.17" y="335.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (696 samples, 0.15%)</title><rect x="118.5" y="373" width="1.8" height="15.0" fill="rgb(236,87,30)" rx="2" ry="2" />
<text  x="121.50" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (190 samples, 0.04%)</title><rect x="540.8" y="357" width="0.5" height="15.0" fill="rgb(236,129,8)" rx="2" ry="2" />
<text  x="543.77" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (202 samples, 0.04%)</title><rect x="248.9" y="357" width="0.5" height="15.0" fill="rgb(225,128,37)" rx="2" ry="2" />
<text  x="251.89" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12,868 samples, 2.78%)</title><rect x="904.3" y="357" width="32.8" height="15.0" fill="rgb(245,164,13)" rx="2" ry="2" />
<text  x="907.27" y="367.5" >ha..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3,412 samples, 0.74%)</title><rect x="185.0" y="293" width="8.7" height="15.0" fill="rgb(250,104,46)" rx="2" ry="2" />
<text  x="187.98" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,269 samples, 0.27%)</title><rect x="1010.4" y="405" width="3.2" height="15.0" fill="rgb(216,68,24)" rx="2" ry="2" />
<text  x="1013.38" y="415.5" ></text>
</g>
<g >
<title>[[stack]] (10,621 samples, 2.30%)</title><rect x="21.1" y="517" width="27.1" height="15.0" fill="rgb(222,139,13)" rx="2" ry="2" />
<text  x="24.12" y="527.5" >[..</text>
</g>
<g >
<title>_int_malloc (215 samples, 0.05%)</title><rect x="279.6" y="341" width="0.6" height="15.0" fill="rgb(206,106,1)" rx="2" ry="2" />
<text  x="282.61" y="351.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (238 samples, 0.05%)</title><rect x="313.3" y="229" width="0.6" height="15.0" fill="rgb(233,165,24)" rx="2" ry="2" />
<text  x="316.29" y="239.5" ></text>
</g>
<g >
<title>core::ptr::read (802 samples, 0.17%)</title><rect x="129.1" y="373" width="2.0" height="15.0" fill="rgb(243,26,6)" rx="2" ry="2" />
<text  x="132.09" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (959 samples, 0.21%)</title><rect x="1062.9" y="325" width="2.4" height="15.0" fill="rgb(224,21,12)" rx="2" ry="2" />
<text  x="1065.86" y="335.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::exec_ (601 samples, 0.13%)</title><rect x="224.9" y="293" width="1.5" height="15.0" fill="rgb(224,126,39)" rx="2" ry="2" />
<text  x="227.89" y="303.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (26,509 samples, 5.73%)</title><rect x="339.1" y="309" width="67.6" height="15.0" fill="rgb(219,35,39)" rx="2" ry="2" />
<text  x="342.07" y="319.5" >core::o..</text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1,308 samples, 0.28%)</title><rect x="927.7" y="277" width="3.4" height="15.0" fill="rgb(230,111,16)" rx="2" ry="2" />
<text  x="930.74" y="287.5" ></text>
</g>
<g >
<title>core::ptr::write (124 samples, 0.03%)</title><rect x="1166.1" y="293" width="0.3" height="15.0" fill="rgb(249,159,32)" rx="2" ry="2" />
<text  x="1169.06" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (404 samples, 0.09%)</title><rect x="245.4" y="325" width="1.0" height="15.0" fill="rgb(208,88,52)" rx="2" ry="2" />
<text  x="248.41" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (144 samples, 0.03%)</title><rect x="246.7" y="341" width="0.4" height="15.0" fill="rgb(239,60,28)" rx="2" ry="2" />
<text  x="249.74" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (205 samples, 0.04%)</title><rect x="1184.1" y="341" width="0.5" height="15.0" fill="rgb(218,21,50)" rx="2" ry="2" />
<text  x="1187.05" y="351.5" ></text>
</g>
<g >
<title>core::option::Option&lt;&amp;T&gt;::copied (2,657 samples, 0.57%)</title><rect x="399.9" y="229" width="6.8" height="15.0" fill="rgb(208,142,11)" rx="2" ry="2" />
<text  x="402.90" y="239.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,732 samples, 0.37%)</title><rect x="1159.4" y="309" width="4.4" height="15.0" fill="rgb(253,1,4)" rx="2" ry="2" />
<text  x="1162.36" y="319.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,074 samples, 0.23%)</title><rect x="1155.0" y="293" width="2.7" height="15.0" fill="rgb(222,9,43)" rx="2" ry="2" />
<text  x="1157.97" y="303.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (211 samples, 0.05%)</title><rect x="1188.5" y="485" width="0.5" height="15.0" fill="rgb(230,35,35)" rx="2" ry="2" />
<text  x="1191.47" y="495.5" ></text>
</g>
<g >
<title>&lt;sudachi::output::Simple as sudachi::output::SudachiOutput&lt;T&gt;&gt;::write (5,855 samples, 1.27%)</title><rect x="77.4" y="485" width="14.9" height="15.0" fill="rgb(232,135,21)" rx="2" ry="2" />
<text  x="80.40" y="495.5" ></text>
</g>
<g >
<title>fancy_regex::prev_codepoint_ix (447 samples, 0.10%)</title><rect x="120.3" y="405" width="1.1" height="15.0" fill="rgb(242,227,36)" rx="2" ry="2" />
<text  x="123.28" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (387 samples, 0.08%)</title><rect x="1090.1" y="437" width="1.0" height="15.0" fill="rgb(217,119,41)" rx="2" ry="2" />
<text  x="1093.10" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_mul (195 samples, 0.04%)</title><rect x="1016.9" y="213" width="0.5" height="15.0" fill="rgb(215,55,19)" rx="2" ry="2" />
<text  x="1019.86" y="223.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (248 samples, 0.05%)</title><rect x="1062.2" y="325" width="0.7" height="15.0" fill="rgb(252,96,46)" rx="2" ry="2" />
<text  x="1065.22" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::any_bit_set (2,721 samples, 0.59%)</title><rect x="913.5" y="293" width="7.0" height="15.0" fill="rgb(218,23,43)" rx="2" ry="2" />
<text  x="916.53" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (128 samples, 0.03%)</title><rect x="348.6" y="197" width="0.3" height="15.0" fill="rgb(240,215,53)" rx="2" ry="2" />
<text  x="351.61" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (359 samples, 0.08%)</title><rect x="34.1" y="501" width="0.9" height="15.0" fill="rgb(234,52,14)" rx="2" ry="2" />
<text  x="37.13" y="511.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (152 samples, 0.03%)</title><rect x="385.5" y="229" width="0.4" height="15.0" fill="rgb(229,53,29)" rx="2" ry="2" />
<text  x="388.50" y="239.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (291 samples, 0.06%)</title><rect x="1084.7" y="293" width="0.7" height="15.0" fill="rgb(248,104,5)" rx="2" ry="2" />
<text  x="1087.71" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (166 samples, 0.04%)</title><rect x="239.1" y="245" width="0.4" height="15.0" fill="rgb(231,31,25)" rx="2" ry="2" />
<text  x="242.12" y="255.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (332 samples, 0.07%)</title><rect x="384.0" y="101" width="0.9" height="15.0" fill="rgb(208,51,19)" rx="2" ry="2" />
<text  x="387.05" y="111.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,145 samples, 1.11%)</title><rect x="372.4" y="229" width="13.1" height="15.0" fill="rgb(229,32,21)" rx="2" ry="2" />
<text  x="375.37" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSync&gt; (223 samples, 0.05%)</title><rect x="211.0" y="341" width="0.6" height="15.0" fill="rgb(226,160,47)" rx="2" ry="2" />
<text  x="214.01" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (821 samples, 0.18%)</title><rect x="1155.5" y="277" width="2.1" height="15.0" fill="rgb(233,173,34)" rx="2" ry="2" />
<text  x="1158.50" y="287.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (292 samples, 0.06%)</title><rect x="385.9" y="277" width="0.7" height="15.0" fill="rgb(243,172,6)" rx="2" ry="2" />
<text  x="388.89" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,327 samples, 0.29%)</title><rect x="215.7" y="197" width="3.4" height="15.0" fill="rgb(215,142,25)" rx="2" ry="2" />
<text  x="218.67" y="207.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_of_range (271 samples, 0.06%)</title><rect x="235.5" y="421" width="0.7" height="15.0" fill="rgb(253,157,16)" rx="2" ry="2" />
<text  x="238.48" y="431.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_of_range (333 samples, 0.07%)</title><rect x="240.5" y="437" width="0.8" height="15.0" fill="rgb(237,140,19)" rx="2" ry="2" />
<text  x="243.46" y="447.5" ></text>
</g>
<g >
<title>_int_free (214 samples, 0.05%)</title><rect x="300.3" y="293" width="0.5" height="15.0" fill="rgb(249,171,35)" rx="2" ry="2" />
<text  x="303.25" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (616 samples, 0.13%)</title><rect x="1100.2" y="373" width="1.5" height="15.0" fill="rgb(234,156,28)" rx="2" ry="2" />
<text  x="1103.15" y="383.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (201 samples, 0.04%)</title><rect x="1131.0" y="373" width="0.5" height="15.0" fill="rgb(240,163,12)" rx="2" ry="2" />
<text  x="1133.97" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::offset (985 samples, 0.21%)</title><rect x="435.0" y="325" width="2.5" height="15.0" fill="rgb(217,138,50)" rx="2" ry="2" />
<text  x="437.95" y="335.5" ></text>
</g>
<g >
<title>std::io::append_to_string (1,238 samples, 0.27%)</title><rect x="73.9" y="437" width="3.2" height="15.0" fill="rgb(239,218,41)" rx="2" ry="2" />
<text  x="76.91" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,223 samples, 0.26%)</title><rect x="277.2" y="421" width="3.1" height="15.0" fill="rgb(250,76,4)" rx="2" ry="2" />
<text  x="280.17" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (230 samples, 0.05%)</title><rect x="125.2" y="389" width="0.6" height="15.0" fill="rgb(234,192,8)" rx="2" ry="2" />
<text  x="128.25" y="399.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13,862 samples, 3.00%)</title><rect x="868.9" y="277" width="35.3" height="15.0" fill="rgb(210,159,9)" rx="2" ry="2" />
<text  x="871.87" y="287.5" >&lt;c..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (163 samples, 0.04%)</title><rect x="244.8" y="325" width="0.4" height="15.0" fill="rgb(246,78,27)" rx="2" ry="2" />
<text  x="247.83" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (2,951 samples, 0.64%)</title><rect x="255.7" y="357" width="7.5" height="15.0" fill="rgb(253,29,10)" rx="2" ry="2" />
<text  x="258.66" y="367.5" ></text>
</g>
<g >
<title>core::ptr::write (319 samples, 0.07%)</title><rect x="145.0" y="373" width="0.8" height="15.0" fill="rgb(247,63,23)" rx="2" ry="2" />
<text  x="148.01" y="383.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (295 samples, 0.06%)</title><rect x="1008.4" y="261" width="0.8" height="15.0" fill="rgb(222,218,3)" rx="2" ry="2" />
<text  x="1011.40" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;sudachi::analysis::node::Node,alloc::alloc::Global&gt;&gt; (247 samples, 0.05%)</title><rect x="247.1" y="373" width="0.6" height="15.0" fill="rgb(236,63,40)" rx="2" ry="2" />
<text  x="250.11" y="383.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3,412 samples, 0.74%)</title><rect x="185.0" y="277" width="8.7" height="15.0" fill="rgb(244,50,13)" rx="2" ry="2" />
<text  x="187.98" y="287.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (124 samples, 0.03%)</title><rect x="1166.1" y="325" width="0.3" height="15.0" fill="rgb(247,61,0)" rx="2" ry="2" />
<text  x="1169.06" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (358 samples, 0.08%)</title><rect x="302.4" y="197" width="0.9" height="15.0" fill="rgb(214,68,23)" rx="2" ry="2" />
<text  x="305.39" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (693 samples, 0.15%)</title><rect x="238.1" y="309" width="1.7" height="15.0" fill="rgb(243,81,48)" rx="2" ry="2" />
<text  x="241.06" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (349 samples, 0.08%)</title><rect x="1097.5" y="389" width="0.9" height="15.0" fill="rgb(218,151,44)" rx="2" ry="2" />
<text  x="1100.46" y="399.5" ></text>
</g>
<g >
<title>unicode_normalization::normalize::decompose (192 samples, 0.04%)</title><rect x="1135.4" y="293" width="0.5" height="15.0" fill="rgb(242,192,1)" rx="2" ry="2" />
<text  x="1138.43" y="303.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (194 samples, 0.04%)</title><rect x="595.6" y="325" width="0.5" height="15.0" fill="rgb(240,44,28)" rx="2" ry="2" />
<text  x="598.59" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::u32_parser (1,558 samples, 0.34%)</title><rect x="314.9" y="389" width="4.0" height="15.0" fill="rgb(241,109,4)" rx="2" ry="2" />
<text  x="317.92" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (3,101 samples, 0.67%)</title><rect x="896.3" y="245" width="7.9" height="15.0" fill="rgb(240,194,24)" rx="2" ry="2" />
<text  x="899.32" y="255.5" ></text>
</g>
<g >
<title>malloc_consolidate (4,439 samples, 0.96%)</title><rect x="1024.8" y="277" width="11.3" height="15.0" fill="rgb(220,112,48)" rx="2" ry="2" />
<text  x="1027.82" y="287.5" ></text>
</g>
<g >
<title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (126 samples, 0.03%)</title><rect x="994.9" y="245" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="997.88" y="255.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (200 samples, 0.04%)</title><rect x="219.8" y="261" width="0.5" height="15.0" fill="rgb(240,88,52)" rx="2" ry="2" />
<text  x="222.78" y="271.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (477 samples, 0.10%)</title><rect x="515.3" y="437" width="1.2" height="15.0" fill="rgb(211,152,35)" rx="2" ry="2" />
<text  x="518.27" y="447.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (2,950 samples, 0.64%)</title><rect x="399.2" y="261" width="7.5" height="15.0" fill="rgb(228,42,9)" rx="2" ry="2" />
<text  x="402.15" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (4,760 samples, 1.03%)</title><rect x="372.8" y="133" width="12.1" height="15.0" fill="rgb(218,22,20)" rx="2" ry="2" />
<text  x="375.76" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::set_len (277 samples, 0.06%)</title><rect x="82.6" y="421" width="0.7" height="15.0" fill="rgb(253,69,52)" rx="2" ry="2" />
<text  x="85.60" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (616 samples, 0.13%)</title><rect x="1100.2" y="389" width="1.5" height="15.0" fill="rgb(252,67,20)" rx="2" ry="2" />
<text  x="1103.15" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (1,183 samples, 0.26%)</title><rect x="1112.3" y="165" width="3.0" height="15.0" fill="rgb(234,197,1)" rx="2" ry="2" />
<text  x="1115.32" y="175.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (419 samples, 0.09%)</title><rect x="307.1" y="85" width="1.1" height="15.0" fill="rgb(235,142,50)" rx="2" ry="2" />
<text  x="310.14" y="95.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (152 samples, 0.03%)</title><rect x="385.5" y="213" width="0.4" height="15.0" fill="rgb(232,182,52)" rx="2" ry="2" />
<text  x="388.50" y="223.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (324 samples, 0.07%)</title><rect x="1078.2" y="261" width="0.9" height="15.0" fill="rgb(234,207,49)" rx="2" ry="2" />
<text  x="1081.24" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (143 samples, 0.03%)</title><rect x="408.2" y="117" width="0.3" height="15.0" fill="rgb(216,180,36)" rx="2" ry="2" />
<text  x="411.16" y="127.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,479 samples, 0.32%)</title><rect x="1111.6" y="181" width="3.7" height="15.0" fill="rgb(229,26,42)" rx="2" ry="2" />
<text  x="1114.57" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (394 samples, 0.09%)</title><rect x="299.8" y="405" width="1.0" height="15.0" fill="rgb(222,19,45)" rx="2" ry="2" />
<text  x="302.83" y="415.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (2,438 samples, 0.53%)</title><rect x="1071.7" y="277" width="6.3" height="15.0" fill="rgb(248,133,0)" rx="2" ry="2" />
<text  x="1074.75" y="287.5" ></text>
</g>
<g >
<title>sudachi::main (436,139 samples, 94.27%)</title><rect x="73.3" y="501" width="1112.4" height="15.0" fill="rgb(224,121,40)" rx="2" ry="2" />
<text  x="76.29" y="511.5" >sudachi::main</text>
</g>
<g >
<title>alloc::string::String::push_str (131 samples, 0.03%)</title><rect x="250.0" y="389" width="0.4" height="15.0" fill="rgb(219,19,5)" rx="2" ry="2" />
<text  x="253.04" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,323 samples, 0.72%)</title><rect x="389.7" y="245" width="8.4" height="15.0" fill="rgb(229,126,54)" rx="2" ry="2" />
<text  x="392.65" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_free (3,105 samples, 0.67%)</title><rect x="1175.7" y="277" width="7.9" height="15.0" fill="rgb(216,114,38)" rx="2" ry="2" />
<text  x="1178.67" y="287.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (138 samples, 0.03%)</title><rect x="12.4" y="437" width="0.3" height="15.0" fill="rgb(236,45,31)" rx="2" ry="2" />
<text  x="15.38" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (167 samples, 0.04%)</title><rect x="1173.9" y="437" width="0.4" height="15.0" fill="rgb(229,184,35)" rx="2" ry="2" />
<text  x="1176.90" y="447.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (4,098 samples, 0.89%)</title><rect x="321.5" y="341" width="10.4" height="15.0" fill="rgb(230,12,16)" rx="2" ry="2" />
<text  x="324.45" y="351.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (215 samples, 0.05%)</title><rect x="21.2" y="501" width="0.5" height="15.0" fill="rgb(225,84,13)" rx="2" ry="2" />
<text  x="24.15" y="511.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (364 samples, 0.08%)</title><rect x="178.5" y="309" width="0.9" height="15.0" fill="rgb(209,139,53)" rx="2" ry="2" />
<text  x="181.46" y="319.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (119 samples, 0.03%)</title><rect x="539.8" y="357" width="0.3" height="15.0" fill="rgb(221,67,51)" rx="2" ry="2" />
<text  x="542.80" y="367.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (236 samples, 0.05%)</title><rect x="1167.2" y="405" width="0.6" height="15.0" fill="rgb(209,0,49)" rx="2" ry="2" />
<text  x="1170.17" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sudachi::analysis::node::Node&gt;&gt; (196 samples, 0.04%)</title><rect x="250.8" y="453" width="0.5" height="15.0" fill="rgb(229,219,29)" rx="2" ry="2" />
<text  x="253.78" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (233 samples, 0.05%)</title><rect x="279.6" y="357" width="0.6" height="15.0" fill="rgb(232,54,52)" rx="2" ry="2" />
<text  x="282.57" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (449 samples, 0.10%)</title><rect x="1136.2" y="309" width="1.1" height="15.0" fill="rgb(230,98,1)" rx="2" ry="2" />
<text  x="1139.17" y="319.5" ></text>
</g>
<g >
<title>regex::pool::Pool&lt;T&gt;::get (223 samples, 0.05%)</title><rect x="170.4" y="341" width="0.6" height="15.0" fill="rgb(221,201,13)" rx="2" ry="2" />
<text  x="173.39" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (168 samples, 0.04%)</title><rect x="125.3" y="357" width="0.4" height="15.0" fill="rgb(212,21,19)" rx="2" ry="2" />
<text  x="128.28" y="367.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (737 samples, 0.16%)</title><rect x="406.9" y="293" width="1.9" height="15.0" fill="rgb(250,191,40)" rx="2" ry="2" />
<text  x="409.88" y="303.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (143 samples, 0.03%)</title><rect x="239.8" y="341" width="0.4" height="15.0" fill="rgb(253,60,50)" rx="2" ry="2" />
<text  x="242.82" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::truncate (3,963 samples, 0.86%)</title><rect x="1174.5" y="453" width="10.1" height="15.0" fill="rgb(243,157,35)" rx="2" ry="2" />
<text  x="1177.47" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_free (271 samples, 0.06%)</title><rect x="304.5" y="261" width="0.7" height="15.0" fill="rgb(229,209,24)" rx="2" ry="2" />
<text  x="307.54" y="271.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (182 samples, 0.04%)</title><rect x="210.1" y="325" width="0.5" height="15.0" fill="rgb(239,91,43)" rx="2" ry="2" />
<text  x="213.09" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (5,393 samples, 1.17%)</title><rect x="236.8" y="469" width="13.7" height="15.0" fill="rgb(226,46,39)" rx="2" ry="2" />
<text  x="239.77" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (3,730 samples, 0.81%)</title><rect x="1175.1" y="405" width="9.5" height="15.0" fill="rgb(216,73,40)" rx="2" ry="2" />
<text  x="1178.06" y="415.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::shortest_match_at (14,011 samples, 3.03%)</title><rect x="175.3" y="357" width="35.7" height="15.0" fill="rgb(252,193,51)" rx="2" ry="2" />
<text  x="178.27" y="367.5" >&lt;re..</text>
</g>
<g >
<title>regex::dfa::Fsm::byte_class (241 samples, 0.05%)</title><rect x="204.0" y="261" width="0.6" height="15.0" fill="rgb(232,195,13)" rx="2" ry="2" />
<text  x="206.96" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (206 samples, 0.04%)</title><rect x="270.6" y="437" width="0.5" height="15.0" fill="rgb(235,114,33)" rx="2" ry="2" />
<text  x="273.58" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,638 samples, 0.35%)</title><rect x="215.5" y="245" width="4.2" height="15.0" fill="rgb(227,165,48)" rx="2" ry="2" />
<text  x="218.49" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (2,868 samples, 0.62%)</title><rect x="1071.7" y="405" width="7.4" height="15.0" fill="rgb(235,108,48)" rx="2" ry="2" />
<text  x="1074.75" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,144 samples, 1.11%)</title><rect x="372.4" y="181" width="13.1" height="15.0" fill="rgb(231,54,35)" rx="2" ry="2" />
<text  x="375.38" y="191.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (118 samples, 0.03%)</title><rect x="239.9" y="325" width="0.3" height="15.0" fill="rgb(207,121,33)" rx="2" ry="2" />
<text  x="242.89" y="335.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,424 samples, 0.31%)</title><rect x="162.3" y="309" width="3.6" height="15.0" fill="rgb(229,149,24)" rx="2" ry="2" />
<text  x="165.27" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (404 samples, 0.09%)</title><rect x="148.6" y="389" width="1.1" height="15.0" fill="rgb(245,64,52)" rx="2" ry="2" />
<text  x="151.63" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (454 samples, 0.10%)</title><rect x="89.1" y="437" width="1.1" height="15.0" fill="rgb(214,225,27)" rx="2" ry="2" />
<text  x="92.05" y="447.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (2,657 samples, 0.57%)</title><rect x="399.9" y="213" width="6.8" height="15.0" fill="rgb(254,174,22)" rx="2" ry="2" />
<text  x="402.90" y="223.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (150 samples, 0.03%)</title><rect x="349.1" y="213" width="0.4" height="15.0" fill="rgb(238,127,42)" rx="2" ry="2" />
<text  x="352.14" y="223.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (163 samples, 0.04%)</title><rect x="213.3" y="293" width="0.4" height="15.0" fill="rgb(238,41,18)" rx="2" ry="2" />
<text  x="216.33" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (959 samples, 0.21%)</title><rect x="1062.9" y="293" width="2.4" height="15.0" fill="rgb(246,205,5)" rx="2" ry="2" />
<text  x="1065.86" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,568 samples, 0.77%)</title><rect x="321.5" y="293" width="9.1" height="15.0" fill="rgb(249,87,8)" rx="2" ry="2" />
<text  x="324.45" y="303.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::done (180 samples, 0.04%)</title><rect x="250.0" y="437" width="0.5" height="15.0" fill="rgb(205,143,16)" rx="2" ry="2" />
<text  x="253.00" y="447.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::bitset_search (312 samples, 0.07%)</title><rect x="1134.1" y="341" width="0.8" height="15.0" fill="rgb(216,211,54)" rx="2" ry="2" />
<text  x="1137.05" y="351.5" ></text>
</g>
<g >
<title>&lt;core::char::decode::DecodeUtf16&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (446 samples, 0.10%)</title><rect x="355.5" y="261" width="1.2" height="15.0" fill="rgb(218,156,29)" rx="2" ry="2" />
<text  x="358.55" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (680 samples, 0.15%)</title><rect x="115.5" y="389" width="1.8" height="15.0" fill="rgb(230,24,17)" rx="2" ry="2" />
<text  x="118.54" y="399.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::quick_check (1,973 samples, 0.43%)</title><rect x="1137.5" y="357" width="5.0" height="15.0" fill="rgb(252,83,2)" rx="2" ry="2" />
<text  x="1140.46" y="367.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (180 samples, 0.04%)</title><rect x="210.6" y="341" width="0.4" height="15.0" fill="rgb(234,127,18)" rx="2" ry="2" />
<text  x="213.55" y="351.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (453 samples, 0.10%)</title><rect x="13.5" y="501" width="1.2" height="15.0" fill="rgb(223,94,40)" rx="2" ry="2" />
<text  x="16.52" y="511.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (2,653 samples, 0.57%)</title><rect x="263.3" y="341" width="6.7" height="15.0" fill="rgb(239,219,22)" rx="2" ry="2" />
<text  x="266.26" y="351.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (136 samples, 0.03%)</title><rect x="77.6" y="469" width="0.4" height="15.0" fill="rgb(228,134,44)" rx="2" ry="2" />
<text  x="80.63" y="479.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (244 samples, 0.05%)</title><rect x="131.1" y="373" width="0.7" height="15.0" fill="rgb(232,159,42)" rx="2" ry="2" />
<text  x="134.14" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (861 samples, 0.19%)</title><rect x="309.0" y="181" width="2.2" height="15.0" fill="rgb(232,223,28)" rx="2" ry="2" />
<text  x="311.99" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,026 samples, 0.65%)</title><rect x="1103.1" y="309" width="7.7" height="15.0" fill="rgb(220,99,11)" rx="2" ry="2" />
<text  x="1106.06" y="319.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2,430 samples, 0.53%)</title><rect x="215.5" y="357" width="6.2" height="15.0" fill="rgb(244,133,38)" rx="2" ry="2" />
<text  x="218.46" y="367.5" ></text>
</g>
<g >
<title>_int_malloc (131 samples, 0.03%)</title><rect x="245.8" y="197" width="0.3" height="15.0" fill="rgb(235,212,24)" rx="2" ry="2" />
<text  x="248.80" y="207.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (8,042 samples, 1.74%)</title><rect x="516.5" y="437" width="20.5" height="15.0" fill="rgb(205,114,29)" rx="2" ry="2" />
<text  x="519.49" y="447.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (678 samples, 0.15%)</title><rect x="1126.2" y="389" width="1.7" height="15.0" fill="rgb(240,134,11)" rx="2" ry="2" />
<text  x="1129.15" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (135 samples, 0.03%)</title><rect x="246.7" y="261" width="0.4" height="15.0" fill="rgb(228,110,23)" rx="2" ry="2" />
<text  x="249.74" y="271.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (3,661 samples, 0.79%)</title><rect x="756.1" y="277" width="9.3" height="15.0" fill="rgb(248,80,7)" rx="2" ry="2" />
<text  x="759.06" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,745 samples, 0.59%)</title><rect x="360.5" y="117" width="7.0" height="15.0" fill="rgb(228,7,27)" rx="2" ry="2" />
<text  x="363.53" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (21,647 samples, 4.68%)</title><rect x="541.3" y="357" width="55.2" height="15.0" fill="rgb(206,86,54)" rx="2" ry="2" />
<text  x="544.25" y="367.5" >alloc..</text>
</g>
<g >
<title>regex::exec::Exec::searcher_str (339 samples, 0.07%)</title><rect x="170.1" y="373" width="0.9" height="15.0" fill="rgb(243,71,4)" rx="2" ry="2" />
<text  x="173.10" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::lookup::{{closure}} (240 samples, 0.05%)</title><rect x="480.9" y="341" width="0.7" height="15.0" fill="rgb(222,199,17)" rx="2" ry="2" />
<text  x="483.95" y="351.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (291 samples, 0.06%)</title><rect x="1084.7" y="277" width="0.7" height="15.0" fill="rgb(240,66,47)" rx="2" ry="2" />
<text  x="1087.71" y="287.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (447 samples, 0.10%)</title><rect x="480.4" y="405" width="1.2" height="15.0" fill="rgb(206,74,3)" rx="2" ry="2" />
<text  x="483.42" y="415.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::lexicon::trie::TrieEntryIter as core::iter::traits::iterator::Iterator&gt;::next (11,301 samples, 2.44%)</title><rect x="431.1" y="341" width="28.8" height="15.0" fill="rgb(229,16,16)" rx="2" ry="2" />
<text  x="434.09" y="351.5" >&lt;s..</text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21,320 samples, 4.61%)</title><rect x="428.3" y="453" width="54.4" height="15.0" fill="rgb(205,166,47)" rx="2" ry="2" />
<text  x="431.35" y="463.5" >&lt;core..</text>
</g>
<g >
<title>aho_corasick::ahocorasick::Imp&lt;S&gt;::find_at_no_state (924 samples, 0.20%)</title><rect x="1128.2" y="357" width="2.4" height="15.0" fill="rgb(240,120,39)" rx="2" ry="2" />
<text  x="1131.20" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (167 samples, 0.04%)</title><rect x="76.1" y="389" width="0.5" height="15.0" fill="rgb(234,192,38)" rx="2" ry="2" />
<text  x="79.15" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (643 samples, 0.14%)</title><rect x="1065.3" y="373" width="1.6" height="15.0" fill="rgb(233,183,8)" rx="2" ry="2" />
<text  x="1068.30" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,223 samples, 0.26%)</title><rect x="277.2" y="437" width="3.1" height="15.0" fill="rgb(226,42,48)" rx="2" ry="2" />
<text  x="280.17" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (327 samples, 0.07%)</title><rect x="313.1" y="261" width="0.8" height="15.0" fill="rgb(230,3,54)" rx="2" ry="2" />
<text  x="316.06" y="271.5" ></text>
</g>
<g >
<title>&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (47,760 samples, 10.32%)</title><rect x="92.9" y="453" width="121.8" height="15.0" fill="rgb(234,94,36)" rx="2" ry="2" />
<text  x="95.92" y="463.5" >&lt;fancy_regex::M..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::BufRead for alloc::boxed::Box&lt;B&gt;&gt;::read_line (1,267 samples, 0.27%)</title><rect x="73.8" y="469" width="3.3" height="15.0" fill="rgb(225,190,50)" rx="2" ry="2" />
<text  x="76.84" y="479.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i32::{{closure}} (191 samples, 0.04%)</title><rect x="346.2" y="229" width="0.5" height="15.0" fill="rgb(220,23,43)" rx="2" ry="2" />
<text  x="349.18" y="239.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,748 samples, 0.38%)</title><rect x="1111.4" y="293" width="4.4" height="15.0" fill="rgb(205,155,16)" rx="2" ry="2" />
<text  x="1114.38" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (400 samples, 0.09%)</title><rect x="1064.3" y="277" width="1.0" height="15.0" fill="rgb(214,36,2)" rx="2" ry="2" />
<text  x="1067.28" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (258 samples, 0.06%)</title><rect x="38.4" y="501" width="0.6" height="15.0" fill="rgb(236,7,11)" rx="2" ry="2" />
<text  x="41.38" y="511.5" ></text>
</g>
<g >
<title>sudachi::dic::u32_array_parser (472 samples, 0.10%)</title><rect x="407.6" y="261" width="1.2" height="15.0" fill="rgb(215,86,8)" rx="2" ry="2" />
<text  x="410.56" y="271.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (882 samples, 0.19%)</title><rect x="238.1" y="389" width="2.2" height="15.0" fill="rgb(244,224,3)" rx="2" ry="2" />
<text  x="241.06" y="399.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (253 samples, 0.05%)</title><rect x="91.7" y="373" width="0.6" height="15.0" fill="rgb(227,138,1)" rx="2" ry="2" />
<text  x="94.68" y="383.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (295 samples, 0.06%)</title><rect x="1008.4" y="293" width="0.8" height="15.0" fill="rgb(244,132,24)" rx="2" ry="2" />
<text  x="1011.40" y="303.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (252 samples, 0.05%)</title><rect x="1085.4" y="357" width="0.7" height="15.0" fill="rgb(242,225,15)" rx="2" ry="2" />
<text  x="1088.45" y="367.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (449 samples, 0.10%)</title><rect x="1136.2" y="357" width="1.1" height="15.0" fill="rgb(214,211,16)" rx="2" ry="2" />
<text  x="1139.17" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (3,342 samples, 0.72%)</title><rect x="398.2" y="277" width="8.5" height="15.0" fill="rgb(242,116,27)" rx="2" ry="2" />
<text  x="401.15" y="287.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (123 samples, 0.03%)</title><rect x="10.8" y="501" width="0.3" height="15.0" fill="rgb(235,18,19)" rx="2" ry="2" />
<text  x="13.78" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (316 samples, 0.07%)</title><rect x="245.4" y="277" width="0.8" height="15.0" fill="rgb(208,23,50)" rx="2" ry="2" />
<text  x="248.42" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_mul (131 samples, 0.03%)</title><rect x="596.7" y="309" width="0.3" height="15.0" fill="rgb(223,200,15)" rx="2" ry="2" />
<text  x="599.68" y="319.5" ></text>
</g>
<g >
<title>core::ptr::write (459 samples, 0.10%)</title><rect x="1019.3" y="389" width="1.2" height="15.0" fill="rgb(253,66,43)" rx="2" ry="2" />
<text  x="1022.32" y="399.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (214 samples, 0.05%)</title><rect x="1066.4" y="277" width="0.5" height="15.0" fill="rgb(242,221,22)" rx="2" ry="2" />
<text  x="1069.40" y="287.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new_oov (385 samples, 0.08%)</title><rect x="1116.0" y="389" width="0.9" height="15.0" fill="rgb(246,147,2)" rx="2" ry="2" />
<text  x="1118.95" y="399.5" ></text>
</g>
<g >
<title>aho_corasick::packed::api::Searcher::find_at (1,376 samples, 0.30%)</title><rect x="1160.0" y="229" width="3.5" height="15.0" fill="rgb(223,168,29)" rx="2" ry="2" />
<text  x="1163.00" y="239.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (264 samples, 0.06%)</title><rect x="168.1" y="309" width="0.7" height="15.0" fill="rgb(240,31,31)" rx="2" ry="2" />
<text  x="171.11" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup::{{closure}} (6,996 samples, 1.51%)</title><rect x="459.9" y="309" width="17.9" height="15.0" fill="rgb(245,158,46)" rx="2" ry="2" />
<text  x="462.91" y="319.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (152 samples, 0.03%)</title><rect x="221.9" y="341" width="0.4" height="15.0" fill="rgb(214,172,8)" rx="2" ry="2" />
<text  x="224.89" y="351.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_some (237 samples, 0.05%)</title><rect x="660.7" y="421" width="0.6" height="15.0" fill="rgb(243,121,53)" rx="2" ry="2" />
<text  x="663.69" y="431.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (12,759 samples, 2.76%)</title><rect x="353.3" y="277" width="32.6" height="15.0" fill="rgb(225,47,0)" rx="2" ry="2" />
<text  x="356.34" y="287.5" >al..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (423 samples, 0.09%)</title><rect x="154.7" y="373" width="1.0" height="15.0" fill="rgb(220,75,25)" rx="2" ry="2" />
<text  x="157.66" y="383.5" ></text>
</g>
<g >
<title>regex::pool::THREAD_ID::__getit (374 samples, 0.08%)</title><rect x="213.8" y="277" width="0.9" height="15.0" fill="rgb(215,125,10)" rx="2" ry="2" />
<text  x="216.77" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (386 samples, 0.08%)</title><rect x="302.4" y="213" width="1.0" height="15.0" fill="rgb(247,149,16)" rx="2" ry="2" />
<text  x="305.39" y="223.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8 (567 samples, 0.12%)</title><rect x="74.2" y="421" width="1.4" height="15.0" fill="rgb(227,177,23)" rx="2" ry="2" />
<text  x="77.17" y="431.5" ></text>
</g>
<g >
<title>regex::dfa::Byte::is_ascii_word (121 samples, 0.03%)</title><rect x="166.8" y="293" width="0.3" height="15.0" fill="rgb(218,192,40)" rx="2" ry="2" />
<text  x="169.77" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (178 samples, 0.04%)</title><rect x="408.1" y="149" width="0.5" height="15.0" fill="rgb(252,89,28)" rx="2" ry="2" />
<text  x="411.15" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1,331 samples, 0.29%)</title><rect x="1010.4" y="437" width="3.4" height="15.0" fill="rgb(232,39,27)" rx="2" ry="2" />
<text  x="1013.37" y="447.5" ></text>
</g>
<g >
<title>__rdl_alloc (200 samples, 0.04%)</title><rect x="595.6" y="341" width="0.5" height="15.0" fill="rgb(249,196,50)" rx="2" ry="2" />
<text  x="598.58" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,629 samples, 0.35%)</title><rect x="1111.4" y="229" width="4.1" height="15.0" fill="rgb(233,135,43)" rx="2" ry="2" />
<text  x="1114.38" y="239.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,748 samples, 0.38%)</title><rect x="1111.4" y="325" width="4.4" height="15.0" fill="rgb(220,92,52)" rx="2" ry="2" />
<text  x="1114.38" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (163 samples, 0.04%)</title><rect x="244.8" y="309" width="0.4" height="15.0" fill="rgb(209,132,29)" rx="2" ry="2" />
<text  x="247.83" y="319.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (324 samples, 0.07%)</title><rect x="1078.2" y="341" width="0.9" height="15.0" fill="rgb(240,162,19)" rx="2" ry="2" />
<text  x="1081.24" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (448 samples, 0.10%)</title><rect x="48.9" y="501" width="1.2" height="15.0" fill="rgb(233,31,4)" rx="2" ry="2" />
<text  x="51.94" y="511.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (287 samples, 0.06%)</title><rect x="1171.0" y="389" width="0.7" height="15.0" fill="rgb(209,185,1)" rx="2" ry="2" />
<text  x="1174.01" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (287 samples, 0.06%)</title><rect x="1090.1" y="421" width="0.7" height="15.0" fill="rgb(228,177,8)" rx="2" ry="2" />
<text  x="1093.10" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (619 samples, 0.13%)</title><rect x="54.0" y="501" width="1.6" height="15.0" fill="rgb(253,140,54)" rx="2" ry="2" />
<text  x="56.98" y="511.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (458 samples, 0.10%)</title><rect x="481.6" y="437" width="1.1" height="15.0" fill="rgb(211,36,35)" rx="2" ry="2" />
<text  x="484.56" y="447.5" ></text>
</g>
<g >
<title>_int_malloc (2,177 samples, 0.47%)</title><rect x="1104.8" y="197" width="5.6" height="15.0" fill="rgb(249,3,27)" rx="2" ry="2" />
<text  x="1107.85" y="207.5" ></text>
</g>
<g >
<title>_int_malloc (6,084 samples, 1.32%)</title><rect x="1020.7" y="293" width="15.5" height="15.0" fill="rgb(226,84,6)" rx="2" ry="2" />
<text  x="1023.70" y="303.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (295 samples, 0.06%)</title><rect x="1008.4" y="277" width="0.8" height="15.0" fill="rgb(231,220,11)" rx="2" ry="2" />
<text  x="1011.40" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (367 samples, 0.08%)</title><rect x="89.3" y="421" width="0.9" height="15.0" fill="rgb(237,192,25)" rx="2" ry="2" />
<text  x="92.27" y="431.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (400 samples, 0.09%)</title><rect x="1064.3" y="229" width="1.0" height="15.0" fill="rgb(252,25,9)" rx="2" ry="2" />
<text  x="1067.28" y="239.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::exec_nfa (738 samples, 0.16%)</title><rect x="224.6" y="341" width="1.8" height="15.0" fill="rgb(219,122,8)" rx="2" ry="2" />
<text  x="227.57" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,183 samples, 0.26%)</title><rect x="1154.8" y="309" width="3.0" height="15.0" fill="rgb(217,26,22)" rx="2" ry="2" />
<text  x="1157.83" y="319.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (291 samples, 0.06%)</title><rect x="1084.7" y="341" width="0.7" height="15.0" fill="rgb(243,188,5)" rx="2" ry="2" />
<text  x="1087.71" y="351.5" ></text>
</g>
<g >
<title>_int_malloc (6,898 samples, 1.49%)</title><rect x="578.0" y="325" width="17.6" height="15.0" fill="rgb(219,144,35)" rx="2" ry="2" />
<text  x="580.98" y="335.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,111 samples, 4.35%)</title><rect x="429.1" y="421" width="51.3" height="15.0" fill="rgb(249,56,12)" rx="2" ry="2" />
<text  x="432.12" y="431.5" >&lt;core..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (240 samples, 0.05%)</title><rect x="480.9" y="373" width="0.7" height="15.0" fill="rgb(237,101,52)" rx="2" ry="2" />
<text  x="483.95" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (535 samples, 0.12%)</title><rect x="238.2" y="261" width="1.3" height="15.0" fill="rgb(235,103,43)" rx="2" ry="2" />
<text  x="241.18" y="271.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (618 samples, 0.13%)</title><rect x="1100.1" y="405" width="1.6" height="15.0" fill="rgb(210,117,29)" rx="2" ry="2" />
<text  x="1103.15" y="415.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (450 samples, 0.10%)</title><rect x="654.7" y="405" width="1.1" height="15.0" fill="rgb(243,116,5)" rx="2" ry="2" />
<text  x="657.66" y="415.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_cold (199 samples, 0.04%)</title><rect x="81.8" y="437" width="0.5" height="15.0" fill="rgb(219,132,12)" rx="2" ry="2" />
<text  x="84.76" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (139 samples, 0.03%)</title><rect x="31.3" y="485" width="0.3" height="15.0" fill="rgb(218,216,44)" rx="2" ry="2" />
<text  x="34.26" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (769 samples, 0.17%)</title><rect x="242.0" y="405" width="2.0" height="15.0" fill="rgb(213,87,23)" rx="2" ry="2" />
<text  x="245.00" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (1,597 samples, 0.35%)</title><rect x="1111.5" y="197" width="4.0" height="15.0" fill="rgb(229,195,22)" rx="2" ry="2" />
<text  x="1114.47" y="207.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (696 samples, 0.15%)</title><rect x="118.5" y="389" width="1.8" height="15.0" fill="rgb(205,208,35)" rx="2" ry="2" />
<text  x="121.50" y="399.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::is_nfkc_quick (4,589 samples, 0.99%)</title><rect x="1142.5" y="389" width="11.7" height="15.0" fill="rgb(252,184,43)" rx="2" ry="2" />
<text  x="1145.50" y="399.5" ></text>
</g>
<g >
<title>core::ptr::write (192 samples, 0.04%)</title><rect x="1168.3" y="437" width="0.5" height="15.0" fill="rgb(220,87,20)" rx="2" ry="2" />
<text  x="1171.34" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (742 samples, 0.16%)</title><rect x="306.7" y="213" width="1.9" height="15.0" fill="rgb(229,40,10)" rx="2" ry="2" />
<text  x="309.74" y="223.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (137 samples, 0.03%)</title><rect x="231.2" y="405" width="0.3" height="15.0" fill="rgb(215,102,0)" rx="2" ry="2" />
<text  x="234.16" y="415.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,868 samples, 0.62%)</title><rect x="1071.7" y="373" width="7.4" height="15.0" fill="rgb(232,44,28)" rx="2" ry="2" />
<text  x="1074.75" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (224 samples, 0.05%)</title><rect x="1015.9" y="245" width="0.6" height="15.0" fill="rgb(220,163,35)" rx="2" ry="2" />
<text  x="1018.95" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::DictionaryLoader::read_dictionary (287 samples, 0.06%)</title><rect x="1184.6" y="437" width="0.8" height="15.0" fill="rgb(233,174,6)" rx="2" ry="2" />
<text  x="1187.63" y="447.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (646 samples, 0.14%)</title><rect x="368.4" y="197" width="1.6" height="15.0" fill="rgb(254,70,4)" rx="2" ry="2" />
<text  x="371.38" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (151 samples, 0.03%)</title><rect x="244.9" y="261" width="0.3" height="15.0" fill="rgb(206,91,9)" rx="2" ry="2" />
<text  x="247.86" y="271.5" ></text>
</g>
<g >
<title>__rdl_realloc (231 samples, 0.05%)</title><rect x="575.7" y="293" width="0.6" height="15.0" fill="rgb(252,93,45)" rx="2" ry="2" />
<text  x="578.73" y="303.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher (246 samples, 0.05%)</title><rect x="170.3" y="357" width="0.7" height="15.0" fill="rgb(209,53,12)" rx="2" ry="2" />
<text  x="173.33" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (305 samples, 0.07%)</title><rect x="134.2" y="373" width="0.8" height="15.0" fill="rgb(242,11,52)" rx="2" ry="2" />
<text  x="137.20" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (394 samples, 0.09%)</title><rect x="302.4" y="229" width="1.0" height="15.0" fill="rgb(222,66,43)" rx="2" ry="2" />
<text  x="305.37" y="239.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (860 samples, 0.19%)</title><rect x="274.6" y="437" width="2.2" height="15.0" fill="rgb(220,57,11)" rx="2" ry="2" />
<text  x="277.58" y="447.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3,412 samples, 0.74%)</title><rect x="185.0" y="261" width="8.7" height="15.0" fill="rgb(226,9,40)" rx="2" ry="2" />
<text  x="187.98" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (136 samples, 0.03%)</title><rect x="1158.2" y="341" width="0.4" height="15.0" fill="rgb(225,49,24)" rx="2" ry="2" />
<text  x="1161.25" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_flags (899 samples, 0.19%)</title><rect x="205.4" y="293" width="2.3" height="15.0" fill="rgb(243,210,1)" rx="2" ry="2" />
<text  x="208.42" y="303.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,055 samples, 4.33%)</title><rect x="429.1" y="405" width="51.2" height="15.0" fill="rgb(242,5,4)" rx="2" ry="2" />
<text  x="432.12" y="415.5" >&lt;core..</text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (119 samples, 0.03%)</title><rect x="597.8" y="357" width="0.3" height="15.0" fill="rgb(245,33,40)" rx="2" ry="2" />
<text  x="600.80" y="367.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (214 samples, 0.05%)</title><rect x="1066.4" y="341" width="0.5" height="15.0" fill="rgb(209,195,45)" rx="2" ry="2" />
<text  x="1069.40" y="351.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::repeat (217 samples, 0.05%)</title><rect x="596.5" y="341" width="0.5" height="15.0" fill="rgb(227,17,44)" rx="2" ry="2" />
<text  x="599.46" y="351.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,070 samples, 0.45%)</title><rect x="650.5" y="421" width="5.3" height="15.0" fill="rgb(209,143,17)" rx="2" ry="2" />
<text  x="653.53" y="431.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (240 samples, 0.05%)</title><rect x="274.0" y="437" width="0.6" height="15.0" fill="rgb(206,204,48)" rx="2" ry="2" />
<text  x="276.97" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (4,753 samples, 1.03%)</title><rect x="1066.9" y="421" width="12.2" height="15.0" fill="rgb(253,1,46)" rx="2" ry="2" />
<text  x="1069.94" y="431.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::spare_capacity (701 samples, 0.15%)</title><rect x="80.0" y="437" width="1.8" height="15.0" fill="rgb(224,113,38)" rx="2" ry="2" />
<text  x="82.97" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (855 samples, 0.18%)</title><rect x="309.0" y="133" width="2.2" height="15.0" fill="rgb(253,118,52)" rx="2" ry="2" />
<text  x="312.00" y="143.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Pattern::is_prefix (449 samples, 0.10%)</title><rect x="1160.9" y="133" width="1.1" height="15.0" fill="rgb(213,194,36)" rx="2" ry="2" />
<text  x="1163.88" y="143.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,862 samples, 4.51%)</title><rect x="428.3" y="437" width="53.3" height="15.0" fill="rgb(238,85,18)" rx="2" ry="2" />
<text  x="431.35" y="447.5" >&lt;core..</text>
</g>
<g >
<title>_int_malloc (327 samples, 0.07%)</title><rect x="278.7" y="277" width="0.8" height="15.0" fill="rgb(249,124,52)" rx="2" ry="2" />
<text  x="281.68" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (161 samples, 0.03%)</title><rect x="76.2" y="341" width="0.4" height="15.0" fill="rgb(227,211,37)" rx="2" ry="2" />
<text  x="79.16" y="351.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (241 samples, 0.05%)</title><rect x="240.7" y="421" width="0.6" height="15.0" fill="rgb(223,79,50)" rx="2" ry="2" />
<text  x="243.70" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,830 samples, 0.40%)</title><rect x="258.3" y="309" width="4.7" height="15.0" fill="rgb(225,149,18)" rx="2" ry="2" />
<text  x="261.31" y="319.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (589 samples, 0.13%)</title><rect x="368.5" y="181" width="1.5" height="15.0" fill="rgb(235,96,18)" rx="2" ry="2" />
<text  x="371.53" y="191.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (138 samples, 0.03%)</title><rect x="1131.1" y="341" width="0.4" height="15.0" fill="rgb(214,73,51)" rx="2" ry="2" />
<text  x="1134.13" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (131 samples, 0.03%)</title><rect x="246.7" y="229" width="0.4" height="15.0" fill="rgb(236,158,23)" rx="2" ry="2" />
<text  x="249.75" y="239.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (241 samples, 0.05%)</title><rect x="426.8" y="437" width="0.6" height="15.0" fill="rgb(223,229,22)" rx="2" ry="2" />
<text  x="429.77" y="447.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (731 samples, 0.16%)</title><rect x="370.1" y="229" width="1.9" height="15.0" fill="rgb(209,8,7)" rx="2" ry="2" />
<text  x="373.14" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (415 samples, 0.09%)</title><rect x="1136.3" y="277" width="1.0" height="15.0" fill="rgb(223,40,14)" rx="2" ry="2" />
<text  x="1139.26" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Byte::is_ascii_word (290 samples, 0.06%)</title><rect x="207.0" y="277" width="0.7" height="15.0" fill="rgb(243,86,41)" rx="2" ry="2" />
<text  x="209.98" y="287.5" ></text>
</g>
<g >
<title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (1,659 samples, 0.36%)</title><rect x="1154.4" y="389" width="4.2" height="15.0" fill="rgb(253,50,41)" rx="2" ry="2" />
<text  x="1157.38" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,204 samples, 0.48%)</title><rect x="1059.7" y="389" width="5.6" height="15.0" fill="rgb(211,130,52)" rx="2" ry="2" />
<text  x="1062.68" y="399.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::iter (248 samples, 0.05%)</title><rect x="194.9" y="293" width="0.7" height="15.0" fill="rgb(230,9,33)" rx="2" ry="2" />
<text  x="197.94" y="303.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (366 samples, 0.08%)</title><rect x="145.8" y="389" width="1.0" height="15.0" fill="rgb(212,10,54)" rx="2" ry="2" />
<text  x="148.82" y="399.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::mecab_oov::MeCabOovPlugin::provide_oov_gen (8,559 samples, 1.85%)</title><rect x="1095.1" y="421" width="21.8" height="15.0" fill="rgb(232,99,9)" rx="2" ry="2" />
<text  x="1098.11" y="431.5" >s..</text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (2,868 samples, 0.62%)</title><rect x="1071.7" y="389" width="7.4" height="15.0" fill="rgb(213,55,19)" rx="2" ry="2" />
<text  x="1074.75" y="399.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_mul (195 samples, 0.04%)</title><rect x="1016.9" y="229" width="0.5" height="15.0" fill="rgb(246,71,53)" rx="2" ry="2" />
<text  x="1019.86" y="239.5" ></text>
</g>
<g >
<title>sudachi::output::write_morpheme_basic (5,419 samples, 1.17%)</title><rect x="78.5" y="469" width="13.8" height="15.0" fill="rgb(246,164,10)" rx="2" ry="2" />
<text  x="81.51" y="479.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,082 samples, 0.23%)</title><rect x="23.4" y="501" width="2.8" height="15.0" fill="rgb(207,144,33)" rx="2" ry="2" />
<text  x="26.41" y="511.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::find_at (1,880 samples, 0.41%)</title><rect x="1159.2" y="357" width="4.8" height="15.0" fill="rgb(245,207,5)" rx="2" ry="2" />
<text  x="1162.17" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (468 samples, 0.10%)</title><rect x="302.4" y="325" width="1.2" height="15.0" fill="rgb(245,70,11)" rx="2" ry="2" />
<text  x="305.37" y="335.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (2,438 samples, 0.53%)</title><rect x="1071.7" y="261" width="6.3" height="15.0" fill="rgb(229,29,21)" rx="2" ry="2" />
<text  x="1074.75" y="271.5" ></text>
</g>
<g >
<title>_int_realloc (1,132 samples, 0.24%)</title><rect x="216.1" y="69" width="2.8" height="15.0" fill="rgb(243,0,34)" rx="2" ry="2" />
<text  x="219.06" y="79.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (366 samples, 0.08%)</title><rect x="145.8" y="357" width="1.0" height="15.0" fill="rgb(220,3,6)" rx="2" ry="2" />
<text  x="148.82" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt; (205 samples, 0.04%)</title><rect x="250.8" y="469" width="0.5" height="15.0" fill="rgb(207,26,7)" rx="2" ry="2" />
<text  x="253.76" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_free (603 samples, 0.13%)</title><rect x="242.3" y="341" width="1.6" height="15.0" fill="rgb(229,135,38)" rx="2" ry="2" />
<text  x="245.34" y="351.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (28,556 samples, 6.17%)</title><rect x="335.9" y="325" width="72.9" height="15.0" fill="rgb(223,118,21)" rx="2" ry="2" />
<text  x="338.95" y="335.5" >&lt;F as no..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (128 samples, 0.03%)</title><rect x="540.9" y="341" width="0.4" height="15.0" fill="rgb(211,218,5)" rx="2" ry="2" />
<text  x="543.93" y="351.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (327 samples, 0.07%)</title><rect x="269.0" y="293" width="0.9" height="15.0" fill="rgb(239,109,42)" rx="2" ry="2" />
<text  x="272.02" y="303.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (468 samples, 0.10%)</title><rect x="302.4" y="341" width="1.2" height="15.0" fill="rgb(205,66,48)" rx="2" ry="2" />
<text  x="305.37" y="351.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::with_editor (15,524 samples, 3.36%)</title><rect x="1124.6" y="437" width="39.6" height="15.0" fill="rgb(246,179,28)" rx="2" ry="2" />
<text  x="1127.65" y="447.5" >sud..</text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (2,438 samples, 0.53%)</title><rect x="1071.7" y="309" width="6.3" height="15.0" fill="rgb(225,117,5)" rx="2" ry="2" />
<text  x="1074.75" y="319.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,308 samples, 0.28%)</title><rect x="927.7" y="261" width="3.4" height="15.0" fill="rgb(223,183,25)" rx="2" ry="2" />
<text  x="930.74" y="271.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::find_at (1,832 samples, 0.40%)</title><rect x="1159.2" y="341" width="4.6" height="15.0" fill="rgb(250,59,17)" rx="2" ry="2" />
<text  x="1162.17" y="351.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::simple_oov::SimpleOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (328 samples, 0.07%)</title><rect x="1116.9" y="437" width="0.9" height="15.0" fill="rgb(209,156,4)" rx="2" ry="2" />
<text  x="1119.94" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (1,912 samples, 0.41%)</title><rect x="258.3" y="325" width="4.9" height="15.0" fill="rgb(247,7,13)" rx="2" ry="2" />
<text  x="261.31" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::sentence_splitter::SentenceIter as core::iter::traits::iterator::Iterator&gt;::next (54,329 samples, 11.74%)</title><rect x="92.3" y="485" width="138.6" height="15.0" fill="rgb(209,87,39)" rx="2" ry="2" />
<text  x="95.34" y="495.5" >&lt;sudachi::sentenc..</text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (291 samples, 0.06%)</title><rect x="1084.7" y="309" width="0.7" height="15.0" fill="rgb(232,165,8)" rx="2" ry="2" />
<text  x="1087.71" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (137 samples, 0.03%)</title><rect x="231.2" y="421" width="0.3" height="15.0" fill="rgb(214,217,30)" rx="2" ry="2" />
<text  x="234.16" y="431.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (315 samples, 0.07%)</title><rect x="1123.7" y="373" width="0.8" height="15.0" fill="rgb(244,85,42)" rx="2" ry="2" />
<text  x="1126.69" y="383.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::OovProviderPlugin::get_oov (10,556 samples, 2.28%)</title><rect x="1091.1" y="453" width="26.9" height="15.0" fill="rgb(233,70,15)" rx="2" ry="2" />
<text  x="1094.09" y="463.5" >s..</text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::surface (377 samples, 0.08%)</title><rect x="91.4" y="453" width="0.9" height="15.0" fill="rgb(205,16,52)" rx="2" ry="2" />
<text  x="94.37" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_free (481 samples, 0.10%)</title><rect x="50.2" y="501" width="1.2" height="15.0" fill="rgb(225,57,6)" rx="2" ry="2" />
<text  x="53.18" y="511.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (400 samples, 0.09%)</title><rect x="1064.3" y="261" width="1.0" height="15.0" fill="rgb(244,169,20)" rx="2" ry="2" />
<text  x="1067.28" y="271.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (214 samples, 0.05%)</title><rect x="1066.4" y="293" width="0.5" height="15.0" fill="rgb(210,206,11)" rx="2" ry="2" />
<text  x="1069.40" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (899 samples, 0.19%)</title><rect x="1015.5" y="309" width="2.3" height="15.0" fill="rgb(221,125,31)" rx="2" ry="2" />
<text  x="1018.54" y="319.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (236 samples, 0.05%)</title><rect x="219.1" y="213" width="0.6" height="15.0" fill="rgb(216,216,46)" rx="2" ry="2" />
<text  x="222.06" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::character_category::CharacterCategory::get_category_types (1,017 samples, 0.22%)</title><rect x="1169.2" y="453" width="2.6" height="15.0" fill="rgb(212,28,43)" rx="2" ry="2" />
<text  x="1172.22" y="463.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (177 samples, 0.04%)</title><rect x="282.1" y="453" width="0.4" height="15.0" fill="rgb(236,86,5)" rx="2" ry="2" />
<text  x="285.07" y="463.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (600 samples, 0.13%)</title><rect x="280.5" y="421" width="1.5" height="15.0" fill="rgb(210,87,25)" rx="2" ry="2" />
<text  x="283.50" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (467 samples, 0.10%)</title><rect x="311.9" y="213" width="1.2" height="15.0" fill="rgb(214,72,53)" rx="2" ry="2" />
<text  x="314.87" y="223.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (25,433 samples, 5.50%)</title><rect x="944.3" y="389" width="64.9" height="15.0" fill="rgb(231,169,37)" rx="2" ry="2" />
<text  x="947.29" y="399.5" >nom::se..</text>
</g>
<g >
<title>core::ops::function::Fn::call (359 samples, 0.08%)</title><rect x="1137.8" y="325" width="0.9" height="15.0" fill="rgb(234,11,1)" rx="2" ry="2" />
<text  x="1140.82" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::to_orig (141 samples, 0.03%)</title><rect x="233.2" y="437" width="0.4" height="15.0" fill="rgb(239,95,33)" rx="2" ry="2" />
<text  x="236.22" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,359 samples, 0.73%)</title><rect x="1102.8" y="389" width="8.6" height="15.0" fill="rgb(207,127,19)" rx="2" ry="2" />
<text  x="1105.82" y="399.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match_at (17,122 samples, 3.70%)</title><rect x="171.1" y="389" width="43.6" height="15.0" fill="rgb(214,46,15)" rx="2" ry="2" />
<text  x="174.05" y="399.5" >rege..</text>
</g>
<g >
<title>std::io::BufRead::read_line (1,250 samples, 0.27%)</title><rect x="73.9" y="453" width="3.2" height="15.0" fill="rgb(243,125,2)" rx="2" ry="2" />
<text  x="76.88" y="463.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (1,449 samples, 0.31%)</title><rect x="39.0" y="501" width="3.7" height="15.0" fill="rgb(228,132,34)" rx="2" ry="2" />
<text  x="42.04" y="511.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::grammar::ConnPair as core::hash::Hash&gt;::hash (211 samples, 0.05%)</title><rect x="1188.5" y="501" width="0.5" height="15.0" fill="rgb(238,172,26)" rx="2" ry="2" />
<text  x="1191.47" y="511.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify128 (951 samples, 0.21%)</title><rect x="1160.5" y="181" width="2.4" height="15.0" fill="rgb(246,173,15)" rx="2" ry="2" />
<text  x="1163.47" y="191.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array (195 samples, 0.04%)</title><rect x="1016.9" y="261" width="0.5" height="15.0" fill="rgb(232,121,39)" rx="2" ry="2" />
<text  x="1019.86" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,781 samples, 0.38%)</title><rect x="1111.4" y="389" width="4.5" height="15.0" fill="rgb(223,64,27)" rx="2" ry="2" />
<text  x="1114.38" y="399.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::is_katakana_node (396 samples, 0.09%)</title><rect x="235.5" y="437" width="1.0" height="15.0" fill="rgb(215,81,35)" rx="2" ry="2" />
<text  x="238.48" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (880 samples, 0.19%)</title><rect x="277.3" y="341" width="2.3" height="15.0" fill="rgb(226,46,20)" rx="2" ry="2" />
<text  x="280.32" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (390 samples, 0.08%)</title><rect x="148.7" y="357" width="1.0" height="15.0" fill="rgb(225,188,24)" rx="2" ry="2" />
<text  x="151.67" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,246 samples, 0.27%)</title><rect x="1014.7" y="357" width="3.1" height="15.0" fill="rgb(208,158,26)" rx="2" ry="2" />
<text  x="1017.65" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (120 samples, 0.03%)</title><rect x="1137.0" y="261" width="0.3" height="15.0" fill="rgb(253,168,24)" rx="2" ry="2" />
<text  x="1140.01" y="271.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (3,026 samples, 0.65%)</title><rect x="1103.1" y="245" width="7.7" height="15.0" fill="rgb(218,35,9)" rx="2" ry="2" />
<text  x="1106.06" y="255.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (164 samples, 0.04%)</title><rect x="484.0" y="453" width="0.4" height="15.0" fill="rgb(208,40,49)" rx="2" ry="2" />
<text  x="487.00" y="463.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1,629 samples, 0.35%)</title><rect x="1111.4" y="213" width="4.1" height="15.0" fill="rgb(206,109,4)" rx="2" ry="2" />
<text  x="1114.38" y="223.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (133 samples, 0.03%)</title><rect x="397.0" y="117" width="0.4" height="15.0" fill="rgb(232,150,38)" rx="2" ry="2" />
<text  x="400.02" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (152 samples, 0.03%)</title><rect x="76.2" y="309" width="0.4" height="15.0" fill="rgb(214,101,11)" rx="2" ry="2" />
<text  x="79.19" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,479 samples, 0.75%)</title><rect x="1175.2" y="341" width="8.9" height="15.0" fill="rgb(250,172,41)" rx="2" ry="2" />
<text  x="1178.18" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (31,351 samples, 6.78%)</title><rect x="537.0" y="437" width="80.0" height="15.0" fill="rgb(223,105,12)" rx="2" ry="2" />
<text  x="540.00" y="447.5" >alloc::ve..</text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (126 samples, 0.03%)</title><rect x="994.9" y="229" width="0.3" height="15.0" fill="rgb(241,121,53)" rx="2" ry="2" />
<text  x="997.88" y="239.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (2,519 samples, 0.54%)</title><rect x="82.3" y="437" width="6.4" height="15.0" fill="rgb(212,20,24)" rx="2" ry="2" />
<text  x="85.27" y="447.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search::{{closure}} (287 samples, 0.06%)</title><rect x="1171.0" y="405" width="0.7" height="15.0" fill="rgb(218,216,33)" rx="2" ry="2" />
<text  x="1174.01" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,278 samples, 0.28%)</title><rect x="215.8" y="181" width="3.3" height="15.0" fill="rgb(247,72,23)" rx="2" ry="2" />
<text  x="218.80" y="191.5" ></text>
</g>
<g >
<title>&lt;unicode_normalization::decompose::Decompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (237 samples, 0.05%)</title><rect x="1135.3" y="325" width="0.6" height="15.0" fill="rgb(218,177,39)" rx="2" ry="2" />
<text  x="1138.31" y="335.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (374 samples, 0.08%)</title><rect x="213.8" y="261" width="0.9" height="15.0" fill="rgb(247,161,34)" rx="2" ry="2" />
<text  x="216.77" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (394 samples, 0.09%)</title><rect x="302.4" y="277" width="1.0" height="15.0" fill="rgb(236,147,7)" rx="2" ry="2" />
<text  x="305.37" y="287.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (6,996 samples, 1.51%)</title><rect x="459.9" y="341" width="17.9" height="15.0" fill="rgb(251,34,42)" rx="2" ry="2" />
<text  x="462.91" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2 (255 samples, 0.06%)</title><rect x="927.1" y="277" width="0.6" height="15.0" fill="rgb(211,58,35)" rx="2" ry="2" />
<text  x="930.09" y="287.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (147 samples, 0.03%)</title><rect x="1136.6" y="245" width="0.4" height="15.0" fill="rgb(211,192,45)" rx="2" ry="2" />
<text  x="1139.58" y="255.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::exec (716 samples, 0.15%)</title><rect x="224.6" y="309" width="1.8" height="15.0" fill="rgb(229,228,37)" rx="2" ry="2" />
<text  x="227.60" y="319.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (430 samples, 0.09%)</title><rect x="1078.0" y="357" width="1.1" height="15.0" fill="rgb(237,70,34)" rx="2" ry="2" />
<text  x="1080.97" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (861 samples, 0.19%)</title><rect x="309.0" y="197" width="2.2" height="15.0" fill="rgb(238,42,43)" rx="2" ry="2" />
<text  x="311.99" y="207.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (253 samples, 0.05%)</title><rect x="397.4" y="133" width="0.6" height="15.0" fill="rgb(229,153,12)" rx="2" ry="2" />
<text  x="400.38" y="143.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (137 samples, 0.03%)</title><rect x="1110.9" y="277" width="0.3" height="15.0" fill="rgb(207,119,33)" rx="2" ry="2" />
<text  x="1113.88" y="287.5" ></text>
</g>
<g >
<title>alloc::string::String::reserve (141 samples, 0.03%)</title><rect x="215.1" y="405" width="0.4" height="15.0" fill="rgb(219,127,22)" rx="2" ry="2" />
<text  x="218.10" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23,133 samples, 5.00%)</title><rect x="539.1" y="373" width="59.0" height="15.0" fill="rgb(205,95,16)" rx="2" ry="2" />
<text  x="542.10" y="383.5" >alloc:..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (140 samples, 0.03%)</title><rect x="1173.9" y="405" width="0.4" height="15.0" fill="rgb(249,95,45)" rx="2" ry="2" />
<text  x="1176.91" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (541 samples, 0.12%)</title><rect x="306.9" y="133" width="1.4" height="15.0" fill="rgb(233,92,51)" rx="2" ry="2" />
<text  x="309.94" y="143.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (118 samples, 0.03%)</title><rect x="356.7" y="261" width="0.3" height="15.0" fill="rgb(236,120,12)" rx="2" ry="2" />
<text  x="359.69" y="271.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,620 samples, 0.35%)</title><rect x="650.5" y="405" width="4.2" height="15.0" fill="rgb(245,223,8)" rx="2" ry="2" />
<text  x="653.53" y="415.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (4,070 samples, 0.88%)</title><rect x="136.4" y="405" width="10.4" height="15.0" fill="rgb(209,61,4)" rx="2" ry="2" />
<text  x="139.38" y="415.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (404 samples, 0.09%)</title><rect x="245.4" y="357" width="1.0" height="15.0" fill="rgb(234,16,35)" rx="2" ry="2" />
<text  x="248.41" y="367.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (139 samples, 0.03%)</title><rect x="1162.2" y="117" width="0.4" height="15.0" fill="rgb(252,60,52)" rx="2" ry="2" />
<text  x="1165.22" y="127.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (446 samples, 0.10%)</title><rect x="302.4" y="309" width="1.1" height="15.0" fill="rgb(223,103,29)" rx="2" ry="2" />
<text  x="305.37" y="319.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (1,927 samples, 0.42%)</title><rect x="215.5" y="341" width="4.9" height="15.0" fill="rgb(243,6,20)" rx="2" ry="2" />
<text  x="218.47" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (2,355 samples, 0.51%)</title><rect x="931.1" y="277" width="6.0" height="15.0" fill="rgb(251,172,7)" rx="2" ry="2" />
<text  x="934.08" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::u32_array_parser (873 samples, 0.19%)</title><rect x="347.4" y="293" width="2.2" height="15.0" fill="rgb(229,20,3)" rx="2" ry="2" />
<text  x="350.41" y="303.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (303 samples, 0.07%)</title><rect x="282.7" y="405" width="0.8" height="15.0" fill="rgb(250,223,19)" rx="2" ry="2" />
<text  x="285.70" y="415.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,001 samples, 0.22%)</title><rect x="297.3" y="405" width="2.5" height="15.0" fill="rgb(212,144,37)" rx="2" ry="2" />
<text  x="300.27" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt; (7,285 samples, 1.57%)</title><rect x="252.0" y="405" width="18.6" height="15.0" fill="rgb(234,80,5)" rx="2" ry="2" />
<text  x="255.00" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSyncStr&gt; (223 samples, 0.05%)</title><rect x="211.0" y="357" width="0.6" height="15.0" fill="rgb(254,208,14)" rx="2" ry="2" />
<text  x="214.01" y="367.5" ></text>
</g>
<g >
<title>__rdl_realloc (223 samples, 0.05%)</title><rect x="366.9" y="69" width="0.5" height="15.0" fill="rgb(246,173,20)" rx="2" ry="2" />
<text  x="369.86" y="79.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup (240 samples, 0.05%)</title><rect x="480.9" y="325" width="0.7" height="15.0" fill="rgb(251,110,17)" rx="2" ry="2" />
<text  x="483.95" y="335.5" ></text>
</g>
<g >
<title>&lt;T as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::oov_provider_plugins (260 samples, 0.06%)</title><rect x="427.4" y="453" width="0.7" height="15.0" fill="rgb(254,58,21)" rx="2" ry="2" />
<text  x="430.39" y="463.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,768 samples, 0.38%)</title><rect x="1159.3" y="325" width="4.5" height="15.0" fill="rgb(229,129,37)" rx="2" ry="2" />
<text  x="1162.29" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_info (46,679 samples, 10.09%)</title><rect x="294.7" y="437" width="119.0" height="15.0" fill="rgb(217,27,8)" rx="2" ry="2" />
<text  x="297.68" y="447.5" >sudachi::dic::..</text>
</g>
<g >
<title>alloc::string::String::push (1,927 samples, 0.42%)</title><rect x="215.5" y="277" width="4.9" height="15.0" fill="rgb(205,11,13)" rx="2" ry="2" />
<text  x="218.47" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[sudachi::analysis::node::Node]&gt; (4,317 samples, 0.93%)</title><rect x="252.2" y="373" width="11.0" height="15.0" fill="rgb(218,90,29)" rx="2" ry="2" />
<text  x="255.17" y="383.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (303 samples, 0.07%)</title><rect x="1167.1" y="453" width="0.8" height="15.0" fill="rgb(247,59,3)" rx="2" ry="2" />
<text  x="1170.11" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (317 samples, 0.07%)</title><rect x="245.4" y="293" width="0.8" height="15.0" fill="rgb(236,62,41)" rx="2" ry="2" />
<text  x="248.41" y="303.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (124 samples, 0.03%)</title><rect x="994.9" y="149" width="0.3" height="15.0" fill="rgb(230,228,39)" rx="2" ry="2" />
<text  x="997.88" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_free (2,451 samples, 0.53%)</title><rect x="263.6" y="325" width="6.3" height="15.0" fill="rgb(230,191,46)" rx="2" ry="2" />
<text  x="266.61" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (3,350 samples, 0.72%)</title><rect x="1175.3" y="293" width="8.6" height="15.0" fill="rgb(216,213,52)" rx="2" ry="2" />
<text  x="1178.34" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (2,401 samples, 0.52%)</title><rect x="360.7" y="69" width="6.2" height="15.0" fill="rgb(221,121,33)" rx="2" ry="2" />
<text  x="363.74" y="79.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_continuous_len (501 samples, 0.11%)</title><rect x="1097.1" y="405" width="1.3" height="15.0" fill="rgb(251,197,32)" rx="2" ry="2" />
<text  x="1100.12" y="415.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::clear (138 samples, 0.03%)</title><rect x="226.1" y="277" width="0.3" height="15.0" fill="rgb(220,5,37)" rx="2" ry="2" />
<text  x="229.06" y="287.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::shortest_dfa (155 samples, 0.03%)</title><rect x="221.9" y="357" width="0.4" height="15.0" fill="rgb(222,224,2)" rx="2" ry="2" />
<text  x="224.88" y="367.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (123 samples, 0.03%)</title><rect x="10.0" y="517" width="0.4" height="15.0" fill="rgb(209,34,43)" rx="2" ry="2" />
<text  x="13.05" y="527.5" ></text>
</g>
<g >
<title>alloc::string::String::push (433 samples, 0.09%)</title><rect x="35.1" y="501" width="1.1" height="15.0" fill="rgb(218,83,29)" rx="2" ry="2" />
<text  x="38.06" y="511.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (317 samples, 0.07%)</title><rect x="1065.3" y="325" width="0.8" height="15.0" fill="rgb(251,74,46)" rx="2" ry="2" />
<text  x="1068.30" y="335.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (257 samples, 0.06%)</title><rect x="346.0" y="261" width="0.7" height="15.0" fill="rgb(245,4,24)" rx="2" ry="2" />
<text  x="349.01" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12,771 samples, 2.76%)</title><rect x="543.9" y="341" width="32.5" height="15.0" fill="rgb(213,46,4)" rx="2" ry="2" />
<text  x="546.85" y="351.5" >&lt;a..</text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (276 samples, 0.06%)</title><rect x="78.6" y="437" width="0.7" height="15.0" fill="rgb(228,123,17)" rx="2" ry="2" />
<text  x="81.60" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (236 samples, 0.05%)</title><rect x="389.0" y="261" width="0.7" height="15.0" fill="rgb(226,71,26)" rx="2" ry="2" />
<text  x="392.05" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (128 samples, 0.03%)</title><rect x="48.3" y="501" width="0.3" height="15.0" fill="rgb(236,123,52)" rx="2" ry="2" />
<text  x="51.29" y="511.5" ></text>
</g>
<g >
<title>sudachi::dic::LoadedDictionary::from_system_dictionary (290 samples, 0.06%)</title><rect x="1184.6" y="469" width="0.8" height="15.0" fill="rgb(237,184,25)" rx="2" ry="2" />
<text  x="1187.63" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (739 samples, 0.16%)</title><rect x="1015.9" y="293" width="1.9" height="15.0" fill="rgb(233,165,20)" rx="2" ry="2" />
<text  x="1018.95" y="303.5" ></text>
</g>
<g >
<title>regex::re_trait::RegularExpression::locations (208 samples, 0.04%)</title><rect x="223.3" y="389" width="0.6" height="15.0" fill="rgb(247,135,16)" rx="2" ry="2" />
<text  x="226.33" y="399.5" ></text>
</g>
<g >
<title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (150 samples, 0.03%)</title><rect x="349.1" y="261" width="0.4" height="15.0" fill="rgb(228,162,6)" rx="2" ry="2" />
<text  x="352.14" y="271.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (8,793 samples, 1.90%)</title><rect x="1013.9" y="421" width="22.4" height="15.0" fill="rgb(209,126,52)" rx="2" ry="2" />
<text  x="1016.88" y="431.5" >&lt;..</text>
</g>
<g >
<title>core::option::Option&lt;&amp;T&gt;::copied (238 samples, 0.05%)</title><rect x="313.3" y="213" width="0.6" height="15.0" fill="rgb(236,6,32)" rx="2" ry="2" />
<text  x="316.29" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23,457 samples, 5.07%)</title><rect x="538.8" y="389" width="59.8" height="15.0" fill="rgb(213,204,37)" rx="2" ry="2" />
<text  x="541.80" y="399.5" >alloc:..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (146 samples, 0.03%)</title><rect x="76.2" y="293" width="0.4" height="15.0" fill="rgb(229,39,6)" rx="2" ry="2" />
<text  x="79.20" y="303.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (4,115 samples, 0.89%)</title><rect x="121.9" y="405" width="10.5" height="15.0" fill="rgb(212,78,16)" rx="2" ry="2" />
<text  x="124.93" y="415.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (167 samples, 0.04%)</title><rect x="367.0" y="53" width="0.4" height="15.0" fill="rgb(212,112,23)" rx="2" ry="2" />
<text  x="370.01" y="63.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (291 samples, 0.06%)</title><rect x="1084.7" y="325" width="0.7" height="15.0" fill="rgb(249,183,0)" rx="2" ry="2" />
<text  x="1087.71" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,653 samples, 0.57%)</title><rect x="263.3" y="357" width="6.7" height="15.0" fill="rgb(223,165,31)" rx="2" ry="2" />
<text  x="266.26" y="367.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::captures_nfa_type (747 samples, 0.16%)</title><rect x="224.5" y="357" width="1.9" height="15.0" fill="rgb(248,66,12)" rx="2" ry="2" />
<text  x="227.54" y="367.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (139 samples, 0.03%)</title><rect x="19.4" y="501" width="0.4" height="15.0" fill="rgb(247,130,45)" rx="2" ry="2" />
<text  x="22.44" y="511.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::append (654 samples, 0.14%)</title><rect x="248.3" y="437" width="1.7" height="15.0" fill="rgb(249,40,52)" rx="2" ry="2" />
<text  x="251.32" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,638 samples, 0.35%)</title><rect x="215.5" y="261" width="4.2" height="15.0" fill="rgb(212,189,7)" rx="2" ry="2" />
<text  x="218.49" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (133 samples, 0.03%)</title><rect x="135.0" y="325" width="0.3" height="15.0" fill="rgb(226,62,47)" rx="2" ry="2" />
<text  x="137.99" y="335.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match (331 samples, 0.07%)</title><rect x="169.1" y="341" width="0.8" height="15.0" fill="rgb(241,117,7)" rx="2" ry="2" />
<text  x="172.09" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (576 samples, 0.12%)</title><rect x="1165.5" y="453" width="1.5" height="15.0" fill="rgb(227,76,11)" rx="2" ry="2" />
<text  x="1168.51" y="463.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::next_state_no_fail (361 samples, 0.08%)</title><rect x="1132.6" y="277" width="0.9" height="15.0" fill="rgb(218,187,5)" rx="2" ry="2" />
<text  x="1135.59" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (261 samples, 0.06%)</title><rect x="1017.8" y="373" width="0.7" height="15.0" fill="rgb(238,214,48)" rx="2" ry="2" />
<text  x="1020.83" y="383.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (2,438 samples, 0.53%)</title><rect x="1071.7" y="357" width="6.3" height="15.0" fill="rgb(241,170,22)" rx="2" ry="2" />
<text  x="1074.75" y="367.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state (894 samples, 0.19%)</title><rect x="1128.3" y="309" width="2.3" height="15.0" fill="rgb(248,23,42)" rx="2" ry="2" />
<text  x="1131.28" y="319.5" ></text>
</g>
<g >
<title>_int_realloc (11,087 samples, 2.40%)</title><rect x="547.4" y="277" width="28.3" height="15.0" fill="rgb(247,198,18)" rx="2" ry="2" />
<text  x="550.44" y="287.5" >_..</text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::standard_find_at (484 samples, 0.10%)</title><rect x="1132.3" y="309" width="1.3" height="15.0" fill="rgb(208,49,30)" rx="2" ry="2" />
<text  x="1135.32" y="319.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array (217 samples, 0.05%)</title><rect x="596.5" y="357" width="0.5" height="15.0" fill="rgb(240,111,5)" rx="2" ry="2" />
<text  x="599.46" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (135 samples, 0.03%)</title><rect x="246.7" y="277" width="0.4" height="15.0" fill="rgb(224,4,32)" rx="2" ry="2" />
<text  x="249.74" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (146 samples, 0.03%)</title><rect x="249.0" y="229" width="0.3" height="15.0" fill="rgb(252,20,34)" rx="2" ry="2" />
<text  x="251.95" y="239.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (6,860 samples, 1.48%)</title><rect x="486.0" y="453" width="17.5" height="15.0" fill="rgb(241,129,11)" rx="2" ry="2" />
<text  x="489.03" y="463.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::part_of_speech (411 samples, 0.09%)</title><rect x="90.3" y="453" width="1.1" height="15.0" fill="rgb(227,229,38)" rx="2" ry="2" />
<text  x="93.32" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3,560 samples, 0.77%)</title><rect x="359.1" y="149" width="9.1" height="15.0" fill="rgb(249,65,8)" rx="2" ry="2" />
<text  x="362.11" y="159.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5,110 samples, 1.10%)</title><rect x="837.4" y="309" width="13.1" height="15.0" fill="rgb(239,205,4)" rx="2" ry="2" />
<text  x="840.45" y="319.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::prolonged_sound_mark::ProlongedSoundMarkPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (2,132 samples, 0.46%)</title><rect x="1158.8" y="405" width="5.4" height="15.0" fill="rgb(238,130,44)" rx="2" ry="2" />
<text  x="1161.78" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12,868 samples, 2.78%)</title><rect x="904.3" y="341" width="32.8" height="15.0" fill="rgb(213,49,33)" rx="2" ry="2" />
<text  x="907.27" y="351.5" >ha..</text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (4,297 samples, 0.93%)</title><rect x="303.7" y="373" width="11.0" height="15.0" fill="rgb(224,42,31)" rx="2" ry="2" />
<text  x="306.70" y="383.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::fill_word_info (258 samples, 0.06%)</title><rect x="232.2" y="469" width="0.7" height="15.0" fill="rgb(206,100,27)" rx="2" ry="2" />
<text  x="235.22" y="479.5" ></text>
</g>
<g >
<title>_int_realloc (783 samples, 0.17%)</title><rect x="277.5" y="293" width="2.0" height="15.0" fill="rgb(239,93,14)" rx="2" ry="2" />
<text  x="280.54" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (196 samples, 0.04%)</title><rect x="250.8" y="437" width="0.5" height="15.0" fill="rgb(229,0,23)" rx="2" ry="2" />
<text  x="253.78" y="447.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (222 samples, 0.05%)</title><rect x="356.1" y="245" width="0.6" height="15.0" fill="rgb(205,12,34)" rx="2" ry="2" />
<text  x="359.12" y="255.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (161 samples, 0.03%)</title><rect x="1173.9" y="421" width="0.4" height="15.0" fill="rgb(207,57,25)" rx="2" ry="2" />
<text  x="1176.91" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (816 samples, 0.18%)</title><rect x="309.0" y="117" width="2.1" height="15.0" fill="rgb(245,9,24)" rx="2" ry="2" />
<text  x="312.03" y="127.5" ></text>
</g>
<g >
<title>_int_realloc (745 samples, 0.16%)</title><rect x="62.6" y="501" width="1.9" height="15.0" fill="rgb(243,70,52)" rx="2" ry="2" />
<text  x="65.55" y="511.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (873 samples, 0.19%)</title><rect x="70.5" y="501" width="2.3" height="15.0" fill="rgb(216,22,9)" rx="2" ry="2" />
<text  x="73.54" y="511.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify64 (904 samples, 0.20%)</title><rect x="1160.5" y="165" width="2.3" height="15.0" fill="rgb(229,175,8)" rx="2" ry="2" />
<text  x="1163.47" y="175.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (394 samples, 0.09%)</title><rect x="299.8" y="373" width="1.0" height="15.0" fill="rgb(205,98,21)" rx="2" ry="2" />
<text  x="302.83" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,145 samples, 1.11%)</title><rect x="372.4" y="213" width="13.1" height="15.0" fill="rgb(234,179,2)" rx="2" ry="2" />
<text  x="375.37" y="223.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (204 samples, 0.04%)</title><rect x="1078.5" y="245" width="0.6" height="15.0" fill="rgb(238,129,38)" rx="2" ry="2" />
<text  x="1081.54" y="255.5" ></text>
</g>
<g >
<title>__memchr_sse2 (186 samples, 0.04%)</title><rect x="76.6" y="357" width="0.5" height="15.0" fill="rgb(254,162,54)" rx="2" ry="2" />
<text  x="79.59" y="367.5" ></text>
</g>
<g >
<title>fancy_regex::vm::codepoint_len_at (137 samples, 0.03%)</title><rect x="156.1" y="405" width="0.3" height="15.0" fill="rgb(216,76,31)" rx="2" ry="2" />
<text  x="159.07" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,479 samples, 0.75%)</title><rect x="1175.2" y="357" width="8.9" height="15.0" fill="rgb(221,36,42)" rx="2" ry="2" />
<text  x="1178.18" y="367.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::uppercase::lookup (532 samples, 0.11%)</title><rect x="1126.5" y="341" width="1.4" height="15.0" fill="rgb(252,163,51)" rx="2" ry="2" />
<text  x="1129.53" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2,601 samples, 0.56%)</title><rect x="215.1" y="437" width="6.6" height="15.0" fill="rgb(230,24,21)" rx="2" ry="2" />
<text  x="218.05" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (277 samples, 0.06%)</title><rect x="1188.3" y="517" width="0.7" height="15.0" fill="rgb(232,45,7)" rx="2" ry="2" />
<text  x="1191.30" y="527.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (196 samples, 0.04%)</title><rect x="45.4" y="501" width="0.5" height="15.0" fill="rgb(222,144,41)" rx="2" ry="2" />
<text  x="48.38" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (595 samples, 0.13%)</title><rect x="1098.6" y="405" width="1.5" height="15.0" fill="rgb(211,113,14)" rx="2" ry="2" />
<text  x="1101.60" y="415.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (269 samples, 0.06%)</title><rect x="1184.7" y="373" width="0.7" height="15.0" fill="rgb(253,147,0)" rx="2" ry="2" />
<text  x="1187.68" y="383.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (402 samples, 0.09%)</title><rect x="330.6" y="309" width="1.0" height="15.0" fill="rgb(231,93,23)" rx="2" ry="2" />
<text  x="333.55" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (126 samples, 0.03%)</title><rect x="29.2" y="501" width="0.3" height="15.0" fill="rgb(241,66,52)" rx="2" ry="2" />
<text  x="32.16" y="511.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (2,614 samples, 0.56%)</title><rect x="215.0" y="453" width="6.7" height="15.0" fill="rgb(254,95,19)" rx="2" ry="2" />
<text  x="218.04" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (2,080 samples, 0.45%)</title><rect x="125.8" y="389" width="5.3" height="15.0" fill="rgb(234,206,49)" rx="2" ry="2" />
<text  x="128.83" y="399.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_at_byte (598 samples, 0.13%)</title><rect x="484.4" y="453" width="1.5" height="15.0" fill="rgb(210,21,9)" rx="2" ry="2" />
<text  x="487.42" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (8,843 samples, 1.91%)</title><rect x="1013.8" y="437" width="22.5" height="15.0" fill="rgb(247,78,19)" rx="2" ry="2" />
<text  x="1016.77" y="447.5" >a..</text>
</g>
<g >
<title>sudachi::analysis::node::Node::new (298 samples, 0.06%)</title><rect x="20.0" y="501" width="0.7" height="15.0" fill="rgb(239,77,3)" rx="2" ry="2" />
<text  x="22.95" y="511.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::start_build (225 samples, 0.05%)</title><rect x="1173.9" y="469" width="0.5" height="15.0" fill="rgb(251,76,31)" rx="2" ry="2" />
<text  x="1176.87" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (404 samples, 0.09%)</title><rect x="245.4" y="309" width="1.0" height="15.0" fill="rgb(239,88,1)" rx="2" ry="2" />
<text  x="248.41" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (282 samples, 0.06%)</title><rect x="348.2" y="261" width="0.7" height="15.0" fill="rgb(248,11,39)" rx="2" ry="2" />
<text  x="351.22" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (467 samples, 0.10%)</title><rect x="1123.5" y="421" width="1.1" height="15.0" fill="rgb(208,139,14)" rx="2" ry="2" />
<text  x="1126.45" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (178 samples, 0.04%)</title><rect x="408.1" y="165" width="0.5" height="15.0" fill="rgb(205,152,13)" rx="2" ry="2" />
<text  x="411.15" y="175.5" ></text>
</g>
<g >
<title>_int_malloc (581 samples, 0.13%)</title><rect x="16.8" y="501" width="1.5" height="15.0" fill="rgb(239,53,41)" rx="2" ry="2" />
<text  x="19.78" y="511.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (295 samples, 0.06%)</title><rect x="1008.4" y="341" width="0.8" height="15.0" fill="rgb(238,39,32)" rx="2" ry="2" />
<text  x="1011.40" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;sudachi::analysis::node::Node&gt;&gt; (327 samples, 0.07%)</title><rect x="504.0" y="453" width="0.8" height="15.0" fill="rgb(247,33,26)" rx="2" ry="2" />
<text  x="506.99" y="463.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (504 samples, 0.11%)</title><rect x="290.2" y="421" width="1.3" height="15.0" fill="rgb(222,25,50)" rx="2" ry="2" />
<text  x="293.21" y="431.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (2,355 samples, 0.51%)</title><rect x="931.1" y="261" width="6.0" height="15.0" fill="rgb(240,113,40)" rx="2" ry="2" />
<text  x="934.08" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (159 samples, 0.03%)</title><rect x="248.9" y="277" width="0.4" height="15.0" fill="rgb(249,6,31)" rx="2" ry="2" />
<text  x="251.94" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (394 samples, 0.09%)</title><rect x="302.4" y="245" width="1.0" height="15.0" fill="rgb(236,69,1)" rx="2" ry="2" />
<text  x="305.37" y="255.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,204 samples, 0.69%)</title><rect x="1103.1" y="325" width="8.1" height="15.0" fill="rgb(212,187,11)" rx="2" ry="2" />
<text  x="1106.06" y="335.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (18,545 samples, 4.01%)</title><rect x="856.9" y="325" width="47.3" height="15.0" fill="rgb(224,92,15)" rx="2" ry="2" />
<text  x="859.95" y="335.5" >core..</text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_mul (131 samples, 0.03%)</title><rect x="596.7" y="325" width="0.3" height="15.0" fill="rgb(252,122,50)" rx="2" ry="2" />
<text  x="599.68" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (161 samples, 0.03%)</title><rect x="76.2" y="325" width="0.4" height="15.0" fill="rgb(246,2,47)" rx="2" ry="2" />
<text  x="79.16" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (167 samples, 0.04%)</title><rect x="76.1" y="357" width="0.5" height="15.0" fill="rgb(231,21,42)" rx="2" ry="2" />
<text  x="79.15" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (2,745 samples, 0.59%)</title><rect x="360.5" y="101" width="7.0" height="15.0" fill="rgb(250,22,26)" rx="2" ry="2" />
<text  x="363.53" y="111.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (643 samples, 0.14%)</title><rect x="1065.3" y="389" width="1.6" height="15.0" fill="rgb(208,81,51)" rx="2" ry="2" />
<text  x="1068.30" y="399.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::should_ignore (449 samples, 0.10%)</title><rect x="1136.2" y="373" width="1.1" height="15.0" fill="rgb(205,181,47)" rx="2" ry="2" />
<text  x="1139.17" y="383.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (119 samples, 0.03%)</title><rect x="1115.5" y="277" width="0.3" height="15.0" fill="rgb(222,196,45)" rx="2" ry="2" />
<text  x="1118.54" y="287.5" ></text>
</g>
<g >
<title>_int_realloc (285 samples, 0.06%)</title><rect x="148.9" y="229" width="0.7" height="15.0" fill="rgb(214,195,9)" rx="2" ry="2" />
<text  x="151.86" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (177 samples, 0.04%)</title><rect x="1101.3" y="325" width="0.4" height="15.0" fill="rgb(240,57,0)" rx="2" ry="2" />
<text  x="1104.27" y="335.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (896 samples, 0.19%)</title><rect x="513.0" y="405" width="2.3" height="15.0" fill="rgb(231,177,13)" rx="2" ry="2" />
<text  x="515.98" y="415.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,214 samples, 0.91%)</title><rect x="910.5" y="309" width="10.7" height="15.0" fill="rgb(239,131,41)" rx="2" ry="2" />
<text  x="913.47" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (153 samples, 0.03%)</title><rect x="249.0" y="245" width="0.3" height="15.0" fill="rgb(205,142,34)" rx="2" ry="2" />
<text  x="251.95" y="255.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (181 samples, 0.04%)</title><rect x="179.4" y="309" width="0.4" height="15.0" fill="rgb(241,50,54)" rx="2" ry="2" />
<text  x="182.39" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,269 samples, 0.27%)</title><rect x="1010.4" y="421" width="3.2" height="15.0" fill="rgb(232,113,6)" rx="2" ry="2" />
<text  x="1013.38" y="431.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (260 samples, 0.06%)</title><rect x="1167.1" y="437" width="0.7" height="15.0" fill="rgb(205,224,24)" rx="2" ry="2" />
<text  x="1170.11" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (3,568 samples, 0.77%)</title><rect x="321.5" y="245" width="9.1" height="15.0" fill="rgb(221,204,33)" rx="2" ry="2" />
<text  x="324.45" y="255.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher_str (1,231 samples, 0.27%)</title><rect x="211.6" y="357" width="3.1" height="15.0" fill="rgb(209,141,53)" rx="2" ry="2" />
<text  x="214.58" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (138 samples, 0.03%)</title><rect x="135.0" y="341" width="0.3" height="15.0" fill="rgb(247,200,25)" rx="2" ry="2" />
<text  x="137.98" y="351.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (368,872 samples, 79.73%)</title><rect x="233.6" y="485" width="940.8" height="15.0" fill="rgb(248,156,16)" rx="2" ry="2" />
<text  x="236.64" y="495.5" >sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize</text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (22,780 samples, 4.92%)</title><rect x="944.3" y="357" width="58.1" height="15.0" fill="rgb(229,200,1)" rx="2" ry="2" />
<text  x="947.29" y="367.5" >core::..</text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (269 samples, 0.06%)</title><rect x="1184.7" y="389" width="0.7" height="15.0" fill="rgb(226,219,4)" rx="2" ry="2" />
<text  x="1187.68" y="399.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::get_surface (377 samples, 0.08%)</title><rect x="91.4" y="437" width="0.9" height="15.0" fill="rgb(215,150,3)" rx="2" ry="2" />
<text  x="94.37" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_free (172 samples, 0.04%)</title><rect x="250.8" y="389" width="0.4" height="15.0" fill="rgb(209,49,5)" rx="2" ry="2" />
<text  x="253.79" y="399.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::boxed::Box&lt;W&gt;&gt;::write (148 samples, 0.03%)</title><rect x="81.9" y="405" width="0.3" height="15.0" fill="rgb(237,228,50)" rx="2" ry="2" />
<text  x="84.86" y="415.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (595 samples, 0.13%)</title><rect x="347.4" y="277" width="1.5" height="15.0" fill="rgb(234,83,24)" rx="2" ry="2" />
<text  x="350.42" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,026 samples, 0.65%)</title><rect x="1103.1" y="293" width="7.7" height="15.0" fill="rgb(226,1,1)" rx="2" ry="2" />
<text  x="1106.06" y="303.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (488 samples, 0.11%)</title><rect x="296.0" y="405" width="1.3" height="15.0" fill="rgb(223,157,15)" rx="2" ry="2" />
<text  x="299.03" y="415.5" ></text>
</g>
<g >
<title>alloc::string::String::push (217 samples, 0.05%)</title><rect x="66.0" y="501" width="0.5" height="15.0" fill="rgb(251,48,44)" rx="2" ry="2" />
<text  x="68.95" y="511.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::ok::{{closure}} (124 samples, 0.03%)</title><rect x="1166.1" y="341" width="0.3" height="15.0" fill="rgb(239,201,21)" rx="2" ry="2" />
<text  x="1169.06" y="351.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (232 samples, 0.05%)</title><rect x="247.1" y="325" width="0.6" height="15.0" fill="rgb(239,44,26)" rx="2" ry="2" />
<text  x="250.13" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (3,504 samples, 0.76%)</title><rect x="321.6" y="229" width="9.0" height="15.0" fill="rgb(254,99,22)" rx="2" ry="2" />
<text  x="324.62" y="239.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (32,993 samples, 7.13%)</title><rect x="739.3" y="341" width="84.1" height="15.0" fill="rgb(210,66,49)" rx="2" ry="2" />
<text  x="742.28" y="351.5" >&lt;std::col..</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (288 samples, 0.06%)</title><rect x="91.6" y="389" width="0.7" height="15.0" fill="rgb(248,220,19)" rx="2" ry="2" />
<text  x="94.59" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (617 samples, 0.13%)</title><rect x="1059.7" y="357" width="1.6" height="15.0" fill="rgb(239,73,27)" rx="2" ry="2" />
<text  x="1062.68" y="367.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::shortest_dfa (4,247 samples, 0.92%)</title><rect x="199.3" y="325" width="10.8" height="15.0" fill="rgb(233,57,47)" rx="2" ry="2" />
<text  x="202.25" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::any_bit_set (120 samples, 0.03%)</title><rect x="1062.4" y="293" width="0.3" height="15.0" fill="rgb(235,225,13)" rx="2" ry="2" />
<text  x="1065.36" y="303.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (1,558 samples, 0.34%)</title><rect x="314.9" y="373" width="4.0" height="15.0" fill="rgb(215,28,6)" rx="2" ry="2" />
<text  x="317.92" y="383.5" ></text>
</g>
<g >
<title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (269 samples, 0.06%)</title><rect x="1135.2" y="341" width="0.7" height="15.0" fill="rgb(231,105,33)" rx="2" ry="2" />
<text  x="1138.23" y="351.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::set_word_info (703 samples, 0.15%)</title><rect x="287.4" y="453" width="1.8" height="15.0" fill="rgb(205,216,7)" rx="2" ry="2" />
<text  x="290.40" y="463.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find (1,405 samples, 0.30%)</title><rect x="1159.9" y="261" width="3.6" height="15.0" fill="rgb(250,92,25)" rx="2" ry="2" />
<text  x="1162.92" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (5,126 samples, 1.11%)</title><rect x="1053.9" y="421" width="13.0" height="15.0" fill="rgb(241,107,12)" rx="2" ry="2" />
<text  x="1056.87" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (370 samples, 0.08%)</title><rect x="1167.9" y="453" width="0.9" height="15.0" fill="rgb(234,98,18)" rx="2" ry="2" />
<text  x="1170.88" y="463.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (5,386 samples, 1.16%)</title><rect x="300.9" y="405" width="13.8" height="15.0" fill="rgb(215,47,50)" rx="2" ry="2" />
<text  x="303.93" y="415.5" ></text>
</g>
<g >
<title>&lt;sudachi::hash::RoMuHash as core::hash::Hasher&gt;::write_u32 (617 samples, 0.13%)</title><rect x="1059.7" y="325" width="1.6" height="15.0" fill="rgb(240,146,35)" rx="2" ry="2" />
<text  x="1062.68" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl::{{closure}} (632 samples, 0.14%)</title><rect x="1126.3" y="373" width="1.6" height="15.0" fill="rgb(244,138,22)" rx="2" ry="2" />
<text  x="1129.27" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (179 samples, 0.04%)</title><rect x="13.0" y="501" width="0.5" height="15.0" fill="rgb(227,181,28)" rx="2" ry="2" />
<text  x="16.01" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (554 samples, 0.12%)</title><rect x="1015.9" y="277" width="1.5" height="15.0" fill="rgb(246,43,1)" rx="2" ry="2" />
<text  x="1018.95" y="287.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::get (208 samples, 0.04%)</title><rect x="149.7" y="389" width="0.5" height="15.0" fill="rgb(216,220,28)" rx="2" ry="2" />
<text  x="152.66" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,629 samples, 0.35%)</title><rect x="1111.4" y="277" width="4.1" height="15.0" fill="rgb(252,101,13)" rx="2" ry="2" />
<text  x="1114.38" y="287.5" ></text>
</g>
<g >
<title>nom::combinator::cond::{{closure}} (823 samples, 0.18%)</title><rect x="406.7" y="309" width="2.1" height="15.0" fill="rgb(232,48,9)" rx="2" ry="2" />
<text  x="409.68" y="319.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::shortest_match_at (187 samples, 0.04%)</title><rect x="221.8" y="373" width="0.5" height="15.0" fill="rgb(221,171,26)" rx="2" ry="2" />
<text  x="224.80" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,266 samples, 0.27%)</title><rect x="1010.4" y="389" width="3.2" height="15.0" fill="rgb(234,67,23)" rx="2" ry="2" />
<text  x="1013.39" y="399.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Patterns::get_unchecked (216 samples, 0.05%)</title><rect x="1162.0" y="133" width="0.6" height="15.0" fill="rgb(211,4,47)" rx="2" ry="2" />
<text  x="1165.02" y="143.5" ></text>
</g>
<g >
<title>_int_realloc (124 samples, 0.03%)</title><rect x="307.8" y="37" width="0.3" height="15.0" fill="rgb(225,223,3)" rx="2" ry="2" />
<text  x="310.79" y="47.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::build (3,728 samples, 0.81%)</title><rect x="1164.4" y="469" width="9.5" height="15.0" fill="rgb(254,209,40)" rx="2" ry="2" />
<text  x="1167.37" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (126 samples, 0.03%)</title><rect x="49.8" y="485" width="0.3" height="15.0" fill="rgb(208,53,30)" rx="2" ry="2" />
<text  x="52.76" y="495.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (133,069 samples, 28.76%)</title><rect x="669.8" y="421" width="339.4" height="15.0" fill="rgb(239,6,18)" rx="2" ry="2" />
<text  x="672.76" y="431.5" >sudachi::dic::grammar::Grammar::get_connect_c..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (163 samples, 0.04%)</title><rect x="244.8" y="293" width="0.4" height="15.0" fill="rgb(215,149,53)" rx="2" ry="2" />
<text  x="247.83" y="303.5" ></text>
</g>
<g >
<title>sudachi::sentence_detector::SentenceDetector::get_eos (54,230 samples, 11.72%)</title><rect x="92.6" y="469" width="138.3" height="15.0" fill="rgb(208,150,54)" rx="2" ry="2" />
<text  x="95.60" y="479.5" >sudachi::sentence..</text>
</g>
<g >
<title>alloc::string::String::as_bytes (454 samples, 0.10%)</title><rect x="89.1" y="453" width="1.1" height="15.0" fill="rgb(207,121,9)" rx="2" ry="2" />
<text  x="92.05" y="463.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (207 samples, 0.04%)</title><rect x="480.4" y="357" width="0.5" height="15.0" fill="rgb(251,175,9)" rx="2" ry="2" />
<text  x="483.42" y="367.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (410 samples, 0.09%)</title><rect x="407.6" y="245" width="1.0" height="15.0" fill="rgb(225,133,13)" rx="2" ry="2" />
<text  x="410.56" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::utf16_string_parser (3,246 samples, 0.70%)</title><rect x="305.6" y="277" width="8.3" height="15.0" fill="rgb(249,39,37)" rx="2" ry="2" />
<text  x="308.62" y="287.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (165 samples, 0.04%)</title><rect x="244.8" y="373" width="0.4" height="15.0" fill="rgb(248,229,0)" rx="2" ry="2" />
<text  x="247.83" y="383.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,056 samples, 0.23%)</title><rect x="156.7" y="373" width="2.6" height="15.0" fill="rgb(215,183,47)" rx="2" ry="2" />
<text  x="159.65" y="383.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (656 samples, 0.14%)</title><rect x="227.6" y="309" width="1.6" height="15.0" fill="rgb(245,47,31)" rx="2" ry="2" />
<text  x="230.56" y="319.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (347 samples, 0.08%)</title><rect x="22.5" y="501" width="0.9" height="15.0" fill="rgb(210,214,37)" rx="2" ry="2" />
<text  x="25.52" y="511.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next (124 samples, 0.03%)</title><rect x="165.4" y="277" width="0.4" height="15.0" fill="rgb(249,163,52)" rx="2" ry="2" />
<text  x="168.44" y="287.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (170 samples, 0.04%)</title><rect x="244.8" y="405" width="0.5" height="15.0" fill="rgb(225,80,52)" rx="2" ry="2" />
<text  x="247.83" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (294 samples, 0.06%)</title><rect x="245.5" y="261" width="0.7" height="15.0" fill="rgb(214,210,23)" rx="2" ry="2" />
<text  x="248.47" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (197,466 samples, 42.68%)</title><rect x="506.4" y="453" width="503.7" height="15.0" fill="rgb(235,24,47)" rx="2" ry="2" />
<text  x="509.44" y="463.5" >sudachi::analysis::lattice::Lattice::insert</text>
</g>
<g >
<title>_int_free (813 samples, 0.18%)</title><rect x="14.7" y="501" width="2.1" height="15.0" fill="rgb(233,26,24)" rx="2" ry="2" />
<text  x="17.71" y="511.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match (1,444 samples, 0.31%)</title><rect x="195.6" y="325" width="3.7" height="15.0" fill="rgb(242,55,53)" rx="2" ry="2" />
<text  x="198.57" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (590 samples, 0.13%)</title><rect x="306.8" y="181" width="1.6" height="15.0" fill="rgb(234,100,54)" rx="2" ry="2" />
<text  x="309.85" y="191.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (126 samples, 0.03%)</title><rect x="49.8" y="437" width="0.3" height="15.0" fill="rgb(252,90,9)" rx="2" ry="2" />
<text  x="52.76" y="447.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,559 samples, 0.34%)</title><rect x="1159.5" y="293" width="4.0" height="15.0" fill="rgb(239,134,28)" rx="2" ry="2" />
<text  x="1162.53" y="303.5" ></text>
</g>
<g >
<title>malloc_consolidate (127 samples, 0.03%)</title><rect x="268.7" y="293" width="0.3" height="15.0" fill="rgb(239,175,24)" rx="2" ry="2" />
<text  x="271.69" y="303.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (621 samples, 0.13%)</title><rect x="283.5" y="421" width="1.6" height="15.0" fill="rgb(219,14,54)" rx="2" ry="2" />
<text  x="286.47" y="431.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (923 samples, 0.20%)</title><rect x="593.2" y="309" width="2.4" height="15.0" fill="rgb(223,169,16)" rx="2" ry="2" />
<text  x="596.22" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (131 samples, 0.03%)</title><rect x="250.0" y="357" width="0.4" height="15.0" fill="rgb(245,223,20)" rx="2" ry="2" />
<text  x="253.04" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (374 samples, 0.08%)</title><rect x="148.7" y="325" width="1.0" height="15.0" fill="rgb(206,69,15)" rx="2" ry="2" />
<text  x="151.71" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (131 samples, 0.03%)</title><rect x="246.7" y="245" width="0.4" height="15.0" fill="rgb(210,52,26)" rx="2" ry="2" />
<text  x="249.75" y="255.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (324 samples, 0.07%)</title><rect x="1078.2" y="309" width="0.9" height="15.0" fill="rgb(245,204,47)" rx="2" ry="2" />
<text  x="1081.24" y="319.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,204 samples, 0.48%)</title><rect x="1059.7" y="405" width="5.6" height="15.0" fill="rgb(244,75,5)" rx="2" ry="2" />
<text  x="1062.68" y="415.5" ></text>
</g>
<g >
<title>std::io::read_until (570 samples, 0.12%)</title><rect x="75.6" y="405" width="1.5" height="15.0" fill="rgb(208,199,10)" rx="2" ry="2" />
<text  x="78.61" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::word_id_to_offset (129 samples, 0.03%)</title><rect x="301.7" y="389" width="0.4" height="15.0" fill="rgb(218,181,8)" rx="2" ry="2" />
<text  x="304.73" y="399.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (467 samples, 0.10%)</title><rect x="245.3" y="405" width="1.2" height="15.0" fill="rgb(217,223,17)" rx="2" ry="2" />
<text  x="248.26" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (135 samples, 0.03%)</title><rect x="246.7" y="309" width="0.4" height="15.0" fill="rgb(232,150,47)" rx="2" ry="2" />
<text  x="249.74" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,854 samples, 0.83%)</title><rect x="358.6" y="181" width="9.8" height="15.0" fill="rgb(226,144,40)" rx="2" ry="2" />
<text  x="361.55" y="191.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (152 samples, 0.03%)</title><rect x="385.5" y="245" width="0.4" height="15.0" fill="rgb(229,27,47)" rx="2" ry="2" />
<text  x="388.50" y="255.5" ></text>
</g>
<g >
<title>&lt; (4,233 samples, 0.91%)</title><rect x="303.8" y="325" width="10.8" height="15.0" fill="rgb(242,128,19)" rx="2" ry="2" />
<text  x="306.81" y="335.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (3,682 samples, 0.80%)</title><rect x="79.3" y="453" width="9.4" height="15.0" fill="rgb(240,218,30)" rx="2" ry="2" />
<text  x="82.30" y="463.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (366 samples, 0.08%)</title><rect x="145.8" y="373" width="1.0" height="15.0" fill="rgb(219,183,47)" rx="2" ry="2" />
<text  x="148.82" y="383.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::dfa::PremultipliedByteClass&lt;S&gt; as aho_corasick::automaton::Automaton&gt;::next_state (582 samples, 0.13%)</title><rect x="1129.1" y="261" width="1.5" height="15.0" fill="rgb(226,140,4)" rx="2" ry="2" />
<text  x="1132.07" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (238 samples, 0.05%)</title><rect x="505.2" y="437" width="0.6" height="15.0" fill="rgb(237,202,44)" rx="2" ry="2" />
<text  x="508.22" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (3,684 samples, 0.80%)</title><rect x="1175.2" y="389" width="9.4" height="15.0" fill="rgb(215,122,53)" rx="2" ry="2" />
<text  x="1178.18" y="399.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (6,668 samples, 1.44%)</title><rect x="833.5" y="325" width="17.0" height="15.0" fill="rgb(245,132,54)" rx="2" ry="2" />
<text  x="836.47" y="335.5" ></text>
</g>
<g >
<title>std::os::imp::unix::net::datagram::UnixDatagram::send (145 samples, 0.03%)</title><rect x="81.9" y="389" width="0.3" height="15.0" fill="rgb(212,102,52)" rx="2" ry="2" />
<text  x="84.87" y="399.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at (324 samples, 0.07%)</title><rect x="1078.2" y="325" width="0.9" height="15.0" fill="rgb(224,226,35)" rx="2" ry="2" />
<text  x="1081.24" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (326 samples, 0.07%)</title><rect x="148.8" y="293" width="0.8" height="15.0" fill="rgb(240,151,40)" rx="2" ry="2" />
<text  x="151.77" y="303.5" ></text>
</g>
<g >
<title>alloc::string::String::push (916 samples, 0.20%)</title><rect x="306.6" y="245" width="2.4" height="15.0" fill="rgb(210,180,4)" rx="2" ry="2" />
<text  x="309.63" y="255.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher (867 samples, 0.19%)</title><rect x="212.5" y="341" width="2.2" height="15.0" fill="rgb(219,43,54)" rx="2" ry="2" />
<text  x="215.51" y="351.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (1,070 samples, 0.23%)</title><rect x="1143.3" y="341" width="2.8" height="15.0" fill="rgb(231,139,26)" rx="2" ry="2" />
<text  x="1146.35" y="351.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (530 samples, 0.11%)</title><rect x="598.6" y="421" width="1.4" height="15.0" fill="rgb(235,177,6)" rx="2" ry="2" />
<text  x="601.63" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (211 samples, 0.05%)</title><rect x="1097.5" y="373" width="0.5" height="15.0" fill="rgb(252,67,18)" rx="2" ry="2" />
<text  x="1100.46" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (390 samples, 0.08%)</title><rect x="148.7" y="373" width="1.0" height="15.0" fill="rgb(220,183,50)" rx="2" ry="2" />
<text  x="151.67" y="383.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::has_previous_node (150 samples, 0.03%)</title><rect x="506.1" y="453" width="0.3" height="15.0" fill="rgb(252,81,40)" rx="2" ry="2" />
<text  x="509.06" y="463.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_uppercase (444 samples, 0.10%)</title><rect x="1133.8" y="373" width="1.1" height="15.0" fill="rgb(218,140,52)" rx="2" ry="2" />
<text  x="1136.79" y="383.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1,308 samples, 0.28%)</title><rect x="927.7" y="245" width="3.4" height="15.0" fill="rgb(231,172,12)" rx="2" ry="2" />
<text  x="930.74" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (159 samples, 0.03%)</title><rect x="248.9" y="261" width="0.4" height="15.0" fill="rgb(248,144,52)" rx="2" ry="2" />
<text  x="251.94" y="271.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::can_bow (898 samples, 0.19%)</title><rect x="1088.8" y="453" width="2.3" height="15.0" fill="rgb(211,143,21)" rx="2" ry="2" />
<text  x="1091.80" y="463.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (143 samples, 0.03%)</title><rect x="239.8" y="357" width="0.4" height="15.0" fill="rgb(236,91,37)" rx="2" ry="2" />
<text  x="242.82" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (320 samples, 0.07%)</title><rect x="1042.3" y="437" width="0.8" height="15.0" fill="rgb(215,102,22)" rx="2" ry="2" />
<text  x="1045.32" y="447.5" ></text>
</g>
<g >
<title>core::ptr::swap (953 samples, 0.21%)</title><rect x="282.6" y="437" width="2.5" height="15.0" fill="rgb(223,88,10)" rx="2" ry="2" />
<text  x="285.62" y="447.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (222 samples, 0.05%)</title><rect x="221.8" y="405" width="0.6" height="15.0" fill="rgb(208,120,42)" rx="2" ry="2" />
<text  x="224.79" y="415.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (322 samples, 0.07%)</title><rect x="130.3" y="357" width="0.8" height="15.0" fill="rgb(252,87,28)" rx="2" ry="2" />
<text  x="133.32" y="367.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::is_match (241 samples, 0.05%)</title><rect x="221.7" y="453" width="0.7" height="15.0" fill="rgb(245,86,2)" rx="2" ry="2" />
<text  x="224.74" y="463.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (5,237 samples, 1.13%)</title><rect x="372.1" y="261" width="13.4" height="15.0" fill="rgb(243,142,14)" rx="2" ry="2" />
<text  x="375.14" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (394 samples, 0.09%)</title><rect x="302.4" y="261" width="1.0" height="15.0" fill="rgb(215,174,27)" rx="2" ry="2" />
<text  x="305.37" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (466 samples, 0.10%)</title><rect x="1123.5" y="405" width="1.1" height="15.0" fill="rgb(250,110,33)" rx="2" ry="2" />
<text  x="1126.46" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2,592 samples, 0.56%)</title><rect x="1013.9" y="405" width="6.6" height="15.0" fill="rgb(214,100,20)" rx="2" ry="2" />
<text  x="1016.88" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (135 samples, 0.03%)</title><rect x="1016.5" y="261" width="0.4" height="15.0" fill="rgb(217,24,40)" rx="2" ry="2" />
<text  x="1019.52" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (2,510 samples, 0.54%)</title><rect x="323.7" y="197" width="6.4" height="15.0" fill="rgb(226,161,8)" rx="2" ry="2" />
<text  x="326.73" y="207.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::new (10,312 samples, 2.23%)</title><rect x="1010.1" y="453" width="26.3" height="15.0" fill="rgb(211,114,39)" rx="2" ry="2" />
<text  x="1013.07" y="463.5" >s..</text>
</g>
<g >
<title>nom::sequence::tuple::{{closure}} (31,186 samples, 6.74%)</title><rect x="333.9" y="357" width="79.5" height="15.0" fill="rgb(217,33,13)" rx="2" ry="2" />
<text  x="336.91" y="367.5" >nom::sequ..</text>
</g>
<g >
<title>regex::dfa::Fsm::u8_class (227 samples, 0.05%)</title><rect x="204.0" y="245" width="0.6" height="15.0" fill="rgb(205,112,45)" rx="2" ry="2" />
<text  x="207.00" y="255.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13,866 samples, 3.00%)</title><rect x="868.9" y="293" width="35.3" height="15.0" fill="rgb(222,50,10)" rx="2" ry="2" />
<text  x="871.87" y="303.5" >&lt;c..</text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (172 samples, 0.04%)</title><rect x="43.1" y="501" width="0.5" height="15.0" fill="rgb(212,86,38)" rx="2" ry="2" />
<text  x="46.13" y="511.5" ></text>
</g>
<g >
<title>core::ptr::write (356 samples, 0.08%)</title><rect x="135.3" y="373" width="0.9" height="15.0" fill="rgb(219,16,52)" rx="2" ry="2" />
<text  x="138.34" y="383.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match_at (224 samples, 0.05%)</title><rect x="221.8" y="421" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="224.79" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6,210 samples, 1.34%)</title><rect x="921.2" y="293" width="15.9" height="15.0" fill="rgb(245,143,41)" rx="2" ry="2" />
<text  x="924.25" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3,329 samples, 0.72%)</title><rect x="321.6" y="213" width="8.5" height="15.0" fill="rgb(231,117,35)" rx="2" ry="2" />
<text  x="324.64" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (292 samples, 0.06%)</title><rect x="920.5" y="277" width="0.7" height="15.0" fill="rgb(228,69,19)" rx="2" ry="2" />
<text  x="923.47" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[sudachi::analysis::node::Node]&gt; (3,950 samples, 0.85%)</title><rect x="1174.5" y="437" width="10.1" height="15.0" fill="rgb(206,102,48)" rx="2" ry="2" />
<text  x="1177.50" y="447.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (178 samples, 0.04%)</title><rect x="1110.8" y="293" width="0.4" height="15.0" fill="rgb(250,223,43)" rx="2" ry="2" />
<text  x="1113.78" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (167 samples, 0.04%)</title><rect x="76.1" y="373" width="0.5" height="15.0" fill="rgb(247,220,40)" rx="2" ry="2" />
<text  x="79.15" y="383.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::find_at (3,511 samples, 0.76%)</title><rect x="161.0" y="373" width="9.0" height="15.0" fill="rgb(238,222,23)" rx="2" ry="2" />
<text  x="164.03" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,901 samples, 0.63%)</title><rect x="263.2" y="373" width="7.4" height="15.0" fill="rgb(231,128,52)" rx="2" ry="2" />
<text  x="266.18" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (688 samples, 0.15%)</title><rect x="242.2" y="373" width="1.7" height="15.0" fill="rgb(219,64,35)" rx="2" ry="2" />
<text  x="245.19" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,348 samples, 0.29%)</title><rect x="215.6" y="213" width="3.5" height="15.0" fill="rgb(253,47,50)" rx="2" ry="2" />
<text  x="218.62" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (194 samples, 0.04%)</title><rect x="35.7" y="485" width="0.5" height="15.0" fill="rgb(233,57,26)" rx="2" ry="2" />
<text  x="38.67" y="495.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::translate_node_ranges (268 samples, 0.06%)</title><rect x="232.9" y="453" width="0.7" height="15.0" fill="rgb(249,195,28)" rx="2" ry="2" />
<text  x="235.92" y="463.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::string_number::StringNumber::add (176 samples, 0.04%)</title><rect x="250.0" y="421" width="0.5" height="15.0" fill="rgb(219,27,53)" rx="2" ry="2" />
<text  x="253.01" y="431.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (2,020 samples, 0.44%)</title><rect x="306.1" y="261" width="5.1" height="15.0" fill="rgb(219,118,7)" rx="2" ry="2" />
<text  x="309.07" y="271.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (149 samples, 0.03%)</title><rect x="170.6" y="325" width="0.4" height="15.0" fill="rgb(245,192,54)" rx="2" ry="2" />
<text  x="173.58" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (182 samples, 0.04%)</title><rect x="408.1" y="197" width="0.5" height="15.0" fill="rgb(215,136,46)" rx="2" ry="2" />
<text  x="411.14" y="207.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,911 samples, 0.41%)</title><rect x="725.7" y="357" width="4.9" height="15.0" fill="rgb(223,6,35)" rx="2" ry="2" />
<text  x="728.70" y="367.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (213 samples, 0.05%)</title><rect x="1189.2" y="421" width="0.6" height="15.0" fill="rgb(249,218,11)" rx="2" ry="2" />
<text  x="1192.24" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (138 samples, 0.03%)</title><rect x="12.4" y="485" width="0.3" height="15.0" fill="rgb(217,88,10)" rx="2" ry="2" />
<text  x="15.38" y="495.5" ></text>
</g>
<g >
<title>unicode_normalization::normalize::decompose_compatible (193 samples, 0.04%)</title><rect x="1135.4" y="309" width="0.5" height="15.0" fill="rgb(248,120,46)" rx="2" ry="2" />
<text  x="1138.43" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (255 samples, 0.06%)</title><rect x="346.0" y="245" width="0.7" height="15.0" fill="rgb(234,100,29)" rx="2" ry="2" />
<text  x="349.01" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (178 samples, 0.04%)</title><rect x="408.1" y="133" width="0.5" height="15.0" fill="rgb(210,4,1)" rx="2" ry="2" />
<text  x="411.15" y="143.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1,748 samples, 0.38%)</title><rect x="1111.4" y="309" width="4.4" height="15.0" fill="rgb(243,74,30)" rx="2" ry="2" />
<text  x="1114.38" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (141 samples, 0.03%)</title><rect x="215.1" y="389" width="0.4" height="15.0" fill="rgb(226,168,5)" rx="2" ry="2" />
<text  x="218.10" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (182 samples, 0.04%)</title><rect x="384.9" y="117" width="0.5" height="15.0" fill="rgb(246,81,52)" rx="2" ry="2" />
<text  x="387.92" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,217 samples, 0.26%)</title><rect x="215.9" y="133" width="3.1" height="15.0" fill="rgb(247,104,25)" rx="2" ry="2" />
<text  x="218.91" y="143.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (158 samples, 0.03%)</title><rect x="220.8" y="309" width="0.4" height="15.0" fill="rgb(241,190,1)" rx="2" ry="2" />
<text  x="223.80" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::set_len (194 samples, 0.04%)</title><rect x="1015.0" y="309" width="0.5" height="15.0" fill="rgb(254,29,26)" rx="2" ry="2" />
<text  x="1018.04" y="319.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (877 samples, 0.19%)</title><rect x="277.3" y="325" width="2.3" height="15.0" fill="rgb(232,214,52)" rx="2" ry="2" />
<text  x="280.33" y="335.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,056 samples, 0.23%)</title><rect x="156.7" y="389" width="2.6" height="15.0" fill="rgb(209,112,8)" rx="2" ry="2" />
<text  x="159.65" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (176 samples, 0.04%)</title><rect x="250.8" y="405" width="0.4" height="15.0" fill="rgb(223,149,53)" rx="2" ry="2" />
<text  x="253.79" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (128 samples, 0.03%)</title><rect x="348.6" y="165" width="0.3" height="15.0" fill="rgb(246,115,51)" rx="2" ry="2" />
<text  x="351.61" y="175.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (165 samples, 0.04%)</title><rect x="244.8" y="357" width="0.4" height="15.0" fill="rgb(227,200,19)" rx="2" ry="2" />
<text  x="247.83" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (120 samples, 0.03%)</title><rect x="1137.0" y="229" width="0.3" height="15.0" fill="rgb(219,171,35)" rx="2" ry="2" />
<text  x="1140.01" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (233 samples, 0.05%)</title><rect x="485.3" y="437" width="0.6" height="15.0" fill="rgb(252,220,50)" rx="2" ry="2" />
<text  x="488.35" y="447.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (184 samples, 0.04%)</title><rect x="81.8" y="421" width="0.4" height="15.0" fill="rgb(245,133,5)" rx="2" ry="2" />
<text  x="84.77" y="431.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (2,304 samples, 0.50%)</title><rect x="150.2" y="389" width="5.9" height="15.0" fill="rgb(216,84,14)" rx="2" ry="2" />
<text  x="153.20" y="399.5" ></text>
</g>
<g >
<title>sudachi::hash::RoMuHash::consume (374 samples, 0.08%)</title><rect x="1060.3" y="309" width="1.0" height="15.0" fill="rgb(242,76,45)" rx="2" ry="2" />
<text  x="1063.30" y="319.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (499 samples, 0.11%)</title><rect x="482.7" y="453" width="1.3" height="15.0" fill="rgb(252,185,52)" rx="2" ry="2" />
<text  x="485.73" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (959 samples, 0.21%)</title><rect x="1062.9" y="309" width="2.4" height="15.0" fill="rgb(230,181,51)" rx="2" ry="2" />
<text  x="1065.86" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (143 samples, 0.03%)</title><rect x="81.9" y="357" width="0.3" height="15.0" fill="rgb(230,4,26)" rx="2" ry="2" />
<text  x="84.88" y="367.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (17,228 samples, 3.72%)</title><rect x="951.3" y="261" width="44.0" height="15.0" fill="rgb(234,178,48)" rx="2" ry="2" />
<text  x="954.33" y="271.5" >nom:..</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (213 samples, 0.05%)</title><rect x="1189.2" y="469" width="0.6" height="15.0" fill="rgb(240,21,24)" rx="2" ry="2" />
<text  x="1192.24" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (145 samples, 0.03%)</title><rect x="246.7" y="357" width="0.4" height="15.0" fill="rgb(209,66,49)" rx="2" ry="2" />
<text  x="249.74" y="367.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::ignore_yomigana::IgnoreYomiganaPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (1,797 samples, 0.39%)</title><rect x="1154.2" y="405" width="4.6" height="15.0" fill="rgb(218,162,50)" rx="2" ry="2" />
<text  x="1157.20" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (177 samples, 0.04%)</title><rect x="1101.3" y="293" width="0.4" height="15.0" fill="rgb(247,184,18)" rx="2" ry="2" />
<text  x="1104.27" y="303.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2,048 samples, 0.44%)</title><rect x="83.3" y="421" width="5.2" height="15.0" fill="rgb(248,165,33)" rx="2" ry="2" />
<text  x="86.31" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,191 samples, 1.34%)</title><rect x="1020.5" y="405" width="15.8" height="15.0" fill="rgb(227,95,52)" rx="2" ry="2" />
<text  x="1023.49" y="415.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state_imp (855 samples, 0.18%)</title><rect x="1128.4" y="293" width="2.2" height="15.0" fill="rgb(253,140,25)" rx="2" ry="2" />
<text  x="1131.38" y="303.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (2,438 samples, 0.53%)</title><rect x="1071.7" y="341" width="6.3" height="15.0" fill="rgb(237,138,1)" rx="2" ry="2" />
<text  x="1074.75" y="351.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (2,381 samples, 0.51%)</title><rect x="187.6" y="245" width="6.1" height="15.0" fill="rgb(250,216,44)" rx="2" ry="2" />
<text  x="190.61" y="255.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (396 samples, 0.09%)</title><rect x="433.1" y="309" width="1.0" height="15.0" fill="rgb(241,100,13)" rx="2" ry="2" />
<text  x="436.06" y="319.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (472 samples, 0.10%)</title><rect x="407.6" y="277" width="1.2" height="15.0" fill="rgb(218,215,8)" rx="2" ry="2" />
<text  x="410.56" y="287.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (499 samples, 0.11%)</title><rect x="387.8" y="229" width="1.2" height="15.0" fill="rgb(220,3,51)" rx="2" ry="2" />
<text  x="390.78" y="239.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,204 samples, 0.48%)</title><rect x="1059.7" y="373" width="5.6" height="15.0" fill="rgb(247,6,19)" rx="2" ry="2" />
<text  x="1062.68" y="383.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (5,110 samples, 1.10%)</title><rect x="837.4" y="293" width="13.1" height="15.0" fill="rgb(216,24,36)" rx="2" ry="2" />
<text  x="840.45" y="303.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::prefix_at (1,497 samples, 0.32%)</title><rect x="1159.7" y="277" width="3.8" height="15.0" fill="rgb(232,169,39)" rx="2" ry="2" />
<text  x="1162.69" y="287.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::rewrite_gen (691 samples, 0.15%)</title><rect x="235.0" y="453" width="1.8" height="15.0" fill="rgb(231,12,17)" rx="2" ry="2" />
<text  x="238.00" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (150 samples, 0.03%)</title><rect x="231.1" y="437" width="0.4" height="15.0" fill="rgb(222,198,51)" rx="2" ry="2" />
<text  x="234.13" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_free (344 samples, 0.07%)</title><rect x="299.9" y="309" width="0.9" height="15.0" fill="rgb(225,38,10)" rx="2" ry="2" />
<text  x="302.92" y="319.5" ></text>
</g>
<g >
<title>&lt;sudachi::sentence_detector::SentenceDetector::get_eos::SENTENCE_BREAKER as core::ops::deref::Deref&gt;::deref::__stability::LAZY (549 samples, 0.12%)</title><rect x="10.5" y="517" width="1.4" height="15.0" fill="rgb(221,80,10)" rx="2" ry="2" />
<text  x="13.49" y="527.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (6,308 samples, 1.36%)</title><rect x="600.9" y="405" width="16.1" height="15.0" fill="rgb(205,107,45)" rx="2" ry="2" />
<text  x="603.87" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (186 samples, 0.04%)</title><rect x="346.9" y="293" width="0.5" height="15.0" fill="rgb(252,208,39)" rx="2" ry="2" />
<text  x="349.94" y="303.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (2,583 samples, 0.56%)</title><rect x="224.0" y="373" width="6.5" height="15.0" fill="rgb(209,219,6)" rx="2" ry="2" />
<text  x="226.96" y="383.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (384 samples, 0.08%)</title><rect x="331.9" y="389" width="1.0" height="15.0" fill="rgb(224,158,31)" rx="2" ry="2" />
<text  x="334.91" y="399.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::AhoCorasick&lt;S&gt;::earliest_find (895 samples, 0.19%)</title><rect x="1131.5" y="373" width="2.3" height="15.0" fill="rgb(227,97,0)" rx="2" ry="2" />
<text  x="1134.51" y="383.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at (295 samples, 0.06%)</title><rect x="1008.4" y="325" width="0.8" height="15.0" fill="rgb(219,70,37)" rx="2" ry="2" />
<text  x="1011.40" y="335.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::commit (400 samples, 0.09%)</title><rect x="1124.8" y="421" width="1.1" height="15.0" fill="rgb(249,140,6)" rx="2" ry="2" />
<text  x="1127.83" y="431.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin::rewrite_gen (5,269 samples, 1.14%)</title><rect x="237.1" y="453" width="13.4" height="15.0" fill="rgb(206,22,27)" rx="2" ry="2" />
<text  x="240.08" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (282 samples, 0.06%)</title><rect x="348.2" y="245" width="0.7" height="15.0" fill="rgb(236,95,8)" rx="2" ry="2" />
<text  x="351.22" y="255.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::collect_results (552 samples, 0.12%)</title><rect x="232.2" y="485" width="1.4" height="15.0" fill="rgb(239,79,22)" rx="2" ry="2" />
<text  x="235.22" y="495.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (499 samples, 0.11%)</title><rect x="220.4" y="341" width="1.3" height="15.0" fill="rgb(217,8,5)" rx="2" ry="2" />
<text  x="223.38" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (224 samples, 0.05%)</title><rect x="1015.9" y="261" width="0.6" height="15.0" fill="rgb(211,61,15)" rx="2" ry="2" />
<text  x="1018.95" y="271.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (231 samples, 0.05%)</title><rect x="169.3" y="325" width="0.6" height="15.0" fill="rgb(244,193,37)" rx="2" ry="2" />
<text  x="172.34" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (2,430 samples, 0.53%)</title><rect x="215.5" y="405" width="6.2" height="15.0" fill="rgb(217,220,31)" rx="2" ry="2" />
<text  x="218.46" y="415.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (119 samples, 0.03%)</title><rect x="597.8" y="341" width="0.3" height="15.0" fill="rgb(211,1,38)" rx="2" ry="2" />
<text  x="600.80" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (489 samples, 0.11%)</title><rect x="311.8" y="229" width="1.3" height="15.0" fill="rgb(211,1,17)" rx="2" ry="2" />
<text  x="314.81" y="239.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (355 samples, 0.08%)</title><rect x="304.4" y="277" width="0.9" height="15.0" fill="rgb(227,45,54)" rx="2" ry="2" />
<text  x="307.36" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (1,811 samples, 0.39%)</title><rect x="1013.9" y="389" width="4.6" height="15.0" fill="rgb(250,52,13)" rx="2" ry="2" />
<text  x="1016.88" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (935 samples, 0.20%)</title><rect x="115.5" y="405" width="2.4" height="15.0" fill="rgb(245,35,32)" rx="2" ry="2" />
<text  x="118.54" y="415.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (150 samples, 0.03%)</title><rect x="349.1" y="229" width="0.4" height="15.0" fill="rgb(221,131,27)" rx="2" ry="2" />
<text  x="352.14" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (190 samples, 0.04%)</title><rect x="248.9" y="309" width="0.5" height="15.0" fill="rgb(244,219,37)" rx="2" ry="2" />
<text  x="251.92" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3,568 samples, 0.77%)</title><rect x="321.5" y="277" width="9.1" height="15.0" fill="rgb(225,130,10)" rx="2" ry="2" />
<text  x="324.45" y="287.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (18,297 samples, 3.95%)</title><rect x="431.1" y="373" width="46.7" height="15.0" fill="rgb(216,221,26)" rx="2" ry="2" />
<text  x="434.09" y="383.5" >&lt;cor..</text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::standard_find_at_imp (446 samples, 0.10%)</title><rect x="1132.4" y="293" width="1.2" height="15.0" fill="rgb(239,191,15)" rx="2" ry="2" />
<text  x="1135.42" y="303.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::byte_class (221 samples, 0.05%)</title><rect x="164.8" y="277" width="0.5" height="15.0" fill="rgb(228,56,21)" rx="2" ry="2" />
<text  x="167.77" y="287.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,200 samples, 0.26%)</title><rect x="910.5" y="293" width="3.0" height="15.0" fill="rgb(249,73,8)" rx="2" ry="2" />
<text  x="913.47" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (242 samples, 0.05%)</title><rect x="408.0" y="213" width="0.6" height="15.0" fill="rgb(234,11,17)" rx="2" ry="2" />
<text  x="410.98" y="223.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (3,153 samples, 0.68%)</title><rect x="390.1" y="181" width="8.0" height="15.0" fill="rgb(234,82,10)" rx="2" ry="2" />
<text  x="393.08" y="191.5" ></text>
</g>
<g >
<title>malloc_consolidate (823 samples, 0.18%)</title><rect x="1011.4" y="309" width="2.1" height="15.0" fill="rgb(244,146,11)" rx="2" ry="2" />
<text  x="1014.42" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,438 samples, 0.53%)</title><rect x="1071.7" y="293" width="6.3" height="15.0" fill="rgb(224,82,20)" rx="2" ry="2" />
<text  x="1074.75" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (953 samples, 0.21%)</title><rect x="216.5" y="53" width="2.4" height="15.0" fill="rgb(254,214,13)" rx="2" ry="2" />
<text  x="219.50" y="63.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (946 samples, 0.20%)</title><rect x="237.9" y="437" width="2.4" height="15.0" fill="rgb(248,146,20)" rx="2" ry="2" />
<text  x="240.89" y="447.5" ></text>
</g>
<g >
<title>&lt; (31,077 samples, 6.72%)</title><rect x="333.9" y="341" width="79.3" height="15.0" fill="rgb(251,68,47)" rx="2" ry="2" />
<text  x="336.91" y="351.5" >&lt;</text>
</g>
<g >
<title>_int_malloc (3,899 samples, 0.84%)</title><rect x="375.0" y="117" width="9.9" height="15.0" fill="rgb(234,32,29)" rx="2" ry="2" />
<text  x="377.95" y="127.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin::concat (1,616 samples, 0.35%)</title><rect x="244.2" y="437" width="4.1" height="15.0" fill="rgb(237,119,51)" rx="2" ry="2" />
<text  x="247.20" y="447.5" ></text>
</g>
<g >
<title>fancy_regex::vm::matches_literal (1,183 samples, 0.26%)</title><rect x="156.4" y="405" width="3.0" height="15.0" fill="rgb(233,63,48)" rx="2" ry="2" />
<text  x="159.42" y="415.5" ></text>
</g>
<g >
<title>all (462,656 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(245,181,43)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (189 samples, 0.04%)</title><rect x="1131.0" y="357" width="0.5" height="15.0" fill="rgb(213,108,39)" rx="2" ry="2" />
<text  x="1134.00" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (142 samples, 0.03%)</title><rect x="1172.6" y="437" width="0.4" height="15.0" fill="rgb(253,73,10)" rx="2" ry="2" />
<text  x="1175.64" y="447.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,297 samples, 3.95%)</title><rect x="431.1" y="357" width="46.7" height="15.0" fill="rgb(253,158,47)" rx="2" ry="2" />
<text  x="434.09" y="367.5" >&lt;cor..</text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::step (363 samples, 0.08%)</title><rect x="225.1" y="261" width="1.0" height="15.0" fill="rgb(216,84,3)" rx="2" ry="2" />
<text  x="228.13" y="271.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (11,015 samples, 2.38%)</title><rect x="1126.1" y="405" width="28.1" height="15.0" fill="rgb(217,133,17)" rx="2" ry="2" />
<text  x="1129.11" y="415.5" >&lt;..</text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::find_at (3,490 samples, 0.75%)</title><rect x="161.0" y="357" width="8.9" height="15.0" fill="rgb(242,176,34)" rx="2" ry="2" />
<text  x="164.03" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5,145 samples, 1.11%)</title><rect x="372.4" y="197" width="13.1" height="15.0" fill="rgb(226,196,44)" rx="2" ry="2" />
<text  x="375.37" y="207.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (213 samples, 0.05%)</title><rect x="1189.2" y="405" width="0.6" height="15.0" fill="rgb(248,113,2)" rx="2" ry="2" />
<text  x="1192.24" y="415.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (126 samples, 0.03%)</title><rect x="49.8" y="469" width="0.3" height="15.0" fill="rgb(213,156,22)" rx="2" ry="2" />
<text  x="52.76" y="479.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (324 samples, 0.07%)</title><rect x="1078.2" y="293" width="0.9" height="15.0" fill="rgb(243,123,37)" rx="2" ry="2" />
<text  x="1081.24" y="303.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::find_at (1,231 samples, 0.27%)</title><rect x="1160.1" y="213" width="3.2" height="15.0" fill="rgb(219,51,1)" rx="2" ry="2" />
<text  x="1163.13" y="223.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (240 samples, 0.05%)</title><rect x="480.9" y="357" width="0.7" height="15.0" fill="rgb(241,175,37)" rx="2" ry="2" />
<text  x="483.95" y="367.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_uppercase (632 samples, 0.14%)</title><rect x="1126.3" y="357" width="1.6" height="15.0" fill="rgb(206,142,47)" rx="2" ry="2" />
<text  x="1129.27" y="367.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (378 samples, 0.08%)</title><rect x="119.1" y="357" width="1.0" height="15.0" fill="rgb(221,52,49)" rx="2" ry="2" />
<text  x="122.14" y="367.5" ></text>
</g>
</g>
</svg>
