<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>nom::sequence::preceded::{{closure}} (476 samples, 0.10%)</title><rect x="1156.5" y="373" width="1.2" height="15.0" fill="rgb(254,30,15)" rx="2" ry="2" />
<text  x="1159.47" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,516 samples, 0.32%)</title><rect x="186.2" y="213" width="3.8" height="15.0" fill="rgb(217,5,37)" rx="2" ry="2" />
<text  x="189.18" y="223.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (502 samples, 0.11%)</title><rect x="302.2" y="261" width="1.3" height="15.0" fill="rgb(240,198,24)" rx="2" ry="2" />
<text  x="305.24" y="271.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::new (3,666 samples, 0.78%)</title><rect x="216.2" y="421" width="9.2" height="15.0" fill="rgb(246,227,17)" rx="2" ry="2" />
<text  x="219.23" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_info (38,775 samples, 8.22%)</title><rect x="257.2" y="437" width="97.0" height="15.0" fill="rgb(221,182,17)" rx="2" ry="2" />
<text  x="260.21" y="447.5" >sudachi::di..</text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (322 samples, 0.07%)</title><rect x="153.9" y="293" width="0.8" height="15.0" fill="rgb(207,35,12)" rx="2" ry="2" />
<text  x="156.89" y="303.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (143 samples, 0.03%)</title><rect x="988.0" y="293" width="0.3" height="15.0" fill="rgb(232,197,48)" rx="2" ry="2" />
<text  x="990.98" y="303.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (129 samples, 0.03%)</title><rect x="1115.1" y="229" width="0.3" height="15.0" fill="rgb(234,208,30)" rx="2" ry="2" />
<text  x="1118.11" y="239.5" ></text>
</g>
<g >
<title>ksys_write (509 samples, 0.11%)</title><rect x="1159.4" y="309" width="1.3" height="15.0" fill="rgb(243,101,46)" rx="2" ry="2" />
<text  x="1162.43" y="319.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::exec (666 samples, 0.14%)</title><rect x="194.7" y="293" width="1.7" height="15.0" fill="rgb(227,192,20)" rx="2" ry="2" />
<text  x="197.71" y="303.5" ></text>
</g>
<g >
<title>std::io::read_until (537 samples, 0.11%)</title><rect x="68.4" y="389" width="1.3" height="15.0" fill="rgb(206,28,38)" rx="2" ry="2" />
<text  x="71.36" y="399.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (130 samples, 0.03%)</title><rect x="1098.4" y="261" width="0.3" height="15.0" fill="rgb(243,35,13)" rx="2" ry="2" />
<text  x="1101.37" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,291 samples, 1.12%)</title><rect x="993.0" y="373" width="13.2" height="15.0" fill="rgb(227,73,7)" rx="2" ry="2" />
<text  x="995.97" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (654 samples, 0.14%)</title><rect x="209.7" y="421" width="1.6" height="15.0" fill="rgb(224,218,5)" rx="2" ry="2" />
<text  x="212.66" y="431.5" ></text>
</g>
<g >
<title>fancy_regex::vm::codepoint_len_at (180 samples, 0.04%)</title><rect x="134.2" y="389" width="0.4" height="15.0" fill="rgb(222,178,48)" rx="2" ry="2" />
<text  x="137.16" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,632 samples, 0.56%)</title><rect x="1149.4" y="309" width="6.6" height="15.0" fill="rgb(230,23,43)" rx="2" ry="2" />
<text  x="1152.37" y="319.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,028 samples, 0.22%)</title><rect x="364.6" y="421" width="2.6" height="15.0" fill="rgb(254,226,16)" rx="2" ry="2" />
<text  x="367.60" y="431.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::standard_find_at (435 samples, 0.09%)</title><rect x="1110.8" y="293" width="1.1" height="15.0" fill="rgb(232,145,4)" rx="2" ry="2" />
<text  x="1113.79" y="303.5" ></text>
</g>
<g >
<title>core::ptr::write (5,708 samples, 1.21%)</title><rect x="538.7" y="405" width="14.3" height="15.0" fill="rgb(231,161,28)" rx="2" ry="2" />
<text  x="541.69" y="415.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (150 samples, 0.03%)</title><rect x="1148.2" y="405" width="0.4" height="15.0" fill="rgb(214,217,32)" rx="2" ry="2" />
<text  x="1151.24" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (5,228 samples, 1.11%)</title><rect x="993.1" y="277" width="13.1" height="15.0" fill="rgb(217,20,41)" rx="2" ry="2" />
<text  x="996.10" y="287.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt; (1,528 samples, 0.32%)</title><rect x="221.4" y="357" width="3.9" height="15.0" fill="rgb(235,99,50)" rx="2" ry="2" />
<text  x="224.43" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,080 samples, 0.23%)</title><rect x="984.4" y="357" width="2.7" height="15.0" fill="rgb(221,43,50)" rx="2" ry="2" />
<text  x="987.40" y="367.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::is_nfkc_quick (4,092 samples, 0.87%)</title><rect x="1121.0" y="373" width="10.2" height="15.0" fill="rgb(210,163,20)" rx="2" ry="2" />
<text  x="1123.98" y="383.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::mecab_oov::MeCabOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (9,686 samples, 2.05%)</title><rect x="1075.5" y="421" width="24.2" height="15.0" fill="rgb(216,119,35)" rx="2" ry="2" />
<text  x="1078.46" y="431.5" >&lt;..</text>
</g>
<g >
<title>_int_free (976 samples, 0.21%)</title><rect x="232.5" y="181" width="2.4" height="15.0" fill="rgb(241,171,37)" rx="2" ry="2" />
<text  x="235.47" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (123 samples, 0.03%)</title><rect x="350.6" y="165" width="0.3" height="15.0" fill="rgb(219,165,47)" rx="2" ry="2" />
<text  x="353.57" y="175.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (1,374 samples, 0.29%)</title><rect x="1094.9" y="181" width="3.5" height="15.0" fill="rgb(217,207,24)" rx="2" ry="2" />
<text  x="1097.93" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,501 samples, 0.74%)</title><rect x="323.9" y="197" width="8.8" height="15.0" fill="rgb(228,48,23)" rx="2" ry="2" />
<text  x="326.92" y="207.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (375 samples, 0.08%)</title><rect x="1085.2" y="261" width="1.0" height="15.0" fill="rgb(233,150,4)" rx="2" ry="2" />
<text  x="1088.22" y="271.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::and_then (805 samples, 0.17%)</title><rect x="1164.8" y="405" width="2.0" height="15.0" fill="rgb(253,72,6)" rx="2" ry="2" />
<text  x="1167.77" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (2,868 samples, 0.61%)</title><rect x="1149.2" y="405" width="7.2" height="15.0" fill="rgb(234,225,51)" rx="2" ry="2" />
<text  x="1152.18" y="415.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::Imp&lt;S&gt;::find_at_no_state (888 samples, 0.19%)</title><rect x="1107.1" y="341" width="2.2" height="15.0" fill="rgb(205,87,51)" rx="2" ry="2" />
<text  x="1110.10" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (171 samples, 0.04%)</title><rect x="350.4" y="197" width="0.5" height="15.0" fill="rgb(209,45,14)" rx="2" ry="2" />
<text  x="353.45" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,083 samples, 0.23%)</title><rect x="984.4" y="373" width="2.7" height="15.0" fill="rgb(232,87,49)" rx="2" ry="2" />
<text  x="987.40" y="383.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (190 samples, 0.04%)</title><rect x="1061.9" y="245" width="0.5" height="15.0" fill="rgb(252,73,30)" rx="2" ry="2" />
<text  x="1064.95" y="255.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1,835 samples, 0.39%)</title><rect x="714.5" y="261" width="4.6" height="15.0" fill="rgb(236,150,45)" rx="2" ry="2" />
<text  x="717.51" y="271.5" ></text>
</g>
<g >
<title>core::iter::adapters::process_results (126 samples, 0.03%)</title><rect x="212.1" y="325" width="0.3" height="15.0" fill="rgb(240,76,29)" rx="2" ry="2" />
<text  x="215.08" y="335.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (209 samples, 0.04%)</title><rect x="16.3" y="485" width="0.5" height="15.0" fill="rgb(248,33,37)" rx="2" ry="2" />
<text  x="19.29" y="495.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (9,584 samples, 2.03%)</title><rect x="309.0" y="261" width="24.0" height="15.0" fill="rgb(226,14,40)" rx="2" ry="2" />
<text  x="312.02" y="271.5" >a..</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (263 samples, 0.06%)</title><rect x="251.2" y="389" width="0.7" height="15.0" fill="rgb(209,93,18)" rx="2" ry="2" />
<text  x="254.23" y="399.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (509 samples, 0.11%)</title><rect x="275.3" y="245" width="1.3" height="15.0" fill="rgb(228,196,44)" rx="2" ry="2" />
<text  x="278.29" y="255.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (177 samples, 0.04%)</title><rect x="1189.2" y="357" width="0.5" height="15.0" fill="rgb(254,5,35)" rx="2" ry="2" />
<text  x="1192.23" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2,264 samples, 0.48%)</title><rect x="336.7" y="149" width="5.6" height="15.0" fill="rgb(210,53,38)" rx="2" ry="2" />
<text  x="339.67" y="159.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (190 samples, 0.04%)</title><rect x="1141.6" y="341" width="0.4" height="15.0" fill="rgb(220,121,37)" rx="2" ry="2" />
<text  x="1144.57" y="351.5" ></text>
</g>
<g >
<title>_int_malloc (185 samples, 0.04%)</title><rect x="128.6" y="197" width="0.4" height="15.0" fill="rgb(232,210,43)" rx="2" ry="2" />
<text  x="131.55" y="207.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (408 samples, 0.09%)</title><rect x="107.0" y="341" width="1.1" height="15.0" fill="rgb(208,203,47)" rx="2" ry="2" />
<text  x="110.03" y="351.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::spare_capacity (252 samples, 0.05%)</title><rect x="1178.3" y="389" width="0.6" height="15.0" fill="rgb(244,128,31)" rx="2" ry="2" />
<text  x="1181.31" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (144 samples, 0.03%)</title><rect x="122.4" y="357" width="0.4" height="15.0" fill="rgb(234,12,19)" rx="2" ry="2" />
<text  x="125.40" y="367.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (130 samples, 0.03%)</title><rect x="1098.4" y="245" width="0.3" height="15.0" fill="rgb(234,134,26)" rx="2" ry="2" />
<text  x="1101.37" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (2,092 samples, 0.44%)</title><rect x="235.3" y="325" width="5.3" height="15.0" fill="rgb(212,102,14)" rx="2" ry="2" />
<text  x="238.32" y="335.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (189 samples, 0.04%)</title><rect x="10.9" y="485" width="0.5" height="15.0" fill="rgb(210,222,51)" rx="2" ry="2" />
<text  x="13.95" y="495.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy::{{closure}} (798 samples, 0.17%)</title><rect x="1164.8" y="389" width="2.0" height="15.0" fill="rgb(224,31,54)" rx="2" ry="2" />
<text  x="1167.79" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (348 samples, 0.07%)</title><rect x="128.2" y="357" width="0.9" height="15.0" fill="rgb(239,161,10)" rx="2" ry="2" />
<text  x="131.21" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (846 samples, 0.18%)</title><rect x="92.3" y="373" width="2.1" height="15.0" fill="rgb(227,130,49)" rx="2" ry="2" />
<text  x="95.33" y="383.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::find_at_no_state (876 samples, 0.19%)</title><rect x="1107.1" y="309" width="2.2" height="15.0" fill="rgb(212,98,38)" rx="2" ry="2" />
<text  x="1110.13" y="319.5" ></text>
</g>
<g >
<title>_int_malloc (465 samples, 0.10%)</title><rect x="15.0" y="485" width="1.1" height="15.0" fill="rgb(249,74,20)" rx="2" ry="2" />
<text  x="17.97" y="495.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (3,585 samples, 0.76%)</title><rect x="172.3" y="293" width="8.9" height="15.0" fill="rgb(231,44,22)" rx="2" ry="2" />
<text  x="175.28" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11,284 samples, 2.39%)</title><rect x="887.5" y="325" width="28.2" height="15.0" fill="rgb(239,161,13)" rx="2" ry="2" />
<text  x="890.47" y="335.5" >h..</text>
</g>
<g >
<title>alloc::vec::from_elem (142 samples, 0.03%)</title><rect x="990.3" y="261" width="0.4" height="15.0" fill="rgb(244,163,32)" rx="2" ry="2" />
<text  x="993.33" y="271.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (332 samples, 0.07%)</title><rect x="263.1" y="389" width="0.8" height="15.0" fill="rgb(206,84,51)" rx="2" ry="2" />
<text  x="266.07" y="399.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (2,457 samples, 0.52%)</title><rect x="1056.3" y="373" width="6.1" height="15.0" fill="rgb(227,152,10)" rx="2" ry="2" />
<text  x="1059.28" y="383.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,073 samples, 0.23%)</title><rect x="1166.8" y="405" width="2.7" height="15.0" fill="rgb(206,104,13)" rx="2" ry="2" />
<text  x="1169.78" y="415.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (140 samples, 0.03%)</title><rect x="122.8" y="357" width="0.3" height="15.0" fill="rgb(221,53,43)" rx="2" ry="2" />
<text  x="125.76" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (855 samples, 0.18%)</title><rect x="1050.9" y="389" width="2.1" height="15.0" fill="rgb(238,216,26)" rx="2" ry="2" />
<text  x="1053.87" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (296 samples, 0.06%)</title><rect x="224.5" y="309" width="0.8" height="15.0" fill="rgb(212,212,27)" rx="2" ry="2" />
<text  x="227.51" y="319.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (332 samples, 0.07%)</title><rect x="268.0" y="325" width="0.8" height="15.0" fill="rgb(236,224,34)" rx="2" ry="2" />
<text  x="270.98" y="335.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (142 samples, 0.03%)</title><rect x="1169.8" y="389" width="0.4" height="15.0" fill="rgb(254,181,30)" rx="2" ry="2" />
<text  x="1172.83" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (177 samples, 0.04%)</title><rect x="1189.2" y="453" width="0.5" height="15.0" fill="rgb(248,76,37)" rx="2" ry="2" />
<text  x="1192.23" y="463.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (129 samples, 0.03%)</title><rect x="1181.4" y="357" width="0.3" height="15.0" fill="rgb(234,86,12)" rx="2" ry="2" />
<text  x="1184.39" y="367.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (599 samples, 0.13%)</title><rect x="322.1" y="229" width="1.5" height="15.0" fill="rgb(222,220,29)" rx="2" ry="2" />
<text  x="325.12" y="239.5" ></text>
</g>
<g >
<title>_int_free (297 samples, 0.06%)</title><rect x="1171.1" y="341" width="0.7" height="15.0" fill="rgb(225,61,47)" rx="2" ry="2" />
<text  x="1174.07" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (151 samples, 0.03%)</title><rect x="184.5" y="293" width="0.4" height="15.0" fill="rgb(214,59,26)" rx="2" ry="2" />
<text  x="187.55" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,292 samples, 1.12%)</title><rect x="993.0" y="389" width="13.2" height="15.0" fill="rgb(223,17,49)" rx="2" ry="2" />
<text  x="995.97" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_free (1,344 samples, 0.28%)</title><rect x="231.6" y="197" width="3.3" height="15.0" fill="rgb(245,7,37)" rx="2" ry="2" />
<text  x="234.55" y="207.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (262 samples, 0.06%)</title><rect x="1156.6" y="309" width="0.6" height="15.0" fill="rgb(239,64,25)" rx="2" ry="2" />
<text  x="1159.58" y="319.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,179 samples, 0.46%)</title><rect x="186.1" y="373" width="5.5" height="15.0" fill="rgb(237,6,12)" rx="2" ry="2" />
<text  x="189.13" y="383.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (798 samples, 0.17%)</title><rect x="1164.8" y="357" width="2.0" height="15.0" fill="rgb(233,90,24)" rx="2" ry="2" />
<text  x="1167.79" y="367.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::exec_backtrack (671 samples, 0.14%)</title><rect x="194.7" y="309" width="1.7" height="15.0" fill="rgb(221,159,26)" rx="2" ry="2" />
<text  x="197.70" y="319.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad (535 samples, 0.11%)</title><rect x="1182.8" y="421" width="1.3" height="15.0" fill="rgb(218,197,7)" rx="2" ry="2" />
<text  x="1185.75" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (158 samples, 0.03%)</title><rect x="38.2" y="485" width="0.4" height="15.0" fill="rgb(241,123,53)" rx="2" ry="2" />
<text  x="41.17" y="495.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (209,020 samples, 44.31%)</title><rect x="461.2" y="437" width="523.0" height="15.0" fill="rgb(211,136,15)" rx="2" ry="2" />
<text  x="464.25" y="447.5" >sudachi::analysis::lattice::Lattice::insert</text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_continuous_len (357 samples, 0.08%)</title><rect x="1079.0" y="389" width="0.9" height="15.0" fill="rgb(229,14,26)" rx="2" ry="2" />
<text  x="1082.04" y="399.5" ></text>
</g>
<g >
<title>core::cmp::min (2,304 samples, 0.49%)</title><rect x="852.4" y="213" width="5.8" height="15.0" fill="rgb(250,111,11)" rx="2" ry="2" />
<text  x="855.44" y="223.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::shortest_match_at (259 samples, 0.05%)</title><rect x="191.7" y="373" width="0.7" height="15.0" fill="rgb(220,164,33)" rx="2" ry="2" />
<text  x="194.73" y="383.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (945 samples, 0.20%)</title><rect x="1114.1" y="341" width="2.4" height="15.0" fill="rgb(228,70,31)" rx="2" ry="2" />
<text  x="1117.12" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (361 samples, 0.08%)</title><rect x="111.8" y="357" width="0.9" height="15.0" fill="rgb(212,62,15)" rx="2" ry="2" />
<text  x="114.78" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (151 samples, 0.03%)</title><rect x="1087.0" y="293" width="0.4" height="15.0" fill="rgb(219,52,13)" rx="2" ry="2" />
<text  x="1090.01" y="303.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (556 samples, 0.12%)</title><rect x="249.3" y="405" width="1.4" height="15.0" fill="rgb(214,198,50)" rx="2" ry="2" />
<text  x="252.31" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (520 samples, 0.11%)</title><rect x="1163.3" y="357" width="1.3" height="15.0" fill="rgb(224,83,10)" rx="2" ry="2" />
<text  x="1166.32" y="367.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::commit (316 samples, 0.07%)</title><rect x="1104.1" y="405" width="0.8" height="15.0" fill="rgb(232,97,21)" rx="2" ry="2" />
<text  x="1107.13" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (378 samples, 0.08%)</title><rect x="218.9" y="133" width="1.0" height="15.0" fill="rgb(252,117,31)" rx="2" ry="2" />
<text  x="221.93" y="143.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (22,738 samples, 4.82%)</title><rect x="294.1" y="309" width="56.9" height="15.0" fill="rgb(205,216,39)" rx="2" ry="2" />
<text  x="297.08" y="319.5" >&lt;F as ..</text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::find_at (1,286 samples, 0.27%)</title><rect x="1136.4" y="197" width="3.2" height="15.0" fill="rgb(212,207,48)" rx="2" ry="2" />
<text  x="1139.40" y="207.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (570 samples, 0.12%)</title><rect x="251.9" y="405" width="1.4" height="15.0" fill="rgb(215,51,13)" rx="2" ry="2" />
<text  x="254.89" y="415.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (175 samples, 0.04%)</title><rect x="1156.8" y="293" width="0.4" height="15.0" fill="rgb(212,223,44)" rx="2" ry="2" />
<text  x="1159.80" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::new (476 samples, 0.10%)</title><rect x="1156.5" y="405" width="1.2" height="15.0" fill="rgb(210,86,45)" rx="2" ry="2" />
<text  x="1159.47" y="415.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (254 samples, 0.05%)</title><rect x="108.1" y="357" width="0.6" height="15.0" fill="rgb(205,98,10)" rx="2" ry="2" />
<text  x="111.05" y="367.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (396 samples, 0.08%)</title><rect x="436.8" y="437" width="1.0" height="15.0" fill="rgb(230,65,9)" rx="2" ry="2" />
<text  x="439.79" y="447.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (238 samples, 0.05%)</title><rect x="1026.4" y="341" width="0.5" height="15.0" fill="rgb(252,159,49)" rx="2" ry="2" />
<text  x="1029.35" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup::{{closure}}::{{closure}} (770 samples, 0.16%)</title><rect x="430.6" y="325" width="1.9" height="15.0" fill="rgb(250,109,12)" rx="2" ry="2" />
<text  x="433.62" y="335.5" ></text>
</g>
<g >
<title>[system.dic] (130 samples, 0.03%)</title><rect x="42.4" y="501" width="0.3" height="15.0" fill="rgb(227,197,47)" rx="2" ry="2" />
<text  x="45.40" y="511.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (486 samples, 0.10%)</title><rect x="320.8" y="181" width="1.2" height="15.0" fill="rgb(234,131,33)" rx="2" ry="2" />
<text  x="323.81" y="191.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (15,013 samples, 3.18%)</title><rect x="148.1" y="357" width="37.5" height="15.0" fill="rgb(219,205,25)" rx="2" ry="2" />
<text  x="151.06" y="367.5" >reg..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9,996 samples, 2.12%)</title><rect x="1025.9" y="373" width="25.0" height="15.0" fill="rgb(211,166,28)" rx="2" ry="2" />
<text  x="1028.86" y="383.5" >h..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (138 samples, 0.03%)</title><rect x="250.8" y="421" width="0.3" height="15.0" fill="rgb(253,116,23)" rx="2" ry="2" />
<text  x="253.78" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_free (1,823 samples, 0.39%)</title><rect x="297.4" y="261" width="4.5" height="15.0" fill="rgb(224,136,16)" rx="2" ry="2" />
<text  x="300.35" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (250 samples, 0.05%)</title><rect x="38.6" y="485" width="0.6" height="15.0" fill="rgb(206,20,12)" rx="2" ry="2" />
<text  x="41.56" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (353 samples, 0.07%)</title><rect x="42.9" y="485" width="0.9" height="15.0" fill="rgb(248,39,43)" rx="2" ry="2" />
<text  x="45.89" y="495.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,372 samples, 3.68%)</title><rect x="382.6" y="341" width="43.5" height="15.0" fill="rgb(235,193,54)" rx="2" ry="2" />
<text  x="385.60" y="351.5" >&lt;cor..</text>
</g>
<g >
<title>[sudachi] (432 samples, 0.09%)</title><rect x="41.3" y="501" width="1.1" height="15.0" fill="rgb(252,5,43)" rx="2" ry="2" />
<text  x="44.32" y="511.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (2,408 samples, 0.51%)</title><rect x="139.7" y="309" width="6.0" height="15.0" fill="rgb(243,45,38)" rx="2" ry="2" />
<text  x="142.72" y="319.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (199 samples, 0.04%)</title><rect x="386.8" y="309" width="0.5" height="15.0" fill="rgb(214,92,49)" rx="2" ry="2" />
<text  x="389.82" y="319.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_of_range (332 samples, 0.07%)</title><rect x="208.2" y="421" width="0.8" height="15.0" fill="rgb(222,178,4)" rx="2" ry="2" />
<text  x="211.17" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (6,134 samples, 1.30%)</title><rect x="519.2" y="325" width="15.3" height="15.0" fill="rgb(239,70,28)" rx="2" ry="2" />
<text  x="522.17" y="335.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (580 samples, 0.12%)</title><rect x="95.7" y="357" width="1.5" height="15.0" fill="rgb(234,82,51)" rx="2" ry="2" />
<text  x="98.73" y="367.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (128 samples, 0.03%)</title><rect x="204.2" y="373" width="0.4" height="15.0" fill="rgb(237,110,25)" rx="2" ry="2" />
<text  x="207.24" y="383.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (763 samples, 0.16%)</title><rect x="1159.1" y="389" width="1.9" height="15.0" fill="rgb(248,12,48)" rx="2" ry="2" />
<text  x="1162.07" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (611 samples, 0.13%)</title><rect x="216.5" y="277" width="1.5" height="15.0" fill="rgb(251,1,18)" rx="2" ry="2" />
<text  x="219.50" y="287.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (241 samples, 0.05%)</title><rect x="305.0" y="261" width="0.6" height="15.0" fill="rgb(229,128,25)" rx="2" ry="2" />
<text  x="308.00" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (666 samples, 0.14%)</title><rect x="588.3" y="405" width="1.7" height="15.0" fill="rgb(234,69,54)" rx="2" ry="2" />
<text  x="591.33" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (4,350 samples, 0.92%)</title><rect x="266.7" y="389" width="10.9" height="15.0" fill="rgb(241,43,1)" rx="2" ry="2" />
<text  x="269.72" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSync&gt; (208 samples, 0.04%)</title><rect x="182.1" y="325" width="0.5" height="15.0" fill="rgb(227,54,53)" rx="2" ry="2" />
<text  x="185.12" y="335.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (2,425 samples, 0.51%)</title><rect x="193.9" y="357" width="6.1" height="15.0" fill="rgb(217,137,41)" rx="2" ry="2" />
<text  x="196.94" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup::{{closure}} (3,464 samples, 0.73%)</title><rect x="417.4" y="293" width="8.7" height="15.0" fill="rgb(245,128,28)" rx="2" ry="2" />
<text  x="420.40" y="303.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (1,203 samples, 0.26%)</title><rect x="1131.4" y="341" width="3.0" height="15.0" fill="rgb(223,206,7)" rx="2" ry="2" />
<text  x="1134.42" y="351.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (283 samples, 0.06%)</title><rect x="191.7" y="389" width="0.7" height="15.0" fill="rgb(226,38,28)" rx="2" ry="2" />
<text  x="194.71" y="399.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9,996 samples, 2.12%)</title><rect x="1025.9" y="389" width="25.0" height="15.0" fill="rgb(229,116,10)" rx="2" ry="2" />
<text  x="1028.86" y="399.5" >s..</text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,560 samples, 0.54%)</title><rect x="1088.5" y="373" width="6.4" height="15.0" fill="rgb(237,23,21)" rx="2" ry="2" />
<text  x="1091.46" y="383.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (470 samples, 0.10%)</title><rect x="1085.0" y="325" width="1.2" height="15.0" fill="rgb(230,120,18)" rx="2" ry="2" />
<text  x="1087.98" y="335.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (205 samples, 0.04%)</title><rect x="1120.5" y="325" width="0.5" height="15.0" fill="rgb(233,32,48)" rx="2" ry="2" />
<text  x="1123.46" y="335.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (420 samples, 0.09%)</title><rect x="303.9" y="261" width="1.1" height="15.0" fill="rgb(207,106,5)" rx="2" ry="2" />
<text  x="306.95" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,291 samples, 0.49%)</title><rect x="1081.7" y="373" width="5.7" height="15.0" fill="rgb(248,227,41)" rx="2" ry="2" />
<text  x="1084.66" y="383.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max (125 samples, 0.03%)</title><rect x="320.3" y="101" width="0.3" height="15.0" fill="rgb(244,180,46)" rx="2" ry="2" />
<text  x="323.29" y="111.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (385 samples, 0.08%)</title><rect x="1085.2" y="309" width="1.0" height="15.0" fill="rgb(243,213,13)" rx="2" ry="2" />
<text  x="1088.19" y="319.5" ></text>
</g>
<g >
<title>_int_free (1,174 samples, 0.25%)</title><rect x="299.0" y="245" width="2.9" height="15.0" fill="rgb(229,153,40)" rx="2" ry="2" />
<text  x="301.97" y="255.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::captures_nfa_type (698 samples, 0.15%)</title><rect x="194.6" y="341" width="1.8" height="15.0" fill="rgb(236,12,32)" rx="2" ry="2" />
<text  x="197.64" y="351.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,294 samples, 0.49%)</title><rect x="1081.6" y="389" width="5.8" height="15.0" fill="rgb(221,163,22)" rx="2" ry="2" />
<text  x="1084.65" y="399.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3,464 samples, 0.73%)</title><rect x="417.4" y="309" width="8.7" height="15.0" fill="rgb(220,67,27)" rx="2" ry="2" />
<text  x="420.40" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,969 samples, 0.42%)</title><rect x="336.8" y="133" width="4.9" height="15.0" fill="rgb(249,184,10)" rx="2" ry="2" />
<text  x="339.82" y="143.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::PathRewritePlugin::concatenate::{{closure}} (321 samples, 0.07%)</title><rect x="212.5" y="373" width="0.8" height="15.0" fill="rgb(211,221,50)" rx="2" ry="2" />
<text  x="215.47" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (514 samples, 0.11%)</title><rect x="1066.9" y="389" width="1.3" height="15.0" fill="rgb(213,205,40)" rx="2" ry="2" />
<text  x="1069.93" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,457 samples, 0.52%)</title><rect x="1056.3" y="357" width="6.1" height="15.0" fill="rgb(228,79,42)" rx="2" ry="2" />
<text  x="1059.28" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (295 samples, 0.06%)</title><rect x="272.3" y="85" width="0.7" height="15.0" fill="rgb(219,29,16)" rx="2" ry="2" />
<text  x="275.28" y="95.5" ></text>
</g>
<g >
<title>_int_free (359 samples, 0.08%)</title><rect x="210.4" y="309" width="0.9" height="15.0" fill="rgb(246,141,48)" rx="2" ry="2" />
<text  x="213.36" y="319.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (161 samples, 0.03%)</title><rect x="213.8" y="325" width="0.4" height="15.0" fill="rgb(234,42,51)" rx="2" ry="2" />
<text  x="216.77" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie_array_parser (476 samples, 0.10%)</title><rect x="1156.5" y="389" width="1.2" height="15.0" fill="rgb(206,168,4)" rx="2" ry="2" />
<text  x="1159.47" y="399.5" ></text>
</g>
<g >
<title>core::cmp::max (125 samples, 0.03%)</title><rect x="320.3" y="117" width="0.3" height="15.0" fill="rgb(227,122,35)" rx="2" ry="2" />
<text  x="323.29" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (225 samples, 0.05%)</title><rect x="1072.5" y="389" width="0.6" height="15.0" fill="rgb(235,13,17)" rx="2" ry="2" />
<text  x="1075.54" y="399.5" ></text>
</g>
<g >
<title>_int_realloc (513 samples, 0.11%)</title><rect x="56.7" y="485" width="1.3" height="15.0" fill="rgb(209,81,35)" rx="2" ry="2" />
<text  x="59.72" y="495.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::string_number::StringNumber::append (308 samples, 0.07%)</title><rect x="215.1" y="405" width="0.7" height="15.0" fill="rgb(208,38,28)" rx="2" ry="2" />
<text  x="218.08" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1,700 samples, 0.36%)</title><rect x="1081.9" y="341" width="4.3" height="15.0" fill="rgb(250,215,43)" rx="2" ry="2" />
<text  x="1084.90" y="351.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (273 samples, 0.06%)</title><rect x="184.9" y="277" width="0.7" height="15.0" fill="rgb(226,145,2)" rx="2" ry="2" />
<text  x="187.94" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (194 samples, 0.04%)</title><rect x="61.2" y="485" width="0.5" height="15.0" fill="rgb(210,105,26)" rx="2" ry="2" />
<text  x="64.21" y="495.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (289 samples, 0.06%)</title><rect x="1066.9" y="277" width="0.8" height="15.0" fill="rgb(239,23,23)" rx="2" ry="2" />
<text  x="1069.93" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::truncate (3,034 samples, 0.64%)</title><rect x="1148.8" y="437" width="7.6" height="15.0" fill="rgb(217,6,6)" rx="2" ry="2" />
<text  x="1151.76" y="447.5" ></text>
</g>
<g >
<title>__fget_light (204 samples, 0.04%)</title><rect x="1159.5" y="277" width="0.5" height="15.0" fill="rgb(236,40,34)" rx="2" ry="2" />
<text  x="1162.53" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (2,055 samples, 0.44%)</title><rect x="314.9" y="69" width="5.1" height="15.0" fill="rgb(237,26,0)" rx="2" ry="2" />
<text  x="317.87" y="79.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (335 samples, 0.07%)</title><rect x="268.0" y="341" width="0.8" height="15.0" fill="rgb(252,163,1)" rx="2" ry="2" />
<text  x="270.97" y="351.5" ></text>
</g>
<g >
<title>&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (46,113 samples, 9.78%)</title><rect x="70.3" y="437" width="115.3" height="15.0" fill="rgb(235,34,25)" rx="2" ry="2" />
<text  x="73.27" y="447.5" >&lt;fancy_regex::..</text>
</g>
<g >
<title>alloc::string::String::from_utf16 (1,566 samples, 0.33%)</title><rect x="271.3" y="245" width="3.9" height="15.0" fill="rgb(248,54,32)" rx="2" ry="2" />
<text  x="274.29" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (127 samples, 0.03%)</title><rect x="68.9" y="373" width="0.3" height="15.0" fill="rgb(245,142,50)" rx="2" ry="2" />
<text  x="71.90" y="383.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (262 samples, 0.06%)</title><rect x="1156.6" y="325" width="0.6" height="15.0" fill="rgb(252,195,34)" rx="2" ry="2" />
<text  x="1159.58" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2,199 samples, 0.47%)</title><rect x="1088.7" y="229" width="5.5" height="15.0" fill="rgb(205,125,47)" rx="2" ry="2" />
<text  x="1091.71" y="239.5" ></text>
</g>
<g >
<title>&lt;regex::re_unicode::Matches as core::iter::traits::iterator::Iterator&gt;::next (1,889 samples, 0.40%)</title><rect x="1135.4" y="373" width="4.7" height="15.0" fill="rgb(212,207,20)" rx="2" ry="2" />
<text  x="1138.37" y="383.5" ></text>
</g>
<g >
<title>&lt;str as core::fmt::Display&gt;::fmt (260 samples, 0.06%)</title><rect x="1181.7" y="421" width="0.7" height="15.0" fill="rgb(231,179,3)" rx="2" ry="2" />
<text  x="1184.72" y="431.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (580 samples, 0.12%)</title><rect x="95.7" y="373" width="1.5" height="15.0" fill="rgb(233,166,41)" rx="2" ry="2" />
<text  x="98.73" y="383.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (15,187 samples, 3.22%)</title><rect x="147.6" y="389" width="38.0" height="15.0" fill="rgb(224,67,10)" rx="2" ry="2" />
<text  x="150.63" y="399.5" >reg..</text>
</g>
<g >
<title>_int_malloc (437 samples, 0.09%)</title><rect x="274.0" y="85" width="1.1" height="15.0" fill="rgb(233,32,27)" rx="2" ry="2" />
<text  x="276.98" y="95.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (3,029 samples, 0.64%)</title><rect x="269.5" y="277" width="7.6" height="15.0" fill="rgb(247,6,26)" rx="2" ry="2" />
<text  x="272.51" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (127 samples, 0.03%)</title><rect x="68.9" y="357" width="0.3" height="15.0" fill="rgb(212,24,39)" rx="2" ry="2" />
<text  x="71.90" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,237 samples, 0.47%)</title><rect x="283.5" y="293" width="5.6" height="15.0" fill="rgb(214,76,6)" rx="2" ry="2" />
<text  x="286.53" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (558 samples, 0.12%)</title><rect x="1163.2" y="389" width="1.4" height="15.0" fill="rgb(212,77,3)" rx="2" ry="2" />
<text  x="1166.23" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (565 samples, 0.12%)</title><rect x="272.0" y="181" width="1.4" height="15.0" fill="rgb(221,132,30)" rx="2" ry="2" />
<text  x="274.97" y="191.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (291 samples, 0.06%)</title><rect x="272.3" y="53" width="0.7" height="15.0" fill="rgb(224,13,43)" rx="2" ry="2" />
<text  x="275.29" y="63.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,010 samples, 0.21%)</title><rect x="246.6" y="421" width="2.5" height="15.0" fill="rgb(209,39,5)" rx="2" ry="2" />
<text  x="249.60" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memchr (189 samples, 0.04%)</title><rect x="69.2" y="357" width="0.5" height="15.0" fill="rgb(229,8,10)" rx="2" ry="2" />
<text  x="72.23" y="367.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (319 samples, 0.07%)</title><rect x="290.1" y="373" width="0.8" height="15.0" fill="rgb(209,19,40)" rx="2" ry="2" />
<text  x="293.07" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,544 samples, 0.33%)</title><rect x="231.3" y="277" width="3.8" height="15.0" fill="rgb(217,123,38)" rx="2" ry="2" />
<text  x="234.28" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1,402 samples, 0.30%)</title><rect x="1094.9" y="197" width="3.5" height="15.0" fill="rgb(217,29,42)" rx="2" ry="2" />
<text  x="1097.86" y="207.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (346 samples, 0.07%)</title><rect x="1141.4" y="389" width="0.9" height="15.0" fill="rgb(216,161,8)" rx="2" ry="2" />
<text  x="1144.45" y="399.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at_reverse (155 samples, 0.03%)</title><rect x="199.3" y="309" width="0.4" height="15.0" fill="rgb(238,179,28)" rx="2" ry="2" />
<text  x="202.34" y="319.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (8,185 samples, 1.74%)</title><rect x="762.5" y="325" width="20.4" height="15.0" fill="rgb(245,105,25)" rx="2" ry="2" />
<text  x="765.46" y="335.5" ></text>
</g>
<g >
<title>__rdl_realloc (251 samples, 0.05%)</title><rect x="50.4" y="485" width="0.7" height="15.0" fill="rgb(212,30,30)" rx="2" ry="2" />
<text  x="53.43" y="495.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (952 samples, 0.20%)</title><rect x="892.7" y="277" width="2.4" height="15.0" fill="rgb(241,182,31)" rx="2" ry="2" />
<text  x="895.74" y="287.5" ></text>
</g>
<g >
<title>core::ptr::write (493 samples, 0.10%)</title><rect x="113.0" y="357" width="1.2" height="15.0" fill="rgb(206,218,38)" rx="2" ry="2" />
<text  x="115.95" y="367.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::exec_ (596 samples, 0.13%)</title><rect x="194.9" y="277" width="1.5" height="15.0" fill="rgb(251,197,24)" rx="2" ry="2" />
<text  x="197.89" y="287.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (506 samples, 0.11%)</title><rect x="1047.6" y="309" width="1.3" height="15.0" fill="rgb(246,113,28)" rx="2" ry="2" />
<text  x="1050.60" y="319.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (121 samples, 0.03%)</title><rect x="535.1" y="325" width="0.3" height="15.0" fill="rgb(211,21,4)" rx="2" ry="2" />
<text  x="538.14" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (274 samples, 0.06%)</title><rect x="1141.5" y="357" width="0.7" height="15.0" fill="rgb(219,43,25)" rx="2" ry="2" />
<text  x="1144.48" y="367.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_state (328 samples, 0.07%)</title><rect x="144.4" y="293" width="0.8" height="15.0" fill="rgb(234,100,45)" rx="2" ry="2" />
<text  x="147.41" y="303.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,532 samples, 0.32%)</title><rect x="1094.9" y="341" width="3.8" height="15.0" fill="rgb(211,136,36)" rx="2" ry="2" />
<text  x="1097.86" y="351.5" ></text>
</g>
<g >
<title>&lt;sudachi::analysis::node::Node as core::clone::Clone&gt;::clone (1,692 samples, 0.36%)</title><rect x="242.2" y="437" width="4.2" height="15.0" fill="rgb(215,101,47)" rx="2" ry="2" />
<text  x="245.18" y="447.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (121 samples, 0.03%)</title><rect x="223.1" y="117" width="0.3" height="15.0" fill="rgb(251,137,35)" rx="2" ry="2" />
<text  x="226.11" y="127.5" ></text>
</g>
<g >
<title>_int_free (162 samples, 0.03%)</title><rect x="247.6" y="261" width="0.4" height="15.0" fill="rgb(207,117,18)" rx="2" ry="2" />
<text  x="250.56" y="271.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (539 samples, 0.11%)</title><rect x="1050.9" y="341" width="1.3" height="15.0" fill="rgb(225,37,37)" rx="2" ry="2" />
<text  x="1053.87" y="351.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (123 samples, 0.03%)</title><rect x="212.1" y="293" width="0.3" height="15.0" fill="rgb(253,148,25)" rx="2" ry="2" />
<text  x="215.08" y="303.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (289 samples, 0.06%)</title><rect x="1066.9" y="341" width="0.8" height="15.0" fill="rgb(240,83,48)" rx="2" ry="2" />
<text  x="1069.93" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (527 samples, 0.11%)</title><rect x="1170.7" y="453" width="1.3" height="15.0" fill="rgb(232,111,12)" rx="2" ry="2" />
<text  x="1173.65" y="463.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,151 samples, 0.24%)</title><rect x="221.6" y="261" width="2.9" height="15.0" fill="rgb(242,131,26)" rx="2" ry="2" />
<text  x="224.61" y="271.5" ></text>
</g>
<g >
<title>__memchr_sse2 (183 samples, 0.04%)</title><rect x="69.2" y="341" width="0.5" height="15.0" fill="rgb(247,122,50)" rx="2" ry="2" />
<text  x="72.24" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11,284 samples, 2.39%)</title><rect x="887.5" y="341" width="28.2" height="15.0" fill="rgb(206,1,19)" rx="2" ry="2" />
<text  x="890.47" y="351.5" >h..</text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::PathRewritePlugin::concatenate (1,114 samples, 0.24%)</title><rect x="211.7" y="405" width="2.8" height="15.0" fill="rgb(219,121,4)" rx="2" ry="2" />
<text  x="214.71" y="415.5" ></text>
</g>
<g >
<title>core::str::validations::run_utf8_validation (476 samples, 0.10%)</title><rect x="67.2" y="389" width="1.2" height="15.0" fill="rgb(214,20,38)" rx="2" ry="2" />
<text  x="70.17" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (376 samples, 0.08%)</title><rect x="265.7" y="325" width="0.9" height="15.0" fill="rgb(234,167,45)" rx="2" ry="2" />
<text  x="268.68" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (408 samples, 0.09%)</title><rect x="272.1" y="133" width="1.0" height="15.0" fill="rgb(229,208,21)" rx="2" ry="2" />
<text  x="275.10" y="143.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (2,459 samples, 0.52%)</title><rect x="1088.7" y="325" width="6.2" height="15.0" fill="rgb(219,140,31)" rx="2" ry="2" />
<text  x="1091.71" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (265 samples, 0.06%)</title><rect x="1143.2" y="437" width="0.7" height="15.0" fill="rgb(220,70,0)" rx="2" ry="2" />
<text  x="1146.24" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::word_id (483 samples, 0.10%)</title><rect x="431.3" y="309" width="1.2" height="15.0" fill="rgb(228,18,41)" rx="2" ry="2" />
<text  x="434.33" y="319.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_uppercase (590 samples, 0.13%)</title><rect x="1105.3" y="341" width="1.5" height="15.0" fill="rgb(232,193,52)" rx="2" ry="2" />
<text  x="1108.30" y="351.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (437 samples, 0.09%)</title><rect x="320.9" y="165" width="1.1" height="15.0" fill="rgb(213,63,53)" rx="2" ry="2" />
<text  x="323.93" y="175.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (596 samples, 0.13%)</title><rect x="432.6" y="405" width="1.5" height="15.0" fill="rgb(208,48,0)" rx="2" ry="2" />
<text  x="435.59" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (25,984 samples, 5.51%)</title><rect x="488.0" y="421" width="65.0" height="15.0" fill="rgb(216,25,50)" rx="2" ry="2" />
<text  x="490.96" y="431.5" >alloc::..</text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,014 samples, 0.43%)</title><rect x="216.4" y="357" width="5.0" height="15.0" fill="rgb(215,95,30)" rx="2" ry="2" />
<text  x="219.39" y="367.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (163 samples, 0.03%)</title><rect x="288.4" y="165" width="0.4" height="15.0" fill="rgb(224,78,7)" rx="2" ry="2" />
<text  x="291.36" y="175.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::next_state_no_fail (304 samples, 0.06%)</title><rect x="1111.1" y="261" width="0.7" height="15.0" fill="rgb(222,146,44)" rx="2" ry="2" />
<text  x="1114.08" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (1,164 samples, 0.25%)</title><rect x="221.6" y="293" width="2.9" height="15.0" fill="rgb(218,94,10)" rx="2" ry="2" />
<text  x="224.58" y="303.5" ></text>
</g>
<g >
<title>malloc_consolidate (3,704 samples, 0.79%)</title><rect x="996.8" y="261" width="9.3" height="15.0" fill="rgb(209,137,40)" rx="2" ry="2" />
<text  x="999.84" y="271.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,297 samples, 0.49%)</title><rect x="852.4" y="181" width="5.8" height="15.0" fill="rgb(209,31,15)" rx="2" ry="2" />
<text  x="855.44" y="191.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (148,660 samples, 31.52%)</title><rect x="611.3" y="405" width="371.9" height="15.0" fill="rgb(235,41,51)" rx="2" ry="2" />
<text  x="614.31" y="415.5" >sudachi::dic::grammar::Grammar::get_connect_cost</text>
</g>
<g >
<title>core::ops::function::Fn::call (3,353 samples, 0.71%)</title><rect x="1121.7" y="341" width="8.4" height="15.0" fill="rgb(224,226,15)" rx="2" ry="2" />
<text  x="1124.70" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (484 samples, 0.10%)</title><rect x="905.3" y="261" width="1.2" height="15.0" fill="rgb(214,79,12)" rx="2" ry="2" />
<text  x="908.25" y="271.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search (869 samples, 0.18%)</title><rect x="1144.2" y="421" width="2.2" height="15.0" fill="rgb(232,229,47)" rx="2" ry="2" />
<text  x="1147.25" y="431.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt; (1,151 samples, 0.24%)</title><rect x="221.6" y="229" width="2.9" height="15.0" fill="rgb(206,214,8)" rx="2" ry="2" />
<text  x="224.61" y="239.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3,148 samples, 0.67%)</title><rect x="159.9" y="261" width="7.8" height="15.0" fill="rgb(209,52,2)" rx="2" ry="2" />
<text  x="162.86" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (175 samples, 0.04%)</title><rect x="1068.8" y="421" width="0.5" height="15.0" fill="rgb(252,20,43)" rx="2" ry="2" />
<text  x="1071.83" y="431.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::reverse (258 samples, 0.05%)</title><rect x="199.3" y="325" width="0.6" height="15.0" fill="rgb(210,216,14)" rx="2" ry="2" />
<text  x="202.26" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (151 samples, 0.03%)</title><rect x="1087.0" y="309" width="0.4" height="15.0" fill="rgb(225,88,29)" rx="2" ry="2" />
<text  x="1090.01" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (301 samples, 0.06%)</title><rect x="224.5" y="341" width="0.8" height="15.0" fill="rgb(220,72,54)" rx="2" ry="2" />
<text  x="227.50" y="351.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (1,879 samples, 0.40%)</title><rect x="129.5" y="373" width="4.7" height="15.0" fill="rgb(241,172,37)" rx="2" ry="2" />
<text  x="132.46" y="383.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (22,651 samples, 4.80%)</title><rect x="921.6" y="293" width="56.6" height="15.0" fill="rgb(240,47,1)" rx="2" ry="2" />
<text  x="924.58" y="303.5" >nom::c..</text>
</g>
<g >
<title>std::io::BufRead::read_line::{{closure}} (540 samples, 0.11%)</title><rect x="68.4" y="405" width="1.3" height="15.0" fill="rgb(248,137,12)" rx="2" ry="2" />
<text  x="71.36" y="415.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (404 samples, 0.09%)</title><rect x="351.0" y="309" width="1.0" height="15.0" fill="rgb(231,183,46)" rx="2" ry="2" />
<text  x="353.96" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::translate_node_ranges (255 samples, 0.05%)</title><rect x="202.0" y="437" width="0.6" height="15.0" fill="rgb(222,153,5)" rx="2" ry="2" />
<text  x="204.97" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (596 samples, 0.13%)</title><rect x="273.7" y="149" width="1.5" height="15.0" fill="rgb(239,45,26)" rx="2" ry="2" />
<text  x="276.67" y="159.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (22,651 samples, 4.80%)</title><rect x="921.6" y="325" width="56.6" height="15.0" fill="rgb(227,81,33)" rx="2" ry="2" />
<text  x="924.58" y="335.5" >nom::n..</text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::TrieEntry::new (320 samples, 0.07%)</title><rect x="380.3" y="373" width="0.8" height="15.0" fill="rgb(229,101,26)" rx="2" ry="2" />
<text  x="383.30" y="383.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (751 samples, 0.16%)</title><rect x="1045.0" y="245" width="1.9" height="15.0" fill="rgb(251,114,5)" rx="2" ry="2" />
<text  x="1048.00" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::u32_array_parser (665 samples, 0.14%)</title><rect x="303.9" y="277" width="1.7" height="15.0" fill="rgb(221,13,13)" rx="2" ry="2" />
<text  x="306.94" y="287.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (225 samples, 0.05%)</title><rect x="1067.7" y="341" width="0.5" height="15.0" fill="rgb(238,204,45)" rx="2" ry="2" />
<text  x="1070.66" y="351.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (3,754 samples, 0.80%)</title><rect x="138.1" y="373" width="9.4" height="15.0" fill="rgb(252,134,4)" rx="2" ry="2" />
<text  x="141.12" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,286 samples, 1.12%)</title><rect x="993.0" y="341" width="13.2" height="15.0" fill="rgb(223,210,34)" rx="2" ry="2" />
<text  x="995.97" y="351.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (289 samples, 0.06%)</title><rect x="1066.9" y="245" width="0.8" height="15.0" fill="rgb(213,199,49)" rx="2" ry="2" />
<text  x="1069.93" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::offset (770 samples, 0.16%)</title><rect x="388.1" y="309" width="1.9" height="15.0" fill="rgb(228,131,2)" rx="2" ry="2" />
<text  x="391.10" y="319.5" ></text>
</g>
<g >
<title>_int_realloc (642 samples, 0.14%)</title><rect x="317.8" y="37" width="1.6" height="15.0" fill="rgb(246,212,43)" rx="2" ry="2" />
<text  x="320.83" y="47.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (254 samples, 0.05%)</title><rect x="108.1" y="341" width="0.6" height="15.0" fill="rgb(227,114,4)" rx="2" ry="2" />
<text  x="111.05" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (220 samples, 0.05%)</title><rect x="990.7" y="357" width="0.5" height="15.0" fill="rgb(220,159,52)" rx="2" ry="2" />
<text  x="993.68" y="367.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_of_range (253 samples, 0.05%)</title><rect x="204.2" y="405" width="0.6" height="15.0" fill="rgb(241,210,44)" rx="2" ry="2" />
<text  x="207.18" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (242 samples, 0.05%)</title><rect x="536.0" y="309" width="0.6" height="15.0" fill="rgb(232,158,14)" rx="2" ry="2" />
<text  x="538.99" y="319.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search::{{closure}} (271 samples, 0.06%)</title><rect x="1145.7" y="389" width="0.6" height="15.0" fill="rgb(250,34,0)" rx="2" ry="2" />
<text  x="1148.67" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (939 samples, 0.20%)</title><rect x="46.3" y="485" width="2.3" height="15.0" fill="rgb(253,126,51)" rx="2" ry="2" />
<text  x="49.29" y="495.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::find_at (3,049 samples, 0.65%)</title><rect x="139.1" y="341" width="7.6" height="15.0" fill="rgb(205,26,16)" rx="2" ry="2" />
<text  x="142.11" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (347 samples, 0.07%)</title><rect x="213.3" y="373" width="0.9" height="15.0" fill="rgb(242,110,41)" rx="2" ry="2" />
<text  x="216.30" y="383.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,161 samples, 0.46%)</title><rect x="1056.3" y="277" width="5.4" height="15.0" fill="rgb(225,112,41)" rx="2" ry="2" />
<text  x="1059.28" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt; (5,641 samples, 1.20%)</title><rect x="226.8" y="389" width="14.1" height="15.0" fill="rgb(233,38,32)" rx="2" ry="2" />
<text  x="229.78" y="399.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,532 samples, 0.32%)</title><rect x="1094.9" y="277" width="3.8" height="15.0" fill="rgb(227,197,8)" rx="2" ry="2" />
<text  x="1097.86" y="287.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (170 samples, 0.04%)</title><rect x="222.3" y="133" width="0.5" height="15.0" fill="rgb(238,68,23)" rx="2" ry="2" />
<text  x="225.33" y="143.5" ></text>
</g>
<g >
<title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (1,491 samples, 0.32%)</title><rect x="1131.3" y="373" width="3.8" height="15.0" fill="rgb(228,137,53)" rx="2" ry="2" />
<text  x="1134.34" y="383.5" ></text>
</g>
<g >
<title>&lt;regex::literal::imp::LiteralIter as core::iter::traits::iterator::Iterator&gt;::next (998 samples, 0.21%)</title><rect x="157.4" y="277" width="2.5" height="15.0" fill="rgb(228,161,45)" rx="2" ry="2" />
<text  x="160.36" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (163 samples, 0.03%)</title><rect x="27.9" y="437" width="0.4" height="15.0" fill="rgb(239,17,45)" rx="2" ry="2" />
<text  x="30.92" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (418 samples, 0.09%)</title><rect x="48.6" y="485" width="1.1" height="15.0" fill="rgb(227,66,3)" rx="2" ry="2" />
<text  x="51.64" y="495.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (2,128 samples, 0.45%)</title><rect x="1041.6" y="325" width="5.3" height="15.0" fill="rgb(230,174,40)" rx="2" ry="2" />
<text  x="1044.56" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (292 samples, 0.06%)</title><rect x="219.1" y="101" width="0.7" height="15.0" fill="rgb(223,223,19)" rx="2" ry="2" />
<text  x="222.05" y="111.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::value (2,745 samples, 0.58%)</title><rect x="390.0" y="309" width="6.9" height="15.0" fill="rgb(253,103,2)" rx="2" ry="2" />
<text  x="393.02" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (308 samples, 0.07%)</title><rect x="206.6" y="245" width="0.8" height="15.0" fill="rgb(237,175,25)" rx="2" ry="2" />
<text  x="209.63" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (381 samples, 0.08%)</title><rect x="265.7" y="389" width="0.9" height="15.0" fill="rgb(248,215,19)" rx="2" ry="2" />
<text  x="268.68" y="399.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (725 samples, 0.15%)</title><rect x="532.7" y="293" width="1.8" height="15.0" fill="rgb(222,110,49)" rx="2" ry="2" />
<text  x="535.70" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (121 samples, 0.03%)</title><rect x="22.6" y="485" width="0.3" height="15.0" fill="rgb(223,215,50)" rx="2" ry="2" />
<text  x="25.62" y="495.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (183 samples, 0.04%)</title><rect x="386.9" y="277" width="0.4" height="15.0" fill="rgb(221,80,10)" rx="2" ry="2" />
<text  x="389.86" y="287.5" ></text>
</g>
<g >
<title>[unknown] (457,403 samples, 96.97%)</title><rect x="42.7" y="501" width="1144.3" height="15.0" fill="rgb(237,125,35)" rx="2" ry="2" />
<text  x="45.73" y="511.5" >[unknown]</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (761 samples, 0.16%)</title><rect x="244.4" y="421" width="1.9" height="15.0" fill="rgb(240,117,42)" rx="2" ry="2" />
<text  x="247.37" y="431.5" ></text>
</g>
<g >
<title>&lt;fancy_regex::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (2,995 samples, 0.63%)</title><rect x="192.6" y="421" width="7.5" height="15.0" fill="rgb(236,115,42)" rx="2" ry="2" />
<text  x="195.61" y="431.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (329 samples, 0.07%)</title><rect x="275.7" y="149" width="0.9" height="15.0" fill="rgb(253,98,42)" rx="2" ry="2" />
<text  x="278.73" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_free (321 samples, 0.07%)</title><rect x="265.8" y="293" width="0.8" height="15.0" fill="rgb(248,122,42)" rx="2" ry="2" />
<text  x="268.77" y="303.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (139 samples, 0.03%)</title><rect x="35.9" y="485" width="0.4" height="15.0" fill="rgb(205,107,51)" rx="2" ry="2" />
<text  x="38.90" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,766 samples, 0.59%)</title><rect x="313.7" y="133" width="6.9" height="15.0" fill="rgb(222,42,34)" rx="2" ry="2" />
<text  x="316.73" y="143.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (211 samples, 0.04%)</title><rect x="276.6" y="245" width="0.5" height="15.0" fill="rgb(247,95,35)" rx="2" ry="2" />
<text  x="279.56" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (2,258 samples, 0.48%)</title><rect x="102.4" y="373" width="5.7" height="15.0" fill="rgb(245,217,23)" rx="2" ry="2" />
<text  x="105.40" y="383.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::shortest_dfa (3,670 samples, 0.78%)</title><rect x="172.3" y="309" width="9.2" height="15.0" fill="rgb(231,67,13)" rx="2" ry="2" />
<text  x="175.28" y="319.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (122 samples, 0.03%)</title><rect x="207.7" y="341" width="0.3" height="15.0" fill="rgb(211,218,33)" rx="2" ry="2" />
<text  x="210.69" y="351.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::reverse (870 samples, 0.18%)</title><rect x="251.1" y="437" width="2.2" height="15.0" fill="rgb(220,198,4)" rx="2" ry="2" />
<text  x="254.14" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (10,089 samples, 2.14%)</title><rect x="493.9" y="309" width="25.3" height="15.0" fill="rgb(243,188,52)" rx="2" ry="2" />
<text  x="496.93" y="319.5" >a..</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (708 samples, 0.15%)</title><rect x="263.9" y="389" width="1.8" height="15.0" fill="rgb(211,122,6)" rx="2" ry="2" />
<text  x="266.90" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (498 samples, 0.11%)</title><rect x="1163.4" y="309" width="1.2" height="15.0" fill="rgb(230,103,14)" rx="2" ry="2" />
<text  x="1166.38" y="319.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (2,313 samples, 0.49%)</title><rect x="185.8" y="437" width="5.8" height="15.0" fill="rgb(250,186,16)" rx="2" ry="2" />
<text  x="188.83" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (178 samples, 0.04%)</title><rect x="438.7" y="421" width="0.5" height="15.0" fill="rgb(242,121,17)" rx="2" ry="2" />
<text  x="441.73" y="431.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryTypeIter as core::iter::traits::iterator::Iterator&gt;::next (710 samples, 0.15%)</title><rect x="1077.0" y="389" width="1.8" height="15.0" fill="rgb(232,122,36)" rx="2" ry="2" />
<text  x="1080.05" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,161 samples, 0.46%)</title><rect x="1056.3" y="309" width="5.4" height="15.0" fill="rgb(240,111,0)" rx="2" ry="2" />
<text  x="1059.28" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (1,086 samples, 0.23%)</title><rect x="186.6" y="69" width="2.7" height="15.0" fill="rgb(246,70,1)" rx="2" ry="2" />
<text  x="189.55" y="79.5" ></text>
</g>
<g >
<title>all (471,682 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(206,10,14)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (127 samples, 0.03%)</title><rect x="1115.1" y="197" width="0.3" height="15.0" fill="rgb(250,152,15)" rx="2" ry="2" />
<text  x="1118.11" y="207.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3,148 samples, 0.67%)</title><rect x="159.9" y="277" width="7.8" height="15.0" fill="rgb(241,38,10)" rx="2" ry="2" />
<text  x="162.86" y="287.5" ></text>
</g>
<g >
<title>sudachi::main (447,470 samples, 94.87%)</title><rect x="66.3" y="485" width="1119.4" height="15.0" fill="rgb(240,187,36)" rx="2" ry="2" />
<text  x="69.28" y="495.5" >sudachi::main</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (338 samples, 0.07%)</title><rect x="128.2" y="309" width="0.9" height="15.0" fill="rgb(207,59,51)" rx="2" ry="2" />
<text  x="131.23" y="319.5" ></text>
</g>
<g >
<title>_int_malloc (828 samples, 0.18%)</title><rect x="187.2" y="37" width="2.1" height="15.0" fill="rgb(227,29,27)" rx="2" ry="2" />
<text  x="190.20" y="47.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::byte_class (178 samples, 0.04%)</title><rect x="142.5" y="261" width="0.5" height="15.0" fill="rgb(211,217,29)" rx="2" ry="2" />
<text  x="145.52" y="271.5" ></text>
</g>
<g >
<title>aho_corasick::dfa::DFA&lt;S&gt;::earliest_find_at (512 samples, 0.11%)</title><rect x="1110.7" y="325" width="1.2" height="15.0" fill="rgb(209,23,20)" rx="2" ry="2" />
<text  x="1113.66" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (12,721 samples, 2.70%)</title><rect x="1021.2" y="405" width="31.8" height="15.0" fill="rgb(253,206,33)" rx="2" ry="2" />
<text  x="1024.19" y="415.5" >su..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,171 samples, 0.25%)</title><rect x="186.4" y="149" width="3.0" height="15.0" fill="rgb(225,110,37)" rx="2" ry="2" />
<text  x="189.45" y="159.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (7,548 samples, 1.60%)</title><rect x="987.3" y="405" width="18.9" height="15.0" fill="rgb(225,118,10)" rx="2" ry="2" />
<text  x="990.33" y="415.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (369 samples, 0.08%)</title><rect x="1011.5" y="389" width="0.9" height="15.0" fill="rgb(210,82,32)" rx="2" ry="2" />
<text  x="1014.47" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (279 samples, 0.06%)</title><rect x="1048.9" y="261" width="0.7" height="15.0" fill="rgb(208,188,45)" rx="2" ry="2" />
<text  x="1051.89" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (472 samples, 0.10%)</title><rect x="206.5" y="309" width="1.2" height="15.0" fill="rgb(233,216,27)" rx="2" ry="2" />
<text  x="209.51" y="319.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (392 samples, 0.08%)</title><rect x="190.6" y="325" width="1.0" height="15.0" fill="rgb(245,34,37)" rx="2" ry="2" />
<text  x="193.60" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (5,574 samples, 1.18%)</title><rect x="520.6" y="309" width="13.9" height="15.0" fill="rgb(227,90,54)" rx="2" ry="2" />
<text  x="523.57" y="319.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (237 samples, 0.05%)</title><rect x="1142.6" y="421" width="0.6" height="15.0" fill="rgb(253,102,49)" rx="2" ry="2" />
<text  x="1145.60" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (328 samples, 0.07%)</title><rect x="1163.5" y="293" width="0.8" height="15.0" fill="rgb(235,149,18)" rx="2" ry="2" />
<text  x="1166.53" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,083 samples, 0.23%)</title><rect x="984.4" y="389" width="2.7" height="15.0" fill="rgb(212,162,5)" rx="2" ry="2" />
<text  x="987.40" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (589 samples, 0.12%)</title><rect x="1080.1" y="389" width="1.5" height="15.0" fill="rgb(206,188,7)" rx="2" ry="2" />
<text  x="1083.14" y="399.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,590 samples, 0.55%)</title><rect x="426.1" y="373" width="6.4" height="15.0" fill="rgb(230,29,15)" rx="2" ry="2" />
<text  x="429.06" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3,135 samples, 0.66%)</title><rect x="844.6" y="213" width="7.8" height="15.0" fill="rgb(245,122,37)" rx="2" ry="2" />
<text  x="847.57" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (156 samples, 0.03%)</title><rect x="1148.2" y="437" width="0.4" height="15.0" fill="rgb(250,130,9)" rx="2" ry="2" />
<text  x="1151.23" y="447.5" ></text>
</g>
<g >
<title>core::ptr::write (448 samples, 0.09%)</title><rect x="124.5" y="357" width="1.1" height="15.0" fill="rgb(239,181,35)" rx="2" ry="2" />
<text  x="127.48" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (2,457 samples, 0.52%)</title><rect x="1056.3" y="389" width="6.1" height="15.0" fill="rgb(247,104,46)" rx="2" ry="2" />
<text  x="1059.28" y="399.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (1,963 samples, 0.42%)</title><rect x="910.8" y="245" width="4.9" height="15.0" fill="rgb(227,97,4)" rx="2" ry="2" />
<text  x="913.78" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (123 samples, 0.03%)</title><rect x="68.9" y="309" width="0.3" height="15.0" fill="rgb(220,58,33)" rx="2" ry="2" />
<text  x="71.91" y="319.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (346 samples, 0.07%)</title><rect x="1141.4" y="405" width="0.9" height="15.0" fill="rgb(249,3,18)" rx="2" ry="2" />
<text  x="1144.45" y="415.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (144 samples, 0.03%)</title><rect x="311.4" y="213" width="0.3" height="15.0" fill="rgb(209,79,16)" rx="2" ry="2" />
<text  x="314.37" y="223.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find (1,423 samples, 0.30%)</title><rect x="1136.2" y="245" width="3.5" height="15.0" fill="rgb(233,78,33)" rx="2" ry="2" />
<text  x="1139.18" y="255.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (139 samples, 0.03%)</title><rect x="216.6" y="229" width="0.4" height="15.0" fill="rgb(221,85,7)" rx="2" ry="2" />
<text  x="219.64" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1,146 samples, 0.24%)</title><rect x="111.3" y="373" width="2.9" height="15.0" fill="rgb(208,157,32)" rx="2" ry="2" />
<text  x="114.32" y="383.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (3,566 samples, 0.76%)</title><rect x="323.8" y="245" width="8.9" height="15.0" fill="rgb(233,36,51)" rx="2" ry="2" />
<text  x="326.76" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2,203 samples, 0.47%)</title><rect x="283.6" y="213" width="5.5" height="15.0" fill="rgb(236,158,53)" rx="2" ry="2" />
<text  x="286.62" y="223.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (450 samples, 0.10%)</title><rect x="1130.1" y="341" width="1.1" height="15.0" fill="rgb(213,183,45)" rx="2" ry="2" />
<text  x="1133.09" y="351.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::mecab_oov::MeCabOovPlugin::get_oov_node (4,917 samples, 1.04%)</title><rect x="1087.4" y="389" width="12.3" height="15.0" fill="rgb(251,2,32)" rx="2" ry="2" />
<text  x="1090.39" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (281 samples, 0.06%)</title><rect x="268.0" y="261" width="0.7" height="15.0" fill="rgb(208,157,25)" rx="2" ry="2" />
<text  x="270.98" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (126 samples, 0.03%)</title><rect x="1184.8" y="421" width="0.3" height="15.0" fill="rgb(246,101,12)" rx="2" ry="2" />
<text  x="1187.81" y="431.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (491 samples, 0.10%)</title><rect x="537.5" y="389" width="1.2" height="15.0" fill="rgb(235,212,24)" rx="2" ry="2" />
<text  x="540.46" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (142 samples, 0.03%)</title><rect x="132.4" y="341" width="0.4" height="15.0" fill="rgb(212,181,3)" rx="2" ry="2" />
<text  x="135.40" y="351.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher (854 samples, 0.18%)</title><rect x="183.5" y="325" width="2.1" height="15.0" fill="rgb(241,58,7)" rx="2" ry="2" />
<text  x="186.48" y="335.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (945 samples, 0.20%)</title><rect x="1114.1" y="325" width="2.4" height="15.0" fill="rgb(210,7,54)" rx="2" ry="2" />
<text  x="1117.12" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (381 samples, 0.08%)</title><rect x="265.7" y="341" width="0.9" height="15.0" fill="rgb(248,50,50)" rx="2" ry="2" />
<text  x="268.68" y="351.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,535 samples, 0.54%)</title><rect x="283.5" y="309" width="6.4" height="15.0" fill="rgb(205,44,7)" rx="2" ry="2" />
<text  x="286.53" y="319.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::capture_locations (260 samples, 0.06%)</title><rect x="193.2" y="389" width="0.7" height="15.0" fill="rgb(215,6,1)" rx="2" ry="2" />
<text  x="196.21" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_info (36,652 samples, 7.77%)</title><rect x="261.9" y="421" width="91.7" height="15.0" fill="rgb(245,215,5)" rx="2" ry="2" />
<text  x="264.94" y="431.5" >sudachi::d..</text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::to_orig (128 samples, 0.03%)</title><rect x="202.3" y="421" width="0.3" height="15.0" fill="rgb(242,105,16)" rx="2" ry="2" />
<text  x="205.28" y="431.5" ></text>
</g>
<g >
<title>regex::re_trait::RegularExpression::locations (160 samples, 0.03%)</title><rect x="1134.7" y="341" width="0.4" height="15.0" fill="rgb(239,172,21)" rx="2" ry="2" />
<text  x="1137.65" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (520 samples, 0.11%)</title><rect x="1163.3" y="325" width="1.3" height="15.0" fill="rgb(209,76,6)" rx="2" ry="2" />
<text  x="1166.32" y="335.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (29,487 samples, 6.25%)</title><rect x="688.7" y="325" width="73.8" height="15.0" fill="rgb(209,103,54)" rx="2" ry="2" />
<text  x="691.69" y="335.5" >&lt;std::co..</text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (125 samples, 0.03%)</title><rect x="141.3" y="261" width="0.4" height="15.0" fill="rgb(238,138,12)" rx="2" ry="2" />
<text  x="144.35" y="271.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::uppercase::lookup (483 samples, 0.10%)</title><rect x="1105.6" y="325" width="1.2" height="15.0" fill="rgb(233,201,1)" rx="2" ry="2" />
<text  x="1108.57" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,099 samples, 0.23%)</title><rect x="92.3" y="389" width="2.8" height="15.0" fill="rgb(208,112,50)" rx="2" ry="2" />
<text  x="95.33" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,501 samples, 0.74%)</title><rect x="323.9" y="213" width="8.8" height="15.0" fill="rgb(249,214,47)" rx="2" ry="2" />
<text  x="326.92" y="223.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,083 samples, 0.23%)</title><rect x="988.0" y="309" width="2.7" height="15.0" fill="rgb(245,9,34)" rx="2" ry="2" />
<text  x="990.97" y="319.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (295 samples, 0.06%)</title><rect x="272.3" y="69" width="0.7" height="15.0" fill="rgb(254,33,7)" rx="2" ry="2" />
<text  x="275.28" y="79.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt; (3,602 samples, 0.76%)</title><rect x="216.4" y="389" width="9.0" height="15.0" fill="rgb(210,166,43)" rx="2" ry="2" />
<text  x="219.37" y="399.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (206 samples, 0.04%)</title><rect x="145.2" y="293" width="0.5" height="15.0" fill="rgb(206,57,8)" rx="2" ry="2" />
<text  x="148.23" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4,536 samples, 0.96%)</title><rect x="771.6" y="293" width="11.3" height="15.0" fill="rgb(228,63,30)" rx="2" ry="2" />
<text  x="774.59" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2,028 samples, 0.43%)</title><rect x="283.7" y="197" width="5.1" height="15.0" fill="rgb(224,35,36)" rx="2" ry="2" />
<text  x="286.70" y="207.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (305 samples, 0.06%)</title><rect x="1050.1" y="245" width="0.8" height="15.0" fill="rgb(231,225,21)" rx="2" ry="2" />
<text  x="1053.11" y="255.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (152 samples, 0.03%)</title><rect x="189.6" y="181" width="0.4" height="15.0" fill="rgb(225,226,32)" rx="2" ry="2" />
<text  x="192.58" y="191.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (798 samples, 0.17%)</title><rect x="1164.8" y="373" width="2.0" height="15.0" fill="rgb(209,41,41)" rx="2" ry="2" />
<text  x="1167.79" y="383.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (3,471 samples, 0.74%)</title><rect x="333.7" y="261" width="8.6" height="15.0" fill="rgb(232,206,47)" rx="2" ry="2" />
<text  x="336.66" y="271.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (209 samples, 0.04%)</title><rect x="49.7" y="485" width="0.5" height="15.0" fill="rgb(248,57,36)" rx="2" ry="2" />
<text  x="52.69" y="495.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::mecab_oov::MeCabOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (195 samples, 0.04%)</title><rect x="1076.1" y="405" width="0.5" height="15.0" fill="rgb(218,201,17)" rx="2" ry="2" />
<text  x="1079.09" y="415.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (164 samples, 0.03%)</title><rect x="70.7" y="405" width="0.4" height="15.0" fill="rgb(233,180,35)" rx="2" ry="2" />
<text  x="73.70" y="415.5" ></text>
</g>
<g >
<title>&lt;regex::pool::PoolGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (208 samples, 0.04%)</title><rect x="182.1" y="293" width="0.5" height="15.0" fill="rgb(212,184,20)" rx="2" ry="2" />
<text  x="185.12" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3,199 samples, 0.68%)</title><rect x="324.2" y="117" width="8.0" height="15.0" fill="rgb(211,33,29)" rx="2" ry="2" />
<text  x="327.20" y="127.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (160 samples, 0.03%)</title><rect x="248.6" y="341" width="0.4" height="15.0" fill="rgb(221,185,37)" rx="2" ry="2" />
<text  x="251.62" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (487 samples, 0.10%)</title><rect x="1086.2" y="325" width="1.2" height="15.0" fill="rgb(238,123,41)" rx="2" ry="2" />
<text  x="1089.17" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (125 samples, 0.03%)</title><rect x="332.7" y="213" width="0.3" height="15.0" fill="rgb(218,213,49)" rx="2" ry="2" />
<text  x="335.68" y="223.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::is_nfkc_quick (1,796 samples, 0.38%)</title><rect x="1116.5" y="357" width="4.5" height="15.0" fill="rgb(228,132,9)" rx="2" ry="2" />
<text  x="1119.48" y="367.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::repeat (219 samples, 0.05%)</title><rect x="535.4" y="325" width="0.6" height="15.0" fill="rgb(225,36,9)" rx="2" ry="2" />
<text  x="538.44" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (183 samples, 0.04%)</title><rect x="1079.3" y="357" width="0.5" height="15.0" fill="rgb(225,213,39)" rx="2" ry="2" />
<text  x="1082.32" y="367.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (7,688 samples, 1.63%)</title><rect x="439.3" y="437" width="19.2" height="15.0" fill="rgb(219,224,43)" rx="2" ry="2" />
<text  x="442.26" y="447.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (2,561 samples, 0.54%)</title><rect x="343.1" y="245" width="6.4" height="15.0" fill="rgb(232,42,40)" rx="2" ry="2" />
<text  x="346.08" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (331 samples, 0.07%)</title><rect x="1072.3" y="421" width="0.8" height="15.0" fill="rgb(220,186,34)" rx="2" ry="2" />
<text  x="1075.32" y="431.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (2,264 samples, 0.48%)</title><rect x="498.0" y="245" width="5.7" height="15.0" fill="rgb(205,43,23)" rx="2" ry="2" />
<text  x="501.03" y="255.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (296 samples, 0.06%)</title><rect x="1061.7" y="341" width="0.7" height="15.0" fill="rgb(249,24,52)" rx="2" ry="2" />
<text  x="1064.68" y="351.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::reset (3,075 samples, 0.65%)</title><rect x="1148.7" y="469" width="7.7" height="15.0" fill="rgb(225,80,10)" rx="2" ry="2" />
<text  x="1151.75" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,199 samples, 0.47%)</title><rect x="1088.7" y="277" width="5.5" height="15.0" fill="rgb(240,157,34)" rx="2" ry="2" />
<text  x="1091.71" y="287.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::should_ignore (945 samples, 0.20%)</title><rect x="1114.1" y="357" width="2.4" height="15.0" fill="rgb(218,79,33)" rx="2" ry="2" />
<text  x="1117.12" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,022 samples, 0.64%)</title><rect x="313.3" y="165" width="7.5" height="15.0" fill="rgb(245,8,5)" rx="2" ry="2" />
<text  x="316.25" y="175.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (320 samples, 0.07%)</title><rect x="1046.1" y="229" width="0.8" height="15.0" fill="rgb(218,114,1)" rx="2" ry="2" />
<text  x="1049.08" y="239.5" ></text>
</g>
<g >
<title>_int_free (189 samples, 0.04%)</title><rect x="269.9" y="229" width="0.5" height="15.0" fill="rgb(211,204,6)" rx="2" ry="2" />
<text  x="272.92" y="239.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (314 samples, 0.07%)</title><rect x="31.2" y="485" width="0.8" height="15.0" fill="rgb(220,111,1)" rx="2" ry="2" />
<text  x="34.17" y="495.5" ></text>
</g>
<g >
<title>&lt;T as alloc::string::ToString&gt;::to_string (161 samples, 0.03%)</title><rect x="215.1" y="389" width="0.4" height="15.0" fill="rgb(220,174,46)" rx="2" ry="2" />
<text  x="218.10" y="399.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::start_build (218 samples, 0.05%)</title><rect x="1148.2" y="453" width="0.5" height="15.0" fill="rgb(249,173,46)" rx="2" ry="2" />
<text  x="1151.20" y="463.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (22,313 samples, 4.73%)</title><rect x="1012.4" y="421" width="55.8" height="15.0" fill="rgb(240,159,13)" rx="2" ry="2" />
<text  x="1015.40" y="431.5" >sudac..</text>
</g>
<g >
<title>_int_malloc (2,531 samples, 0.54%)</title><rect x="325.9" y="101" width="6.3" height="15.0" fill="rgb(221,30,34)" rx="2" ry="2" />
<text  x="328.87" y="111.5" ></text>
</g>
<g >
<title>malloc_consolidate (643 samples, 0.14%)</title><rect x="985.4" y="293" width="1.6" height="15.0" fill="rgb(246,31,15)" rx="2" ry="2" />
<text  x="988.37" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (281 samples, 0.06%)</title><rect x="268.0" y="277" width="0.7" height="15.0" fill="rgb(227,119,7)" rx="2" ry="2" />
<text  x="270.98" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (695 samples, 0.15%)</title><rect x="246.8" y="293" width="1.8" height="15.0" fill="rgb(220,148,54)" rx="2" ry="2" />
<text  x="249.84" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (555 samples, 0.12%)</title><rect x="218.7" y="245" width="1.4" height="15.0" fill="rgb(218,113,8)" rx="2" ry="2" />
<text  x="221.71" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (500 samples, 0.11%)</title><rect x="218.9" y="213" width="1.2" height="15.0" fill="rgb(205,162,23)" rx="2" ry="2" />
<text  x="221.85" y="223.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,791 samples, 0.38%)</title><rect x="173.1" y="277" width="4.5" height="15.0" fill="rgb(216,200,26)" rx="2" ry="2" />
<text  x="176.11" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (538 samples, 0.11%)</title><rect x="209.9" y="325" width="1.4" height="15.0" fill="rgb(238,206,28)" rx="2" ry="2" />
<text  x="212.92" y="335.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (580 samples, 0.12%)</title><rect x="95.7" y="389" width="1.5" height="15.0" fill="rgb(221,218,41)" rx="2" ry="2" />
<text  x="98.73" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (347 samples, 0.07%)</title><rect x="267.9" y="357" width="0.9" height="15.0" fill="rgb(207,59,37)" rx="2" ry="2" />
<text  x="270.94" y="367.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min (2,304 samples, 0.49%)</title><rect x="852.4" y="197" width="5.8" height="15.0" fill="rgb(235,130,6)" rx="2" ry="2" />
<text  x="855.44" y="207.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::uppercase::lookup (261 samples, 0.06%)</title><rect x="1112.3" y="341" width="0.7" height="15.0" fill="rgb(237,220,35)" rx="2" ry="2" />
<text  x="1115.31" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (390 samples, 0.08%)</title><rect x="1103.0" y="389" width="1.0" height="15.0" fill="rgb(241,32,8)" rx="2" ry="2" />
<text  x="1106.01" y="399.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (1,972 samples, 0.42%)</title><rect x="978.2" y="325" width="5.0" height="15.0" fill="rgb(221,97,11)" rx="2" ry="2" />
<text  x="981.24" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (654 samples, 0.14%)</title><rect x="209.7" y="373" width="1.6" height="15.0" fill="rgb(253,178,39)" rx="2" ry="2" />
<text  x="212.66" y="383.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (127 samples, 0.03%)</title><rect x="212.1" y="389" width="0.3" height="15.0" fill="rgb(225,103,19)" rx="2" ry="2" />
<text  x="215.08" y="399.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (147 samples, 0.03%)</title><rect x="191.8" y="309" width="0.4" height="15.0" fill="rgb(207,182,38)" rx="2" ry="2" />
<text  x="194.83" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::common_prefix_iterator (163 samples, 0.03%)</title><rect x="433.7" y="293" width="0.4" height="15.0" fill="rgb(232,25,18)" rx="2" ry="2" />
<text  x="436.68" y="303.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (121 samples, 0.03%)</title><rect x="201.2" y="469" width="0.3" height="15.0" fill="rgb(220,84,5)" rx="2" ry="2" />
<text  x="204.15" y="479.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (145 samples, 0.03%)</title><rect x="432.8" y="357" width="0.3" height="15.0" fill="rgb(206,140,2)" rx="2" ry="2" />
<text  x="435.75" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (394 samples, 0.08%)</title><rect x="1103.0" y="405" width="1.0" height="15.0" fill="rgb(231,167,11)" rx="2" ry="2" />
<text  x="1106.00" y="415.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::edit::resolve_edits (269 samples, 0.06%)</title><rect x="1104.2" y="389" width="0.7" height="15.0" fill="rgb(217,220,23)" rx="2" ry="2" />
<text  x="1107.25" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,672 samples, 0.35%)</title><rect x="1042.7" y="293" width="4.2" height="15.0" fill="rgb(218,59,10)" rx="2" ry="2" />
<text  x="1045.70" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (756 samples, 0.16%)</title><rect x="92.6" y="357" width="1.8" height="15.0" fill="rgb(212,40,37)" rx="2" ry="2" />
<text  x="95.55" y="367.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,071 samples, 0.23%)</title><rect x="1131.7" y="309" width="2.7" height="15.0" fill="rgb(244,59,13)" rx="2" ry="2" />
<text  x="1134.71" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,249 samples, 0.90%)</title><rect x="1028.3" y="293" width="10.6" height="15.0" fill="rgb(213,189,15)" rx="2" ry="2" />
<text  x="1031.32" y="303.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher_str (1,190 samples, 0.25%)</title><rect x="182.6" y="341" width="3.0" height="15.0" fill="rgb(240,88,23)" rx="2" ry="2" />
<text  x="185.64" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (1,111 samples, 0.24%)</title><rect x="186.5" y="101" width="2.8" height="15.0" fill="rgb(241,51,17)" rx="2" ry="2" />
<text  x="189.54" y="111.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,120 samples, 0.24%)</title><rect x="134.7" y="357" width="2.8" height="15.0" fill="rgb(250,125,16)" rx="2" ry="2" />
<text  x="137.70" y="367.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (20,120 samples, 4.27%)</title><rect x="921.6" y="277" width="50.3" height="15.0" fill="rgb(224,118,46)" rx="2" ry="2" />
<text  x="924.58" y="287.5" >&lt;F as..</text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,494 samples, 0.32%)</title><rect x="1136.0" y="277" width="3.7" height="15.0" fill="rgb(209,195,25)" rx="2" ry="2" />
<text  x="1139.01" y="287.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (134 samples, 0.03%)</title><rect x="1175.6" y="405" width="0.3" height="15.0" fill="rgb(253,182,2)" rx="2" ry="2" />
<text  x="1178.56" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (532 samples, 0.11%)</title><rect x="197.4" y="277" width="1.4" height="15.0" fill="rgb(217,125,31)" rx="2" ry="2" />
<text  x="200.44" y="287.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (531 samples, 0.11%)</title><rect x="432.8" y="373" width="1.3" height="15.0" fill="rgb(249,124,45)" rx="2" ry="2" />
<text  x="435.75" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (300 samples, 0.06%)</title><rect x="220.7" y="293" width="0.7" height="15.0" fill="rgb(227,31,21)" rx="2" ry="2" />
<text  x="223.67" y="303.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (621 samples, 0.13%)</title><rect x="206.5" y="389" width="1.6" height="15.0" fill="rgb(227,126,10)" rx="2" ry="2" />
<text  x="209.51" y="399.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (5,702 samples, 1.21%)</title><rect x="155.1" y="293" width="14.2" height="15.0" fill="rgb(245,75,46)" rx="2" ry="2" />
<text  x="158.07" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_free (431 samples, 0.09%)</title><rect x="1170.7" y="357" width="1.1" height="15.0" fill="rgb(245,217,0)" rx="2" ry="2" />
<text  x="1173.74" y="367.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,109 samples, 0.24%)</title><rect x="196.5" y="325" width="2.8" height="15.0" fill="rgb(245,201,53)" rx="2" ry="2" />
<text  x="199.49" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (293 samples, 0.06%)</title><rect x="222.0" y="165" width="0.8" height="15.0" fill="rgb(233,209,47)" rx="2" ry="2" />
<text  x="225.02" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,313 samples, 0.49%)</title><rect x="336.5" y="213" width="5.8" height="15.0" fill="rgb(207,185,1)" rx="2" ry="2" />
<text  x="339.55" y="223.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin::concat (1,263 samples, 0.27%)</title><rect x="211.6" y="421" width="3.1" height="15.0" fill="rgb(227,203,26)" rx="2" ry="2" />
<text  x="214.57" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (198 samples, 0.04%)</title><rect x="217.5" y="261" width="0.5" height="15.0" fill="rgb(217,94,29)" rx="2" ry="2" />
<text  x="220.53" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::make_insert_hash (267 samples, 0.06%)</title><rect x="216.6" y="261" width="0.7" height="15.0" fill="rgb(249,161,7)" rx="2" ry="2" />
<text  x="219.64" y="271.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::bitset_search (431 samples, 0.09%)</title><rect x="1105.6" y="309" width="1.1" height="15.0" fill="rgb(213,30,12)" rx="2" ry="2" />
<text  x="1108.60" y="319.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::shortest_match_at (256 samples, 0.05%)</title><rect x="191.7" y="357" width="0.7" height="15.0" fill="rgb(214,10,3)" rx="2" ry="2" />
<text  x="194.73" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (174 samples, 0.04%)</title><rect x="1162.7" y="389" width="0.5" height="15.0" fill="rgb(247,84,29)" rx="2" ry="2" />
<text  x="1165.74" y="399.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (491 samples, 0.10%)</title><rect x="537.5" y="405" width="1.2" height="15.0" fill="rgb(227,217,54)" rx="2" ry="2" />
<text  x="540.46" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (1,780 samples, 0.38%)</title><rect x="186.2" y="277" width="4.4" height="15.0" fill="rgb(251,111,43)" rx="2" ry="2" />
<text  x="189.15" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::connect_cost_parser (26,988 samples, 5.72%)</title><rect x="915.7" y="389" width="67.5" height="15.0" fill="rgb(215,219,9)" rx="2" ry="2" />
<text  x="918.70" y="399.5" >sudachi..</text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (294 samples, 0.06%)</title><rect x="460.1" y="421" width="0.7" height="15.0" fill="rgb(234,105,2)" rx="2" ry="2" />
<text  x="463.05" y="431.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (496 samples, 0.11%)</title><rect x="1185.8" y="485" width="1.2" height="15.0" fill="rgb(243,126,35)" rx="2" ry="2" />
<text  x="1188.77" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,402 samples, 0.30%)</title><rect x="1094.9" y="213" width="3.5" height="15.0" fill="rgb(218,221,2)" rx="2" ry="2" />
<text  x="1097.86" y="223.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::is_match (313 samples, 0.07%)</title><rect x="191.6" y="437" width="0.8" height="15.0" fill="rgb(253,120,36)" rx="2" ry="2" />
<text  x="194.64" y="447.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (4,114 samples, 0.87%)</title><rect x="752.2" y="261" width="10.2" height="15.0" fill="rgb(254,172,15)" rx="2" ry="2" />
<text  x="755.16" y="271.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (975 samples, 0.21%)</title><rect x="1158.5" y="437" width="2.5" height="15.0" fill="rgb(243,55,14)" rx="2" ry="2" />
<text  x="1161.54" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1,673 samples, 0.35%)</title><rect x="246.5" y="437" width="4.2" height="15.0" fill="rgb(236,89,40)" rx="2" ry="2" />
<text  x="249.51" y="447.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (539 samples, 0.11%)</title><rect x="1050.9" y="325" width="1.3" height="15.0" fill="rgb(219,207,18)" rx="2" ry="2" />
<text  x="1053.87" y="335.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (289 samples, 0.06%)</title><rect x="191.7" y="421" width="0.7" height="15.0" fill="rgb(235,47,16)" rx="2" ry="2" />
<text  x="194.70" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (527 samples, 0.11%)</title><rect x="1170.7" y="421" width="1.3" height="15.0" fill="rgb(221,226,52)" rx="2" ry="2" />
<text  x="1173.65" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::LoadedDictionary::from_system_dictionary (492 samples, 0.10%)</title><rect x="1156.4" y="453" width="1.3" height="15.0" fill="rgb(243,195,35)" rx="2" ry="2" />
<text  x="1159.44" y="463.5" ></text>
</g>
<g >
<title>core::ptr::write (120 samples, 0.03%)</title><rect x="1143.6" y="421" width="0.3" height="15.0" fill="rgb(237,97,5)" rx="2" ry="2" />
<text  x="1146.60" y="431.5" ></text>
</g>
<g >
<title>__do_global_dtors_aux_fini_array_entry (218 samples, 0.05%)</title><rect x="1187.1" y="501" width="0.6" height="15.0" fill="rgb(213,146,49)" rx="2" ry="2" />
<text  x="1190.14" y="511.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (142 samples, 0.03%)</title><rect x="215.1" y="373" width="0.4" height="15.0" fill="rgb(222,195,3)" rx="2" ry="2" />
<text  x="218.14" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (7,054 samples, 1.50%)</title><rect x="734.5" y="261" width="17.7" height="15.0" fill="rgb(205,223,42)" rx="2" ry="2" />
<text  x="737.51" y="271.5" ></text>
</g>
<g >
<title>&lt; (3,465 samples, 0.73%)</title><rect x="268.9" y="309" width="8.7" height="15.0" fill="rgb(245,4,51)" rx="2" ry="2" />
<text  x="271.93" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,536 samples, 0.54%)</title><rect x="1149.5" y="293" width="6.3" height="15.0" fill="rgb(252,201,7)" rx="2" ry="2" />
<text  x="1152.46" y="303.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (797 samples, 0.17%)</title><rect x="218.6" y="261" width="2.0" height="15.0" fill="rgb(231,92,13)" rx="2" ry="2" />
<text  x="221.58" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (102,752 samples, 21.78%)</title><rect x="658.6" y="357" width="257.1" height="15.0" fill="rgb(238,170,16)" rx="2" ry="2" />
<text  x="661.64" y="367.5" >hashbrown::map::HashMap&lt;K,V,S,A&gt;::..</text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17,563 samples, 3.72%)</title><rect x="382.1" y="373" width="44.0" height="15.0" fill="rgb(248,51,13)" rx="2" ry="2" />
<text  x="385.13" y="383.5" >&lt;cor..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (238 samples, 0.05%)</title><rect x="1114.3" y="261" width="0.6" height="15.0" fill="rgb(229,70,21)" rx="2" ry="2" />
<text  x="1117.27" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,199 samples, 0.47%)</title><rect x="1088.7" y="293" width="5.5" height="15.0" fill="rgb(212,127,48)" rx="2" ry="2" />
<text  x="1091.71" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1,150 samples, 0.24%)</title><rect x="984.4" y="421" width="2.9" height="15.0" fill="rgb(243,12,46)" rx="2" ry="2" />
<text  x="987.39" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (342 samples, 0.07%)</title><rect x="128.2" y="325" width="0.9" height="15.0" fill="rgb(238,71,39)" rx="2" ry="2" />
<text  x="131.23" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (654 samples, 0.14%)</title><rect x="209.7" y="389" width="1.6" height="15.0" fill="rgb(237,109,17)" rx="2" ry="2" />
<text  x="212.66" y="399.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (389 samples, 0.08%)</title><rect x="469.3" y="421" width="1.0" height="15.0" fill="rgb(211,39,21)" rx="2" ry="2" />
<text  x="472.34" y="431.5" ></text>
</g>
<g >
<title>_int_malloc (1,203 samples, 0.26%)</title><rect x="338.7" y="117" width="3.0" height="15.0" fill="rgb(219,96,0)" rx="2" ry="2" />
<text  x="341.73" y="127.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (153 samples, 0.03%)</title><rect x="209.3" y="405" width="0.4" height="15.0" fill="rgb(243,74,2)" rx="2" ry="2" />
<text  x="212.28" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (1,112 samples, 0.24%)</title><rect x="62.9" y="485" width="2.8" height="15.0" fill="rgb(234,216,46)" rx="2" ry="2" />
<text  x="65.91" y="495.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::join (3,696 samples, 0.78%)</title><rect x="1161.1" y="453" width="9.2" height="15.0" fill="rgb(250,212,29)" rx="2" ry="2" />
<text  x="1164.08" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9,996 samples, 2.12%)</title><rect x="1025.9" y="357" width="25.0" height="15.0" fill="rgb(233,150,8)" rx="2" ry="2" />
<text  x="1028.86" y="367.5" >h..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[sudachi::analysis::node::Node]&gt; (3,027 samples, 0.64%)</title><rect x="1148.8" y="421" width="7.6" height="15.0" fill="rgb(229,188,41)" rx="2" ry="2" />
<text  x="1151.78" y="431.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (2,083 samples, 0.44%)</title><rect x="314.8" y="85" width="5.2" height="15.0" fill="rgb(246,69,30)" rx="2" ry="2" />
<text  x="317.80" y="95.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (1,403 samples, 0.30%)</title><rect x="32.2" y="485" width="3.5" height="15.0" fill="rgb(227,67,8)" rx="2" ry="2" />
<text  x="35.23" y="495.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (2,179 samples, 0.46%)</title><rect x="186.1" y="389" width="5.5" height="15.0" fill="rgb(222,15,52)" rx="2" ry="2" />
<text  x="189.13" y="399.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::fill_word_info (40,267 samples, 8.54%)</title><rect x="253.5" y="453" width="100.7" height="15.0" fill="rgb(251,62,22)" rx="2" ry="2" />
<text  x="256.48" y="463.5" >sudachi::ana..</text>
</g>
<g >
<title>nom::sequence::tuple::{{closure}} (3,472 samples, 0.74%)</title><rect x="268.9" y="325" width="8.7" height="15.0" fill="rgb(251,78,50)" rx="2" ry="2" />
<text  x="271.91" y="335.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::replace_slow (4,630 samples, 0.98%)</title><rect x="1109.4" y="373" width="11.6" height="15.0" fill="rgb(206,14,47)" rx="2" ry="2" />
<text  x="1112.39" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::any_bit_set (2,567 samples, 0.54%)</title><rect x="895.1" y="277" width="6.4" height="15.0" fill="rgb(245,11,33)" rx="2" ry="2" />
<text  x="898.13" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (160 samples, 0.03%)</title><rect x="1156.0" y="341" width="0.4" height="15.0" fill="rgb(224,68,48)" rx="2" ry="2" />
<text  x="1158.95" y="351.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (264 samples, 0.06%)</title><rect x="302.7" y="229" width="0.6" height="15.0" fill="rgb(227,171,26)" rx="2" ry="2" />
<text  x="305.66" y="239.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (3,696 samples, 0.78%)</title><rect x="1161.1" y="437" width="9.2" height="15.0" fill="rgb(231,6,7)" rx="2" ry="2" />
<text  x="1164.08" y="447.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,865 samples, 0.40%)</title><rect x="1135.4" y="357" width="4.7" height="15.0" fill="rgb(224,178,8)" rx="2" ry="2" />
<text  x="1138.39" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (573 samples, 0.12%)</title><rect x="271.9" y="213" width="1.5" height="15.0" fill="rgb(222,55,20)" rx="2" ry="2" />
<text  x="274.95" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::utf16_string_parser (2,510 samples, 0.53%)</title><rect x="270.8" y="261" width="6.3" height="15.0" fill="rgb(232,64,0)" rx="2" ry="2" />
<text  x="273.81" y="271.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (199 samples, 0.04%)</title><rect x="386.8" y="293" width="0.5" height="15.0" fill="rgb(226,4,29)" rx="2" ry="2" />
<text  x="389.82" y="303.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (4,276 samples, 0.91%)</title><rect x="98.8" y="389" width="10.7" height="15.0" fill="rgb(215,65,36)" rx="2" ry="2" />
<text  x="101.76" y="399.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,532 samples, 0.32%)</title><rect x="1094.9" y="309" width="3.8" height="15.0" fill="rgb(251,168,8)" rx="2" ry="2" />
<text  x="1097.86" y="319.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (24,967 samples, 5.29%)</title><rect x="291.1" y="373" width="62.5" height="15.0" fill="rgb(252,131,1)" rx="2" ry="2" />
<text  x="294.14" y="383.5" >nom::s..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,120 samples, 0.24%)</title><rect x="134.7" y="373" width="2.8" height="15.0" fill="rgb(208,105,33)" rx="2" ry="2" />
<text  x="137.70" y="383.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (123 samples, 0.03%)</title><rect x="212.1" y="309" width="0.3" height="15.0" fill="rgb(211,39,30)" rx="2" ry="2" />
<text  x="215.08" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (274 samples, 0.06%)</title><rect x="128.3" y="229" width="0.7" height="15.0" fill="rgb(246,45,49)" rx="2" ry="2" />
<text  x="131.33" y="239.5" ></text>
</g>
<g >
<title>unicode_normalization::tables::qc_nfkc (2,290 samples, 0.49%)</title><rect x="1124.4" y="325" width="5.7" height="15.0" fill="rgb(218,161,53)" rx="2" ry="2" />
<text  x="1127.36" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (213 samples, 0.05%)</title><rect x="459.0" y="421" width="0.6" height="15.0" fill="rgb(226,125,52)" rx="2" ry="2" />
<text  x="462.02" y="431.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (1,682 samples, 0.36%)</title><rect x="607.1" y="405" width="4.2" height="15.0" fill="rgb(253,109,45)" rx="2" ry="2" />
<text  x="610.10" y="415.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (154 samples, 0.03%)</title><rect x="223.0" y="165" width="0.4" height="15.0" fill="rgb(207,218,47)" rx="2" ry="2" />
<text  x="226.02" y="175.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (128 samples, 0.03%)</title><rect x="1115.1" y="213" width="0.3" height="15.0" fill="rgb(217,54,35)" rx="2" ry="2" />
<text  x="1118.11" y="223.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (146 samples, 0.03%)</title><rect x="1114.5" y="213" width="0.4" height="15.0" fill="rgb(235,137,17)" rx="2" ry="2" />
<text  x="1117.50" y="223.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (126 samples, 0.03%)</title><rect x="1185.4" y="405" width="0.3" height="15.0" fill="rgb(253,190,27)" rx="2" ry="2" />
<text  x="1188.39" y="415.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (4,940 samples, 1.05%)</title><rect x="114.5" y="389" width="12.4" height="15.0" fill="rgb(224,189,34)" rx="2" ry="2" />
<text  x="117.50" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5,628 samples, 1.19%)</title><rect x="901.6" y="277" width="14.1" height="15.0" fill="rgb(242,99,6)" rx="2" ry="2" />
<text  x="904.62" y="287.5" ></text>
</g>
<g >
<title>std::io::append_to_string (1,114 samples, 0.24%)</title><rect x="66.9" y="421" width="2.8" height="15.0" fill="rgb(253,44,5)" rx="2" ry="2" />
<text  x="69.92" y="431.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::prolonged_sound_mark::ProlongedSoundMarkPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (2,015 samples, 0.43%)</title><rect x="1135.2" y="389" width="5.1" height="15.0" fill="rgb(252,28,22)" rx="2" ry="2" />
<text  x="1138.24" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (381 samples, 0.08%)</title><rect x="265.7" y="373" width="0.9" height="15.0" fill="rgb(233,171,19)" rx="2" ry="2" />
<text  x="268.68" y="383.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy (3,614 samples, 0.77%)</title><rect x="1161.1" y="421" width="9.1" height="15.0" fill="rgb(212,186,35)" rx="2" ry="2" />
<text  x="1164.14" y="431.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (181 samples, 0.04%)</title><rect x="133.7" y="325" width="0.5" height="15.0" fill="rgb(219,154,41)" rx="2" ry="2" />
<text  x="136.70" y="335.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match (1,175 samples, 0.25%)</title><rect x="169.3" y="309" width="3.0" height="15.0" fill="rgb(220,161,16)" rx="2" ry="2" />
<text  x="172.34" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (135 samples, 0.03%)</title><rect x="224.9" y="261" width="0.3" height="15.0" fill="rgb(216,163,6)" rx="2" ry="2" />
<text  x="227.90" y="271.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,538 samples, 0.75%)</title><rect x="892.7" y="293" width="8.9" height="15.0" fill="rgb(247,97,7)" rx="2" ry="2" />
<text  x="895.74" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (367 samples, 0.08%)</title><rect x="218.9" y="117" width="1.0" height="15.0" fill="rgb(253,83,18)" rx="2" ry="2" />
<text  x="221.93" y="127.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (332 samples, 0.07%)</title><rect x="268.0" y="309" width="0.8" height="15.0" fill="rgb(252,90,18)" rx="2" ry="2" />
<text  x="270.98" y="319.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,167 samples, 0.25%)</title><rect x="221.6" y="325" width="2.9" height="15.0" fill="rgb(243,72,47)" rx="2" ry="2" />
<text  x="224.57" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (173 samples, 0.04%)</title><rect x="491.1" y="341" width="0.5" height="15.0" fill="rgb(234,160,5)" rx="2" ry="2" />
<text  x="494.14" y="351.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_at_byte (461 samples, 0.10%)</title><rect x="438.0" y="437" width="1.2" height="15.0" fill="rgb(229,196,0)" rx="2" ry="2" />
<text  x="441.02" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (694 samples, 0.15%)</title><rect x="206.3" y="421" width="1.8" height="15.0" fill="rgb(239,223,49)" rx="2" ry="2" />
<text  x="209.33" y="431.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (130 samples, 0.03%)</title><rect x="11.4" y="485" width="0.3" height="15.0" fill="rgb(244,60,27)" rx="2" ry="2" />
<text  x="14.42" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,235 samples, 0.47%)</title><rect x="235.3" y="357" width="5.6" height="15.0" fill="rgb(252,34,3)" rx="2" ry="2" />
<text  x="238.30" y="367.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,844 samples, 0.60%)</title><rect x="590.0" y="405" width="7.1" height="15.0" fill="rgb(213,30,7)" rx="2" ry="2" />
<text  x="593.03" y="415.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (771 samples, 0.16%)</title><rect x="467.4" y="405" width="1.9" height="15.0" fill="rgb(223,195,38)" rx="2" ry="2" />
<text  x="470.41" y="415.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (2,168 samples, 0.46%)</title><rect x="162.3" y="229" width="5.4" height="15.0" fill="rgb(219,86,1)" rx="2" ry="2" />
<text  x="165.31" y="239.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1,025 samples, 0.22%)</title><rect x="1034.6" y="261" width="2.6" height="15.0" fill="rgb(220,117,29)" rx="2" ry="2" />
<text  x="1037.63" y="271.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (190 samples, 0.04%)</title><rect x="1061.9" y="325" width="0.5" height="15.0" fill="rgb(246,165,43)" rx="2" ry="2" />
<text  x="1064.95" y="335.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (573 samples, 0.12%)</title><rect x="352.0" y="309" width="1.4" height="15.0" fill="rgb(218,203,13)" rx="2" ry="2" />
<text  x="354.97" y="319.5" ></text>
</g>
<g >
<title>core::ptr::swap (851 samples, 0.18%)</title><rect x="251.2" y="421" width="2.1" height="15.0" fill="rgb(205,173,36)" rx="2" ry="2" />
<text  x="254.18" y="431.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad (352 samples, 0.07%)</title><rect x="59.7" y="485" width="0.9" height="15.0" fill="rgb(211,63,6)" rx="2" ry="2" />
<text  x="62.70" y="495.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (483 samples, 0.10%)</title><rect x="255.9" y="421" width="1.2" height="15.0" fill="rgb(230,71,50)" rx="2" ry="2" />
<text  x="258.88" y="431.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,913 samples, 0.41%)</title><rect x="590.0" y="389" width="4.8" height="15.0" fill="rgb(219,146,1)" rx="2" ry="2" />
<text  x="593.03" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1,073 samples, 0.23%)</title><rect x="1166.8" y="389" width="2.7" height="15.0" fill="rgb(211,6,50)" rx="2" ry="2" />
<text  x="1169.78" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (145 samples, 0.03%)</title><rect x="518.7" y="261" width="0.4" height="15.0" fill="rgb(218,63,11)" rx="2" ry="2" />
<text  x="521.75" y="271.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (123 samples, 0.03%)</title><rect x="43.8" y="485" width="0.4" height="15.0" fill="rgb(247,25,6)" rx="2" ry="2" />
<text  x="46.85" y="495.5" ></text>
</g>
<g >
<title>nom::combinator::cond::{{closure}} (590 samples, 0.13%)</title><rect x="349.5" y="293" width="1.5" height="15.0" fill="rgb(234,29,12)" rx="2" ry="2" />
<text  x="352.49" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (524 samples, 0.11%)</title><rect x="1040.2" y="293" width="1.4" height="15.0" fill="rgb(238,68,40)" rx="2" ry="2" />
<text  x="1043.25" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (281 samples, 0.06%)</title><rect x="268.0" y="213" width="0.7" height="15.0" fill="rgb(244,141,36)" rx="2" ry="2" />
<text  x="270.98" y="223.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (300 samples, 0.06%)</title><rect x="174.5" y="261" width="0.7" height="15.0" fill="rgb(245,71,22)" rx="2" ry="2" />
<text  x="177.45" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free (519 samples, 0.11%)</title><rect x="21.3" y="485" width="1.3" height="15.0" fill="rgb(253,72,15)" rx="2" ry="2" />
<text  x="24.32" y="495.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::ok::{{closure}} (1,780 samples, 0.38%)</title><rect x="186.2" y="309" width="4.4" height="15.0" fill="rgb(220,132,39)" rx="2" ry="2" />
<text  x="189.15" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (539 samples, 0.11%)</title><rect x="1050.9" y="277" width="1.3" height="15.0" fill="rgb(251,116,18)" rx="2" ry="2" />
<text  x="1053.87" y="287.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (289 samples, 0.06%)</title><rect x="1066.9" y="293" width="0.8" height="15.0" fill="rgb(228,61,29)" rx="2" ry="2" />
<text  x="1069.93" y="303.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_state (495 samples, 0.10%)</title><rect x="179.5" y="277" width="1.3" height="15.0" fill="rgb(244,28,4)" rx="2" ry="2" />
<text  x="182.54" y="287.5" ></text>
</g>
<g >
<title>core::ptr::write (171 samples, 0.04%)</title><rect x="133.3" y="341" width="0.4" height="15.0" fill="rgb(224,213,9)" rx="2" ry="2" />
<text  x="136.27" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::TrieEntryIter::get (7,898 samples, 1.67%)</title><rect x="396.9" y="309" width="19.7" height="15.0" fill="rgb(224,220,29)" rx="2" ry="2" />
<text  x="399.89" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,190 samples, 0.68%)</title><rect x="269.3" y="293" width="8.0" height="15.0" fill="rgb(249,212,24)" rx="2" ry="2" />
<text  x="272.27" y="303.5" ></text>
</g>
<g >
<title>_int_free (153 samples, 0.03%)</title><rect x="221.0" y="181" width="0.4" height="15.0" fill="rgb(223,147,28)" rx="2" ry="2" />
<text  x="223.98" y="191.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (255 samples, 0.05%)</title><rect x="1103.2" y="357" width="0.6" height="15.0" fill="rgb(237,139,22)" rx="2" ry="2" />
<text  x="1106.20" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (163 samples, 0.03%)</title><rect x="27.9" y="453" width="0.4" height="15.0" fill="rgb(249,158,21)" rx="2" ry="2" />
<text  x="30.92" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (725 samples, 0.15%)</title><rect x="246.8" y="341" width="1.8" height="15.0" fill="rgb(230,56,53)" rx="2" ry="2" />
<text  x="249.80" y="351.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::trace_stack (306 samples, 0.06%)</title><rect x="108.7" y="373" width="0.8" height="15.0" fill="rgb(208,41,9)" rx="2" ry="2" />
<text  x="111.69" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,027 samples, 0.22%)</title><rect x="1082.0" y="293" width="2.6" height="15.0" fill="rgb(247,160,26)" rx="2" ry="2" />
<text  x="1084.98" y="303.5" ></text>
</g>
<g >
<title>core::ptr::write (129 samples, 0.03%)</title><rect x="1157.3" y="309" width="0.4" height="15.0" fill="rgb(214,119,46)" rx="2" ry="2" />
<text  x="1160.34" y="319.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (165 samples, 0.03%)</title><rect x="1067.7" y="325" width="0.4" height="15.0" fill="rgb(246,50,23)" rx="2" ry="2" />
<text  x="1070.66" y="335.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new (1,008 samples, 0.21%)</title><rect x="1006.2" y="437" width="2.6" height="15.0" fill="rgb(212,146,18)" rx="2" ry="2" />
<text  x="1009.24" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (163 samples, 0.03%)</title><rect x="27.9" y="469" width="0.4" height="15.0" fill="rgb(217,43,27)" rx="2" ry="2" />
<text  x="30.92" y="479.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (471 samples, 0.10%)</title><rect x="257.9" y="405" width="1.2" height="15.0" fill="rgb(211,56,40)" rx="2" ry="2" />
<text  x="260.95" y="415.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (177 samples, 0.04%)</title><rect x="1189.2" y="389" width="0.5" height="15.0" fill="rgb(206,181,9)" rx="2" ry="2" />
<text  x="1192.23" y="399.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (1,985 samples, 0.42%)</title><rect x="978.2" y="341" width="5.0" height="15.0" fill="rgb(226,24,37)" rx="2" ry="2" />
<text  x="981.24" y="351.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (2,128 samples, 0.45%)</title><rect x="1041.6" y="309" width="5.3" height="15.0" fill="rgb(234,169,10)" rx="2" ry="2" />
<text  x="1044.56" y="319.5" ></text>
</g>
<g >
<title>[[stack]] (9,447 samples, 2.00%)</title><rect x="17.7" y="501" width="23.6" height="15.0" fill="rgb(234,106,43)" rx="2" ry="2" />
<text  x="20.68" y="511.5" >[..</text>
</g>
<g >
<title>__rdl_alloc (210 samples, 0.04%)</title><rect x="534.5" y="325" width="0.5" height="15.0" fill="rgb(240,60,4)" rx="2" ry="2" />
<text  x="537.52" y="335.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (186 samples, 0.04%)</title><rect x="1094.2" y="277" width="0.5" height="15.0" fill="rgb(253,221,51)" rx="2" ry="2" />
<text  x="1097.21" y="287.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::push (2,017 samples, 0.43%)</title><rect x="109.5" y="389" width="5.0" height="15.0" fill="rgb(208,132,16)" rx="2" ry="2" />
<text  x="112.45" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (546 samples, 0.12%)</title><rect x="273.7" y="101" width="1.4" height="15.0" fill="rgb(208,61,36)" rx="2" ry="2" />
<text  x="276.71" y="111.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (855 samples, 0.18%)</title><rect x="1050.9" y="373" width="2.1" height="15.0" fill="rgb(224,9,33)" rx="2" ry="2" />
<text  x="1053.87" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (456 samples, 0.10%)</title><rect x="206.6" y="261" width="1.1" height="15.0" fill="rgb(233,10,54)" rx="2" ry="2" />
<text  x="209.55" y="271.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (204 samples, 0.04%)</title><rect x="1142.7" y="389" width="0.5" height="15.0" fill="rgb(235,39,45)" rx="2" ry="2" />
<text  x="1145.68" y="399.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (102,752 samples, 21.78%)</title><rect x="658.6" y="389" width="257.1" height="15.0" fill="rgb(208,80,15)" rx="2" ry="2" />
<text  x="661.64" y="399.5" >std::collections::hash::map::HashM..</text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl::{{closure}} (590 samples, 0.13%)</title><rect x="1105.3" y="357" width="1.5" height="15.0" fill="rgb(241,63,22)" rx="2" ry="2" />
<text  x="1108.30" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (19,271 samples, 4.09%)</title><rect x="489.2" y="405" width="48.3" height="15.0" fill="rgb(246,84,42)" rx="2" ry="2" />
<text  x="492.25" y="415.5" >allo..</text>
</g>
<g >
<title>__GI___libc_malloc (1,010 samples, 0.21%)</title><rect x="984.5" y="325" width="2.5" height="15.0" fill="rgb(249,199,43)" rx="2" ry="2" />
<text  x="987.50" y="335.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::standard_find_at_imp (390 samples, 0.08%)</title><rect x="1110.9" y="277" width="1.0" height="15.0" fill="rgb(228,4,11)" rx="2" ry="2" />
<text  x="1113.91" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,083 samples, 0.23%)</title><rect x="984.4" y="405" width="2.7" height="15.0" fill="rgb(231,93,4)" rx="2" ry="2" />
<text  x="987.40" y="415.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (737 samples, 0.16%)</title><rect x="1179.6" y="357" width="1.8" height="15.0" fill="rgb(226,161,33)" rx="2" ry="2" />
<text  x="1182.55" y="367.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (321 samples, 0.07%)</title><rect x="30.0" y="485" width="0.8" height="15.0" fill="rgb(227,76,9)" rx="2" ry="2" />
<text  x="33.00" y="495.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::new (8,830 samples, 1.87%)</title><rect x="984.2" y="437" width="22.0" height="15.0" fill="rgb(218,58,2)" rx="2" ry="2" />
<text  x="987.15" y="447.5" >s..</text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (353 samples, 0.07%)</title><rect x="96.1" y="341" width="0.8" height="15.0" fill="rgb(207,96,34)" rx="2" ry="2" />
<text  x="99.06" y="351.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (514 samples, 0.11%)</title><rect x="1066.9" y="373" width="1.3" height="15.0" fill="rgb(212,85,30)" rx="2" ry="2" />
<text  x="1069.93" y="383.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_uppercase (341 samples, 0.07%)</title><rect x="1112.1" y="357" width="0.9" height="15.0" fill="rgb(205,218,7)" rx="2" ry="2" />
<text  x="1115.11" y="367.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find (3,927 samples, 0.83%)</title><rect x="137.7" y="389" width="9.8" height="15.0" fill="rgb(221,142,44)" rx="2" ry="2" />
<text  x="140.69" y="399.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::TeddySlim2Mask128::find_at (1,224 samples, 0.26%)</title><rect x="1136.6" y="181" width="3.0" height="15.0" fill="rgb(249,26,20)" rx="2" ry="2" />
<text  x="1139.55" y="191.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::get_surface (158 samples, 0.03%)</title><rect x="1185.3" y="437" width="0.4" height="15.0" fill="rgb(245,195,14)" rx="2" ry="2" />
<text  x="1188.31" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (163 samples, 0.03%)</title><rect x="460.3" y="373" width="0.4" height="15.0" fill="rgb(228,36,53)" rx="2" ry="2" />
<text  x="463.31" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::word_info_parser (3,936 samples, 0.83%)</title><rect x="267.8" y="373" width="9.8" height="15.0" fill="rgb(242,176,41)" rx="2" ry="2" />
<text  x="270.75" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1,044 samples, 0.22%)</title><rect x="1038.9" y="325" width="2.7" height="15.0" fill="rgb(224,52,10)" rx="2" ry="2" />
<text  x="1041.95" y="335.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (122 samples, 0.03%)</title><rect x="207.7" y="325" width="0.3" height="15.0" fill="rgb(214,177,27)" rx="2" ry="2" />
<text  x="210.69" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::character_category::CharacterCategory::get_category_types (895 samples, 0.19%)</title><rect x="1144.2" y="437" width="2.2" height="15.0" fill="rgb(219,133,29)" rx="2" ry="2" />
<text  x="1147.18" y="447.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::u8_class (204 samples, 0.04%)</title><rect x="176.3" y="229" width="0.5" height="15.0" fill="rgb(244,28,32)" rx="2" ry="2" />
<text  x="179.33" y="239.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,026 samples, 0.22%)</title><rect x="1131.7" y="293" width="2.6" height="15.0" fill="rgb(236,202,33)" rx="2" ry="2" />
<text  x="1134.73" y="303.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,083 samples, 0.23%)</title><rect x="988.0" y="341" width="2.7" height="15.0" fill="rgb(246,69,16)" rx="2" ry="2" />
<text  x="990.97" y="351.5" ></text>
</g>
<g >
<title>_int_malloc (971 samples, 0.21%)</title><rect x="984.6" y="309" width="2.4" height="15.0" fill="rgb(232,147,50)" rx="2" ry="2" />
<text  x="987.60" y="319.5" ></text>
</g>
<g >
<title>core::cmp::max (283 samples, 0.06%)</title><rect x="536.0" y="341" width="0.7" height="15.0" fill="rgb(233,81,43)" rx="2" ry="2" />
<text  x="538.99" y="351.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (206 samples, 0.04%)</title><rect x="1115.7" y="229" width="0.5" height="15.0" fill="rgb(234,22,5)" rx="2" ry="2" />
<text  x="1118.67" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (17,538 samples, 3.72%)</title><rect x="491.6" y="341" width="43.8" height="15.0" fill="rgb(215,145,48)" rx="2" ry="2" />
<text  x="494.57" y="351.5" >allo..</text>
</g>
<g >
<title>nom::number::complete::le_i16 (177 samples, 0.04%)</title><rect x="1189.2" y="421" width="0.5" height="15.0" fill="rgb(245,193,4)" rx="2" ry="2" />
<text  x="1192.23" y="431.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (209 samples, 0.04%)</title><rect x="1085.6" y="229" width="0.5" height="15.0" fill="rgb(233,6,24)" rx="2" ry="2" />
<text  x="1088.56" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,237 samples, 0.47%)</title><rect x="283.5" y="277" width="5.6" height="15.0" fill="rgb(237,59,30)" rx="2" ry="2" />
<text  x="286.53" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup (311 samples, 0.07%)</title><rect x="433.3" y="309" width="0.8" height="15.0" fill="rgb(210,190,36)" rx="2" ry="2" />
<text  x="436.31" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::swap_result (281 samples, 0.06%)</title><rect x="201.9" y="453" width="0.8" height="15.0" fill="rgb(216,209,2)" rx="2" ry="2" />
<text  x="204.95" y="463.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::lookup (146 samples, 0.03%)</title><rect x="1070.5" y="437" width="0.3" height="15.0" fill="rgb(234,28,35)" rx="2" ry="2" />
<text  x="1073.46" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_right_id (2,316 samples, 0.49%)</title><rect x="1062.4" y="405" width="5.8" height="15.0" fill="rgb(252,37,23)" rx="2" ry="2" />
<text  x="1065.42" y="415.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (171 samples, 0.04%)</title><rect x="1049.7" y="229" width="0.4" height="15.0" fill="rgb(238,113,43)" rx="2" ry="2" />
<text  x="1052.68" y="239.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (375 samples, 0.08%)</title><rect x="1085.2" y="277" width="1.0" height="15.0" fill="rgb(220,11,19)" rx="2" ry="2" />
<text  x="1088.22" y="287.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_try_fold::{{closure}} (476 samples, 0.10%)</title><rect x="1165.6" y="341" width="1.2" height="15.0" fill="rgb(241,2,13)" rx="2" ry="2" />
<text  x="1168.59" y="351.5" ></text>
</g>
<g >
<title>nom::sequence::tuple::{{closure}} (24,927 samples, 5.28%)</title><rect x="291.2" y="341" width="62.4" height="15.0" fill="rgb(235,10,28)" rx="2" ry="2" />
<text  x="294.24" y="351.5" >nom::s..</text>
</g>
<g >
<title>alloc::alloc::dealloc (278 samples, 0.06%)</title><rect x="220.7" y="213" width="0.7" height="15.0" fill="rgb(218,79,34)" rx="2" ry="2" />
<text  x="223.70" y="223.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (271 samples, 0.06%)</title><rect x="1145.7" y="373" width="0.6" height="15.0" fill="rgb(236,38,35)" rx="2" ry="2" />
<text  x="1148.67" y="383.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,531 samples, 0.54%)</title><rect x="971.9" y="277" width="6.3" height="15.0" fill="rgb(214,98,27)" rx="2" ry="2" />
<text  x="974.91" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (381 samples, 0.08%)</title><rect x="265.7" y="357" width="0.9" height="15.0" fill="rgb(235,27,31)" rx="2" ry="2" />
<text  x="268.68" y="367.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (10,422 samples, 2.21%)</title><rect x="1105.1" y="389" width="26.1" height="15.0" fill="rgb(209,94,38)" rx="2" ry="2" />
<text  x="1108.14" y="399.5" >&lt;..</text>
</g>
<g >
<title>fancy_regex::vm::State::stack_push (2,917 samples, 0.62%)</title><rect x="126.9" y="389" width="7.3" height="15.0" fill="rgb(249,34,40)" rx="2" ry="2" />
<text  x="129.86" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,501 samples, 0.74%)</title><rect x="323.9" y="165" width="8.8" height="15.0" fill="rgb(227,182,13)" rx="2" ry="2" />
<text  x="326.92" y="175.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (183 samples, 0.04%)</title><rect x="302.9" y="197" width="0.4" height="15.0" fill="rgb(226,44,53)" rx="2" ry="2" />
<text  x="305.86" y="207.5" ></text>
</g>
<g >
<title>alloc::string::String::push (190 samples, 0.04%)</title><rect x="59.2" y="485" width="0.4" height="15.0" fill="rgb(231,4,21)" rx="2" ry="2" />
<text  x="62.15" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,083 samples, 0.44%)</title><rect x="314.8" y="101" width="5.2" height="15.0" fill="rgb(229,179,31)" rx="2" ry="2" />
<text  x="317.80" y="111.5" ></text>
</g>
<g >
<title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,148 samples, 0.24%)</title><rect x="364.3" y="437" width="2.9" height="15.0" fill="rgb(250,132,21)" rx="2" ry="2" />
<text  x="367.30" y="447.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (476 samples, 0.10%)</title><rect x="1156.5" y="357" width="1.2" height="15.0" fill="rgb(220,105,34)" rx="2" ry="2" />
<text  x="1159.47" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free (286 samples, 0.06%)</title><rect x="269.7" y="245" width="0.7" height="15.0" fill="rgb(211,15,4)" rx="2" ry="2" />
<text  x="272.68" y="255.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state (870 samples, 0.18%)</title><rect x="1107.1" y="293" width="2.2" height="15.0" fill="rgb(246,176,7)" rx="2" ry="2" />
<text  x="1110.15" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (9,702 samples, 2.06%)</title><rect x="494.3" y="277" width="24.3" height="15.0" fill="rgb(254,229,2)" rx="2" ry="2" />
<text  x="497.31" y="287.5" >_..</text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (152 samples, 0.03%)</title><rect x="208.4" y="389" width="0.4" height="15.0" fill="rgb(220,105,13)" rx="2" ry="2" />
<text  x="211.40" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (596 samples, 0.13%)</title><rect x="273.7" y="197" width="1.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="276.67" y="207.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (378,174 samples, 80.18%)</title><rect x="202.7" y="469" width="946.0" height="15.0" fill="rgb(206,179,2)" rx="2" ry="2" />
<text  x="205.67" y="479.5" >sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize</text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (126 samples, 0.03%)</title><rect x="212.1" y="341" width="0.3" height="15.0" fill="rgb(209,116,19)" rx="2" ry="2" />
<text  x="215.08" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt; (217 samples, 0.05%)</title><rect x="225.6" y="453" width="0.5" height="15.0" fill="rgb(243,165,25)" rx="2" ry="2" />
<text  x="228.60" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (2,357 samples, 0.50%)</title><rect x="229.4" y="341" width="5.9" height="15.0" fill="rgb(206,196,17)" rx="2" ry="2" />
<text  x="232.40" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (7,968 samples, 1.69%)</title><rect x="1027.0" y="341" width="19.9" height="15.0" fill="rgb(225,140,13)" rx="2" ry="2" />
<text  x="1029.95" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (300 samples, 0.06%)</title><rect x="220.7" y="261" width="0.7" height="15.0" fill="rgb(211,32,11)" rx="2" ry="2" />
<text  x="223.67" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (281 samples, 0.06%)</title><rect x="268.0" y="229" width="0.7" height="15.0" fill="rgb(210,5,40)" rx="2" ry="2" />
<text  x="270.98" y="239.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1,963 samples, 0.42%)</title><rect x="910.8" y="213" width="4.9" height="15.0" fill="rgb(236,190,51)" rx="2" ry="2" />
<text  x="913.78" y="223.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (290 samples, 0.06%)</title><rect x="128.3" y="261" width="0.7" height="15.0" fill="rgb(233,171,5)" rx="2" ry="2" />
<text  x="131.31" y="271.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (151 samples, 0.03%)</title><rect x="17.7" y="485" width="0.4" height="15.0" fill="rgb(243,64,48)" rx="2" ry="2" />
<text  x="20.73" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (640 samples, 0.14%)</title><rect x="206.5" y="405" width="1.6" height="15.0" fill="rgb(216,53,50)" rx="2" ry="2" />
<text  x="209.46" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (348 samples, 0.07%)</title><rect x="128.2" y="341" width="0.9" height="15.0" fill="rgb(218,19,25)" rx="2" ry="2" />
<text  x="131.21" y="351.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (476 samples, 0.10%)</title><rect x="1165.6" y="293" width="1.2" height="15.0" fill="rgb(242,100,3)" rx="2" ry="2" />
<text  x="1168.59" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (148 samples, 0.03%)</title><rect x="22.9" y="485" width="0.4" height="15.0" fill="rgb(209,10,6)" rx="2" ry="2" />
<text  x="25.92" y="495.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (2,161 samples, 0.46%)</title><rect x="1056.3" y="293" width="5.4" height="15.0" fill="rgb(253,10,25)" rx="2" ry="2" />
<text  x="1059.28" y="303.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (172 samples, 0.04%)</title><rect x="10.4" y="501" width="0.5" height="15.0" fill="rgb(217,81,2)" rx="2" ry="2" />
<text  x="13.44" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (248 samples, 0.05%)</title><rect x="272.3" y="37" width="0.6" height="15.0" fill="rgb(209,59,35)" rx="2" ry="2" />
<text  x="275.32" y="47.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (238 samples, 0.05%)</title><rect x="1114.3" y="229" width="0.6" height="15.0" fill="rgb(230,217,5)" rx="2" ry="2" />
<text  x="1117.27" y="239.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::rewrite_input (15,060 samples, 3.19%)</title><rect x="1102.6" y="453" width="37.7" height="15.0" fill="rgb(229,203,42)" rx="2" ry="2" />
<text  x="1105.61" y="463.5" >sud..</text>
</g>
<g >
<title>core::iter::adapters::map::map_fold::{{closure}} (1,151 samples, 0.24%)</title><rect x="221.6" y="277" width="2.9" height="15.0" fill="rgb(249,194,30)" rx="2" ry="2" />
<text  x="224.61" y="287.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (140 samples, 0.03%)</title><rect x="122.8" y="341" width="0.3" height="15.0" fill="rgb(237,156,11)" rx="2" ry="2" />
<text  x="125.76" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (333 samples, 0.07%)</title><rect x="275.7" y="197" width="0.9" height="15.0" fill="rgb(210,94,38)" rx="2" ry="2" />
<text  x="278.72" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (2,383 samples, 0.51%)</title><rect x="314.3" y="117" width="6.0" height="15.0" fill="rgb(227,215,45)" rx="2" ry="2" />
<text  x="317.33" y="127.5" ></text>
</g>
<g >
<title>aho_corasick::dfa::DFA&lt;S&gt;::find_at_no_state (886 samples, 0.19%)</title><rect x="1107.1" y="325" width="2.2" height="15.0" fill="rgb(208,229,3)" rx="2" ry="2" />
<text  x="1110.11" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (163 samples, 0.03%)</title><rect x="460.3" y="357" width="0.4" height="15.0" fill="rgb(225,97,27)" rx="2" ry="2" />
<text  x="463.31" y="367.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::is_empty (301 samples, 0.06%)</title><rect x="159.1" y="261" width="0.8" height="15.0" fill="rgb(239,146,53)" rx="2" ry="2" />
<text  x="162.10" y="271.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (10,040 samples, 2.13%)</title><rect x="494.1" y="293" width="25.1" height="15.0" fill="rgb(209,48,13)" rx="2" ry="2" />
<text  x="497.05" y="303.5" >a..</text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::append (452 samples, 0.10%)</title><rect x="214.7" y="421" width="1.2" height="15.0" fill="rgb(213,6,2)" rx="2" ry="2" />
<text  x="217.73" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18,859 samples, 4.00%)</title><rect x="489.8" y="357" width="47.2" height="15.0" fill="rgb(209,225,29)" rx="2" ry="2" />
<text  x="492.80" y="367.5" >allo..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (230 samples, 0.05%)</title><rect x="105.4" y="357" width="0.5" height="15.0" fill="rgb(230,148,27)" rx="2" ry="2" />
<text  x="108.37" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (396 samples, 0.08%)</title><rect x="272.1" y="117" width="1.0" height="15.0" fill="rgb(237,4,8)" rx="2" ry="2" />
<text  x="275.10" y="127.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (1,471 samples, 0.31%)</title><rect x="231.4" y="213" width="3.7" height="15.0" fill="rgb(215,137,43)" rx="2" ry="2" />
<text  x="234.37" y="223.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,371 samples, 0.29%)</title><rect x="377.7" y="389" width="3.4" height="15.0" fill="rgb(214,109,17)" rx="2" ry="2" />
<text  x="380.68" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (654 samples, 0.14%)</title><rect x="209.7" y="405" width="1.6" height="15.0" fill="rgb(212,148,23)" rx="2" ry="2" />
<text  x="212.66" y="415.5" ></text>
</g>
<g >
<title>malloc_consolidate (133 samples, 0.03%)</title><rect x="239.5" y="277" width="0.3" height="15.0" fill="rgb(236,51,40)" rx="2" ry="2" />
<text  x="242.47" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::pool::PoolGuard&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt; (208 samples, 0.04%)</title><rect x="182.1" y="309" width="0.5" height="15.0" fill="rgb(210,222,33)" rx="2" ry="2" />
<text  x="185.12" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (88,760 samples, 18.82%)</title><rect x="665.4" y="341" width="222.1" height="15.0" fill="rgb(207,227,14)" rx="2" ry="2" />
<text  x="668.42" y="351.5" >hashbrown::map::make_hash</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (120 samples, 0.03%)</title><rect x="491.3" y="325" width="0.3" height="15.0" fill="rgb(221,149,32)" rx="2" ry="2" />
<text  x="494.27" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (142 samples, 0.03%)</title><rect x="132.4" y="325" width="0.4" height="15.0" fill="rgb(247,198,0)" rx="2" ry="2" />
<text  x="135.40" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (289 samples, 0.06%)</title><rect x="133.0" y="357" width="0.7" height="15.0" fill="rgb(228,149,21)" rx="2" ry="2" />
<text  x="135.98" y="367.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify_bucket (819 samples, 0.17%)</title><rect x="1137.0" y="133" width="2.0" height="15.0" fill="rgb(208,59,3)" rx="2" ry="2" />
<text  x="1139.96" y="143.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::replace_fast (963 samples, 0.20%)</title><rect x="1107.0" y="373" width="2.4" height="15.0" fill="rgb(253,131,41)" rx="2" ry="2" />
<text  x="1109.98" y="383.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (21,372 samples, 4.53%)</title><rect x="296.0" y="293" width="53.5" height="15.0" fill="rgb(207,226,43)" rx="2" ry="2" />
<text  x="299.02" y="303.5" >core:..</text>
</g>
<g >
<title>sudachi::sentence_detector::SentenceDetector::get_eos (52,114 samples, 11.05%)</title><rect x="70.0" y="453" width="130.4" height="15.0" fill="rgb(253,226,42)" rx="2" ry="2" />
<text  x="72.99" y="463.5" >sudachi::sentenc..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (190 samples, 0.04%)</title><rect x="989.1" y="229" width="0.5" height="15.0" fill="rgb(233,112,0)" rx="2" ry="2" />
<text  x="992.09" y="239.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::TrieEntry::new (176 samples, 0.04%)</title><rect x="39.2" y="485" width="0.4" height="15.0" fill="rgb(223,208,37)" rx="2" ry="2" />
<text  x="42.20" y="495.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4,249 samples, 0.90%)</title><rect x="1028.3" y="325" width="10.6" height="15.0" fill="rgb(240,79,36)" rx="2" ry="2" />
<text  x="1031.32" y="335.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,539 samples, 0.33%)</title><rect x="883.6" y="229" width="3.8" height="15.0" fill="rgb(215,34,47)" rx="2" ry="2" />
<text  x="886.58" y="239.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,571 samples, 0.33%)</title><rect x="1094.9" y="357" width="3.9" height="15.0" fill="rgb(208,106,0)" rx="2" ry="2" />
<text  x="1097.86" y="367.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (125 samples, 0.03%)</title><rect x="332.7" y="245" width="0.3" height="15.0" fill="rgb(249,189,26)" rx="2" ry="2" />
<text  x="335.68" y="255.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (163 samples, 0.03%)</title><rect x="460.3" y="389" width="0.4" height="15.0" fill="rgb(233,2,0)" rx="2" ry="2" />
<text  x="463.31" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,199 samples, 0.47%)</title><rect x="1088.7" y="245" width="5.5" height="15.0" fill="rgb(211,141,43)" rx="2" ry="2" />
<text  x="1091.71" y="255.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (177 samples, 0.04%)</title><rect x="1189.2" y="341" width="0.5" height="15.0" fill="rgb(240,101,13)" rx="2" ry="2" />
<text  x="1192.23" y="351.5" ></text>
</g>
<g >
<title>_int_realloc (251 samples, 0.05%)</title><rect x="128.4" y="213" width="0.6" height="15.0" fill="rgb(239,190,52)" rx="2" ry="2" />
<text  x="131.39" y="223.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (138 samples, 0.03%)</title><rect x="507.5" y="229" width="0.4" height="15.0" fill="rgb(228,50,8)" rx="2" ry="2" />
<text  x="510.51" y="239.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite (123 samples, 0.03%)</title><rect x="40.1" y="485" width="0.4" height="15.0" fill="rgb(214,75,42)" rx="2" ry="2" />
<text  x="43.14" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (280 samples, 0.06%)</title><rect x="212.6" y="309" width="0.7" height="15.0" fill="rgb(230,121,5)" rx="2" ry="2" />
<text  x="215.55" y="319.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (200 samples, 0.04%)</title><rect x="243.9" y="421" width="0.5" height="15.0" fill="rgb(219,81,10)" rx="2" ry="2" />
<text  x="246.87" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,471 samples, 0.31%)</title><rect x="231.4" y="229" width="3.7" height="15.0" fill="rgb(250,30,37)" rx="2" ry="2" />
<text  x="234.37" y="239.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (621 samples, 0.13%)</title><rect x="206.5" y="373" width="1.6" height="15.0" fill="rgb(246,190,22)" rx="2" ry="2" />
<text  x="209.51" y="383.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (204 samples, 0.04%)</title><rect x="1142.7" y="405" width="0.5" height="15.0" fill="rgb(215,161,45)" rx="2" ry="2" />
<text  x="1145.68" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (156 samples, 0.03%)</title><rect x="1148.2" y="421" width="0.4" height="15.0" fill="rgb(253,75,7)" rx="2" ry="2" />
<text  x="1151.23" y="431.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::exec_nfa (692 samples, 0.15%)</title><rect x="194.7" y="325" width="1.7" height="15.0" fill="rgb(251,121,10)" rx="2" ry="2" />
<text  x="197.66" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (235 samples, 0.05%)</title><rect x="212.6" y="261" width="0.5" height="15.0" fill="rgb(245,157,6)" rx="2" ry="2" />
<text  x="215.55" y="271.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (476 samples, 0.10%)</title><rect x="1165.6" y="309" width="1.2" height="15.0" fill="rgb(235,162,49)" rx="2" ry="2" />
<text  x="1168.59" y="319.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (913 samples, 0.19%)</title><rect x="434.4" y="405" width="2.3" height="15.0" fill="rgb(227,162,22)" rx="2" ry="2" />
<text  x="437.43" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5,628 samples, 1.19%)</title><rect x="901.6" y="293" width="14.1" height="15.0" fill="rgb(253,108,22)" rx="2" ry="2" />
<text  x="904.62" y="303.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (171 samples, 0.04%)</title><rect x="1049.7" y="245" width="0.4" height="15.0" fill="rgb(215,205,30)" rx="2" ry="2" />
<text  x="1052.68" y="255.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (386 samples, 0.08%)</title><rect x="433.1" y="341" width="1.0" height="15.0" fill="rgb(220,15,34)" rx="2" ry="2" />
<text  x="436.12" y="351.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::quick_check (1,733 samples, 0.37%)</title><rect x="1116.6" y="341" width="4.4" height="15.0" fill="rgb(220,67,38)" rx="2" ry="2" />
<text  x="1119.64" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (281 samples, 0.06%)</title><rect x="268.0" y="245" width="0.7" height="15.0" fill="rgb(223,215,13)" rx="2" ry="2" />
<text  x="270.98" y="255.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (145 samples, 0.03%)</title><rect x="1109.6" y="341" width="0.4" height="15.0" fill="rgb(208,70,25)" rx="2" ry="2" />
<text  x="1112.64" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::DictionaryLoader::read_system_dictionary (489 samples, 0.10%)</title><rect x="1156.4" y="437" width="1.3" height="15.0" fill="rgb(216,83,53)" rx="2" ry="2" />
<text  x="1159.44" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,278 samples, 0.48%)</title><rect x="336.6" y="197" width="5.7" height="15.0" fill="rgb(208,92,6)" rx="2" ry="2" />
<text  x="339.64" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (122 samples, 0.03%)</title><rect x="1147.1" y="421" width="0.3" height="15.0" fill="rgb(244,153,12)" rx="2" ry="2" />
<text  x="1150.12" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (1,558 samples, 0.33%)</title><rect x="987.3" y="373" width="3.9" height="15.0" fill="rgb(234,124,46)" rx="2" ry="2" />
<text  x="990.34" y="383.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (126 samples, 0.03%)</title><rect x="1185.4" y="389" width="0.3" height="15.0" fill="rgb(226,213,43)" rx="2" ry="2" />
<text  x="1188.39" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,429 samples, 0.51%)</title><rect x="336.3" y="245" width="6.0" height="15.0" fill="rgb(245,193,1)" rx="2" ry="2" />
<text  x="339.26" y="255.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,532 samples, 0.32%)</title><rect x="1094.9" y="325" width="3.8" height="15.0" fill="rgb(237,122,28)" rx="2" ry="2" />
<text  x="1097.86" y="335.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (155 samples, 0.03%)</title><rect x="276.7" y="213" width="0.4" height="15.0" fill="rgb(254,103,43)" rx="2" ry="2" />
<text  x="279.70" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (210 samples, 0.04%)</title><rect x="490.6" y="341" width="0.5" height="15.0" fill="rgb(213,97,23)" rx="2" ry="2" />
<text  x="493.61" y="351.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (251 samples, 0.05%)</title><rect x="1115.6" y="245" width="0.6" height="15.0" fill="rgb(229,221,49)" rx="2" ry="2" />
<text  x="1118.56" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (329 samples, 0.07%)</title><rect x="275.7" y="165" width="0.9" height="15.0" fill="rgb(244,93,44)" rx="2" ry="2" />
<text  x="278.73" y="175.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (300 samples, 0.06%)</title><rect x="220.7" y="245" width="0.7" height="15.0" fill="rgb(225,41,30)" rx="2" ry="2" />
<text  x="223.67" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (172 samples, 0.04%)</title><rect x="1157.2" y="325" width="0.5" height="15.0" fill="rgb(211,57,13)" rx="2" ry="2" />
<text  x="1160.23" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (320 samples, 0.07%)</title><rect x="368.3" y="421" width="0.8" height="15.0" fill="rgb(247,39,38)" rx="2" ry="2" />
<text  x="371.33" y="431.5" ></text>
</g>
<g >
<title>std::sys_common::memchr::memchr (193 samples, 0.04%)</title><rect x="69.2" y="373" width="0.5" height="15.0" fill="rgb(219,71,23)" rx="2" ry="2" />
<text  x="72.22" y="383.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify128 (938 samples, 0.20%)</title><rect x="1136.9" y="165" width="2.4" height="15.0" fill="rgb(249,121,52)" rx="2" ry="2" />
<text  x="1139.92" y="175.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (286 samples, 0.06%)</title><rect x="128.3" y="245" width="0.7" height="15.0" fill="rgb(245,8,37)" rx="2" ry="2" />
<text  x="131.32" y="255.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (699 samples, 0.15%)</title><rect x="1039.8" y="309" width="1.8" height="15.0" fill="rgb(219,14,1)" rx="2" ry="2" />
<text  x="1042.81" y="319.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (2,332 samples, 0.49%)</title><rect x="343.7" y="197" width="5.8" height="15.0" fill="rgb(208,175,12)" rx="2" ry="2" />
<text  x="346.65" y="207.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (26,748 samples, 5.67%)</title><rect x="369.9" y="437" width="66.9" height="15.0" fill="rgb(218,176,44)" rx="2" ry="2" />
<text  x="372.87" y="447.5" >&lt;core::..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (520 samples, 0.11%)</title><rect x="1163.3" y="373" width="1.3" height="15.0" fill="rgb(213,112,35)" rx="2" ry="2" />
<text  x="1166.32" y="383.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i32::{{closure}} (226 samples, 0.05%)</title><rect x="302.8" y="213" width="0.5" height="15.0" fill="rgb(215,27,34)" rx="2" ry="2" />
<text  x="305.76" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (272 samples, 0.06%)</title><rect x="991.2" y="373" width="0.7" height="15.0" fill="rgb(218,2,29)" rx="2" ry="2" />
<text  x="994.23" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,055 samples, 0.65%)</title><rect x="313.2" y="181" width="7.6" height="15.0" fill="rgb(227,99,42)" rx="2" ry="2" />
<text  x="316.17" y="191.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (475 samples, 0.10%)</title><rect x="1141.3" y="421" width="1.2" height="15.0" fill="rgb(219,172,5)" rx="2" ry="2" />
<text  x="1144.28" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_free (573 samples, 0.12%)</title><rect x="44.9" y="485" width="1.4" height="15.0" fill="rgb(228,186,29)" rx="2" ry="2" />
<text  x="47.86" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (424 samples, 0.09%)</title><rect x="272.1" y="149" width="1.0" height="15.0" fill="rgb(221,170,30)" rx="2" ry="2" />
<text  x="275.06" y="159.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (465 samples, 0.10%)</title><rect x="1004.9" y="245" width="1.2" height="15.0" fill="rgb(231,103,24)" rx="2" ry="2" />
<text  x="1007.95" y="255.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (186 samples, 0.04%)</title><rect x="1094.2" y="293" width="0.5" height="15.0" fill="rgb(210,6,44)" rx="2" ry="2" />
<text  x="1097.21" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (2,536 samples, 0.54%)</title><rect x="1149.5" y="277" width="6.3" height="15.0" fill="rgb(207,193,41)" rx="2" ry="2" />
<text  x="1152.46" y="287.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::OovProviderPlugin::get_oov (11,030 samples, 2.34%)</title><rect x="1073.2" y="437" width="27.5" height="15.0" fill="rgb(238,111,2)" rx="2" ry="2" />
<text  x="1076.16" y="447.5" >s..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (228 samples, 0.05%)</title><rect x="189.4" y="197" width="0.6" height="15.0" fill="rgb(237,214,29)" rx="2" ry="2" />
<text  x="192.39" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (596 samples, 0.13%)</title><rect x="273.7" y="181" width="1.5" height="15.0" fill="rgb(206,16,17)" rx="2" ry="2" />
<text  x="276.67" y="191.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,701 samples, 0.36%)</title><rect x="906.5" y="245" width="4.3" height="15.0" fill="rgb(251,87,50)" rx="2" ry="2" />
<text  x="909.53" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (142 samples, 0.03%)</title><rect x="122.4" y="341" width="0.4" height="15.0" fill="rgb(221,173,8)" rx="2" ry="2" />
<text  x="125.40" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (29,487 samples, 6.25%)</title><rect x="688.7" y="293" width="73.8" height="15.0" fill="rgb(235,190,38)" rx="2" ry="2" />
<text  x="691.69" y="303.5" >&lt;core::h..</text>
</g>
<g >
<title>aho_corasick::packed::pattern::Patterns::get_unchecked (191 samples, 0.04%)</title><rect x="1138.4" y="117" width="0.5" height="15.0" fill="rgb(207,23,10)" rx="2" ry="2" />
<text  x="1141.42" y="127.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::dfa::PremultipliedByteClass&lt;S&gt; as aho_corasick::automaton::Automaton&gt;::next_state (613 samples, 0.13%)</title><rect x="1107.8" y="245" width="1.5" height="15.0" fill="rgb(217,62,35)" rx="2" ry="2" />
<text  x="1110.79" y="255.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (318 samples, 0.07%)</title><rect x="1031.8" y="261" width="0.8" height="15.0" fill="rgb(218,68,5)" rx="2" ry="2" />
<text  x="1034.82" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (801 samples, 0.17%)</title><rect x="1048.9" y="293" width="2.0" height="15.0" fill="rgb(213,76,10)" rx="2" ry="2" />
<text  x="1051.87" y="303.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::find_from_pos (46,064 samples, 9.77%)</title><rect x="70.4" y="421" width="115.2" height="15.0" fill="rgb(209,226,0)" rx="2" ry="2" />
<text  x="73.39" y="431.5" >fancy_regex::R..</text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (193 samples, 0.04%)</title><rect x="190.0" y="245" width="0.5" height="15.0" fill="rgb(211,15,44)" rx="2" ry="2" />
<text  x="193.05" y="255.5" ></text>
</g>
<g >
<title>core::mem::drop (134 samples, 0.03%)</title><rect x="213.4" y="357" width="0.4" height="15.0" fill="rgb(231,138,41)" rx="2" ry="2" />
<text  x="216.42" y="367.5" ></text>
</g>
<g >
<title>_int_free (207 samples, 0.04%)</title><rect x="266.1" y="277" width="0.5" height="15.0" fill="rgb(218,193,50)" rx="2" ry="2" />
<text  x="269.06" y="287.5" ></text>
</g>
<g >
<title>_int_realloc (639 samples, 0.14%)</title><rect x="247.0" y="277" width="1.6" height="15.0" fill="rgb(246,101,29)" rx="2" ry="2" />
<text  x="249.98" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (596 samples, 0.13%)</title><rect x="273.7" y="213" width="1.5" height="15.0" fill="rgb(243,167,39)" rx="2" ry="2" />
<text  x="276.67" y="223.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::captures_from_pos (2,891 samples, 0.61%)</title><rect x="192.9" y="405" width="7.2" height="15.0" fill="rgb(240,134,19)" rx="2" ry="2" />
<text  x="195.87" y="415.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (17,563 samples, 3.72%)</title><rect x="382.1" y="357" width="44.0" height="15.0" fill="rgb(232,27,17)" rx="2" ry="2" />
<text  x="385.13" y="367.5" >&lt;cor..</text>
</g>
<g >
<title>core::hash::Hasher::write_u16 (41,775 samples, 8.86%)</title><rect x="783.0" y="277" width="104.5" height="15.0" fill="rgb(239,226,11)" rx="2" ry="2" />
<text  x="785.96" y="287.5" >core::hash::..</text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (136 samples, 0.03%)</title><rect x="190.9" y="293" width="0.3" height="15.0" fill="rgb(226,57,1)" rx="2" ry="2" />
<text  x="193.91" y="303.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (176 samples, 0.04%)</title><rect x="36.9" y="485" width="0.4" height="15.0" fill="rgb(245,187,18)" rx="2" ry="2" />
<text  x="39.88" y="495.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (17,787 samples, 3.77%)</title><rect x="927.4" y="245" width="44.5" height="15.0" fill="rgb(247,156,8)" rx="2" ry="2" />
<text  x="930.42" y="255.5" >nom:..</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (539 samples, 0.11%)</title><rect x="349.6" y="277" width="1.4" height="15.0" fill="rgb(208,183,18)" rx="2" ry="2" />
<text  x="352.61" y="287.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1,872 samples, 0.40%)</title><rect x="709.8" y="261" width="4.7" height="15.0" fill="rgb(245,83,38)" rx="2" ry="2" />
<text  x="712.83" y="271.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (159 samples, 0.03%)</title><rect x="1086.3" y="309" width="0.4" height="15.0" fill="rgb(212,169,37)" rx="2" ry="2" />
<text  x="1089.32" y="319.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (289 samples, 0.06%)</title><rect x="1066.9" y="325" width="0.8" height="15.0" fill="rgb(224,101,14)" rx="2" ry="2" />
<text  x="1069.93" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (180 samples, 0.04%)</title><rect x="1084.1" y="261" width="0.4" height="15.0" fill="rgb(254,78,15)" rx="2" ry="2" />
<text  x="1087.10" y="271.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (599 samples, 0.13%)</title><rect x="322.1" y="213" width="1.5" height="15.0" fill="rgb(215,132,35)" rx="2" ry="2" />
<text  x="325.12" y="223.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (5,054 samples, 1.07%)</title><rect x="770.3" y="309" width="12.6" height="15.0" fill="rgb(227,223,2)" rx="2" ry="2" />
<text  x="773.29" y="319.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (385 samples, 0.08%)</title><rect x="302.5" y="245" width="1.0" height="15.0" fill="rgb(236,226,50)" rx="2" ry="2" />
<text  x="305.53" y="255.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state_imp (824 samples, 0.17%)</title><rect x="1107.3" y="277" width="2.0" height="15.0" fill="rgb(251,47,3)" rx="2" ry="2" />
<text  x="1110.26" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (659 samples, 0.14%)</title><rect x="1132.4" y="245" width="1.7" height="15.0" fill="rgb(206,222,33)" rx="2" ry="2" />
<text  x="1135.44" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,544 samples, 0.33%)</title><rect x="231.3" y="261" width="3.8" height="15.0" fill="rgb(239,167,22)" rx="2" ry="2" />
<text  x="234.28" y="271.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (298 samples, 0.06%)</title><rect x="289.1" y="277" width="0.8" height="15.0" fill="rgb(221,115,7)" rx="2" ry="2" />
<text  x="292.13" y="287.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (289 samples, 0.06%)</title><rect x="1066.9" y="261" width="0.8" height="15.0" fill="rgb(212,167,16)" rx="2" ry="2" />
<text  x="1069.93" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free (1,966 samples, 0.42%)</title><rect x="235.6" y="309" width="4.9" height="15.0" fill="rgb(239,132,29)" rx="2" ry="2" />
<text  x="238.55" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,249 samples, 0.90%)</title><rect x="1028.3" y="309" width="10.6" height="15.0" fill="rgb(238,200,14)" rx="2" ry="2" />
<text  x="1031.32" y="319.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match_at (15,185 samples, 3.22%)</title><rect x="147.6" y="373" width="38.0" height="15.0" fill="rgb(219,147,32)" rx="2" ry="2" />
<text  x="150.63" y="383.5" >reg..</text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (147 samples, 0.03%)</title><rect x="1086.3" y="293" width="0.4" height="15.0" fill="rgb(246,46,19)" rx="2" ry="2" />
<text  x="1089.32" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,544 samples, 0.33%)</title><rect x="231.3" y="245" width="3.8" height="15.0" fill="rgb(215,95,17)" rx="2" ry="2" />
<text  x="234.28" y="255.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::byte_class (226 samples, 0.05%)</title><rect x="176.3" y="245" width="0.5" height="15.0" fill="rgb(210,69,9)" rx="2" ry="2" />
<text  x="179.28" y="255.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (256 samples, 0.05%)</title><rect x="1142.6" y="437" width="0.6" height="15.0" fill="rgb(243,164,31)" rx="2" ry="2" />
<text  x="1145.60" y="447.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le (10,146 samples, 2.15%)</title><rect x="858.2" y="213" width="25.4" height="15.0" fill="rgb(223,211,53)" rx="2" ry="2" />
<text  x="861.20" y="223.5" >c..</text>
</g>
<g >
<title>&lt;sudachi::sentence_splitter::SentenceIter as core::iter::traits::iterator::Iterator&gt;::next (52,177 samples, 11.06%)</title><rect x="69.8" y="469" width="130.6" height="15.0" fill="rgb(208,174,32)" rx="2" ry="2" />
<text  x="72.83" y="479.5" >&lt;sudachi::senten..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (558 samples, 0.12%)</title><rect x="1163.2" y="405" width="1.4" height="15.0" fill="rgb(254,19,49)" rx="2" ry="2" />
<text  x="1166.23" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (204 samples, 0.04%)</title><rect x="212.6" y="229" width="0.5" height="15.0" fill="rgb(230,23,6)" rx="2" ry="2" />
<text  x="215.60" y="239.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,332 samples, 0.49%)</title><rect x="343.7" y="229" width="5.8" height="15.0" fill="rgb(233,48,13)" rx="2" ry="2" />
<text  x="346.65" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19,271 samples, 4.09%)</title><rect x="489.2" y="389" width="48.3" height="15.0" fill="rgb(240,165,26)" rx="2" ry="2" />
<text  x="492.25" y="399.5" >allo..</text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (26,747 samples, 5.67%)</title><rect x="369.9" y="421" width="66.9" height="15.0" fill="rgb(242,124,23)" rx="2" ry="2" />
<text  x="372.87" y="431.5" >&lt;core::..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (502 samples, 0.11%)</title><rect x="125.6" y="357" width="1.3" height="15.0" fill="rgb(231,104,32)" rx="2" ry="2" />
<text  x="128.60" y="367.5" ></text>
</g>
<g >
<title>__rdl_realloc (212 samples, 0.04%)</title><rect x="518.6" y="277" width="0.5" height="15.0" fill="rgb(253,35,20)" rx="2" ry="2" />
<text  x="521.58" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (945 samples, 0.20%)</title><rect x="1114.1" y="293" width="2.4" height="15.0" fill="rgb(217,58,20)" rx="2" ry="2" />
<text  x="1117.12" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,632 samples, 0.56%)</title><rect x="1149.4" y="325" width="6.6" height="15.0" fill="rgb(236,142,40)" rx="2" ry="2" />
<text  x="1152.37" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (189 samples, 0.04%)</title><rect x="219.2" y="85" width="0.5" height="15.0" fill="rgb(215,194,37)" rx="2" ry="2" />
<text  x="222.22" y="95.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (606 samples, 0.13%)</title><rect x="273.6" y="229" width="1.6" height="15.0" fill="rgb(220,94,19)" rx="2" ry="2" />
<text  x="276.65" y="239.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (273 samples, 0.06%)</title><rect x="184.9" y="245" width="0.7" height="15.0" fill="rgb(212,192,54)" rx="2" ry="2" />
<text  x="187.94" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (1,988 samples, 0.42%)</title><rect x="230.3" y="325" width="5.0" height="15.0" fill="rgb(228,145,52)" rx="2" ry="2" />
<text  x="233.32" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (125 samples, 0.03%)</title><rect x="332.7" y="197" width="0.3" height="15.0" fill="rgb(224,148,46)" rx="2" ry="2" />
<text  x="335.68" y="207.5" ></text>
</g>
<g >
<title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (245 samples, 0.05%)</title><rect x="1113.3" y="325" width="0.6" height="15.0" fill="rgb(221,178,22)" rx="2" ry="2" />
<text  x="1116.27" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (171 samples, 0.04%)</title><rect x="350.4" y="213" width="0.5" height="15.0" fill="rgb(215,74,43)" rx="2" ry="2" />
<text  x="353.45" y="223.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (152 samples, 0.03%)</title><rect x="319.6" y="37" width="0.3" height="15.0" fill="rgb(217,14,31)" rx="2" ry="2" />
<text  x="322.57" y="47.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (2,161 samples, 0.46%)</title><rect x="1056.3" y="245" width="5.4" height="15.0" fill="rgb(216,204,13)" rx="2" ry="2" />
<text  x="1059.28" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::DictionaryLoader::read_dictionary (489 samples, 0.10%)</title><rect x="1156.4" y="421" width="1.3" height="15.0" fill="rgb(234,124,39)" rx="2" ry="2" />
<text  x="1159.44" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (393 samples, 0.08%)</title><rect x="218.9" y="149" width="1.0" height="15.0" fill="rgb(209,50,20)" rx="2" ry="2" />
<text  x="221.89" y="159.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17,326 samples, 3.67%)</title><rect x="719.1" y="277" width="43.3" height="15.0" fill="rgb(253,191,21)" rx="2" ry="2" />
<text  x="722.11" y="287.5" >&lt;cor..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::BufRead for alloc::boxed::Box&lt;B&gt;&gt;::read_line (1,131 samples, 0.24%)</title><rect x="66.9" y="453" width="2.8" height="15.0" fill="rgb(232,27,13)" rx="2" ry="2" />
<text  x="69.88" y="463.5" ></text>
</g>
<g >
<title>core::ptr::write (592 samples, 0.13%)</title><rect x="249.2" y="421" width="1.5" height="15.0" fill="rgb(217,3,3)" rx="2" ry="2" />
<text  x="252.22" y="431.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_mut (266 samples, 0.06%)</title><rect x="1169.5" y="405" width="0.7" height="15.0" fill="rgb(209,19,35)" rx="2" ry="2" />
<text  x="1172.52" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::word_id_to_offset (1,600 samples, 0.34%)</title><rect x="277.6" y="389" width="4.0" height="15.0" fill="rgb(212,156,26)" rx="2" ry="2" />
<text  x="280.60" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (495 samples, 0.10%)</title><rect x="989.1" y="261" width="1.2" height="15.0" fill="rgb(218,158,38)" rx="2" ry="2" />
<text  x="992.09" y="271.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (320 samples, 0.07%)</title><rect x="350.1" y="229" width="0.8" height="15.0" fill="rgb(218,165,30)" rx="2" ry="2" />
<text  x="353.08" y="239.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Pattern::equals (402 samples, 0.09%)</title><rect x="1137.4" y="101" width="1.0" height="15.0" fill="rgb(227,86,51)" rx="2" ry="2" />
<text  x="1140.41" y="111.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (255 samples, 0.05%)</title><rect x="987.3" y="341" width="0.7" height="15.0" fill="rgb(205,211,45)" rx="2" ry="2" />
<text  x="990.34" y="351.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (177 samples, 0.04%)</title><rect x="276.6" y="229" width="0.5" height="15.0" fill="rgb(232,171,23)" rx="2" ry="2" />
<text  x="279.65" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free (187 samples, 0.04%)</title><rect x="225.7" y="373" width="0.4" height="15.0" fill="rgb(240,76,29)" rx="2" ry="2" />
<text  x="228.66" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (1,538 samples, 0.33%)</title><rect x="1090.1" y="181" width="3.8" height="15.0" fill="rgb(244,58,49)" rx="2" ry="2" />
<text  x="1093.06" y="191.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (129 samples, 0.03%)</title><rect x="1134.7" y="309" width="0.4" height="15.0" fill="rgb(245,108,50)" rx="2" ry="2" />
<text  x="1137.73" y="319.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::refresh_chars (397 samples, 0.08%)</title><rect x="1103.0" y="421" width="1.0" height="15.0" fill="rgb(205,155,39)" rx="2" ry="2" />
<text  x="1106.00" y="431.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (352 samples, 0.07%)</title><rect x="350.1" y="261" width="0.9" height="15.0" fill="rgb(235,20,15)" rx="2" ry="2" />
<text  x="353.08" y="271.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (500 samples, 0.11%)</title><rect x="218.9" y="229" width="1.2" height="15.0" fill="rgb(220,186,40)" rx="2" ry="2" />
<text  x="221.85" y="239.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new (138 samples, 0.03%)</title><rect x="62.6" y="485" width="0.3" height="15.0" fill="rgb(229,131,4)" rx="2" ry="2" />
<text  x="65.56" y="495.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (1,780 samples, 0.38%)</title><rect x="186.2" y="325" width="4.4" height="15.0" fill="rgb(244,187,22)" rx="2" ry="2" />
<text  x="189.15" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (231 samples, 0.05%)</title><rect x="204.2" y="389" width="0.6" height="15.0" fill="rgb(246,84,29)" rx="2" ry="2" />
<text  x="207.24" y="399.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (253 samples, 0.05%)</title><rect x="94.4" y="373" width="0.7" height="15.0" fill="rgb(205,3,28)" rx="2" ry="2" />
<text  x="97.44" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::clear (3,034 samples, 0.64%)</title><rect x="1148.8" y="453" width="7.6" height="15.0" fill="rgb(207,73,29)" rx="2" ry="2" />
<text  x="1151.76" y="463.5" ></text>
</g>
<g >
<title>regex::re_trait::RegularExpression::locations (224 samples, 0.05%)</title><rect x="193.3" y="373" width="0.6" height="15.0" fill="rgb(231,193,5)" rx="2" ry="2" />
<text  x="196.30" y="383.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (346 samples, 0.07%)</title><rect x="1141.4" y="373" width="0.9" height="15.0" fill="rgb(254,203,50)" rx="2" ry="2" />
<text  x="1144.45" y="383.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (172 samples, 0.04%)</title><rect x="255.3" y="437" width="0.4" height="15.0" fill="rgb(234,30,51)" rx="2" ry="2" />
<text  x="258.26" y="447.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::build (3,134 samples, 0.66%)</title><rect x="1140.4" y="453" width="7.8" height="15.0" fill="rgb(250,59,19)" rx="2" ry="2" />
<text  x="1143.36" y="463.5" ></text>
</g>
<g >
<title>alloc::string::String::push (1,780 samples, 0.38%)</title><rect x="186.2" y="261" width="4.4" height="15.0" fill="rgb(252,164,8)" rx="2" ry="2" />
<text  x="189.15" y="271.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (339 samples, 0.07%)</title><rect x="190.7" y="309" width="0.9" height="15.0" fill="rgb(209,120,54)" rx="2" ry="2" />
<text  x="193.74" y="319.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::Imp&lt;S&gt;::earliest_find_at (512 samples, 0.11%)</title><rect x="1110.7" y="341" width="1.2" height="15.0" fill="rgb(234,155,3)" rx="2" ry="2" />
<text  x="1113.66" y="351.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::lexicon::word_id_table::WordIdIter as core::iter::traits::iterator::Iterator&gt;::next (1,262 samples, 0.27%)</title><rect x="426.8" y="357" width="3.2" height="15.0" fill="rgb(209,183,13)" rx="2" ry="2" />
<text  x="429.85" y="367.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (156 samples, 0.03%)</title><rect x="1109.6" y="357" width="0.4" height="15.0" fill="rgb(241,99,30)" rx="2" ry="2" />
<text  x="1112.61" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (121 samples, 0.03%)</title><rect x="223.1" y="133" width="0.3" height="15.0" fill="rgb(225,217,17)" rx="2" ry="2" />
<text  x="226.11" y="143.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (293 samples, 0.06%)</title><rect x="222.0" y="181" width="0.8" height="15.0" fill="rgb(230,119,49)" rx="2" ry="2" />
<text  x="225.02" y="191.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (199 samples, 0.04%)</title><rect x="1083.6" y="261" width="0.5" height="15.0" fill="rgb(243,84,17)" rx="2" ry="2" />
<text  x="1086.60" y="271.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::boxed::Box&lt;W&gt;&gt;::write (787 samples, 0.17%)</title><rect x="1159.0" y="421" width="2.0" height="15.0" fill="rgb(213,70,29)" rx="2" ry="2" />
<text  x="1162.01" y="431.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_mul (191 samples, 0.04%)</title><rect x="989.9" y="213" width="0.4" height="15.0" fill="rgb(210,85,35)" rx="2" ry="2" />
<text  x="992.85" y="223.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (329 samples, 0.07%)</title><rect x="275.7" y="133" width="0.9" height="15.0" fill="rgb(232,65,20)" rx="2" ry="2" />
<text  x="278.73" y="143.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,459 samples, 0.52%)</title><rect x="1088.7" y="341" width="6.2" height="15.0" fill="rgb(227,52,13)" rx="2" ry="2" />
<text  x="1091.71" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (330 samples, 0.07%)</title><rect x="272.2" y="101" width="0.8" height="15.0" fill="rgb(243,113,35)" rx="2" ry="2" />
<text  x="275.22" y="111.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (1,015 samples, 0.22%)</title><rect x="1121.8" y="325" width="2.6" height="15.0" fill="rgb(226,178,15)" rx="2" ry="2" />
<text  x="1124.82" y="335.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (7,055 samples, 1.50%)</title><rect x="470.3" y="421" width="17.7" height="15.0" fill="rgb(211,36,6)" rx="2" ry="2" />
<text  x="473.31" y="431.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (123 samples, 0.03%)</title><rect x="17.2" y="485" width="0.3" height="15.0" fill="rgb(242,88,2)" rx="2" ry="2" />
<text  x="20.20" y="495.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,646 samples, 0.35%)</title><rect x="1135.9" y="293" width="4.1" height="15.0" fill="rgb(224,140,33)" rx="2" ry="2" />
<text  x="1138.85" y="303.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1,083 samples, 0.23%)</title><rect x="988.0" y="325" width="2.7" height="15.0" fill="rgb(218,80,3)" rx="2" ry="2" />
<text  x="990.97" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,274 samples, 0.27%)</title><rect x="1095.0" y="165" width="3.2" height="15.0" fill="rgb(221,51,50)" rx="2" ry="2" />
<text  x="1098.00" y="175.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (126 samples, 0.03%)</title><rect x="212.1" y="357" width="0.3" height="15.0" fill="rgb(233,4,21)" rx="2" ry="2" />
<text  x="215.08" y="367.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (435 samples, 0.09%)</title><rect x="1080.5" y="357" width="1.1" height="15.0" fill="rgb(253,124,38)" rx="2" ry="2" />
<text  x="1083.52" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (338 samples, 0.07%)</title><rect x="1103.1" y="373" width="0.9" height="15.0" fill="rgb(210,23,2)" rx="2" ry="2" />
<text  x="1106.14" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (1,044 samples, 0.22%)</title><rect x="54.1" y="485" width="2.6" height="15.0" fill="rgb(206,226,37)" rx="2" ry="2" />
<text  x="57.11" y="495.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (1,010 samples, 0.21%)</title><rect x="1158.5" y="453" width="2.5" height="15.0" fill="rgb(224,229,24)" rx="2" ry="2" />
<text  x="1161.46" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (204 samples, 0.04%)</title><rect x="534.5" y="309" width="0.5" height="15.0" fill="rgb(246,66,40)" rx="2" ry="2" />
<text  x="537.53" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (171,977 samples, 36.46%)</title><rect x="553.0" y="421" width="430.2" height="15.0" fill="rgb(220,202,46)" rx="2" ry="2" />
<text  x="555.98" y="431.5" >sudachi::analysis::lattice::Lattice::connect_node</text>
</g>
<g >
<title>alloc::string::String::from_utf16 (126 samples, 0.03%)</title><rect x="311.8" y="245" width="0.3" height="15.0" fill="rgb(242,67,38)" rx="2" ry="2" />
<text  x="314.83" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (305 samples, 0.06%)</title><rect x="1050.1" y="261" width="0.8" height="15.0" fill="rgb(254,59,1)" rx="2" ry="2" />
<text  x="1053.11" y="271.5" ></text>
</g>
<g >
<title>unicode_normalization::tables::qc_nfkc (1,056 samples, 0.22%)</title><rect x="1117.8" y="309" width="2.7" height="15.0" fill="rgb(224,208,12)" rx="2" ry="2" />
<text  x="1120.82" y="319.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::shortest_match_at (12,488 samples, 2.65%)</title><rect x="150.9" y="341" width="31.2" height="15.0" fill="rgb(212,125,51)" rx="2" ry="2" />
<text  x="153.88" y="351.5" >&lt;r..</text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (2,434 samples, 0.52%)</title><rect x="193.9" y="373" width="6.1" height="15.0" fill="rgb(219,159,46)" rx="2" ry="2" />
<text  x="196.92" y="383.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (102,752 samples, 21.78%)</title><rect x="658.6" y="373" width="257.1" height="15.0" fill="rgb(245,224,17)" rx="2" ry="2" />
<text  x="661.64" y="383.5" >hashbrown::map::HashMap&lt;K,V,S,A&gt;::..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (190 samples, 0.04%)</title><rect x="1061.9" y="277" width="0.5" height="15.0" fill="rgb(217,141,19)" rx="2" ry="2" />
<text  x="1064.95" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,861 samples, 1.24%)</title><rect x="226.2" y="421" width="14.7" height="15.0" fill="rgb(227,192,31)" rx="2" ry="2" />
<text  x="229.23" y="431.5" ></text>
</g>
<g >
<title>_int_malloc (236 samples, 0.05%)</title><rect x="248.0" y="261" width="0.6" height="15.0" fill="rgb(254,229,11)" rx="2" ry="2" />
<text  x="250.96" y="271.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (606 samples, 0.13%)</title><rect x="334.2" y="229" width="1.5" height="15.0" fill="rgb(226,185,3)" rx="2" ry="2" />
<text  x="337.19" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (2,825 samples, 0.60%)</title><rect x="1149.3" y="389" width="7.1" height="15.0" fill="rgb(228,105,17)" rx="2" ry="2" />
<text  x="1152.29" y="399.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (827 samples, 0.18%)</title><rect x="218.5" y="277" width="2.1" height="15.0" fill="rgb(252,35,9)" rx="2" ry="2" />
<text  x="221.50" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (165 samples, 0.03%)</title><rect x="224.8" y="277" width="0.4" height="15.0" fill="rgb(215,173,19)" rx="2" ry="2" />
<text  x="227.82" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::word_info_parser (28,792 samples, 6.10%)</title><rect x="281.6" y="389" width="72.0" height="15.0" fill="rgb(215,184,15)" rx="2" ry="2" />
<text  x="284.60" y="399.5" >sudachi:..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (29,417 samples, 6.24%)</title><rect x="813.8" y="245" width="73.6" height="15.0" fill="rgb(241,200,54)" rx="2" ry="2" />
<text  x="816.84" y="255.5" >&lt;core::h..</text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::string_number::StringNumber::add (120 samples, 0.03%)</title><rect x="215.9" y="405" width="0.3" height="15.0" fill="rgb(227,60,48)" rx="2" ry="2" />
<text  x="218.93" y="415.5" ></text>
</g>
<g >
<title>&lt;sudachi::sentence_detector::SentenceDetector::get_eos::SENTENCE_BREAKER as core::ops::deref::Deref&gt;::deref::__stability::LAZY (597 samples, 0.13%)</title><rect x="10.9" y="501" width="1.5" height="15.0" fill="rgb(222,91,1)" rx="2" ry="2" />
<text  x="13.94" y="511.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (36,599 samples, 7.76%)</title><rect x="262.1" y="405" width="91.5" height="15.0" fill="rgb(215,52,3)" rx="2" ry="2" />
<text  x="265.07" y="415.5" >sudachi::d..</text>
</g>
<g >
<title>core::hash::Hasher::write_i16 (41,775 samples, 8.86%)</title><rect x="783.0" y="293" width="104.5" height="15.0" fill="rgb(231,124,4)" rx="2" ry="2" />
<text  x="785.96" y="303.5" >core::hash::..</text>
</g>
<g >
<title>nom::number::complete::le_i16 (2,161 samples, 0.46%)</title><rect x="1056.3" y="325" width="5.4" height="15.0" fill="rgb(249,156,15)" rx="2" ry="2" />
<text  x="1059.28" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (171 samples, 0.04%)</title><rect x="1049.7" y="261" width="0.4" height="15.0" fill="rgb(233,27,42)" rx="2" ry="2" />
<text  x="1052.68" y="271.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2,237 samples, 0.47%)</title><rect x="283.5" y="229" width="5.6" height="15.0" fill="rgb(244,193,36)" rx="2" ry="2" />
<text  x="286.53" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (1,756 samples, 0.37%)</title><rect x="315.0" y="53" width="4.4" height="15.0" fill="rgb(217,50,8)" rx="2" ry="2" />
<text  x="318.05" y="63.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (180 samples, 0.04%)</title><rect x="123.1" y="373" width="0.5" height="15.0" fill="rgb(228,116,25)" rx="2" ry="2" />
<text  x="126.11" y="383.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_mul (129 samples, 0.03%)</title><rect x="535.7" y="293" width="0.3" height="15.0" fill="rgb(234,54,13)" rx="2" ry="2" />
<text  x="538.67" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (235 samples, 0.05%)</title><rect x="212.6" y="277" width="0.5" height="15.0" fill="rgb(243,218,48)" rx="2" ry="2" />
<text  x="215.55" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (191 samples, 0.04%)</title><rect x="225.7" y="405" width="0.4" height="15.0" fill="rgb(251,148,22)" rx="2" ry="2" />
<text  x="228.65" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (123 samples, 0.03%)</title><rect x="212.1" y="277" width="0.3" height="15.0" fill="rgb(208,26,14)" rx="2" ry="2" />
<text  x="215.08" y="287.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (124 samples, 0.03%)</title><rect x="147.1" y="309" width="0.3" height="15.0" fill="rgb(224,55,1)" rx="2" ry="2" />
<text  x="150.11" y="319.5" ></text>
</g>
<g >
<title>std::io::Write::write_fmt (5,021 samples, 1.06%)</title><rect x="1172.0" y="453" width="12.5" height="15.0" fill="rgb(217,203,47)" rx="2" ry="2" />
<text  x="1174.98" y="463.5" ></text>
</g>
<g >
<title>core::option::Option&lt;&amp;T&gt;::copied (155 samples, 0.03%)</title><rect x="276.7" y="197" width="0.4" height="15.0" fill="rgb(237,221,23)" rx="2" ry="2" />
<text  x="279.70" y="207.5" ></text>
</g>
<g >
<title>_int_malloc (186 samples, 0.04%)</title><rect x="268.2" y="165" width="0.4" height="15.0" fill="rgb(220,94,23)" rx="2" ry="2" />
<text  x="271.18" y="175.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::word_id_to_offset (130 samples, 0.03%)</title><rect x="267.4" y="373" width="0.4" height="15.0" fill="rgb(230,203,44)" rx="2" ry="2" />
<text  x="270.43" y="383.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match (255 samples, 0.05%)</title><rect x="146.1" y="325" width="0.6" height="15.0" fill="rgb(222,9,25)" rx="2" ry="2" />
<text  x="149.10" y="335.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (933 samples, 0.20%)</title><rect x="1179.1" y="373" width="2.3" height="15.0" fill="rgb(247,51,39)" rx="2" ry="2" />
<text  x="1182.06" y="383.5" ></text>
</g>
<g >
<title>core::ptr::write (414 samples, 0.09%)</title><rect x="991.9" y="373" width="1.1" height="15.0" fill="rgb(228,126,16)" rx="2" ry="2" />
<text  x="994.94" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,007 samples, 0.21%)</title><rect x="246.6" y="389" width="2.5" height="15.0" fill="rgb(207,15,51)" rx="2" ry="2" />
<text  x="249.61" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (477 samples, 0.10%)</title><rect x="1170.7" y="373" width="1.2" height="15.0" fill="rgb(229,172,25)" rx="2" ry="2" />
<text  x="1173.68" y="383.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::handle_normalization_slow (373 samples, 0.08%)</title><rect x="1113.2" y="357" width="0.9" height="15.0" fill="rgb(226,195,11)" rx="2" ry="2" />
<text  x="1116.19" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (472 samples, 0.10%)</title><rect x="206.5" y="277" width="1.2" height="15.0" fill="rgb(219,194,29)" rx="2" ry="2" />
<text  x="209.51" y="287.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::repeat (192 samples, 0.04%)</title><rect x="989.8" y="229" width="0.5" height="15.0" fill="rgb(237,59,35)" rx="2" ry="2" />
<text  x="992.85" y="239.5" ></text>
</g>
<g >
<title>&lt;T as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::oov_provider_plugins (202 samples, 0.04%)</title><rect x="369.1" y="437" width="0.5" height="15.0" fill="rgb(246,31,44)" rx="2" ry="2" />
<text  x="372.13" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (485 samples, 0.10%)</title><rect x="1114.2" y="277" width="1.2" height="15.0" fill="rgb(241,99,51)" rx="2" ry="2" />
<text  x="1117.22" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::index (126 samples, 0.03%)</title><rect x="1185.4" y="421" width="0.3" height="15.0" fill="rgb(206,100,48)" rx="2" ry="2" />
<text  x="1188.39" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,429 samples, 0.51%)</title><rect x="336.3" y="229" width="6.0" height="15.0" fill="rgb(224,213,40)" rx="2" ry="2" />
<text  x="339.26" y="239.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::find_at (1,746 samples, 0.37%)</title><rect x="1135.7" y="341" width="4.4" height="15.0" fill="rgb(209,116,7)" rx="2" ry="2" />
<text  x="1138.69" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,076 samples, 0.23%)</title><rect x="1029.9" y="277" width="2.7" height="15.0" fill="rgb(228,175,12)" rx="2" ry="2" />
<text  x="1032.92" y="287.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (349 samples, 0.07%)</title><rect x="212.4" y="389" width="0.9" height="15.0" fill="rgb(208,189,0)" rx="2" ry="2" />
<text  x="215.40" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::make_insert_hash (554 samples, 0.12%)</title><rect x="222.0" y="197" width="1.4" height="15.0" fill="rgb(233,181,4)" rx="2" ry="2" />
<text  x="225.02" y="207.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::AhoCorasick&lt;S&gt;::earliest_find (826 samples, 0.18%)</title><rect x="1110.0" y="357" width="2.1" height="15.0" fill="rgb(239,192,49)" rx="2" ry="2" />
<text  x="1113.04" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (151 samples, 0.03%)</title><rect x="460.3" y="341" width="0.4" height="15.0" fill="rgb(221,34,16)" rx="2" ry="2" />
<text  x="463.32" y="351.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (423 samples, 0.09%)</title><rect x="1065.9" y="389" width="1.0" height="15.0" fill="rgb(247,80,32)" rx="2" ry="2" />
<text  x="1068.87" y="399.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (346 samples, 0.07%)</title><rect x="1117.0" y="309" width="0.8" height="15.0" fill="rgb(237,89,22)" rx="2" ry="2" />
<text  x="1119.96" y="319.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (639 samples, 0.14%)</title><rect x="216.4" y="309" width="1.6" height="15.0" fill="rgb(215,172,29)" rx="2" ry="2" />
<text  x="219.43" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (301 samples, 0.06%)</title><rect x="224.5" y="325" width="0.8" height="15.0" fill="rgb(212,82,32)" rx="2" ry="2" />
<text  x="227.50" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (303 samples, 0.06%)</title><rect x="128.3" y="293" width="0.7" height="15.0" fill="rgb(249,96,38)" rx="2" ry="2" />
<text  x="131.28" y="303.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (195 samples, 0.04%)</title><rect x="1044.5" y="245" width="0.5" height="15.0" fill="rgb(219,85,45)" rx="2" ry="2" />
<text  x="1047.51" y="255.5" ></text>
</g>
<g >
<title>&lt;unicode_normalization::recompose::Recompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (277 samples, 0.06%)</title><rect x="1113.2" y="341" width="0.7" height="15.0" fill="rgb(229,27,1)" rx="2" ry="2" />
<text  x="1116.22" y="351.5" ></text>
</g>
<g >
<title>_int_free (1,219 samples, 0.26%)</title><rect x="51.1" y="485" width="3.0" height="15.0" fill="rgb(251,153,22)" rx="2" ry="2" />
<text  x="54.06" y="495.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::lexicon::trie::TrieEntryIter as core::iter::traits::iterator::Iterator&gt;::next (13,482 samples, 2.86%)</title><rect x="382.9" y="325" width="33.7" height="15.0" fill="rgb(222,198,26)" rx="2" ry="2" />
<text  x="385.92" y="335.5" >&lt;s..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (596 samples, 0.13%)</title><rect x="273.7" y="165" width="1.5" height="15.0" fill="rgb(226,129,30)" rx="2" ry="2" />
<text  x="276.67" y="175.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (514 samples, 0.11%)</title><rect x="1066.9" y="357" width="1.3" height="15.0" fill="rgb(231,26,45)" rx="2" ry="2" />
<text  x="1069.93" y="367.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::find_at (3,059 samples, 0.65%)</title><rect x="139.1" y="357" width="7.7" height="15.0" fill="rgb(210,195,19)" rx="2" ry="2" />
<text  x="142.11" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;sudachi::analysis::node::Node&gt;&gt; (347 samples, 0.07%)</title><rect x="213.3" y="389" width="0.9" height="15.0" fill="rgb(233,58,45)" rx="2" ry="2" />
<text  x="216.30" y="399.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (189 samples, 0.04%)</title><rect x="209.2" y="421" width="0.5" height="15.0" fill="rgb(241,89,17)" rx="2" ry="2" />
<text  x="212.19" y="431.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (1,111 samples, 0.24%)</title><rect x="186.5" y="85" width="2.8" height="15.0" fill="rgb(234,200,20)" rx="2" ry="2" />
<text  x="189.54" y="95.5" ></text>
</g>
<g >
<title>std::io::BufRead::read_line (1,124 samples, 0.24%)</title><rect x="66.9" y="437" width="2.8" height="15.0" fill="rgb(252,168,6)" rx="2" ry="2" />
<text  x="69.90" y="447.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (33,187 samples, 7.04%)</title><rect x="804.4" y="261" width="83.1" height="15.0" fill="rgb(238,115,19)" rx="2" ry="2" />
<text  x="807.44" y="271.5" >&lt;std::col..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,214 samples, 0.26%)</title><rect x="186.4" y="181" width="3.0" height="15.0" fill="rgb(243,192,40)" rx="2" ry="2" />
<text  x="189.35" y="191.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (241 samples, 0.05%)</title><rect x="289.3" y="261" width="0.6" height="15.0" fill="rgb(245,20,15)" rx="2" ry="2" />
<text  x="292.27" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (5,268 samples, 1.12%)</title><rect x="993.0" y="293" width="13.2" height="15.0" fill="rgb(240,193,39)" rx="2" ry="2" />
<text  x="996.00" y="303.5" ></text>
</g>
<g >
<title>_int_free (415 samples, 0.09%)</title><rect x="13.9" y="485" width="1.1" height="15.0" fill="rgb(224,142,34)" rx="2" ry="2" />
<text  x="16.94" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (189 samples, 0.04%)</title><rect x="537.0" y="357" width="0.5" height="15.0" fill="rgb(234,171,13)" rx="2" ry="2" />
<text  x="539.98" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (139 samples, 0.03%)</title><rect x="1162.8" y="373" width="0.4" height="15.0" fill="rgb(220,207,53)" rx="2" ry="2" />
<text  x="1165.82" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (3,462 samples, 0.73%)</title><rect x="324.0" y="133" width="8.7" height="15.0" fill="rgb(235,73,27)" rx="2" ry="2" />
<text  x="327.02" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,402 samples, 0.30%)</title><rect x="1094.9" y="229" width="3.5" height="15.0" fill="rgb(223,178,13)" rx="2" ry="2" />
<text  x="1097.86" y="239.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::simple_oov::SimpleOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (325 samples, 0.07%)</title><rect x="1099.7" y="421" width="0.8" height="15.0" fill="rgb(214,90,22)" rx="2" ry="2" />
<text  x="1102.69" y="431.5" ></text>
</g>
<g >
<title>core::str::validations::unwrap_or_0 (124 samples, 0.03%)</title><rect x="191.2" y="293" width="0.4" height="15.0" fill="rgb(236,183,40)" rx="2" ry="2" />
<text  x="194.25" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (440 samples, 0.09%)</title><rect x="1011.3" y="421" width="1.1" height="15.0" fill="rgb(224,111,11)" rx="2" ry="2" />
<text  x="1014.29" y="431.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_mul (191 samples, 0.04%)</title><rect x="989.9" y="197" width="0.4" height="15.0" fill="rgb(224,75,21)" rx="2" ry="2" />
<text  x="992.85" y="207.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::fill_word_info (198 samples, 0.04%)</title><rect x="201.5" y="453" width="0.4" height="15.0" fill="rgb(251,114,45)" rx="2" ry="2" />
<text  x="204.45" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (262 samples, 0.06%)</title><rect x="268.0" y="181" width="0.6" height="15.0" fill="rgb(241,83,49)" rx="2" ry="2" />
<text  x="270.99" y="191.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,548 samples, 0.33%)</title><rect x="1043.0" y="261" width="3.9" height="15.0" fill="rgb(206,124,53)" rx="2" ry="2" />
<text  x="1046.01" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,338 samples, 0.28%)</title><rect x="987.3" y="357" width="3.4" height="15.0" fill="rgb(244,226,35)" rx="2" ry="2" />
<text  x="990.34" y="367.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::new::{{closure}} (1,355 samples, 0.29%)</title><rect x="218.0" y="309" width="3.4" height="15.0" fill="rgb(240,161,25)" rx="2" ry="2" />
<text  x="221.03" y="319.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2,179 samples, 0.46%)</title><rect x="186.1" y="341" width="5.5" height="15.0" fill="rgb(241,57,2)" rx="2" ry="2" />
<text  x="189.13" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3,732 samples, 0.79%)</title><rect x="312.8" y="197" width="9.3" height="15.0" fill="rgb(243,161,30)" rx="2" ry="2" />
<text  x="315.76" y="207.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1,196 samples, 0.25%)</title><rect x="1131.4" y="325" width="3.0" height="15.0" fill="rgb(236,33,39)" rx="2" ry="2" />
<text  x="1134.43" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_id_table::WordIdTable::entries (3,389 samples, 0.72%)</title><rect x="417.6" y="277" width="8.5" height="15.0" fill="rgb(245,102,23)" rx="2" ry="2" />
<text  x="420.58" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (2,280 samples, 0.48%)</title><rect x="185.9" y="405" width="5.7" height="15.0" fill="rgb(232,121,32)" rx="2" ry="2" />
<text  x="188.88" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt; (3,582 samples, 0.76%)</title><rect x="216.4" y="373" width="8.9" height="15.0" fill="rgb(229,91,12)" rx="2" ry="2" />
<text  x="219.37" y="383.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::new (151 samples, 0.03%)</title><rect x="1182.4" y="421" width="0.4" height="15.0" fill="rgb(250,24,41)" rx="2" ry="2" />
<text  x="1185.37" y="431.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (127 samples, 0.03%)</title><rect x="1093.6" y="165" width="0.3" height="15.0" fill="rgb(245,176,37)" rx="2" ry="2" />
<text  x="1096.59" y="175.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (539 samples, 0.11%)</title><rect x="1050.9" y="261" width="1.3" height="15.0" fill="rgb(232,56,43)" rx="2" ry="2" />
<text  x="1053.87" y="271.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (376 samples, 0.08%)</title><rect x="265.7" y="309" width="0.9" height="15.0" fill="rgb(222,37,32)" rx="2" ry="2" />
<text  x="268.68" y="319.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (1,426 samples, 0.30%)</title><rect x="1116.9" y="325" width="3.6" height="15.0" fill="rgb(249,6,12)" rx="2" ry="2" />
<text  x="1119.90" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (2,313 samples, 0.49%)</title><rect x="1149.8" y="261" width="5.8" height="15.0" fill="rgb(245,210,29)" rx="2" ry="2" />
<text  x="1152.77" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 samples, 0.03%)</title><rect x="1156.0" y="325" width="0.4" height="15.0" fill="rgb(212,119,4)" rx="2" ry="2" />
<text  x="1158.95" y="335.5" ></text>
</g>
<g >
<title>aho_corasick::packed::api::Searcher::find_at (1,384 samples, 0.29%)</title><rect x="1136.3" y="213" width="3.4" height="15.0" fill="rgb(237,200,13)" rx="2" ry="2" />
<text  x="1139.27" y="223.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite (14,945 samples, 3.17%)</title><rect x="1102.9" y="437" width="37.4" height="15.0" fill="rgb(219,20,42)" rx="2" ry="2" />
<text  x="1105.90" y="447.5" >sud..</text>
</g>
<g >
<title>alloc::alloc::alloc (5,283 samples, 1.12%)</title><rect x="993.0" y="309" width="13.2" height="15.0" fill="rgb(209,173,12)" rx="2" ry="2" />
<text  x="995.98" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,406 samples, 0.72%)</title><rect x="226.8" y="373" width="8.5" height="15.0" fill="rgb(228,145,0)" rx="2" ry="2" />
<text  x="229.78" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,177 samples, 0.25%)</title><rect x="186.4" y="165" width="3.0" height="15.0" fill="rgb(243,224,31)" rx="2" ry="2" />
<text  x="189.45" y="175.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::backtrack (458 samples, 0.10%)</title><rect x="194.9" y="261" width="1.2" height="15.0" fill="rgb(251,170,39)" rx="2" ry="2" />
<text  x="197.93" y="271.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (771 samples, 0.16%)</title><rect x="467.4" y="389" width="1.9" height="15.0" fill="rgb(232,37,15)" rx="2" ry="2" />
<text  x="470.41" y="399.5" ></text>
</g>
<g >
<title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (167 samples, 0.04%)</title><rect x="213.8" y="341" width="0.4" height="15.0" fill="rgb(210,117,52)" rx="2" ry="2" />
<text  x="216.75" y="351.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (317 samples, 0.07%)</title><rect x="268.0" y="293" width="0.8" height="15.0" fill="rgb(224,191,34)" rx="2" ry="2" />
<text  x="270.98" y="303.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,385 samples, 0.51%)</title><rect x="1088.7" y="309" width="6.0" height="15.0" fill="rgb(235,219,54)" rx="2" ry="2" />
<text  x="1091.71" y="319.5" ></text>
</g>
<g >
<title>__rdl_realloc (203 samples, 0.04%)</title><rect x="319.4" y="53" width="0.5" height="15.0" fill="rgb(238,140,29)" rx="2" ry="2" />
<text  x="322.44" y="63.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (686 samples, 0.15%)</title><rect x="203.6" y="453" width="1.7" height="15.0" fill="rgb(244,102,39)" rx="2" ry="2" />
<text  x="206.62" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3,781 samples, 0.80%)</title><rect x="312.6" y="213" width="9.5" height="15.0" fill="rgb(219,128,48)" rx="2" ry="2" />
<text  x="315.64" y="223.5" ></text>
</g>
<g >
<title>regex::pool::THREAD_ID::__getit (273 samples, 0.06%)</title><rect x="184.9" y="261" width="0.7" height="15.0" fill="rgb(221,17,40)" rx="2" ry="2" />
<text  x="187.94" y="271.5" ></text>
</g>
<g >
<title>sudachi (471,664 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(243,131,7)" rx="2" ry="2" />
<text  x="13.05" y="527.5" >sudachi</text>
</g>
<g >
<title>core::fmt::Arguments::new_v1 (131 samples, 0.03%)</title><rect x="1170.3" y="453" width="0.4" height="15.0" fill="rgb(250,97,51)" rx="2" ry="2" />
<text  x="1173.32" y="463.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (135 samples, 0.03%)</title><rect x="215.2" y="357" width="0.3" height="15.0" fill="rgb(229,151,34)" rx="2" ry="2" />
<text  x="218.16" y="367.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (225 samples, 0.05%)</title><rect x="191.8" y="325" width="0.5" height="15.0" fill="rgb(218,132,27)" rx="2" ry="2" />
<text  x="194.78" y="335.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (277 samples, 0.06%)</title><rect x="184.9" y="293" width="0.7" height="15.0" fill="rgb(213,44,17)" rx="2" ry="2" />
<text  x="187.93" y="303.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (594 samples, 0.13%)</title><rect x="206.5" y="357" width="1.5" height="15.0" fill="rgb(212,200,41)" rx="2" ry="2" />
<text  x="209.51" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (995 samples, 0.21%)</title><rect x="246.6" y="373" width="2.5" height="15.0" fill="rgb(207,58,4)" rx="2" ry="2" />
<text  x="249.62" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (362 samples, 0.08%)</title><rect x="128.2" y="373" width="0.9" height="15.0" fill="rgb(237,185,20)" rx="2" ry="2" />
<text  x="131.18" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2,531 samples, 0.54%)</title><rect x="1032.6" y="277" width="6.3" height="15.0" fill="rgb(242,76,6)" rx="2" ry="2" />
<text  x="1035.62" y="287.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (606 samples, 0.13%)</title><rect x="334.2" y="245" width="1.5" height="15.0" fill="rgb(228,30,23)" rx="2" ry="2" />
<text  x="337.19" y="255.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1,027 samples, 0.22%)</title><rect x="1082.0" y="325" width="2.6" height="15.0" fill="rgb(246,48,1)" rx="2" ry="2" />
<text  x="1084.98" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (202 samples, 0.04%)</title><rect x="240.9" y="421" width="0.5" height="15.0" fill="rgb(215,122,51)" rx="2" ry="2" />
<text  x="243.89" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,111 samples, 0.24%)</title><rect x="186.5" y="117" width="2.8" height="15.0" fill="rgb(218,136,33)" rx="2" ry="2" />
<text  x="189.54" y="127.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (801 samples, 0.17%)</title><rect x="1048.9" y="277" width="2.0" height="15.0" fill="rgb(245,144,17)" rx="2" ry="2" />
<text  x="1051.87" y="287.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (395 samples, 0.08%)</title><rect x="23.3" y="485" width="1.0" height="15.0" fill="rgb(225,75,11)" rx="2" ry="2" />
<text  x="26.30" y="495.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (243 samples, 0.05%)</title><rect x="208.4" y="405" width="0.6" height="15.0" fill="rgb(222,120,9)" rx="2" ry="2" />
<text  x="211.40" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (421 samples, 0.09%)</title><rect x="1115.4" y="261" width="1.1" height="15.0" fill="rgb(240,81,44)" rx="2" ry="2" />
<text  x="1118.43" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (184 samples, 0.04%)</title><rect x="1189.2" y="501" width="0.5" height="15.0" fill="rgb(252,128,31)" rx="2" ry="2" />
<text  x="1192.21" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (817 samples, 0.17%)</title><rect x="123.6" y="373" width="2.0" height="15.0" fill="rgb(208,187,42)" rx="2" ry="2" />
<text  x="126.56" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (280 samples, 0.06%)</title><rect x="212.6" y="293" width="0.7" height="15.0" fill="rgb(219,69,31)" rx="2" ry="2" />
<text  x="215.55" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,239 samples, 0.26%)</title><rect x="186.3" y="197" width="3.1" height="15.0" fill="rgb(230,124,33)" rx="2" ry="2" />
<text  x="189.29" y="207.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,478 samples, 0.31%)</title><rect x="1131.4" y="357" width="3.7" height="15.0" fill="rgb(224,205,16)" rx="2" ry="2" />
<text  x="1134.36" y="367.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (278 samples, 0.06%)</title><rect x="19.2" y="485" width="0.7" height="15.0" fill="rgb(208,187,7)" rx="2" ry="2" />
<text  x="22.22" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (316 samples, 0.07%)</title><rect x="1072.3" y="405" width="0.8" height="15.0" fill="rgb(234,197,8)" rx="2" ry="2" />
<text  x="1075.32" y="415.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::with_editor (14,508 samples, 3.08%)</title><rect x="1104.0" y="421" width="36.3" height="15.0" fill="rgb(225,140,23)" rx="2" ry="2" />
<text  x="1106.99" y="431.5" >sud..</text>
</g>
<g >
<title>__GI___libc_free (246 samples, 0.05%)</title><rect x="220.8" y="197" width="0.6" height="15.0" fill="rgb(244,223,22)" rx="2" ry="2" />
<text  x="223.75" y="207.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (280 samples, 0.06%)</title><rect x="212.6" y="341" width="0.7" height="15.0" fill="rgb(206,114,29)" rx="2" ry="2" />
<text  x="215.55" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,516 samples, 0.32%)</title><rect x="186.2" y="245" width="3.8" height="15.0" fill="rgb(245,16,3)" rx="2" ry="2" />
<text  x="189.18" y="255.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,197 samples, 0.47%)</title><rect x="1081.9" y="357" width="5.5" height="15.0" fill="rgb(250,3,36)" rx="2" ry="2" />
<text  x="1084.89" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (243 samples, 0.05%)</title><rect x="1079.3" y="373" width="0.6" height="15.0" fill="rgb(242,67,22)" rx="2" ry="2" />
<text  x="1082.32" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,720 samples, 0.58%)</title><rect x="283.3" y="373" width="6.8" height="15.0" fill="rgb(236,113,54)" rx="2" ry="2" />
<text  x="286.26" y="383.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::fill_cat_continuity (576 samples, 0.12%)</title><rect x="1146.8" y="437" width="1.4" height="15.0" fill="rgb(239,24,24)" rx="2" ry="2" />
<text  x="1149.76" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,632 samples, 0.56%)</title><rect x="1149.4" y="357" width="6.6" height="15.0" fill="rgb(232,134,54)" rx="2" ry="2" />
<text  x="1152.37" y="367.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match_at (289 samples, 0.06%)</title><rect x="191.7" y="405" width="0.7" height="15.0" fill="rgb(207,21,19)" rx="2" ry="2" />
<text  x="194.70" y="415.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3,148 samples, 0.67%)</title><rect x="159.9" y="245" width="7.8" height="15.0" fill="rgb(246,43,26)" rx="2" ry="2" />
<text  x="162.86" y="255.5" ></text>
</g>
<g >
<title>unicode_normalization::normalize::decompose_compatible (157 samples, 0.03%)</title><rect x="1113.5" y="293" width="0.4" height="15.0" fill="rgb(216,159,46)" rx="2" ry="2" />
<text  x="1116.49" y="303.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (266 samples, 0.06%)</title><rect x="333.0" y="261" width="0.7" height="15.0" fill="rgb(237,138,22)" rx="2" ry="2" />
<text  x="336.00" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;]&gt; (5,854 samples, 1.24%)</title><rect x="226.2" y="405" width="14.7" height="15.0" fill="rgb(232,32,21)" rx="2" ry="2" />
<text  x="229.24" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (722 samples, 0.15%)</title><rect x="246.8" y="309" width="1.8" height="15.0" fill="rgb(226,163,10)" rx="2" ry="2" />
<text  x="249.81" y="319.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (190 samples, 0.04%)</title><rect x="1061.9" y="293" width="0.5" height="15.0" fill="rgb(239,224,39)" rx="2" ry="2" />
<text  x="1064.95" y="303.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (373 samples, 0.08%)</title><rect x="308.1" y="261" width="0.9" height="15.0" fill="rgb(220,226,23)" rx="2" ry="2" />
<text  x="311.09" y="271.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (293 samples, 0.06%)</title><rect x="222.0" y="149" width="0.8" height="15.0" fill="rgb(248,121,16)" rx="2" ry="2" />
<text  x="225.02" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3,501 samples, 0.74%)</title><rect x="323.9" y="181" width="8.8" height="15.0" fill="rgb(248,29,5)" rx="2" ry="2" />
<text  x="326.92" y="191.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (24,636 samples, 5.22%)</title><rect x="921.6" y="357" width="61.6" height="15.0" fill="rgb(254,179,9)" rx="2" ry="2" />
<text  x="924.58" y="367.5" >&lt;F as ..</text>
</g>
<g >
<title>__GI___libc_malloc (2,012 samples, 0.43%)</title><rect x="1088.9" y="197" width="5.0" height="15.0" fill="rgb(236,158,11)" rx="2" ry="2" />
<text  x="1091.88" y="207.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (134 samples, 0.03%)</title><rect x="1175.6" y="421" width="0.3" height="15.0" fill="rgb(220,67,11)" rx="2" ry="2" />
<text  x="1178.56" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (280 samples, 0.06%)</title><rect x="212.6" y="325" width="0.7" height="15.0" fill="rgb(208,68,6)" rx="2" ry="2" />
<text  x="215.55" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (227 samples, 0.05%)</title><rect x="224.7" y="293" width="0.5" height="15.0" fill="rgb(247,40,52)" rx="2" ry="2" />
<text  x="227.67" y="303.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (181 samples, 0.04%)</title><rect x="133.7" y="357" width="0.5" height="15.0" fill="rgb(252,139,8)" rx="2" ry="2" />
<text  x="136.70" y="367.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::shortest_dfa (236 samples, 0.05%)</title><rect x="191.8" y="341" width="0.6" height="15.0" fill="rgb(254,62,37)" rx="2" ry="2" />
<text  x="194.78" y="351.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (155 samples, 0.03%)</title><rect x="276.7" y="181" width="0.4" height="15.0" fill="rgb(209,158,3)" rx="2" ry="2" />
<text  x="279.70" y="191.5" ></text>
</g>
<g >
<title>alloc::string::String::push (4,643 samples, 0.98%)</title><rect x="312.1" y="245" width="11.7" height="15.0" fill="rgb(205,160,33)" rx="2" ry="2" />
<text  x="315.14" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (290 samples, 0.06%)</title><rect x="128.3" y="277" width="0.7" height="15.0" fill="rgb(238,213,32)" rx="2" ry="2" />
<text  x="131.31" y="287.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,151 samples, 0.24%)</title><rect x="221.6" y="245" width="2.9" height="15.0" fill="rgb(248,141,3)" rx="2" ry="2" />
<text  x="224.61" y="255.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i32 (553 samples, 0.12%)</title><rect x="302.1" y="277" width="1.4" height="15.0" fill="rgb(218,223,22)" rx="2" ry="2" />
<text  x="305.11" y="287.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (266 samples, 0.06%)</title><rect x="239.8" y="277" width="0.7" height="15.0" fill="rgb(211,168,31)" rx="2" ry="2" />
<text  x="242.80" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (2,792 samples, 0.59%)</title><rect x="1149.4" y="373" width="7.0" height="15.0" fill="rgb(210,218,46)" rx="2" ry="2" />
<text  x="1152.37" y="383.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (172 samples, 0.04%)</title><rect x="1084.6" y="325" width="0.4" height="15.0" fill="rgb(238,179,50)" rx="2" ry="2" />
<text  x="1087.55" y="335.5" ></text>
</g>
<g >
<title>regex::pool::Pool&lt;T&gt;::get (160 samples, 0.03%)</title><rect x="147.0" y="325" width="0.4" height="15.0" fill="rgb(253,24,10)" rx="2" ry="2" />
<text  x="150.02" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,594 samples, 0.34%)</title><rect x="1046.9" y="341" width="4.0" height="15.0" fill="rgb(222,229,37)" rx="2" ry="2" />
<text  x="1049.88" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (139 samples, 0.03%)</title><rect x="216.6" y="213" width="0.4" height="15.0" fill="rgb(234,97,5)" rx="2" ry="2" />
<text  x="219.64" y="223.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_some (269 samples, 0.06%)</title><rect x="601.2" y="405" width="0.6" height="15.0" fill="rgb(240,67,26)" rx="2" ry="2" />
<text  x="604.15" y="415.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (5,419 samples, 1.15%)</title><rect x="539.4" y="389" width="13.6" height="15.0" fill="rgb(224,185,43)" rx="2" ry="2" />
<text  x="542.41" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (3,501 samples, 0.74%)</title><rect x="323.9" y="149" width="8.8" height="15.0" fill="rgb(247,64,37)" rx="2" ry="2" />
<text  x="326.92" y="159.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt; (639 samples, 0.14%)</title><rect x="216.4" y="293" width="1.6" height="15.0" fill="rgb(239,228,6)" rx="2" ry="2" />
<text  x="219.43" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (182 samples, 0.04%)</title><rect x="304.5" y="229" width="0.5" height="15.0" fill="rgb(241,107,41)" rx="2" ry="2" />
<text  x="307.54" y="239.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (181 samples, 0.04%)</title><rect x="133.7" y="341" width="0.5" height="15.0" fill="rgb(231,75,0)" rx="2" ry="2" />
<text  x="136.70" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (1,701 samples, 0.36%)</title><rect x="906.5" y="261" width="4.3" height="15.0" fill="rgb(225,19,21)" rx="2" ry="2" />
<text  x="909.53" y="271.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (3,763 samples, 0.80%)</title><rect x="416.6" y="325" width="9.5" height="15.0" fill="rgb(242,108,47)" rx="2" ry="2" />
<text  x="419.65" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (249 samples, 0.05%)</title><rect x="1082.4" y="277" width="0.6" height="15.0" fill="rgb(216,140,0)" rx="2" ry="2" />
<text  x="1085.41" y="287.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::is_katakana_node (353 samples, 0.07%)</title><rect x="204.2" y="421" width="0.9" height="15.0" fill="rgb(212,45,2)" rx="2" ry="2" />
<text  x="207.18" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (2,854 samples, 0.61%)</title><rect x="342.3" y="261" width="7.2" height="15.0" fill="rgb(216,55,25)" rx="2" ry="2" />
<text  x="345.35" y="271.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (464 samples, 0.10%)</title><rect x="1030.7" y="261" width="1.1" height="15.0" fill="rgb(226,120,22)" rx="2" ry="2" />
<text  x="1033.66" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,516 samples, 0.32%)</title><rect x="186.2" y="229" width="3.8" height="15.0" fill="rgb(236,217,48)" rx="2" ry="2" />
<text  x="189.18" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sudachi::analysis::node::Node&gt;&gt; (2,235 samples, 0.47%)</title><rect x="235.3" y="373" width="5.6" height="15.0" fill="rgb(226,0,16)" rx="2" ry="2" />
<text  x="238.30" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (170 samples, 0.04%)</title><rect x="241.8" y="437" width="0.4" height="15.0" fill="rgb(250,38,2)" rx="2" ry="2" />
<text  x="244.75" y="447.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,421 samples, 0.30%)</title><rect x="196.4" y="341" width="3.5" height="15.0" fill="rgb(216,192,41)" rx="2" ry="2" />
<text  x="199.39" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (123 samples, 0.03%)</title><rect x="350.6" y="133" width="0.3" height="15.0" fill="rgb(208,23,49)" rx="2" ry="2" />
<text  x="353.57" y="143.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (153 samples, 0.03%)</title><rect x="1115.0" y="245" width="0.4" height="15.0" fill="rgb(249,147,29)" rx="2" ry="2" />
<text  x="1118.05" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (527 samples, 0.11%)</title><rect x="1170.7" y="405" width="1.3" height="15.0" fill="rgb(239,148,28)" rx="2" ry="2" />
<text  x="1173.65" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sudachi::analysis::node::Node&gt;&gt; (206 samples, 0.04%)</title><rect x="225.6" y="437" width="0.5" height="15.0" fill="rgb(232,80,45)" rx="2" ry="2" />
<text  x="228.62" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (500 samples, 0.11%)</title><rect x="218.9" y="181" width="1.2" height="15.0" fill="rgb(235,178,36)" rx="2" ry="2" />
<text  x="221.85" y="191.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (180 samples, 0.04%)</title><rect x="102.0" y="373" width="0.4" height="15.0" fill="rgb(231,50,19)" rx="2" ry="2" />
<text  x="104.95" y="383.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (177 samples, 0.04%)</title><rect x="1189.2" y="437" width="0.5" height="15.0" fill="rgb(250,46,4)" rx="2" ry="2" />
<text  x="1192.23" y="447.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::collect_results (488 samples, 0.10%)</title><rect x="201.5" y="469" width="1.2" height="15.0" fill="rgb(215,75,18)" rx="2" ry="2" />
<text  x="204.45" y="479.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (167 samples, 0.04%)</title><rect x="181.5" y="309" width="0.4" height="15.0" fill="rgb(243,74,8)" rx="2" ry="2" />
<text  x="184.46" y="319.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (184 samples, 0.04%)</title><rect x="247.1" y="261" width="0.5" height="15.0" fill="rgb(243,27,22)" rx="2" ry="2" />
<text  x="250.09" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next (148 samples, 0.03%)</title><rect x="177.0" y="245" width="0.3" height="15.0" fill="rgb(232,60,10)" rx="2" ry="2" />
<text  x="179.97" y="255.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (193 samples, 0.04%)</title><rect x="190.0" y="229" width="0.5" height="15.0" fill="rgb(212,7,7)" rx="2" ry="2" />
<text  x="193.05" y="239.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin::rewrite_gen (7,938 samples, 1.68%)</title><rect x="205.5" y="437" width="19.9" height="15.0" fill="rgb(240,209,29)" rx="2" ry="2" />
<text  x="208.54" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (133 samples, 0.03%)</title><rect x="350.5" y="181" width="0.4" height="15.0" fill="rgb(214,226,35)" rx="2" ry="2" />
<text  x="353.54" y="191.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (502 samples, 0.11%)</title><rect x="125.6" y="373" width="1.3" height="15.0" fill="rgb(222,52,54)" rx="2" ry="2" />
<text  x="128.60" y="383.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (539 samples, 0.11%)</title><rect x="1050.9" y="309" width="1.3" height="15.0" fill="rgb(227,124,27)" rx="2" ry="2" />
<text  x="1053.87" y="319.5" ></text>
</g>
<g >
<title>_int_free (1,761 samples, 0.37%)</title><rect x="1151.1" y="245" width="4.5" height="15.0" fill="rgb(207,148,27)" rx="2" ry="2" />
<text  x="1154.15" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_dictionary_id (312 samples, 0.07%)</title><rect x="1069.4" y="405" width="0.8" height="15.0" fill="rgb(252,132,8)" rx="2" ry="2" />
<text  x="1072.44" y="415.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (305 samples, 0.06%)</title><rect x="1050.1" y="213" width="0.8" height="15.0" fill="rgb(250,52,16)" rx="2" ry="2" />
<text  x="1053.11" y="223.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (289 samples, 0.06%)</title><rect x="1066.9" y="309" width="0.8" height="15.0" fill="rgb(250,154,17)" rx="2" ry="2" />
<text  x="1069.93" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::u32_array_parser (352 samples, 0.07%)</title><rect x="350.1" y="245" width="0.9" height="15.0" fill="rgb(222,49,48)" rx="2" ry="2" />
<text  x="353.08" y="255.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (305 samples, 0.06%)</title><rect x="1050.1" y="229" width="0.8" height="15.0" fill="rgb(206,170,44)" rx="2" ry="2" />
<text  x="1053.11" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;T as core::fmt::Display&gt;::fmt (154 samples, 0.03%)</title><rect x="1175.0" y="421" width="0.4" height="15.0" fill="rgb(223,131,0)" rx="2" ry="2" />
<text  x="1177.99" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (628 samples, 0.13%)</title><rect x="1159.3" y="341" width="1.5" height="15.0" fill="rgb(224,168,23)" rx="2" ry="2" />
<text  x="1162.25" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (148 samples, 0.03%)</title><rect x="1184.8" y="437" width="0.3" height="15.0" fill="rgb(215,172,28)" rx="2" ry="2" />
<text  x="1187.75" y="447.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (539 samples, 0.11%)</title><rect x="1050.9" y="245" width="1.3" height="15.0" fill="rgb(205,223,21)" rx="2" ry="2" />
<text  x="1053.87" y="255.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (145 samples, 0.03%)</title><rect x="432.8" y="341" width="0.3" height="15.0" fill="rgb(250,131,43)" rx="2" ry="2" />
<text  x="435.75" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2,253 samples, 0.48%)</title><rect x="987.3" y="389" width="5.7" height="15.0" fill="rgb(244,222,16)" rx="2" ry="2" />
<text  x="990.34" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (312 samples, 0.07%)</title><rect x="223.7" y="197" width="0.8" height="15.0" fill="rgb(225,11,19)" rx="2" ry="2" />
<text  x="226.70" y="207.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::trace_stack (122 samples, 0.03%)</title><rect x="114.2" y="373" width="0.3" height="15.0" fill="rgb(215,62,25)" rx="2" ry="2" />
<text  x="117.20" y="383.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (290 samples, 0.06%)</title><rect x="331.5" y="85" width="0.7" height="15.0" fill="rgb(249,131,48)" rx="2" ry="2" />
<text  x="334.47" y="95.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array (219 samples, 0.05%)</title><rect x="535.4" y="341" width="0.6" height="15.0" fill="rgb(250,15,13)" rx="2" ry="2" />
<text  x="538.44" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::any_bit_set (326 samples, 0.07%)</title><rect x="1047.9" y="277" width="0.8" height="15.0" fill="rgb(225,157,44)" rx="2" ry="2" />
<text  x="1050.91" y="287.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (261 samples, 0.06%)</title><rect x="1052.2" y="325" width="0.7" height="15.0" fill="rgb(224,216,28)" rx="2" ry="2" />
<text  x="1055.22" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (181 samples, 0.04%)</title><rect x="26.1" y="485" width="0.5" height="15.0" fill="rgb(220,0,5)" rx="2" ry="2" />
<text  x="29.14" y="495.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (242 samples, 0.05%)</title><rect x="460.2" y="405" width="0.6" height="15.0" fill="rgb(215,178,17)" rx="2" ry="2" />
<text  x="463.18" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (4,207 samples, 0.89%)</title><rect x="507.9" y="245" width="10.5" height="15.0" fill="rgb(213,199,49)" rx="2" ry="2" />
<text  x="510.86" y="255.5" ></text>
</g>
<g >
<title>__rdl_alloc (202 samples, 0.04%)</title><rect x="341.7" y="133" width="0.6" height="15.0" fill="rgb(223,94,6)" rx="2" ry="2" />
<text  x="344.75" y="143.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::build_lattice (298,412 samples, 63.27%)</title><rect x="354.2" y="453" width="746.5" height="15.0" fill="rgb(243,221,36)" rx="2" ry="2" />
<text  x="357.22" y="463.5" >sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::build_lattice</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at (190 samples, 0.04%)</title><rect x="1061.9" y="309" width="0.5" height="15.0" fill="rgb(243,170,5)" rx="2" ry="2" />
<text  x="1064.95" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (127 samples, 0.03%)</title><rect x="68.9" y="341" width="0.3" height="15.0" fill="rgb(235,108,13)" rx="2" ry="2" />
<text  x="71.90" y="351.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (183 samples, 0.04%)</title><rect x="311.4" y="229" width="0.4" height="15.0" fill="rgb(214,163,25)" rx="2" ry="2" />
<text  x="314.37" y="239.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (2,612 samples, 0.55%)</title><rect x="283.5" y="325" width="6.6" height="15.0" fill="rgb(238,1,28)" rx="2" ry="2" />
<text  x="286.53" y="335.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (2,649 samples, 0.56%)</title><rect x="139.5" y="325" width="6.6" height="15.0" fill="rgb(237,71,35)" rx="2" ry="2" />
<text  x="142.48" y="335.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::prefix_at (1,450 samples, 0.31%)</title><rect x="1136.1" y="261" width="3.6" height="15.0" fill="rgb(234,80,53)" rx="2" ry="2" />
<text  x="1139.12" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (206 samples, 0.04%)</title><rect x="225.6" y="421" width="0.5" height="15.0" fill="rgb(230,143,24)" rx="2" ry="2" />
<text  x="228.62" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (291 samples, 0.06%)</title><rect x="212.5" y="357" width="0.8" height="15.0" fill="rgb(234,156,17)" rx="2" ry="2" />
<text  x="215.53" y="367.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (855 samples, 0.18%)</title><rect x="1050.9" y="357" width="2.1" height="15.0" fill="rgb(215,224,9)" rx="2" ry="2" />
<text  x="1053.87" y="367.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (1,963 samples, 0.42%)</title><rect x="910.8" y="229" width="4.9" height="15.0" fill="rgb(241,95,23)" rx="2" ry="2" />
<text  x="913.78" y="239.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (125 samples, 0.03%)</title><rect x="332.7" y="229" width="0.3" height="15.0" fill="rgb(242,7,22)" rx="2" ry="2" />
<text  x="335.68" y="239.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (161 samples, 0.03%)</title><rect x="213.8" y="309" width="0.4" height="15.0" fill="rgb(207,154,36)" rx="2" ry="2" />
<text  x="216.77" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::surface (158 samples, 0.03%)</title><rect x="1185.3" y="453" width="0.4" height="15.0" fill="rgb(249,55,53)" rx="2" ry="2" />
<text  x="1188.31" y="463.5" ></text>
</g>
<g >
<title>__fdget_pos (209 samples, 0.04%)</title><rect x="1159.5" y="293" width="0.5" height="15.0" fill="rgb(214,133,25)" rx="2" ry="2" />
<text  x="1162.51" y="303.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,580 samples, 4.36%)</title><rect x="381.1" y="389" width="51.5" height="15.0" fill="rgb(212,60,6)" rx="2" ry="2" />
<text  x="384.11" y="399.5" >&lt;core..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5,267 samples, 1.12%)</title><rect x="705.9" y="277" width="13.2" height="15.0" fill="rgb(233,172,2)" rx="2" ry="2" />
<text  x="708.93" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (300 samples, 0.06%)</title><rect x="220.7" y="277" width="0.7" height="15.0" fill="rgb(244,60,43)" rx="2" ry="2" />
<text  x="223.67" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (1,456 samples, 0.31%)</title><rect x="285.1" y="181" width="3.7" height="15.0" fill="rgb(225,62,18)" rx="2" ry="2" />
<text  x="288.13" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,544 samples, 0.33%)</title><rect x="231.3" y="293" width="3.8" height="15.0" fill="rgb(221,109,38)" rx="2" ry="2" />
<text  x="234.28" y="303.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (22,651 samples, 4.80%)</title><rect x="921.6" y="309" width="56.6" height="15.0" fill="rgb(206,200,2)" rx="2" ry="2" />
<text  x="924.58" y="319.5" >&lt;F as ..</text>
</g>
<g >
<title>unicode_normalization::perfect_hash::mph_lookup (438 samples, 0.09%)</title><rect x="1130.1" y="325" width="1.1" height="15.0" fill="rgb(224,28,17)" rx="2" ry="2" />
<text  x="1133.12" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (191 samples, 0.04%)</title><rect x="225.7" y="389" width="0.4" height="15.0" fill="rgb(215,30,18)" rx="2" ry="2" />
<text  x="228.65" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (155 samples, 0.03%)</title><rect x="332.2" y="101" width="0.4" height="15.0" fill="rgb(208,186,27)" rx="2" ry="2" />
<text  x="335.20" y="111.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (945 samples, 0.20%)</title><rect x="1114.1" y="309" width="2.4" height="15.0" fill="rgb(213,4,37)" rx="2" ry="2" />
<text  x="1117.12" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (527 samples, 0.11%)</title><rect x="1170.7" y="437" width="1.3" height="15.0" fill="rgb(220,6,30)" rx="2" ry="2" />
<text  x="1173.65" y="447.5" ></text>
</g>
<g >
<title>fancy_regex::prev_codepoint_ix (496 samples, 0.11%)</title><rect x="97.2" y="389" width="1.2" height="15.0" fill="rgb(234,146,0)" rx="2" ry="2" />
<text  x="100.19" y="399.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (253 samples, 0.05%)</title><rect x="94.4" y="357" width="0.7" height="15.0" fill="rgb(231,221,2)" rx="2" ry="2" />
<text  x="97.44" y="367.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,671 samples, 0.35%)</title><rect x="1135.8" y="309" width="4.2" height="15.0" fill="rgb(213,9,15)" rx="2" ry="2" />
<text  x="1138.79" y="319.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (143 samples, 0.03%)</title><rect x="68.5" y="373" width="0.3" height="15.0" fill="rgb(240,199,13)" rx="2" ry="2" />
<text  x="71.47" y="383.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (3,478 samples, 0.74%)</title><rect x="268.9" y="357" width="8.7" height="15.0" fill="rgb(220,9,5)" rx="2" ry="2" />
<text  x="271.90" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (1,606 samples, 0.34%)</title><rect x="231.3" y="309" width="4.0" height="15.0" fill="rgb(237,148,48)" rx="2" ry="2" />
<text  x="234.28" y="319.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::step (381 samples, 0.08%)</title><rect x="195.1" y="245" width="1.0" height="15.0" fill="rgb(227,178,33)" rx="2" ry="2" />
<text  x="198.13" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (290 samples, 0.06%)</title><rect x="275.8" y="117" width="0.7" height="15.0" fill="rgb(229,79,18)" rx="2" ry="2" />
<text  x="278.76" y="127.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSyncStr&gt; (208 samples, 0.04%)</title><rect x="182.1" y="341" width="0.5" height="15.0" fill="rgb(230,173,29)" rx="2" ry="2" />
<text  x="185.12" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (492 samples, 0.10%)</title><rect x="1086.2" y="341" width="1.2" height="15.0" fill="rgb(207,181,6)" rx="2" ry="2" />
<text  x="1089.16" y="351.5" ></text>
</g>
<g >
<title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,170 samples, 0.25%)</title><rect x="66.8" y="469" width="2.9" height="15.0" fill="rgb(226,155,34)" rx="2" ry="2" />
<text  x="69.78" y="479.5" ></text>
</g>
<g >
<title>aho_corasick::packed::api::Searcher::find (1,387 samples, 0.29%)</title><rect x="1136.3" y="229" width="3.4" height="15.0" fill="rgb(245,79,28)" rx="2" ry="2" />
<text  x="1139.27" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,632 samples, 0.56%)</title><rect x="1149.4" y="341" width="6.6" height="15.0" fill="rgb(224,174,30)" rx="2" ry="2" />
<text  x="1152.37" y="351.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (2,161 samples, 0.46%)</title><rect x="1056.3" y="261" width="5.4" height="15.0" fill="rgb(208,31,19)" rx="2" ry="2" />
<text  x="1059.28" y="271.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1,701 samples, 0.36%)</title><rect x="906.5" y="229" width="4.3" height="15.0" fill="rgb(242,211,13)" rx="2" ry="2" />
<text  x="909.53" y="239.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::can_bow (928 samples, 0.20%)</title><rect x="1070.8" y="437" width="2.3" height="15.0" fill="rgb(236,88,37)" rx="2" ry="2" />
<text  x="1073.82" y="447.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,333 samples, 0.28%)</title><rect x="140.2" y="293" width="3.3" height="15.0" fill="rgb(252,36,50)" rx="2" ry="2" />
<text  x="143.20" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (573 samples, 0.12%)</title><rect x="271.9" y="197" width="1.5" height="15.0" fill="rgb(207,156,32)" rx="2" ry="2" />
<text  x="274.95" y="207.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (159 samples, 0.03%)</title><rect x="12.0" y="485" width="0.4" height="15.0" fill="rgb(240,137,14)" rx="2" ry="2" />
<text  x="15.03" y="495.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max (283 samples, 0.06%)</title><rect x="536.0" y="325" width="0.7" height="15.0" fill="rgb(227,148,15)" rx="2" ry="2" />
<text  x="538.99" y="335.5" ></text>
</g>
<g >
<title>unicode_normalization::normalize::decompose (156 samples, 0.03%)</title><rect x="1113.5" y="277" width="0.4" height="15.0" fill="rgb(244,75,15)" rx="2" ry="2" />
<text  x="1116.49" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (280 samples, 0.06%)</title><rect x="268.0" y="197" width="0.7" height="15.0" fill="rgb(243,190,43)" rx="2" ry="2" />
<text  x="270.98" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10,089 samples, 2.14%)</title><rect x="493.9" y="325" width="25.3" height="15.0" fill="rgb(206,227,33)" rx="2" ry="2" />
<text  x="496.93" y="335.5" >&lt;..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for  (41,775 samples, 8.86%)</title><rect x="783.0" y="325" width="104.5" height="15.0" fill="rgb(251,205,11)" rx="2" ry="2" />
<text  x="785.96" y="335.5" >core::hash::..</text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (166 samples, 0.04%)</title><rect x="146.3" y="309" width="0.4" height="15.0" fill="rgb(240,69,23)" rx="2" ry="2" />
<text  x="149.33" y="319.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (634 samples, 0.13%)</title><rect x="1105.2" y="373" width="1.6" height="15.0" fill="rgb(224,81,29)" rx="2" ry="2" />
<text  x="1108.19" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (605 samples, 0.13%)</title><rect x="1083.0" y="277" width="1.5" height="15.0" fill="rgb(227,70,9)" rx="2" ry="2" />
<text  x="1086.03" y="287.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (476 samples, 0.10%)</title><rect x="1156.5" y="341" width="1.2" height="15.0" fill="rgb(218,15,48)" rx="2" ry="2" />
<text  x="1159.47" y="351.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (281 samples, 0.06%)</title><rect x="251.2" y="405" width="0.7" height="15.0" fill="rgb(208,22,20)" rx="2" ry="2" />
<text  x="254.18" y="415.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (187 samples, 0.04%)</title><rect x="180.8" y="277" width="0.4" height="15.0" fill="rgb(252,96,32)" rx="2" ry="2" />
<text  x="183.78" y="287.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (29,487 samples, 6.25%)</title><rect x="688.7" y="309" width="73.8" height="15.0" fill="rgb(250,95,16)" rx="2" ry="2" />
<text  x="691.69" y="319.5" >&lt;core::h..</text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::lookup::{{closure}} (386 samples, 0.08%)</title><rect x="433.1" y="325" width="1.0" height="15.0" fill="rgb(245,48,21)" rx="2" ry="2" />
<text  x="436.12" y="335.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (152 samples, 0.03%)</title><rect x="1094.3" y="261" width="0.4" height="15.0" fill="rgb(221,111,47)" rx="2" ry="2" />
<text  x="1097.30" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (124 samples, 0.03%)</title><rect x="1047.6" y="261" width="0.3" height="15.0" fill="rgb(214,21,13)" rx="2" ry="2" />
<text  x="1050.60" y="271.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (316 samples, 0.07%)</title><rect x="1052.2" y="341" width="0.8" height="15.0" fill="rgb(247,45,45)" rx="2" ry="2" />
<text  x="1055.22" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_param (24,594 samples, 5.21%)</title><rect x="1008.9" y="437" width="61.6" height="15.0" fill="rgb(223,150,39)" rx="2" ry="2" />
<text  x="1011.93" y="447.5" >sudach..</text>
</g>
<g >
<title>unicode_normalization::perfect_hash::mph_lookup (200 samples, 0.04%)</title><rect x="1120.5" y="309" width="0.5" height="15.0" fill="rgb(230,59,41)" rx="2" ry="2" />
<text  x="1123.48" y="319.5" ></text>
</g>
<g >
<title>malloc_consolidate (120 samples, 0.03%)</title><rect x="61.8" y="485" width="0.3" height="15.0" fill="rgb(235,184,50)" rx="2" ry="2" />
<text  x="64.79" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1,963 samples, 0.42%)</title><rect x="910.8" y="261" width="4.9" height="15.0" fill="rgb(222,124,17)" rx="2" ry="2" />
<text  x="913.78" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (596 samples, 0.13%)</title><rect x="1159.3" y="325" width="1.5" height="15.0" fill="rgb(243,58,28)" rx="2" ry="2" />
<text  x="1162.33" y="335.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher (186 samples, 0.04%)</title><rect x="147.0" y="341" width="0.4" height="15.0" fill="rgb(213,18,32)" rx="2" ry="2" />
<text  x="149.95" y="351.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (884 samples, 0.19%)</title><rect x="1019.0" y="405" width="2.2" height="15.0" fill="rgb(230,122,42)" rx="2" ry="2" />
<text  x="1021.95" y="415.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (2,328 samples, 0.49%)</title><rect x="1175.9" y="421" width="5.8" height="15.0" fill="rgb(223,36,41)" rx="2" ry="2" />
<text  x="1178.90" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (394 samples, 0.08%)</title><rect x="218.9" y="165" width="1.0" height="15.0" fill="rgb(209,157,3)" rx="2" ry="2" />
<text  x="221.89" y="175.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u32 (385 samples, 0.08%)</title><rect x="1085.2" y="293" width="1.0" height="15.0" fill="rgb(226,155,34)" rx="2" ry="2" />
<text  x="1088.19" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3,781 samples, 0.80%)</title><rect x="312.6" y="229" width="9.5" height="15.0" fill="rgb(217,25,51)" rx="2" ry="2" />
<text  x="315.64" y="239.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (126 samples, 0.03%)</title><rect x="1185.4" y="373" width="0.3" height="15.0" fill="rgb(214,71,9)" rx="2" ry="2" />
<text  x="1188.39" y="383.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (524 samples, 0.11%)</title><rect x="257.8" y="421" width="1.3" height="15.0" fill="rgb(245,32,5)" rx="2" ry="2" />
<text  x="260.82" y="431.5" ></text>
</g>
<g >
<title>alloc::string::String::push (706 samples, 0.15%)</title><rect x="271.9" y="229" width="1.7" height="15.0" fill="rgb(221,26,27)" rx="2" ry="2" />
<text  x="274.88" y="239.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (20,120 samples, 4.27%)</title><rect x="921.6" y="261" width="50.3" height="15.0" fill="rgb(228,105,22)" rx="2" ry="2" />
<text  x="924.58" y="271.5" >nom::..</text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (8,022 samples, 1.70%)</title><rect x="205.3" y="453" width="20.1" height="15.0" fill="rgb(233,182,10)" rx="2" ry="2" />
<text  x="208.33" y="463.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (484 samples, 0.10%)</title><rect x="254.0" y="437" width="1.2" height="15.0" fill="rgb(251,109,32)" rx="2" ry="2" />
<text  x="257.04" y="447.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (877 samples, 0.19%)</title><rect x="196.7" y="309" width="2.2" height="15.0" fill="rgb(232,38,3)" rx="2" ry="2" />
<text  x="199.75" y="319.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::done (133 samples, 0.03%)</title><rect x="215.9" y="421" width="0.3" height="15.0" fill="rgb(235,27,50)" rx="2" ry="2" />
<text  x="218.89" y="431.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (1,015 samples, 0.22%)</title><rect x="430.0" y="357" width="2.5" height="15.0" fill="rgb(208,50,0)" rx="2" ry="2" />
<text  x="433.00" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (158 samples, 0.03%)</title><rect x="132.4" y="357" width="0.4" height="15.0" fill="rgb(247,71,36)" rx="2" ry="2" />
<text  x="135.40" y="367.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,179 samples, 0.46%)</title><rect x="186.1" y="357" width="5.5" height="15.0" fill="rgb(222,225,22)" rx="2" ry="2" />
<text  x="189.13" y="367.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::set_range (373 samples, 0.08%)</title><rect x="983.2" y="421" width="0.9" height="15.0" fill="rgb(207,190,32)" rx="2" ry="2" />
<text  x="986.21" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,045 samples, 0.22%)</title><rect x="984.4" y="341" width="2.7" height="15.0" fill="rgb(238,195,42)" rx="2" ry="2" />
<text  x="987.44" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,550 samples, 0.33%)</title><rect x="1043.0" y="277" width="3.9" height="15.0" fill="rgb(235,178,54)" rx="2" ry="2" />
<text  x="1046.01" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (182 samples, 0.04%)</title><rect x="304.5" y="245" width="0.5" height="15.0" fill="rgb(243,175,37)" rx="2" ry="2" />
<text  x="307.54" y="255.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (254 samples, 0.05%)</title><rect x="108.1" y="373" width="0.6" height="15.0" fill="rgb(215,84,7)" rx="2" ry="2" />
<text  x="111.05" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (500 samples, 0.11%)</title><rect x="218.9" y="197" width="1.2" height="15.0" fill="rgb(246,223,8)" rx="2" ry="2" />
<text  x="221.85" y="207.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (2,056 samples, 0.44%)</title><rect x="602.0" y="405" width="5.1" height="15.0" fill="rgb(247,109,42)" rx="2" ry="2" />
<text  x="604.96" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::set_len (165 samples, 0.03%)</title><rect x="988.3" y="293" width="0.4" height="15.0" fill="rgb(226,209,48)" rx="2" ry="2" />
<text  x="991.33" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,138 samples, 0.24%)</title><rect x="186.5" y="133" width="2.8" height="15.0" fill="rgb(209,135,7)" rx="2" ry="2" />
<text  x="189.48" y="143.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Pattern::is_prefix (443 samples, 0.09%)</title><rect x="1137.3" y="117" width="1.1" height="15.0" fill="rgb(208,137,52)" rx="2" ry="2" />
<text  x="1140.31" y="127.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_fold::{{closure}} (1,995 samples, 0.42%)</title><rect x="216.4" y="325" width="5.0" height="15.0" fill="rgb(239,224,30)" rx="2" ry="2" />
<text  x="219.43" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (3,602 samples, 0.76%)</title><rect x="216.4" y="405" width="9.0" height="15.0" fill="rgb(228,204,48)" rx="2" ry="2" />
<text  x="219.37" y="415.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8 (525 samples, 0.11%)</title><rect x="67.0" y="405" width="1.4" height="15.0" fill="rgb(217,181,41)" rx="2" ry="2" />
<text  x="70.04" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (302 samples, 0.06%)</title><rect x="12.5" y="485" width="0.7" height="15.0" fill="rgb(224,62,7)" rx="2" ry="2" />
<text  x="15.46" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (7,571 samples, 1.61%)</title><rect x="987.3" y="421" width="18.9" height="15.0" fill="rgb(224,0,30)" rx="2" ry="2" />
<text  x="990.28" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::utf16_string_parser (17,542 samples, 3.72%)</title><rect x="305.6" y="277" width="43.9" height="15.0" fill="rgb(242,147,2)" rx="2" ry="2" />
<text  x="308.60" y="287.5" >suda..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (773 samples, 0.16%)</title><rect x="467.4" y="421" width="1.9" height="15.0" fill="rgb(254,207,1)" rx="2" ry="2" />
<text  x="470.41" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (131 samples, 0.03%)</title><rect x="1134.7" y="325" width="0.4" height="15.0" fill="rgb(206,109,35)" rx="2" ry="2" />
<text  x="1137.73" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,629 samples, 0.56%)</title><rect x="283.5" y="357" width="6.6" height="15.0" fill="rgb(244,134,49)" rx="2" ry="2" />
<text  x="286.49" y="367.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (827 samples, 0.18%)</title><rect x="135.4" y="325" width="2.1" height="15.0" fill="rgb(233,188,2)" rx="2" ry="2" />
<text  x="138.43" y="335.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (154 samples, 0.03%)</title><rect x="223.0" y="181" width="0.4" height="15.0" fill="rgb(237,60,34)" rx="2" ry="2" />
<text  x="226.02" y="191.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2,278 samples, 0.48%)</title><rect x="336.6" y="165" width="5.7" height="15.0" fill="rgb(219,131,36)" rx="2" ry="2" />
<text  x="339.64" y="175.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite::{{closure}} (14,097 samples, 2.99%)</title><rect x="1105.0" y="405" width="35.3" height="15.0" fill="rgb(238,20,35)" rx="2" ry="2" />
<text  x="1108.02" y="415.5" >su..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5,289 samples, 1.12%)</title><rect x="993.0" y="357" width="13.2" height="15.0" fill="rgb(206,85,42)" rx="2" ry="2" />
<text  x="995.97" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (5,286 samples, 1.12%)</title><rect x="993.0" y="325" width="13.2" height="15.0" fill="rgb(241,98,40)" rx="2" ry="2" />
<text  x="995.97" y="335.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (596 samples, 0.13%)</title><rect x="432.6" y="389" width="1.5" height="15.0" fill="rgb(230,55,25)" rx="2" ry="2" />
<text  x="435.59" y="399.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (1,998 samples, 0.42%)</title><rect x="216.4" y="341" width="5.0" height="15.0" fill="rgb(220,128,21)" rx="2" ry="2" />
<text  x="219.43" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,571 samples, 0.33%)</title><rect x="1094.9" y="373" width="3.9" height="15.0" fill="rgb(238,25,47)" rx="2" ry="2" />
<text  x="1097.86" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (926 samples, 0.20%)</title><rect x="1095.9" y="149" width="2.3" height="15.0" fill="rgb(215,93,38)" rx="2" ry="2" />
<text  x="1098.86" y="159.5" ></text>
</g>
<g >
<title>__rdl_alloc (157 samples, 0.03%)</title><rect x="332.2" y="117" width="0.4" height="15.0" fill="rgb(236,13,54)" rx="2" ry="2" />
<text  x="335.20" y="127.5" ></text>
</g>
<g >
<title>regex::pool::Pool&lt;T&gt;::get (678 samples, 0.14%)</title><rect x="183.9" y="309" width="1.7" height="15.0" fill="rgb(214,107,4)" rx="2" ry="2" />
<text  x="186.92" y="319.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (770 samples, 0.16%)</title><rect x="430.6" y="341" width="1.9" height="15.0" fill="rgb(221,218,13)" rx="2" ry="2" />
<text  x="433.62" y="351.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::bitset_search (221 samples, 0.05%)</title><rect x="1112.3" y="325" width="0.6" height="15.0" fill="rgb(241,6,50)" rx="2" ry="2" />
<text  x="1115.31" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27,878 samples, 5.91%)</title><rect x="813.8" y="229" width="69.8" height="15.0" fill="rgb(223,133,0)" rx="2" ry="2" />
<text  x="816.84" y="239.5" >&lt;core::..</text>
</g>
<g >
<title>alloc::alloc::alloc (2,174 samples, 0.46%)</title><rect x="1088.8" y="213" width="5.4" height="15.0" fill="rgb(251,87,0)" rx="2" ry="2" />
<text  x="1091.77" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (924 samples, 0.20%)</title><rect x="246.7" y="357" width="2.3" height="15.0" fill="rgb(246,9,32)" rx="2" ry="2" />
<text  x="249.71" y="367.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,780 samples, 0.38%)</title><rect x="186.2" y="293" width="4.4" height="15.0" fill="rgb(233,122,43)" rx="2" ry="2" />
<text  x="189.15" y="303.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,478 samples, 0.74%)</title><rect x="268.9" y="341" width="8.7" height="15.0" fill="rgb(210,184,14)" rx="2" ry="2" />
<text  x="271.90" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,402 samples, 0.30%)</title><rect x="1094.9" y="245" width="3.5" height="15.0" fill="rgb(244,89,28)" rx="2" ry="2" />
<text  x="1097.86" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (637 samples, 0.14%)</title><rect x="989.1" y="277" width="1.6" height="15.0" fill="rgb(222,180,39)" rx="2" ry="2" />
<text  x="992.09" y="287.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (255 samples, 0.05%)</title><rect x="1103.2" y="341" width="0.6" height="15.0" fill="rgb(237,22,28)" rx="2" ry="2" />
<text  x="1106.20" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Byte::is_ascii_word (252 samples, 0.05%)</title><rect x="178.9" y="261" width="0.6" height="15.0" fill="rgb(218,153,17)" rx="2" ry="2" />
<text  x="181.91" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (562 samples, 0.12%)</title><rect x="197.4" y="293" width="1.4" height="15.0" fill="rgb(217,60,0)" rx="2" ry="2" />
<text  x="200.37" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,110 samples, 0.24%)</title><rect x="221.7" y="213" width="2.8" height="15.0" fill="rgb(231,84,7)" rx="2" ry="2" />
<text  x="224.71" y="223.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (540 samples, 0.11%)</title><rect x="252.0" y="389" width="1.3" height="15.0" fill="rgb(214,28,23)" rx="2" ry="2" />
<text  x="254.96" y="399.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::shortest_match_at (12,390 samples, 2.63%)</title><rect x="150.9" y="325" width="31.0" height="15.0" fill="rgb(228,34,27)" rx="2" ry="2" />
<text  x="153.88" y="335.5" >&lt;r..</text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (745 samples, 0.16%)</title><rect x="1100.7" y="453" width="1.9" height="15.0" fill="rgb(254,44,44)" rx="2" ry="2" />
<text  x="1103.75" y="463.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (605 samples, 0.13%)</title><rect x="209.8" y="341" width="1.5" height="15.0" fill="rgb(231,159,28)" rx="2" ry="2" />
<text  x="212.77" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (138 samples, 0.03%)</title><rect x="438.7" y="405" width="0.4" height="15.0" fill="rgb(212,224,39)" rx="2" ry="2" />
<text  x="441.73" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::u8_class (174 samples, 0.04%)</title><rect x="142.5" y="245" width="0.5" height="15.0" fill="rgb(229,63,51)" rx="2" ry="2" />
<text  x="145.53" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (123 samples, 0.03%)</title><rect x="29.5" y="485" width="0.3" height="15.0" fill="rgb(217,41,24)" rx="2" ry="2" />
<text  x="32.53" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,852 samples, 0.60%)</title><rect x="313.7" y="149" width="7.1" height="15.0" fill="rgb(247,225,52)" rx="2" ry="2" />
<text  x="316.68" y="159.5" ></text>
</g>
<g >
<title>sudachi::dic::dictionary::JapaneseDictionary::from_cfg (510 samples, 0.11%)</title><rect x="1156.4" y="469" width="1.3" height="15.0" fill="rgb(227,101,34)" rx="2" ry="2" />
<text  x="1159.44" y="479.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,027 samples, 0.22%)</title><rect x="1082.0" y="309" width="2.6" height="15.0" fill="rgb(250,66,21)" rx="2" ry="2" />
<text  x="1084.98" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,237 samples, 0.47%)</title><rect x="283.5" y="261" width="5.6" height="15.0" fill="rgb(245,196,47)" rx="2" ry="2" />
<text  x="286.53" y="271.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::get (146 samples, 0.03%)</title><rect x="129.1" y="373" width="0.4" height="15.0" fill="rgb(230,133,10)" rx="2" ry="2" />
<text  x="132.09" y="383.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (210 samples, 0.04%)</title><rect x="185.1" y="229" width="0.5" height="15.0" fill="rgb(252,115,40)" rx="2" ry="2" />
<text  x="188.09" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (187 samples, 0.04%)</title><rect x="276.0" y="101" width="0.5" height="15.0" fill="rgb(230,207,14)" rx="2" ry="2" />
<text  x="279.02" y="111.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (472 samples, 0.10%)</title><rect x="206.5" y="325" width="1.2" height="15.0" fill="rgb(222,64,33)" rx="2" ry="2" />
<text  x="209.51" y="335.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new_oov (346 samples, 0.07%)</title><rect x="1098.8" y="373" width="0.9" height="15.0" fill="rgb(211,71,50)" rx="2" ry="2" />
<text  x="1101.82" y="383.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::dfa::PremultipliedByteClass&lt;S&gt; as aho_corasick::automaton::Automaton&gt;::next_state (304 samples, 0.06%)</title><rect x="1111.1" y="245" width="0.7" height="15.0" fill="rgb(250,36,9)" rx="2" ry="2" />
<text  x="1114.08" y="255.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (298 samples, 0.06%)</title><rect x="289.1" y="293" width="0.8" height="15.0" fill="rgb(241,156,18)" rx="2" ry="2" />
<text  x="292.13" y="303.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_eos_node (473 samples, 0.10%)</title><rect x="459.8" y="437" width="1.2" height="15.0" fill="rgb(243,200,16)" rx="2" ry="2" />
<text  x="462.80" y="447.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,425 samples, 0.51%)</title><rect x="296.0" y="277" width="6.1" height="15.0" fill="rgb(216,55,36)" rx="2" ry="2" />
<text  x="299.05" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_flags (778 samples, 0.16%)</title><rect x="177.6" y="277" width="1.9" height="15.0" fill="rgb(239,164,50)" rx="2" ry="2" />
<text  x="180.59" y="287.5" ></text>
</g>
<g >
<title>_int_free (451 samples, 0.10%)</title><rect x="24.6" y="485" width="1.1" height="15.0" fill="rgb(247,46,7)" rx="2" ry="2" />
<text  x="27.58" y="495.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_literals (6,377 samples, 1.35%)</title><rect x="153.4" y="309" width="15.9" height="15.0" fill="rgb(249,126,40)" rx="2" ry="2" />
<text  x="156.38" y="319.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (205 samples, 0.04%)</title><rect x="141.1" y="277" width="0.6" height="15.0" fill="rgb(225,96,9)" rx="2" ry="2" />
<text  x="144.15" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (589 samples, 0.12%)</title><rect x="273.7" y="117" width="1.5" height="15.0" fill="rgb(221,159,3)" rx="2" ry="2" />
<text  x="276.69" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (187 samples, 0.04%)</title><rect x="193.4" y="357" width="0.5" height="15.0" fill="rgb(230,47,41)" rx="2" ry="2" />
<text  x="196.39" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,501 samples, 0.74%)</title><rect x="323.9" y="229" width="8.8" height="15.0" fill="rgb(209,208,9)" rx="2" ry="2" />
<text  x="326.92" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,199 samples, 0.47%)</title><rect x="1088.7" y="261" width="5.5" height="15.0" fill="rgb(207,93,11)" rx="2" ry="2" />
<text  x="1091.71" y="271.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (502 samples, 0.11%)</title><rect x="125.6" y="341" width="1.3" height="15.0" fill="rgb(218,224,21)" rx="2" ry="2" />
<text  x="128.60" y="351.5" ></text>
</g>
<g >
<title>core::ptr::read (841 samples, 0.18%)</title><rect x="105.9" y="357" width="2.2" height="15.0" fill="rgb(245,215,29)" rx="2" ry="2" />
<text  x="108.95" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (174 samples, 0.04%)</title><rect x="212.6" y="213" width="0.5" height="15.0" fill="rgb(234,182,22)" rx="2" ry="2" />
<text  x="215.63" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,010 samples, 0.21%)</title><rect x="246.6" y="405" width="2.5" height="15.0" fill="rgb(205,16,12)" rx="2" ry="2" />
<text  x="249.60" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (801 samples, 0.17%)</title><rect x="1048.9" y="309" width="2.0" height="15.0" fill="rgb(208,209,21)" rx="2" ry="2" />
<text  x="1051.87" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (177 samples, 0.04%)</title><rect x="1189.2" y="405" width="0.5" height="15.0" fill="rgb(244,37,12)" rx="2" ry="2" />
<text  x="1192.23" y="415.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (190 samples, 0.04%)</title><rect x="1061.9" y="261" width="0.5" height="15.0" fill="rgb(252,194,37)" rx="2" ry="2" />
<text  x="1064.95" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::get_best_path (4,806 samples, 1.02%)</title><rect x="241.5" y="453" width="12.0" height="15.0" fill="rgb(246,97,17)" rx="2" ry="2" />
<text  x="244.46" y="463.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_mul (129 samples, 0.03%)</title><rect x="535.7" y="309" width="0.3" height="15.0" fill="rgb(238,103,37)" rx="2" ry="2" />
<text  x="538.67" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::decode_dictword_id (407 samples, 0.09%)</title><rect x="1069.4" y="421" width="1.1" height="15.0" fill="rgb(244,60,29)" rx="2" ry="2" />
<text  x="1072.44" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (190 samples, 0.04%)</title><rect x="989.1" y="245" width="0.5" height="15.0" fill="rgb(228,107,10)" rx="2" ry="2" />
<text  x="992.09" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (3,763 samples, 0.80%)</title><rect x="1053.0" y="405" width="9.4" height="15.0" fill="rgb(231,227,31)" rx="2" ry="2" />
<text  x="1056.01" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (307 samples, 0.07%)</title><rect x="26.6" y="485" width="0.8" height="15.0" fill="rgb(250,119,10)" rx="2" ry="2" />
<text  x="29.60" y="495.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (214 samples, 0.05%)</title><rect x="1162.0" y="405" width="0.5" height="15.0" fill="rgb(246,192,41)" rx="2" ry="2" />
<text  x="1165.00" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[sudachi::analysis::node::Node]&gt; (3,344 samples, 0.71%)</title><rect x="226.9" y="357" width="8.4" height="15.0" fill="rgb(217,54,10)" rx="2" ry="2" />
<text  x="229.93" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,237 samples, 0.47%)</title><rect x="283.5" y="245" width="5.6" height="15.0" fill="rgb(225,152,5)" rx="2" ry="2" />
<text  x="286.53" y="255.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array (192 samples, 0.04%)</title><rect x="989.8" y="245" width="0.5" height="15.0" fill="rgb(218,165,24)" rx="2" ry="2" />
<text  x="992.85" y="255.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::ignore_yomigana::IgnoreYomiganaPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (1,608 samples, 0.34%)</title><rect x="1131.2" y="389" width="4.0" height="15.0" fill="rgb(216,78,50)" rx="2" ry="2" />
<text  x="1134.21" y="399.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (187 samples, 0.04%)</title><rect x="193.4" y="341" width="0.5" height="15.0" fill="rgb(233,42,24)" rx="2" ry="2" />
<text  x="196.39" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::dictionary::JapaneseDictionary::lexicon (179 samples, 0.04%)</title><rect x="368.7" y="405" width="0.4" height="15.0" fill="rgb(209,190,10)" rx="2" ry="2" />
<text  x="371.68" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (945 samples, 0.20%)</title><rect x="1131.8" y="277" width="2.4" height="15.0" fill="rgb(209,197,9)" rx="2" ry="2" />
<text  x="1134.80" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (856 samples, 0.18%)</title><rect x="175.2" y="261" width="2.1" height="15.0" fill="rgb(225,10,10)" rx="2" ry="2" />
<text  x="178.20" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (174 samples, 0.04%)</title><rect x="1162.7" y="405" width="0.5" height="15.0" fill="rgb(220,81,0)" rx="2" ry="2" />
<text  x="1165.74" y="415.5" ></text>
</g>
<g >
<title>core::fmt::write (226 samples, 0.05%)</title><rect x="28.7" y="485" width="0.6" height="15.0" fill="rgb(249,5,27)" rx="2" ry="2" />
<text  x="31.75" y="495.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (524 samples, 0.11%)</title><rect x="1040.2" y="277" width="1.4" height="15.0" fill="rgb(238,205,29)" rx="2" ry="2" />
<text  x="1043.25" y="287.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::part_of_speech (223 samples, 0.05%)</title><rect x="1184.8" y="453" width="0.5" height="15.0" fill="rgb(215,71,40)" rx="2" ry="2" />
<text  x="1187.75" y="463.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::rewrite_gen (624 samples, 0.13%)</title><rect x="203.8" y="437" width="1.5" height="15.0" fill="rgb(206,114,41)" rx="2" ry="2" />
<text  x="206.77" y="447.5" ></text>
</g>
<g >
<title>std::os::imp::unix::net::datagram::UnixDatagram::send (782 samples, 0.17%)</title><rect x="1159.0" y="405" width="2.0" height="15.0" fill="rgb(232,61,29)" rx="2" ry="2" />
<text  x="1162.03" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (139 samples, 0.03%)</title><rect x="216.6" y="245" width="0.4" height="15.0" fill="rgb(228,77,12)" rx="2" ry="2" />
<text  x="219.64" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (123 samples, 0.03%)</title><rect x="350.6" y="117" width="0.3" height="15.0" fill="rgb(240,22,36)" rx="2" ry="2" />
<text  x="353.57" y="127.5" ></text>
</g>
<g >
<title>core::ptr::write (476 samples, 0.10%)</title><rect x="1080.4" y="373" width="1.2" height="15.0" fill="rgb(214,186,0)" rx="2" ry="2" />
<text  x="1083.42" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,092 samples, 0.44%)</title><rect x="235.3" y="341" width="5.3" height="15.0" fill="rgb(236,132,33)" rx="2" ry="2" />
<text  x="238.32" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (346 samples, 0.07%)</title><rect x="1085.2" y="245" width="0.9" height="15.0" fill="rgb(234,200,26)" rx="2" ry="2" />
<text  x="1088.22" y="255.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (199 samples, 0.04%)</title><rect x="341.8" y="117" width="0.5" height="15.0" fill="rgb(245,88,19)" rx="2" ry="2" />
<text  x="344.76" y="127.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher_str (219 samples, 0.05%)</title><rect x="146.9" y="357" width="0.5" height="15.0" fill="rgb(230,0,6)" rx="2" ry="2" />
<text  x="149.87" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (349 samples, 0.07%)</title><rect x="275.7" y="213" width="0.9" height="15.0" fill="rgb(240,204,27)" rx="2" ry="2" />
<text  x="278.68" y="223.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::mecab_oov::MeCabOovPlugin::provide_oov_gen (9,239 samples, 1.96%)</title><rect x="1076.6" y="405" width="23.1" height="15.0" fill="rgb(210,196,24)" rx="2" ry="2" />
<text  x="1079.58" y="415.5" >s..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (605 samples, 0.13%)</title><rect x="209.8" y="357" width="1.5" height="15.0" fill="rgb(221,171,13)" rx="2" ry="2" />
<text  x="212.77" y="367.5" ></text>
</g>
<g >
<title>alloc::string::String::push (344 samples, 0.07%)</title><rect x="27.5" y="485" width="0.8" height="15.0" fill="rgb(228,218,51)" rx="2" ry="2" />
<text  x="30.47" y="495.5" ></text>
</g>
<g >
<title>core::fmt::write (4,269 samples, 0.91%)</title><rect x="1173.9" y="437" width="10.6" height="15.0" fill="rgb(223,112,14)" rx="2" ry="2" />
<text  x="1176.86" y="447.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;V&gt; as core::iter::traits::collect::FromIterator&lt;core::option::Option&lt;A&gt;&gt;&gt;::from_iter (127 samples, 0.03%)</title><rect x="212.1" y="373" width="0.3" height="15.0" fill="rgb(218,174,13)" rx="2" ry="2" />
<text  x="215.08" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (472 samples, 0.10%)</title><rect x="206.5" y="341" width="1.2" height="15.0" fill="rgb(230,43,54)" rx="2" ry="2" />
<text  x="209.51" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (234 samples, 0.05%)</title><rect x="174.6" y="245" width="0.6" height="15.0" fill="rgb(226,162,13)" rx="2" ry="2" />
<text  x="177.62" y="255.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (148 samples, 0.03%)</title><rect x="1165.2" y="341" width="0.4" height="15.0" fill="rgb(222,58,23)" rx="2" ry="2" />
<text  x="1168.22" y="351.5" ></text>
</g>
<g >
<title>core::option::Option&lt;&amp;T&gt;::copied (2,332 samples, 0.49%)</title><rect x="343.7" y="213" width="5.8" height="15.0" fill="rgb(220,135,48)" rx="2" ry="2" />
<text  x="346.65" y="223.5" ></text>
</g>
<g >
<title>vfs_write (266 samples, 0.06%)</title><rect x="1160.0" y="293" width="0.7" height="15.0" fill="rgb(208,50,8)" rx="2" ry="2" />
<text  x="1163.04" y="303.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::next_state_no_fail (613 samples, 0.13%)</title><rect x="1107.8" y="261" width="1.5" height="15.0" fill="rgb(247,32,12)" rx="2" ry="2" />
<text  x="1110.79" y="271.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (238 samples, 0.05%)</title><rect x="1114.3" y="245" width="0.6" height="15.0" fill="rgb(245,14,17)" rx="2" ry="2" />
<text  x="1117.27" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 samples, 0.05%)</title><rect x="212.6" y="245" width="0.5" height="15.0" fill="rgb(213,122,5)" rx="2" ry="2" />
<text  x="215.59" y="255.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (1,109 samples, 0.24%)</title><rect x="1178.9" y="389" width="2.8" height="15.0" fill="rgb(245,163,41)" rx="2" ry="2" />
<text  x="1181.94" y="399.5" ></text>
</g>
<g >
<title>fancy_regex::vm::run (45,774 samples, 9.70%)</title><rect x="71.1" y="405" width="114.5" height="15.0" fill="rgb(211,72,26)" rx="2" ry="2" />
<text  x="74.11" y="415.5" >fancy_regex::v..</text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2,306 samples, 0.49%)</title><rect x="185.8" y="421" width="5.8" height="15.0" fill="rgb(227,205,25)" rx="2" ry="2" />
<text  x="188.83" y="431.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (539 samples, 0.11%)</title><rect x="1050.9" y="293" width="1.3" height="15.0" fill="rgb(224,117,54)" rx="2" ry="2" />
<text  x="1053.87" y="303.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,587 samples, 0.34%)</title><rect x="597.1" y="405" width="4.0" height="15.0" fill="rgb(247,204,32)" rx="2" ry="2" />
<text  x="600.15" y="415.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::iter (250 samples, 0.05%)</title><rect x="168.7" y="277" width="0.6" height="15.0" fill="rgb(210,179,22)" rx="2" ry="2" />
<text  x="171.71" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (477 samples, 0.10%)</title><rect x="1170.7" y="389" width="1.2" height="15.0" fill="rgb(237,185,33)" rx="2" ry="2" />
<text  x="1173.68" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (774 samples, 0.16%)</title><rect x="988.7" y="293" width="2.0" height="15.0" fill="rgb(244,200,5)" rx="2" ry="2" />
<text  x="991.75" y="303.5" ></text>
</g>
<g >
<title>&lt;core::char::decode::DecodeUtf16&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (384 samples, 0.08%)</title><rect x="310.9" y="245" width="0.9" height="15.0" fill="rgb(221,208,47)" rx="2" ry="2" />
<text  x="313.87" y="255.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (2,161 samples, 0.46%)</title><rect x="1056.3" y="341" width="5.4" height="15.0" fill="rgb(207,30,2)" rx="2" ry="2" />
<text  x="1059.28" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (421 samples, 0.09%)</title><rect x="1115.4" y="277" width="1.1" height="15.0" fill="rgb(222,118,15)" rx="2" ry="2" />
<text  x="1118.43" y="287.5" ></text>
</g>
<g >
<title>&lt;unicode_normalization::decompose::Decompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (219 samples, 0.05%)</title><rect x="1113.3" y="309" width="0.6" height="15.0" fill="rgb(247,150,38)" rx="2" ry="2" />
<text  x="1116.33" y="319.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::earliest_find_at (512 samples, 0.11%)</title><rect x="1110.7" y="309" width="1.2" height="15.0" fill="rgb(242,34,20)" rx="2" ry="2" />
<text  x="1113.66" y="319.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (698 samples, 0.15%)</title><rect x="141.7" y="277" width="1.7" height="15.0" fill="rgb(238,128,26)" rx="2" ry="2" />
<text  x="144.66" y="287.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::set_word_info (597 samples, 0.13%)</title><rect x="255.7" y="437" width="1.5" height="15.0" fill="rgb(217,207,0)" rx="2" ry="2" />
<text  x="258.72" y="447.5" ></text>
</g>
<g >
<title>sudachi::sentence_detector::parenthesis_level (3,160 samples, 0.67%)</title><rect x="192.4" y="437" width="7.9" height="15.0" fill="rgb(212,22,18)" rx="2" ry="2" />
<text  x="195.44" y="447.5" ></text>
</g>
<g >
<title>[[heap]] (2,092 samples, 0.44%)</title><rect x="12.4" y="501" width="5.3" height="15.0" fill="rgb(241,212,17)" rx="2" ry="2" />
<text  x="15.44" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,594 samples, 0.34%)</title><rect x="1046.9" y="325" width="4.0" height="15.0" fill="rgb(212,53,31)" rx="2" ry="2" />
<text  x="1049.88" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (151 samples, 0.03%)</title><rect x="184.5" y="277" width="0.4" height="15.0" fill="rgb(214,0,11)" rx="2" ry="2" />
<text  x="187.55" y="287.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (153 samples, 0.03%)</title><rect x="1115.0" y="261" width="0.4" height="15.0" fill="rgb(218,160,8)" rx="2" ry="2" />
<text  x="1118.05" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with (125 samples, 0.03%)</title><rect x="1147.6" y="405" width="0.3" height="15.0" fill="rgb(226,3,24)" rx="2" ry="2" />
<text  x="1150.61" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (725 samples, 0.15%)</title><rect x="246.8" y="325" width="1.8" height="15.0" fill="rgb(215,156,28)" rx="2" ry="2" />
<text  x="249.80" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (596 samples, 0.13%)</title><rect x="273.7" y="133" width="1.5" height="15.0" fill="rgb(209,159,26)" rx="2" ry="2" />
<text  x="276.67" y="143.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (4,536 samples, 0.96%)</title><rect x="771.6" y="277" width="11.3" height="15.0" fill="rgb(238,97,17)" rx="2" ry="2" />
<text  x="774.59" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_flags (350 samples, 0.07%)</title><rect x="143.5" y="293" width="0.9" height="15.0" fill="rgb(216,172,39)" rx="2" ry="2" />
<text  x="146.54" y="303.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (391 samples, 0.08%)</title><rect x="167.7" y="277" width="1.0" height="15.0" fill="rgb(243,158,39)" rx="2" ry="2" />
<text  x="170.73" y="287.5" ></text>
</g>
<g >
<title>_int_free (1,664 samples, 0.35%)</title><rect x="503.7" y="245" width="4.2" height="15.0" fill="rgb(225,92,26)" rx="2" ry="2" />
<text  x="506.70" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (428 samples, 0.09%)</title><rect x="272.0" y="165" width="1.1" height="15.0" fill="rgb(247,4,6)" rx="2" ry="2" />
<text  x="275.05" y="175.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (763 samples, 0.16%)</title><rect x="1159.1" y="373" width="1.9" height="15.0" fill="rgb(213,80,51)" rx="2" ry="2" />
<text  x="1162.07" y="383.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (158 samples, 0.03%)</title><rect x="96.5" y="309" width="0.4" height="15.0" fill="rgb(232,141,13)" rx="2" ry="2" />
<text  x="99.55" y="319.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,120 samples, 0.24%)</title><rect x="134.7" y="341" width="2.8" height="15.0" fill="rgb(235,3,44)" rx="2" ry="2" />
<text  x="137.70" y="351.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,538 samples, 0.75%)</title><rect x="892.7" y="309" width="8.9" height="15.0" fill="rgb(246,148,51)" rx="2" ry="2" />
<text  x="895.74" y="319.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1,532 samples, 0.32%)</title><rect x="1094.9" y="293" width="3.8" height="15.0" fill="rgb(216,137,46)" rx="2" ry="2" />
<text  x="1097.86" y="303.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for i16&gt;::hash (41,775 samples, 8.86%)</title><rect x="783.0" y="309" width="104.5" height="15.0" fill="rgb(239,185,18)" rx="2" ry="2" />
<text  x="785.96" y="319.5" >core::hash::..</text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (931 samples, 0.20%)</title><rect x="594.8" y="389" width="2.3" height="15.0" fill="rgb(238,21,47)" rx="2" ry="2" />
<text  x="597.82" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;sudachi::analysis::node::Node,alloc::alloc::Global&gt;&gt; (167 samples, 0.04%)</title><rect x="213.8" y="357" width="0.4" height="15.0" fill="rgb(217,98,25)" rx="2" ry="2" />
<text  x="216.75" y="367.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (210 samples, 0.04%)</title><rect x="185.1" y="213" width="0.5" height="15.0" fill="rgb(253,4,0)" rx="2" ry="2" />
<text  x="188.09" y="223.5" ></text>
</g>
<g >
<title>_int_malloc (150 samples, 0.03%)</title><rect x="248.6" y="325" width="0.4" height="15.0" fill="rgb(210,38,49)" rx="2" ry="2" />
<text  x="251.64" y="335.5" ></text>
</g>
<g >
<title>_int_realloc (8,954 samples, 1.90%)</title><rect x="496.2" y="261" width="22.4" height="15.0" fill="rgb(224,108,32)" rx="2" ry="2" />
<text  x="499.18" y="271.5" >_..</text>
</g>
<g >
<title>__GI___libc_malloc (168 samples, 0.04%)</title><rect x="13.4" y="485" width="0.4" height="15.0" fill="rgb(247,50,23)" rx="2" ry="2" />
<text  x="16.38" y="495.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search_by (838 samples, 0.18%)</title><rect x="1144.2" y="405" width="2.1" height="15.0" fill="rgb(233,146,34)" rx="2" ry="2" />
<text  x="1147.25" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (472 samples, 0.10%)</title><rect x="206.5" y="293" width="1.2" height="15.0" fill="rgb(216,189,3)" rx="2" ry="2" />
<text  x="209.51" y="303.5" ></text>
</g>
<g >
<title>sudachi::write_sentence (11,118 samples, 2.36%)</title><rect x="1157.9" y="469" width="27.8" height="15.0" fill="rgb(220,24,44)" rx="2" ry="2" />
<text  x="1160.89" y="479.5" >s..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (329 samples, 0.07%)</title><rect x="275.7" y="181" width="0.9" height="15.0" fill="rgb(215,8,39)" rx="2" ry="2" />
<text  x="278.73" y="191.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (386 samples, 0.08%)</title><rect x="433.1" y="357" width="1.0" height="15.0" fill="rgb(245,17,12)" rx="2" ry="2" />
<text  x="436.12" y="367.5" ></text>
</g>
<g >
<title>&lt;T as alloc::string::ToString&gt;::to_string (1,027 samples, 0.22%)</title><rect x="218.0" y="293" width="2.6" height="15.0" fill="rgb(254,192,32)" rx="2" ry="2" />
<text  x="221.03" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (160 samples, 0.03%)</title><rect x="1156.0" y="357" width="0.4" height="15.0" fill="rgb(249,201,38)" rx="2" ry="2" />
<text  x="1158.95" y="367.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::captures_read_at (2,492 samples, 0.53%)</title><rect x="193.9" y="389" width="6.2" height="15.0" fill="rgb(208,73,28)" rx="2" ry="2" />
<text  x="196.86" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (520 samples, 0.11%)</title><rect x="1163.3" y="341" width="1.3" height="15.0" fill="rgb(225,120,12)" rx="2" ry="2" />
<text  x="1166.32" y="351.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::build (133 samples, 0.03%)</title><rect x="1146.4" y="437" width="0.4" height="15.0" fill="rgb(240,125,35)" rx="2" ry="2" />
<text  x="1149.42" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (130 samples, 0.03%)</title><rect x="1079.4" y="341" width="0.4" height="15.0" fill="rgb(215,88,35)" rx="2" ry="2" />
<text  x="1082.45" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (123 samples, 0.03%)</title><rect x="350.6" y="149" width="0.3" height="15.0" fill="rgb(237,150,12)" rx="2" ry="2" />
<text  x="353.57" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (952 samples, 0.20%)</title><rect x="892.7" y="261" width="2.4" height="15.0" fill="rgb(224,2,6)" rx="2" ry="2" />
<text  x="895.74" y="271.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (476 samples, 0.10%)</title><rect x="1165.6" y="325" width="1.2" height="15.0" fill="rgb(207,192,1)" rx="2" ry="2" />
<text  x="1168.59" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;sudachi::analysis::node::Node&gt;&gt; (234 samples, 0.05%)</title><rect x="459.0" y="437" width="0.6" height="15.0" fill="rgb(226,72,14)" rx="2" ry="2" />
<text  x="461.96" y="447.5" ></text>
</g>
<g >
<title>__libc_write (759 samples, 0.16%)</title><rect x="1159.1" y="357" width="1.9" height="15.0" fill="rgb(245,229,23)" rx="2" ry="2" />
<text  x="1162.08" y="367.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23,640 samples, 5.01%)</title><rect x="373.5" y="405" width="59.1" height="15.0" fill="rgb(212,8,21)" rx="2" ry="2" />
<text  x="376.45" y="415.5" >&lt;core:..</text>
</g>
<g >
<title>fancy_regex::vm::matches_literal (1,230 samples, 0.26%)</title><rect x="134.6" y="389" width="3.1" height="15.0" fill="rgb(214,84,23)" rx="2" ry="2" />
<text  x="137.61" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (133 samples, 0.03%)</title><rect x="223.1" y="149" width="0.3" height="15.0" fill="rgb(214,109,42)" rx="2" ry="2" />
<text  x="226.08" y="159.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (1,167 samples, 0.25%)</title><rect x="221.6" y="341" width="2.9" height="15.0" fill="rgb(216,204,38)" rx="2" ry="2" />
<text  x="224.57" y="351.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (632 samples, 0.13%)</title><rect x="516.8" y="229" width="1.6" height="15.0" fill="rgb(232,59,2)" rx="2" ry="2" />
<text  x="519.80" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (220 samples, 0.05%)</title><rect x="335.7" y="245" width="0.6" height="15.0" fill="rgb(212,93,18)" rx="2" ry="2" />
<text  x="338.71" y="255.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (199 samples, 0.04%)</title><rect x="19.9" y="485" width="0.5" height="15.0" fill="rgb(235,72,6)" rx="2" ry="2" />
<text  x="22.91" y="495.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::find_at (1,738 samples, 0.37%)</title><rect x="1135.7" y="325" width="4.3" height="15.0" fill="rgb(225,204,35)" rx="2" ry="2" />
<text  x="1138.69" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (134 samples, 0.03%)</title><rect x="1148.2" y="389" width="0.4" height="15.0" fill="rgb(249,63,33)" rx="2" ry="2" />
<text  x="1151.24" y="399.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,123 samples, 0.24%)</title><rect x="259.1" y="421" width="2.8" height="15.0" fill="rgb(214,58,39)" rx="2" ry="2" />
<text  x="262.13" y="431.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (177 samples, 0.04%)</title><rect x="1189.2" y="373" width="0.5" height="15.0" fill="rgb(241,3,12)" rx="2" ry="2" />
<text  x="1192.23" y="383.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (24,636 samples, 5.22%)</title><rect x="921.6" y="373" width="61.6" height="15.0" fill="rgb(224,159,36)" rx="2" ry="2" />
<text  x="924.58" y="383.5" >nom::s..</text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (246 samples, 0.05%)</title><rect x="1068.2" y="421" width="0.6" height="15.0" fill="rgb(217,99,50)" rx="2" ry="2" />
<text  x="1071.22" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::lattice::Lattice&gt; (6,063 samples, 1.29%)</title><rect x="226.2" y="453" width="15.2" height="15.0" fill="rgb(239,179,24)" rx="2" ry="2" />
<text  x="229.23" y="463.5" ></text>
</g>
<g >
<title>_int_realloc (1,031 samples, 0.22%)</title><rect x="186.7" y="53" width="2.6" height="15.0" fill="rgb(206,173,23)" rx="2" ry="2" />
<text  x="189.69" y="63.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (427 samples, 0.09%)</title><rect x="334.6" y="213" width="1.1" height="15.0" fill="rgb(244,25,33)" rx="2" ry="2" />
<text  x="337.64" y="223.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,164 samples, 0.25%)</title><rect x="221.6" y="309" width="2.9" height="15.0" fill="rgb(220,61,41)" rx="2" ry="2" />
<text  x="224.58" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (24,967 samples, 5.29%)</title><rect x="291.1" y="357" width="62.5" height="15.0" fill="rgb(216,68,43)" rx="2" ry="2" />
<text  x="294.14" y="367.5" >&lt;F as ..</text>
</g>
<g >
<title>&lt;aho_corasick::ahocorasick::FindIter&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (914 samples, 0.19%)</title><rect x="1107.0" y="357" width="2.3" height="15.0" fill="rgb(244,192,33)" rx="2" ry="2" />
<text  x="1110.04" y="367.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (1,531 samples, 0.32%)</title><rect x="277.8" y="357" width="3.8" height="15.0" fill="rgb(231,175,30)" rx="2" ry="2" />
<text  x="280.77" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,612 samples, 0.55%)</title><rect x="283.5" y="341" width="6.6" height="15.0" fill="rgb(210,144,35)" rx="2" ry="2" />
<text  x="286.53" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (349 samples, 0.07%)</title><rect x="275.7" y="229" width="0.9" height="15.0" fill="rgb(235,123,44)" rx="2" ry="2" />
<text  x="278.68" y="239.5" ></text>
</g>
<g >
<title>_int_free (155 samples, 0.03%)</title><rect x="225.7" y="357" width="0.4" height="15.0" fill="rgb(222,55,46)" rx="2" ry="2" />
<text  x="228.74" y="367.5" ></text>
</g>
<g >
<title>&lt; (24,888 samples, 5.28%)</title><rect x="291.3" y="325" width="62.2" height="15.0" fill="rgb(253,225,21)" rx="2" ry="2" />
<text  x="294.27" y="335.5" >&lt;</text>
</g>
<g >
<title>alloc::string::String::from_utf16 (290 samples, 0.06%)</title><rect x="58.4" y="485" width="0.8" height="15.0" fill="rgb(254,92,49)" rx="2" ry="2" />
<text  x="61.43" y="495.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (129 samples, 0.03%)</title><rect x="1181.4" y="373" width="0.3" height="15.0" fill="rgb(246,228,53)" rx="2" ry="2" />
<text  x="1184.39" y="383.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1,419 samples, 0.30%)</title><rect x="1178.2" y="405" width="3.5" height="15.0" fill="rgb(253,109,52)" rx="2" ry="2" />
<text  x="1181.17" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (691 samples, 0.15%)</title><rect x="1132.4" y="261" width="1.7" height="15.0" fill="rgb(221,76,30)" rx="2" ry="2" />
<text  x="1135.36" y="271.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (638 samples, 0.14%)</title><rect x="1167.9" y="373" width="1.6" height="15.0" fill="rgb(215,126,11)" rx="2" ry="2" />
<text  x="1170.87" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt;&gt; (6,063 samples, 1.29%)</title><rect x="226.2" y="437" width="15.2" height="15.0" fill="rgb(225,218,42)" rx="2" ry="2" />
<text  x="229.23" y="447.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get (158 samples, 0.03%)</title><rect x="96.5" y="325" width="0.4" height="15.0" fill="rgb(249,133,43)" rx="2" ry="2" />
<text  x="99.55" y="335.5" ></text>
</g>
<g >
<title>fancy_regex::codepoint_len (127 samples, 0.03%)</title><rect x="134.3" y="373" width="0.3" height="15.0" fill="rgb(246,45,3)" rx="2" ry="2" />
<text  x="137.28" y="383.5" ></text>
</g>
<g >
<title>&lt;T as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (777 samples, 0.16%)</title><rect x="367.2" y="437" width="1.9" height="15.0" fill="rgb(233,216,2)" rx="2" ry="2" />
<text  x="370.19" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::u32_parser (1,531 samples, 0.32%)</title><rect x="277.8" y="373" width="3.8" height="15.0" fill="rgb(213,95,15)" rx="2" ry="2" />
<text  x="280.77" y="383.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad_integral (149 samples, 0.03%)</title><rect x="220.1" y="245" width="0.4" height="15.0" fill="rgb(254,58,50)" rx="2" ry="2" />
<text  x="223.13" y="255.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::quick_check (4,045 samples, 0.86%)</title><rect x="1121.1" y="357" width="10.1" height="15.0" fill="rgb(251,48,37)" rx="2" ry="2" />
<text  x="1124.09" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (151 samples, 0.03%)</title><rect x="1087.0" y="277" width="0.4" height="15.0" fill="rgb(235,161,10)" rx="2" ry="2" />
<text  x="1090.01" y="287.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (124 samples, 0.03%)</title><rect x="1047.6" y="277" width="0.3" height="15.0" fill="rgb(251,144,0)" rx="2" ry="2" />
<text  x="1050.60" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (480 samples, 0.10%)</title><rect x="1141.3" y="437" width="1.2" height="15.0" fill="rgb(222,27,45)" rx="2" ry="2" />
<text  x="1144.28" y="447.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (165 samples, 0.03%)</title><rect x="250.7" y="437" width="0.4" height="15.0" fill="rgb(218,141,12)" rx="2" ry="2" />
<text  x="253.71" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,278 samples, 0.48%)</title><rect x="336.6" y="181" width="5.7" height="15.0" fill="rgb(241,174,11)" rx="2" ry="2" />
<text  x="339.64" y="191.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (150 samples, 0.03%)</title><rect x="154.7" y="293" width="0.4" height="15.0" fill="rgb(222,66,49)" rx="2" ry="2" />
<text  x="157.70" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19,148 samples, 4.06%)</title><rect x="489.6" y="373" width="47.9" height="15.0" fill="rgb(233,203,35)" rx="2" ry="2" />
<text  x="492.55" y="383.5" >allo..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::resize (133 samples, 0.03%)</title><rect x="1147.6" y="421" width="0.3" height="15.0" fill="rgb(233,198,54)" rx="2" ry="2" />
<text  x="1150.60" y="431.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (177 samples, 0.04%)</title><rect x="1189.2" y="469" width="0.5" height="15.0" fill="rgb(254,166,19)" rx="2" ry="2" />
<text  x="1192.23" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (278 samples, 0.06%)</title><rect x="220.7" y="229" width="0.7" height="15.0" fill="rgb(248,151,1)" rx="2" ry="2" />
<text  x="223.70" y="239.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (905 samples, 0.19%)</title><rect x="170.0" y="293" width="2.3" height="15.0" fill="rgb(251,135,30)" rx="2" ry="2" />
<text  x="173.01" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::connect_cost_parser (177 samples, 0.04%)</title><rect x="1189.2" y="485" width="0.5" height="15.0" fill="rgb(242,139,1)" rx="2" ry="2" />
<text  x="1192.23" y="495.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (506 samples, 0.11%)</title><rect x="1047.6" y="293" width="1.3" height="15.0" fill="rgb(211,209,37)" rx="2" ry="2" />
<text  x="1050.60" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (284 samples, 0.06%)</title><rect x="122.4" y="373" width="0.7" height="15.0" fill="rgb(208,39,30)" rx="2" ry="2" />
<text  x="125.40" y="383.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::new (120 samples, 0.03%)</title><rect x="98.5" y="389" width="0.3" height="15.0" fill="rgb(239,228,20)" rx="2" ry="2" />
<text  x="101.46" y="399.5" ></text>
</g>
<g >
<title>_int_free (1,647 samples, 0.35%)</title><rect x="236.3" y="293" width="4.2" height="15.0" fill="rgb(249,50,52)" rx="2" ry="2" />
<text  x="239.35" y="303.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (369 samples, 0.08%)</title><rect x="1011.5" y="405" width="0.9" height="15.0" fill="rgb(212,167,37)" rx="2" ry="2" />
<text  x="1014.47" y="415.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (430 samples, 0.09%)</title><rect x="254.2" y="421" width="1.0" height="15.0" fill="rgb(244,105,3)" rx="2" ry="2" />
<text  x="257.17" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::label (292 samples, 0.06%)</title><rect x="387.4" y="309" width="0.7" height="15.0" fill="rgb(209,24,12)" rx="2" ry="2" />
<text  x="390.37" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (373 samples, 0.08%)</title><rect x="269.5" y="261" width="0.9" height="15.0" fill="rgb(211,13,49)" rx="2" ry="2" />
<text  x="272.51" y="271.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (22,651 samples, 4.80%)</title><rect x="921.6" y="341" width="56.6" height="15.0" fill="rgb(219,198,46)" rx="2" ry="2" />
<text  x="924.58" y="351.5" >core::..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,402 samples, 0.30%)</title><rect x="1094.9" y="261" width="3.5" height="15.0" fill="rgb(234,213,37)" rx="2" ry="2" />
<text  x="1097.86" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (123 samples, 0.03%)</title><rect x="68.9" y="325" width="0.3" height="15.0" fill="rgb(235,139,0)" rx="2" ry="2" />
<text  x="71.91" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5,628 samples, 1.19%)</title><rect x="901.6" y="309" width="14.1" height="15.0" fill="rgb(230,131,8)" rx="2" ry="2" />
<text  x="904.62" y="319.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify64 (874 samples, 0.19%)</title><rect x="1136.9" y="149" width="2.2" height="15.0" fill="rgb(225,12,17)" rx="2" ry="2" />
<text  x="1139.92" y="159.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (702 samples, 0.15%)</title><rect x="1037.2" y="261" width="1.7" height="15.0" fill="rgb(239,136,31)" rx="2" ry="2" />
<text  x="1040.19" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,488 samples, 0.53%)</title><rect x="1088.6" y="357" width="6.3" height="15.0" fill="rgb(217,175,4)" rx="2" ry="2" />
<text  x="1091.64" y="367.5" ></text>
</g>
<g >
<title>&lt; (290 samples, 0.06%)</title><rect x="293.4" y="309" width="0.7" height="15.0" fill="rgb(227,160,11)" rx="2" ry="2" />
<text  x="296.35" y="319.5" ></text>
</g>
</g>
</svg>
