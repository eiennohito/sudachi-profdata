<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>aho_corasick::packed::teddy::runtime::TeddySlim2Mask128::candidate (138 samples, 0.05%)</title><rect x="1140.8" y="181" width="0.6" height="15.0" fill="rgb(228,137,53)" rx="2" ry="2" />
<text  x="1143.81" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (82 samples, 0.03%)</title><rect x="387.7" y="341" width="0.4" height="15.0" fill="rgb(245,169,15)" rx="2" ry="2" />
<text  x="390.73" y="351.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (581 samples, 0.20%)</title><rect x="33.1" y="501" width="2.4" height="15.0" fill="rgb(221,151,15)" rx="2" ry="2" />
<text  x="36.15" y="511.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,036 samples, 0.69%)</title><rect x="1134.1" y="373" width="8.1" height="15.0" fill="rgb(224,163,9)" rx="2" ry="2" />
<text  x="1137.06" y="383.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (161 samples, 0.05%)</title><rect x="389.0" y="341" width="0.7" height="15.0" fill="rgb(211,206,49)" rx="2" ry="2" />
<text  x="392.04" y="351.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::to_orig_char_idx (531 samples, 0.18%)</title><rect x="1147.0" y="453" width="2.1" height="15.0" fill="rgb(205,44,16)" rx="2" ry="2" />
<text  x="1150.01" y="463.5" ></text>
</g>
<g >
<title>&lt;unicode_normalization::decompose::Decompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (123 samples, 0.04%)</title><rect x="1093.7" y="277" width="0.5" height="15.0" fill="rgb(228,7,32)" rx="2" ry="2" />
<text  x="1096.69" y="287.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (122 samples, 0.04%)</title><rect x="916.7" y="389" width="0.5" height="15.0" fill="rgb(224,100,54)" rx="2" ry="2" />
<text  x="919.74" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (819 samples, 0.28%)</title><rect x="763.1" y="325" width="3.3" height="15.0" fill="rgb(238,119,8)" rx="2" ry="2" />
<text  x="766.12" y="335.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (87 samples, 0.03%)</title><rect x="1050.9" y="197" width="0.3" height="15.0" fill="rgb(250,19,54)" rx="2" ry="2" />
<text  x="1053.86" y="207.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::standard_find_at_imp (427 samples, 0.15%)</title><rect x="1088.5" y="293" width="1.7" height="15.0" fill="rgb(251,119,15)" rx="2" ry="2" />
<text  x="1091.46" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (142 samples, 0.05%)</title><rect x="388.5" y="341" width="0.5" height="15.0" fill="rgb(242,206,28)" rx="2" ry="2" />
<text  x="391.45" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,664 samples, 1.25%)</title><rect x="1170.2" y="357" width="14.8" height="15.0" fill="rgb(254,131,16)" rx="2" ry="2" />
<text  x="1173.24" y="367.5" ></text>
</g>
<g >
<title>nom::combinator::cond::{{closure}} (158 samples, 0.05%)</title><rect x="1049.5" y="261" width="0.6" height="15.0" fill="rgb(252,226,52)" rx="2" ry="2" />
<text  x="1052.47" y="271.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::to_orig_byte_idx (360 samples, 0.12%)</title><rect x="1147.7" y="437" width="1.4" height="15.0" fill="rgb(206,75,40)" rx="2" ry="2" />
<text  x="1150.69" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (106 samples, 0.04%)</title><rect x="956.3" y="325" width="0.4" height="15.0" fill="rgb(234,63,15)" rx="2" ry="2" />
<text  x="959.26" y="335.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (499 samples, 0.17%)</title><rect x="1124.1" y="357" width="2.0" height="15.0" fill="rgb(253,189,10)" rx="2" ry="2" />
<text  x="1127.07" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free (130 samples, 0.04%)</title><rect x="1169.6" y="373" width="0.5" height="15.0" fill="rgb(224,21,11)" rx="2" ry="2" />
<text  x="1172.56" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::DictionaryLoader::read_system_dictionary (486 samples, 0.17%)</title><rect x="1185.9" y="453" width="2.0" height="15.0" fill="rgb(232,30,33)" rx="2" ry="2" />
<text  x="1188.93" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (217 samples, 0.07%)</title><rect x="32.3" y="501" width="0.8" height="15.0" fill="rgb(210,105,12)" rx="2" ry="2" />
<text  x="35.27" y="511.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::uppercase::lookup (379 samples, 0.13%)</title><rect x="1091.1" y="357" width="1.5" height="15.0" fill="rgb(232,26,28)" rx="2" ry="2" />
<text  x="1094.06" y="367.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (115 samples, 0.04%)</title><rect x="1167.6" y="389" width="0.5" height="15.0" fill="rgb(232,186,33)" rx="2" ry="2" />
<text  x="1170.60" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (97 samples, 0.03%)</title><rect x="1069.4" y="341" width="0.4" height="15.0" fill="rgb(223,225,52)" rx="2" ry="2" />
<text  x="1072.41" y="351.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (270 samples, 0.09%)</title><rect x="983.8" y="277" width="1.1" height="15.0" fill="rgb(207,58,30)" rx="2" ry="2" />
<text  x="986.85" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_flags (1,076 samples, 0.37%)</title><rect x="332.9" y="293" width="4.3" height="15.0" fill="rgb(235,36,15)" rx="2" ry="2" />
<text  x="335.87" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (83 samples, 0.03%)</title><rect x="171.0" y="341" width="0.3" height="15.0" fill="rgb(217,82,7)" rx="2" ry="2" />
<text  x="174.00" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (180 samples, 0.06%)</title><rect x="847.6" y="437" width="0.7" height="15.0" fill="rgb(238,147,13)" rx="2" ry="2" />
<text  x="850.60" y="447.5" ></text>
</g>
<g >
<title>fancy_regex::prev_codepoint_ix (639 samples, 0.22%)</title><rect x="168.0" y="405" width="2.5" height="15.0" fill="rgb(218,109,12)" rx="2" ry="2" />
<text  x="170.96" y="415.5" ></text>
</g>
<g >
<title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (121 samples, 0.04%)</title><rect x="809.3" y="245" width="0.5" height="15.0" fill="rgb(228,201,29)" rx="2" ry="2" />
<text  x="812.30" y="255.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search::{{closure}} (298 samples, 0.10%)</title><rect x="1160.6" y="405" width="1.2" height="15.0" fill="rgb(236,202,7)" rx="2" ry="2" />
<text  x="1163.64" y="415.5" ></text>
</g>
<g >
<title>vfs_read (79 samples, 0.03%)</title><rect x="78.3" y="261" width="0.4" height="15.0" fill="rgb(207,9,13)" rx="2" ry="2" />
<text  x="81.35" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free (383 samples, 0.13%)</title><rect x="913.9" y="309" width="1.5" height="15.0" fill="rgb(248,32,36)" rx="2" ry="2" />
<text  x="916.87" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (149 samples, 0.05%)</title><rect x="375.4" y="469" width="0.6" height="15.0" fill="rgb(242,134,36)" rx="2" ry="2" />
<text  x="378.40" y="479.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (140 samples, 0.05%)</title><rect x="375.4" y="405" width="0.6" height="15.0" fill="rgb(237,112,20)" rx="2" ry="2" />
<text  x="378.43" y="415.5" ></text>
</g>
<g >
<title>core::ptr::write (100 samples, 0.03%)</title><rect x="887.8" y="421" width="0.4" height="15.0" fill="rgb(236,201,20)" rx="2" ry="2" />
<text  x="890.79" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (87 samples, 0.03%)</title><rect x="392.9" y="357" width="0.3" height="15.0" fill="rgb(243,40,1)" rx="2" ry="2" />
<text  x="395.89" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (735 samples, 0.25%)</title><rect x="924.9" y="229" width="3.0" height="15.0" fill="rgb(213,52,0)" rx="2" ry="2" />
<text  x="927.95" y="239.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match_at (19,556 samples, 6.67%)</title><rect x="271.4" y="389" width="78.7" height="15.0" fill="rgb(235,15,32)" rx="2" ry="2" />
<text  x="274.41" y="399.5" >regex::re..</text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::get_surface (425 samples, 0.14%)</title><rect x="107.8" y="437" width="1.7" height="15.0" fill="rgb(207,160,11)" rx="2" ry="2" />
<text  x="110.79" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,136 samples, 0.39%)</title><rect x="157.2" y="389" width="4.5" height="15.0" fill="rgb(242,47,29)" rx="2" ry="2" />
<text  x="160.15" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,301 samples, 1.13%)</title><rect x="796.5" y="293" width="13.3" height="15.0" fill="rgb(238,164,32)" rx="2" ry="2" />
<text  x="799.53" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (158 samples, 0.05%)</title><rect x="228.8" y="277" width="0.6" height="15.0" fill="rgb(231,91,14)" rx="2" ry="2" />
<text  x="231.80" y="287.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (135 samples, 0.05%)</title><rect x="342.4" y="341" width="0.6" height="15.0" fill="rgb(243,222,47)" rx="2" ry="2" />
<text  x="345.42" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (93 samples, 0.03%)</title><rect x="862.0" y="277" width="0.4" height="15.0" fill="rgb(235,136,3)" rx="2" ry="2" />
<text  x="865.04" y="287.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (297 samples, 0.10%)</title><rect x="44.1" y="501" width="1.1" height="15.0" fill="rgb(215,40,29)" rx="2" ry="2" />
<text  x="47.05" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (76 samples, 0.03%)</title><rect x="59.6" y="405" width="0.3" height="15.0" fill="rgb(228,176,6)" rx="2" ry="2" />
<text  x="62.64" y="415.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (931 samples, 0.32%)</title><rect x="164.2" y="389" width="3.8" height="15.0" fill="rgb(220,77,37)" rx="2" ry="2" />
<text  x="167.21" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (84 samples, 0.03%)</title><rect x="78.3" y="341" width="0.4" height="15.0" fill="rgb(252,22,0)" rx="2" ry="2" />
<text  x="81.33" y="351.5" ></text>
</g>
<g >
<title>core::str::validations::run_utf8_validation (607 samples, 0.21%)</title><rect x="75.5" y="405" width="2.4" height="15.0" fill="rgb(227,70,45)" rx="2" ry="2" />
<text  x="78.49" y="415.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (87 samples, 0.03%)</title><rect x="1050.9" y="229" width="0.3" height="15.0" fill="rgb(208,213,50)" rx="2" ry="2" />
<text  x="1053.86" y="239.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (100 samples, 0.03%)</title><rect x="842.1" y="229" width="0.4" height="15.0" fill="rgb(209,93,1)" rx="2" ry="2" />
<text  x="845.06" y="239.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (161 samples, 0.05%)</title><rect x="1012.9" y="53" width="0.6" height="15.0" fill="rgb(218,38,3)" rx="2" ry="2" />
<text  x="1015.86" y="63.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (220 samples, 0.08%)</title><rect x="217.5" y="357" width="0.9" height="15.0" fill="rgb(213,1,42)" rx="2" ry="2" />
<text  x="220.48" y="367.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (259 samples, 0.09%)</title><rect x="10.8" y="501" width="1.0" height="15.0" fill="rgb(234,16,0)" rx="2" ry="2" />
<text  x="13.76" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (146 samples, 0.05%)</title><rect x="391.4" y="357" width="0.6" height="15.0" fill="rgb(222,19,34)" rx="2" ry="2" />
<text  x="394.42" y="367.5" ></text>
</g>
<g >
<title>unicode_normalization::normalize::decompose (260 samples, 0.09%)</title><rect x="1093.5" y="293" width="1.1" height="15.0" fill="rgb(244,84,4)" rx="2" ry="2" />
<text  x="1096.54" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (430 samples, 0.15%)</title><rect x="925.6" y="117" width="1.7" height="15.0" fill="rgb(227,199,39)" rx="2" ry="2" />
<text  x="928.61" y="127.5" ></text>
</g>
<g >
<title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (107 samples, 0.04%)</title><rect x="534.4" y="453" width="0.5" height="15.0" fill="rgb(219,104,8)" rx="2" ry="2" />
<text  x="537.44" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (155 samples, 0.05%)</title><rect x="177.8" y="373" width="0.6" height="15.0" fill="rgb(210,201,17)" rx="2" ry="2" />
<text  x="180.82" y="383.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (12,131 samples, 4.14%)</title><rect x="1077.3" y="405" width="48.8" height="15.0" fill="rgb(205,120,22)" rx="2" ry="2" />
<text  x="1080.28" y="415.5" >&lt;sud..</text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_param (161 samples, 0.05%)</title><rect x="54.3" y="501" width="0.6" height="15.0" fill="rgb(218,119,24)" rx="2" ry="2" />
<text  x="57.29" y="511.5" ></text>
</g>
<g >
<title>fancy_regex::vm::codepoint_len_at (242 samples, 0.08%)</title><rect x="239.9" y="405" width="1.0" height="15.0" fill="rgb(218,207,21)" rx="2" ry="2" />
<text  x="242.93" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (90 samples, 0.03%)</title><rect x="1151.2" y="421" width="0.4" height="15.0" fill="rgb(213,74,29)" rx="2" ry="2" />
<text  x="1154.20" y="431.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (150 samples, 0.05%)</title><rect x="984.2" y="197" width="0.6" height="15.0" fill="rgb(236,141,20)" rx="2" ry="2" />
<text  x="987.16" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with (151 samples, 0.05%)</title><rect x="1156.8" y="437" width="0.7" height="15.0" fill="rgb(217,189,38)" rx="2" ry="2" />
<text  x="1159.85" y="447.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (3,044 samples, 1.04%)</title><rect x="766.4" y="357" width="12.3" height="15.0" fill="rgb(217,71,37)" rx="2" ry="2" />
<text  x="769.42" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (465 samples, 0.16%)</title><rect x="1095.2" y="277" width="1.9" height="15.0" fill="rgb(237,95,17)" rx="2" ry="2" />
<text  x="1098.23" y="287.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify128 (1,052 samples, 0.36%)</title><rect x="1136.6" y="181" width="4.2" height="15.0" fill="rgb(209,60,6)" rx="2" ry="2" />
<text  x="1139.58" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (275 samples, 0.09%)</title><rect x="918.3" y="293" width="1.1" height="15.0" fill="rgb(245,169,28)" rx="2" ry="2" />
<text  x="921.26" y="303.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (543 samples, 0.19%)</title><rect x="223.4" y="389" width="2.2" height="15.0" fill="rgb(242,113,19)" rx="2" ry="2" />
<text  x="226.42" y="399.5" ></text>
</g>
<g >
<title>_int_free (2,465 samples, 0.84%)</title><rect x="1174.2" y="245" width="9.9" height="15.0" fill="rgb(233,9,40)" rx="2" ry="2" />
<text  x="1177.23" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,213 samples, 0.75%)</title><rect x="945.9" y="277" width="8.9" height="15.0" fill="rgb(214,163,45)" rx="2" ry="2" />
<text  x="948.91" y="287.5" ></text>
</g>
<g >
<title>sudachi (293,297 samples, 99.99%)</title><rect x="10.1" y="533" width="1179.9" height="15.0" fill="rgb(208,142,18)" rx="2" ry="2" />
<text  x="13.07" y="543.5" >sudachi</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2,096 samples, 0.71%)</title><rect x="92.6" y="421" width="8.4" height="15.0" fill="rgb(211,138,2)" rx="2" ry="2" />
<text  x="95.59" y="431.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (196 samples, 0.07%)</title><rect x="386.9" y="405" width="0.8" height="15.0" fill="rgb(219,86,29)" rx="2" ry="2" />
<text  x="389.93" y="415.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::bitset_search (346 samples, 0.12%)</title><rect x="1091.1" y="341" width="1.4" height="15.0" fill="rgb(247,68,51)" rx="2" ry="2" />
<text  x="1094.08" y="351.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (272 samples, 0.09%)</title><rect x="384.6" y="421" width="1.1" height="15.0" fill="rgb(245,212,35)" rx="2" ry="2" />
<text  x="387.60" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (137 samples, 0.05%)</title><rect x="1062.3" y="181" width="0.6" height="15.0" fill="rgb(205,130,28)" rx="2" ry="2" />
<text  x="1065.34" y="191.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (237 samples, 0.08%)</title><rect x="731.8" y="421" width="1.0" height="15.0" fill="rgb(252,122,4)" rx="2" ry="2" />
<text  x="734.81" y="431.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (308 samples, 0.11%)</title><rect x="529.4" y="373" width="1.3" height="15.0" fill="rgb(234,103,31)" rx="2" ry="2" />
<text  x="532.43" y="383.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::backtrack (569 samples, 0.19%)</title><rect x="364.2" y="277" width="2.3" height="15.0" fill="rgb(236,107,34)" rx="2" ry="2" />
<text  x="367.19" y="287.5" ></text>
</g>
<g >
<title>core::str::validations::unwrap_or_0 (110 samples, 0.04%)</title><rect x="1167.0" y="373" width="0.4" height="15.0" fill="rgb(225,46,45)" rx="2" ry="2" />
<text  x="1169.97" y="383.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::is_nfkc_quick (2,297 samples, 0.78%)</title><rect x="1097.1" y="373" width="9.2" height="15.0" fill="rgb(218,9,10)" rx="2" ry="2" />
<text  x="1100.10" y="383.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (689 samples, 0.23%)</title><rect x="859.6" y="405" width="2.8" height="15.0" fill="rgb(242,77,52)" rx="2" ry="2" />
<text  x="862.64" y="415.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_literals (8,182 samples, 2.79%)</title><rect x="282.7" y="325" width="32.9" height="15.0" fill="rgb(247,121,14)" rx="2" ry="2" />
<text  x="285.67" y="335.5" >re..</text>
</g>
<g >
<title>__GI___libc_free (132 samples, 0.05%)</title><rect x="375.4" y="389" width="0.6" height="15.0" fill="rgb(217,105,46)" rx="2" ry="2" />
<text  x="378.44" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (156 samples, 0.05%)</title><rect x="170.7" y="389" width="0.6" height="15.0" fill="rgb(235,10,16)" rx="2" ry="2" />
<text  x="173.71" y="399.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (2,341 samples, 0.80%)</title><rect x="829.2" y="309" width="9.5" height="15.0" fill="rgb(248,15,24)" rx="2" ry="2" />
<text  x="832.23" y="319.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (161 samples, 0.05%)</title><rect x="389.0" y="325" width="0.7" height="15.0" fill="rgb(227,220,5)" rx="2" ry="2" />
<text  x="392.04" y="335.5" ></text>
</g>
<g >
<title>&lt;fancy_regex::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (3,569 samples, 1.22%)</title><rect x="360.2" y="437" width="14.3" height="15.0" fill="rgb(206,168,1)" rx="2" ry="2" />
<text  x="363.18" y="447.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (1,151 samples, 0.39%)</title><rect x="772.6" y="277" width="4.7" height="15.0" fill="rgb(206,91,20)" rx="2" ry="2" />
<text  x="775.65" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (222 samples, 0.08%)</title><rect x="228.6" y="357" width="0.9" height="15.0" fill="rgb(209,157,35)" rx="2" ry="2" />
<text  x="231.65" y="367.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (183 samples, 0.06%)</title><rect x="108.3" y="389" width="0.8" height="15.0" fill="rgb(241,10,30)" rx="2" ry="2" />
<text  x="111.33" y="399.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (101 samples, 0.03%)</title><rect x="837.2" y="229" width="0.4" height="15.0" fill="rgb(221,127,42)" rx="2" ry="2" />
<text  x="840.22" y="239.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::word_id (736 samples, 0.25%)</title><rect x="523.5" y="325" width="3.0" height="15.0" fill="rgb(220,212,35)" rx="2" ry="2" />
<text  x="526.53" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (955 samples, 0.33%)</title><rect x="351.1" y="229" width="3.9" height="15.0" fill="rgb(246,128,4)" rx="2" ry="2" />
<text  x="354.15" y="239.5" ></text>
</g>
<g >
<title>regex::pool::PoolGuard&lt;T&gt;::value (77 samples, 0.03%)</title><rect x="341.1" y="309" width="0.3" height="15.0" fill="rgb(236,67,37)" rx="2" ry="2" />
<text  x="344.14" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (197 samples, 0.07%)</title><rect x="861.6" y="325" width="0.8" height="15.0" fill="rgb(209,168,31)" rx="2" ry="2" />
<text  x="864.62" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (353 samples, 0.12%)</title><rect x="925.8" y="85" width="1.4" height="15.0" fill="rgb(207,11,46)" rx="2" ry="2" />
<text  x="928.81" y="95.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::find_at (1,948 samples, 0.66%)</title><rect x="1134.4" y="357" width="7.8" height="15.0" fill="rgb(216,44,10)" rx="2" ry="2" />
<text  x="1137.41" y="367.5" ></text>
</g>
<g >
<title>_int_realloc (431 samples, 0.15%)</title><rect x="352.1" y="69" width="1.7" height="15.0" fill="rgb(220,13,34)" rx="2" ry="2" />
<text  x="355.11" y="79.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (137 samples, 0.05%)</title><rect x="391.5" y="293" width="0.5" height="15.0" fill="rgb(250,131,21)" rx="2" ry="2" />
<text  x="394.46" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (644 samples, 0.22%)</title><rect x="1150.9" y="453" width="2.6" height="15.0" fill="rgb(231,115,18)" rx="2" ry="2" />
<text  x="1153.88" y="463.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (543 samples, 0.19%)</title><rect x="223.4" y="373" width="2.2" height="15.0" fill="rgb(248,148,35)" rx="2" ry="2" />
<text  x="226.42" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (82 samples, 0.03%)</title><rect x="387.7" y="389" width="0.4" height="15.0" fill="rgb(234,203,28)" rx="2" ry="2" />
<text  x="390.73" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (76 samples, 0.03%)</title><rect x="59.6" y="421" width="0.3" height="15.0" fill="rgb(247,77,28)" rx="2" ry="2" />
<text  x="62.64" y="431.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::resolve_best_path (50,662 samples, 17.27%)</title><rect x="868.7" y="469" width="203.9" height="15.0" fill="rgb(232,164,29)" rx="2" ry="2" />
<text  x="871.74" y="479.5" >sudachi::analysis::statefu..</text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (124 samples, 0.04%)</title><rect x="1139.7" y="101" width="0.5" height="15.0" fill="rgb(239,101,32)" rx="2" ry="2" />
<text  x="1142.66" y="111.5" ></text>
</g>
<g >
<title>regex::dfa::Byte::is_ascii_word (340 samples, 0.12%)</title><rect x="335.8" y="277" width="1.4" height="15.0" fill="rgb(230,96,25)" rx="2" ry="2" />
<text  x="338.83" y="287.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match (1,552 samples, 0.53%)</title><rect x="315.6" y="325" width="6.2" height="15.0" fill="rgb(233,103,48)" rx="2" ry="2" />
<text  x="318.58" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,268 samples, 0.43%)</title><rect x="551.9" y="437" width="5.1" height="15.0" fill="rgb(224,5,19)" rx="2" ry="2" />
<text  x="554.93" y="447.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max (127 samples, 0.04%)</title><rect x="1014.1" y="117" width="0.5" height="15.0" fill="rgb(217,72,45)" rx="2" ry="2" />
<text  x="1017.10" y="127.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::edit::InputEditor::replace_char_iter (91 samples, 0.03%)</title><rect x="1094.7" y="357" width="0.4" height="15.0" fill="rgb(236,49,50)" rx="2" ry="2" />
<text  x="1097.69" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::u32_wid_array_parser (788 samples, 0.27%)</title><rect x="981.8" y="293" width="3.1" height="15.0" fill="rgb(246,109,9)" rx="2" ry="2" />
<text  x="984.77" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (117 samples, 0.04%)</title><rect x="220.7" y="341" width="0.5" height="15.0" fill="rgb(246,51,14)" rx="2" ry="2" />
<text  x="223.72" y="351.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (122 samples, 0.04%)</title><rect x="1157.0" y="405" width="0.5" height="15.0" fill="rgb(232,153,17)" rx="2" ry="2" />
<text  x="1159.96" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (88 samples, 0.03%)</title><rect x="259.1" y="245" width="0.4" height="15.0" fill="rgb(254,78,8)" rx="2" ry="2" />
<text  x="262.11" y="255.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (258 samples, 0.09%)</title><rect x="327.1" y="261" width="1.0" height="15.0" fill="rgb(207,217,38)" rx="2" ry="2" />
<text  x="330.10" y="271.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search_by (1,015 samples, 0.35%)</title><rect x="1157.8" y="421" width="4.0" height="15.0" fill="rgb(234,118,20)" rx="2" ry="2" />
<text  x="1160.75" y="431.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::build (95 samples, 0.03%)</title><rect x="1152.9" y="373" width="0.4" height="15.0" fill="rgb(218,123,33)" rx="2" ry="2" />
<text  x="1155.95" y="383.5" ></text>
</g>
<g >
<title>core::ptr::write (137 samples, 0.05%)</title><rect x="1156.9" y="421" width="0.6" height="15.0" fill="rgb(231,14,51)" rx="2" ry="2" />
<text  x="1159.90" y="431.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (360 samples, 0.12%)</title><rect x="954.8" y="309" width="1.5" height="15.0" fill="rgb(234,209,4)" rx="2" ry="2" />
<text  x="957.81" y="319.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (535 samples, 0.18%)</title><rect x="528.5" y="389" width="2.2" height="15.0" fill="rgb(236,85,25)" rx="2" ry="2" />
<text  x="531.52" y="399.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (141 samples, 0.05%)</title><rect x="1132.7" y="325" width="0.6" height="15.0" fill="rgb(250,185,43)" rx="2" ry="2" />
<text  x="1135.71" y="335.5" ></text>
</g>
<g >
<title>core::str::validations::unwrap_or_0 (151 samples, 0.05%)</title><rect x="357.6" y="309" width="0.6" height="15.0" fill="rgb(248,82,44)" rx="2" ry="2" />
<text  x="360.61" y="319.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (206 samples, 0.07%)</title><rect x="777.3" y="293" width="0.8" height="15.0" fill="rgb(218,140,31)" rx="2" ry="2" />
<text  x="780.28" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSyncStr&gt; (259 samples, 0.09%)</title><rect x="343.0" y="357" width="1.0" height="15.0" fill="rgb(207,104,28)" rx="2" ry="2" />
<text  x="345.97" y="367.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (133 samples, 0.05%)</title><rect x="348.0" y="293" width="0.5" height="15.0" fill="rgb(232,110,45)" rx="2" ry="2" />
<text  x="350.96" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::get (81 samples, 0.03%)</title><rect x="529.8" y="293" width="0.3" height="15.0" fill="rgb(223,201,30)" rx="2" ry="2" />
<text  x="532.82" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (82 samples, 0.03%)</title><rect x="350.7" y="325" width="0.3" height="15.0" fill="rgb(238,39,36)" rx="2" ry="2" />
<text  x="353.72" y="335.5" ></text>
</g>
<g >
<title>[system.dic] (117 samples, 0.04%)</title><rect x="57.4" y="517" width="0.4" height="15.0" fill="rgb(221,76,44)" rx="2" ry="2" />
<text  x="60.37" y="527.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,269 samples, 0.43%)</title><rect x="241.1" y="357" width="5.1" height="15.0" fill="rgb(237,30,23)" rx="2" ry="2" />
<text  x="244.10" y="367.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (93 samples, 0.03%)</title><rect x="862.0" y="245" width="0.4" height="15.0" fill="rgb(246,32,14)" rx="2" ry="2" />
<text  x="865.04" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (291 samples, 0.10%)</title><rect x="930.7" y="165" width="1.2" height="15.0" fill="rgb(254,32,22)" rx="2" ry="2" />
<text  x="933.74" y="175.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3,859 samples, 1.32%)</title><rect x="295.7" y="261" width="15.5" height="15.0" fill="rgb(205,168,38)" rx="2" ry="2" />
<text  x="298.66" y="271.5" ></text>
</g>
<g >
<title>unicode_normalization::perfect_hash::my_hash (96 samples, 0.03%)</title><rect x="1106.0" y="309" width="0.3" height="15.0" fill="rgb(249,208,54)" rx="2" ry="2" />
<text  x="1108.96" y="319.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::build (234 samples, 0.08%)</title><rect x="1161.9" y="453" width="1.0" height="15.0" fill="rgb(219,170,53)" rx="2" ry="2" />
<text  x="1164.94" y="463.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (309 samples, 0.11%)</title><rect x="765.2" y="245" width="1.2" height="15.0" fill="rgb(247,22,0)" rx="2" ry="2" />
<text  x="768.18" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (82 samples, 0.03%)</title><rect x="387.7" y="309" width="0.4" height="15.0" fill="rgb(217,156,52)" rx="2" ry="2" />
<text  x="390.73" y="319.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (307 samples, 0.10%)</title><rect x="848.7" y="405" width="1.2" height="15.0" fill="rgb(254,137,27)" rx="2" ry="2" />
<text  x="851.68" y="415.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (227 samples, 0.08%)</title><rect x="528.5" y="373" width="0.9" height="15.0" fill="rgb(223,222,7)" rx="2" ry="2" />
<text  x="531.52" y="383.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (342 samples, 0.12%)</title><rect x="358.5" y="405" width="1.3" height="15.0" fill="rgb(221,222,18)" rx="2" ry="2" />
<text  x="361.46" y="415.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (96 samples, 0.03%)</title><rect x="1069.0" y="325" width="0.4" height="15.0" fill="rgb(251,34,6)" rx="2" ry="2" />
<text  x="1072.02" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,131 samples, 0.73%)</title><rect x="757.8" y="373" width="8.6" height="15.0" fill="rgb(215,199,0)" rx="2" ry="2" />
<text  x="760.85" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (241 samples, 0.08%)</title><rect x="228.6" y="389" width="1.0" height="15.0" fill="rgb(213,117,45)" rx="2" ry="2" />
<text  x="231.59" y="399.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (101 samples, 0.03%)</title><rect x="246.2" y="373" width="0.4" height="15.0" fill="rgb(245,133,36)" rx="2" ry="2" />
<text  x="249.20" y="383.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (83 samples, 0.03%)</title><rect x="373.5" y="309" width="0.3" height="15.0" fill="rgb(239,113,3)" rx="2" ry="2" />
<text  x="376.45" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;sudachi::analysis::node::ResultNode&gt;&gt; (400 samples, 0.14%)</title><rect x="388.1" y="405" width="1.6" height="15.0" fill="rgb(225,169,5)" rx="2" ry="2" />
<text  x="391.09" y="415.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (307 samples, 0.10%)</title><rect x="848.7" y="421" width="1.2" height="15.0" fill="rgb(207,34,12)" rx="2" ry="2" />
<text  x="851.68" y="431.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (131 samples, 0.04%)</title><rect x="859.7" y="341" width="0.5" height="15.0" fill="rgb(233,103,53)" rx="2" ry="2" />
<text  x="862.67" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (137 samples, 0.05%)</title><rect x="391.5" y="309" width="0.5" height="15.0" fill="rgb(233,87,43)" rx="2" ry="2" />
<text  x="394.46" y="319.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (4,800 samples, 1.64%)</title><rect x="321.8" y="309" width="19.3" height="15.0" fill="rgb(230,197,5)" rx="2" ry="2" />
<text  x="324.83" y="319.5" ></text>
</g>
<g >
<title>unicode_normalization::perfect_hash::mph_lookup (478 samples, 0.16%)</title><rect x="1124.2" y="341" width="1.9" height="15.0" fill="rgb(211,155,15)" rx="2" ry="2" />
<text  x="1127.16" y="351.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::ignore_yomigana::IgnoreYomiganaPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (1,892 samples, 0.65%)</title><rect x="1126.1" y="405" width="7.6" height="15.0" fill="rgb(211,200,18)" rx="2" ry="2" />
<text  x="1129.08" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,213 samples, 0.75%)</title><rect x="945.9" y="309" width="8.9" height="15.0" fill="rgb(250,34,43)" rx="2" ry="2" />
<text  x="948.91" y="319.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::string_number::StringNumber::add (124 samples, 0.04%)</title><rect x="392.8" y="421" width="0.5" height="15.0" fill="rgb(216,65,52)" rx="2" ry="2" />
<text  x="395.81" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::word_id::WordId::new (117 samples, 0.04%)</title><rect x="530.8" y="421" width="0.4" height="15.0" fill="rgb(206,174,29)" rx="2" ry="2" />
<text  x="533.78" y="431.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3,859 samples, 1.32%)</title><rect x="295.7" y="277" width="15.5" height="15.0" fill="rgb(216,26,8)" rx="2" ry="2" />
<text  x="298.66" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (137 samples, 0.05%)</title><rect x="388.5" y="293" width="0.5" height="15.0" fill="rgb(226,227,47)" rx="2" ry="2" />
<text  x="391.45" y="303.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (101 samples, 0.03%)</title><rect x="1001.8" y="133" width="0.4" height="15.0" fill="rgb(253,161,38)" rx="2" ry="2" />
<text  x="1004.83" y="143.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (3,923 samples, 1.34%)</title><rect x="1170.1" y="373" width="15.8" height="15.0" fill="rgb(240,50,0)" rx="2" ry="2" />
<text  x="1173.09" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 samples, 0.06%)</title><rect x="79.0" y="309" width="0.7" height="15.0" fill="rgb(239,220,33)" rx="2" ry="2" />
<text  x="82.01" y="319.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (5,433 samples, 1.85%)</title><rect x="790.3" y="341" width="21.8" height="15.0" fill="rgb(248,189,43)" rx="2" ry="2" />
<text  x="793.26" y="351.5" >n..</text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_empty (108 samples, 0.04%)</title><rect x="762.7" y="293" width="0.4" height="15.0" fill="rgb(235,18,38)" rx="2" ry="2" />
<text  x="765.68" y="303.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (398 samples, 0.14%)</title><rect x="921.0" y="277" width="1.6" height="15.0" fill="rgb(221,23,3)" rx="2" ry="2" />
<text  x="923.99" y="287.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (307 samples, 0.10%)</title><rect x="190.7" y="389" width="1.3" height="15.0" fill="rgb(216,225,37)" rx="2" ry="2" />
<text  x="193.73" y="399.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (270 samples, 0.09%)</title><rect x="660.1" y="389" width="1.0" height="15.0" fill="rgb(245,162,43)" rx="2" ry="2" />
<text  x="663.06" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (159 samples, 0.05%)</title><rect x="1148.5" y="421" width="0.6" height="15.0" fill="rgb(237,33,39)" rx="2" ry="2" />
<text  x="1151.50" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::ResultNode&gt; (111 samples, 0.04%)</title><rect x="389.7" y="405" width="0.4" height="15.0" fill="rgb(245,31,3)" rx="2" ry="2" />
<text  x="392.70" y="415.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (211 samples, 0.07%)</title><rect x="13.2" y="501" width="0.8" height="15.0" fill="rgb(230,107,35)" rx="2" ry="2" />
<text  x="16.17" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (170 samples, 0.06%)</title><rect x="918.6" y="181" width="0.7" height="15.0" fill="rgb(214,208,31)" rx="2" ry="2" />
<text  x="921.61" y="191.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::index (192 samples, 0.07%)</title><rect x="108.3" y="421" width="0.8" height="15.0" fill="rgb(206,216,18)" rx="2" ry="2" />
<text  x="111.30" y="431.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (95 samples, 0.03%)</title><rect x="219.0" y="357" width="0.4" height="15.0" fill="rgb(232,200,31)" rx="2" ry="2" />
<text  x="221.99" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (440 samples, 0.15%)</title><rect x="913.7" y="373" width="1.8" height="15.0" fill="rgb(247,82,35)" rx="2" ry="2" />
<text  x="916.74" y="383.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::byte_class (307 samples, 0.10%)</title><rect x="330.0" y="261" width="1.3" height="15.0" fill="rgb(247,165,39)" rx="2" ry="2" />
<text  x="333.04" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next (152 samples, 0.05%)</title><rect x="259.7" y="277" width="0.6" height="15.0" fill="rgb(220,6,2)" rx="2" ry="2" />
<text  x="262.71" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (75 samples, 0.03%)</title><rect x="1133.0" y="229" width="0.3" height="15.0" fill="rgb(235,67,49)" rx="2" ry="2" />
<text  x="1135.97" y="239.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (23,318 samples, 7.95%)</title><rect x="967.9" y="309" width="93.8" height="15.0" fill="rgb(227,196,48)" rx="2" ry="2" />
<text  x="970.87" y="319.5" >core::ops::..</text>
</g>
<g >
<title>core::str::validations::next_code_point (338 samples, 0.12%)</title><rect x="1153.7" y="405" width="1.3" height="15.0" fill="rgb(223,139,33)" rx="2" ry="2" />
<text  x="1156.69" y="415.5" ></text>
</g>
<g >
<title>[unknown] (281,024 samples, 95.81%)</title><rect x="57.8" y="517" width="1130.6" height="15.0" fill="rgb(242,31,43)" rx="2" ry="2" />
<text  x="60.84" y="527.5" >[unknown]</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (78 samples, 0.03%)</title><rect x="390.7" y="405" width="0.3" height="15.0" fill="rgb(250,77,21)" rx="2" ry="2" />
<text  x="393.68" y="415.5" ></text>
</g>
<g >
<title>nom::combinator::cond::{{closure}} (473 samples, 0.16%)</title><rect x="1061.7" y="309" width="1.9" height="15.0" fill="rgb(230,79,10)" rx="2" ry="2" />
<text  x="1064.67" y="319.5" ></text>
</g>
<g >
<title>unicode_normalization::tables::qc_nfkc (1,470 samples, 0.50%)</title><rect x="1099.5" y="325" width="5.9" height="15.0" fill="rgb(246,93,0)" rx="2" ry="2" />
<text  x="1102.51" y="335.5" ></text>
</g>
<g >
<title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (101 samples, 0.03%)</title><rect x="837.2" y="245" width="0.4" height="15.0" fill="rgb(248,37,47)" rx="2" ry="2" />
<text  x="840.22" y="255.5" ></text>
</g>
<g >
<title>_int_free (169 samples, 0.06%)</title><rect x="921.8" y="245" width="0.7" height="15.0" fill="rgb(246,73,2)" rx="2" ry="2" />
<text  x="924.83" y="255.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (874 samples, 0.30%)</title><rect x="838.9" y="357" width="3.6" height="15.0" fill="rgb(229,184,20)" rx="2" ry="2" />
<text  x="841.94" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (91 samples, 0.03%)</title><rect x="418.7" y="389" width="0.4" height="15.0" fill="rgb(218,114,1)" rx="2" ry="2" />
<text  x="421.69" y="399.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (101 samples, 0.03%)</title><rect x="246.2" y="389" width="0.4" height="15.0" fill="rgb(227,223,33)" rx="2" ry="2" />
<text  x="249.20" y="399.5" ></text>
</g>
<g >
<title>regex::dfa::Result&lt;T&gt;::set_non_match (113 samples, 0.04%)</title><rect x="332.4" y="277" width="0.5" height="15.0" fill="rgb(237,216,34)" rx="2" ry="2" />
<text  x="335.42" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (3,169 samples, 1.08%)</title><rect x="252.4" y="325" width="12.7" height="15.0" fill="rgb(249,134,53)" rx="2" ry="2" />
<text  x="255.37" y="335.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (562 samples, 0.19%)</title><rect x="812.1" y="357" width="2.3" height="15.0" fill="rgb(207,71,50)" rx="2" ry="2" />
<text  x="815.12" y="367.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (124 samples, 0.04%)</title><rect x="10.1" y="517" width="0.5" height="15.0" fill="rgb(251,169,39)" rx="2" ry="2" />
<text  x="13.07" y="527.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (361 samples, 0.12%)</title><rect x="779.7" y="309" width="1.5" height="15.0" fill="rgb(222,134,35)" rx="2" ry="2" />
<text  x="782.71" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,335 samples, 0.80%)</title><rect x="1039.0" y="197" width="9.4" height="15.0" fill="rgb(226,49,47)" rx="2" ry="2" />
<text  x="1042.01" y="207.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (3,580 samples, 1.22%)</title><rect x="919.8" y="373" width="14.4" height="15.0" fill="rgb(219,106,50)" rx="2" ry="2" />
<text  x="922.80" y="383.5" ></text>
</g>
<g >
<title>&lt;T as alloc::string::ToString&gt;::to_string (283 samples, 0.10%)</title><rect x="391.1" y="405" width="1.1" height="15.0" fill="rgb(228,143,21)" rx="2" ry="2" />
<text  x="394.07" y="415.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (340 samples, 0.12%)</title><rect x="838.9" y="341" width="1.4" height="15.0" fill="rgb(213,127,37)" rx="2" ry="2" />
<text  x="841.94" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::byte_class (255 samples, 0.09%)</title><rect x="258.4" y="277" width="1.1" height="15.0" fill="rgb(243,13,1)" rx="2" ry="2" />
<text  x="261.44" y="287.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 0.06%)</title><rect x="1154.0" y="389" width="0.6" height="15.0" fill="rgb(229,181,35)" rx="2" ry="2" />
<text  x="1156.99" y="399.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (172 samples, 0.06%)</title><rect x="1085.9" y="341" width="0.7" height="15.0" fill="rgb(216,219,23)" rx="2" ry="2" />
<text  x="1088.92" y="351.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::dfa::PremultipliedByteClass&lt;S&gt; as aho_corasick::automaton::Automaton&gt;::next_state (331 samples, 0.11%)</title><rect x="1088.8" y="261" width="1.3" height="15.0" fill="rgb(228,166,40)" rx="2" ry="2" />
<text  x="1091.79" y="271.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (137 samples, 0.05%)</title><rect x="1062.3" y="133" width="0.6" height="15.0" fill="rgb(207,131,33)" rx="2" ry="2" />
<text  x="1065.34" y="143.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (484 samples, 0.17%)</title><rect x="356.3" y="341" width="2.0" height="15.0" fill="rgb(206,24,10)" rx="2" ry="2" />
<text  x="359.31" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::connect::ConnectionMatrix::index (261 samples, 0.09%)</title><rect x="710.4" y="405" width="1.0" height="15.0" fill="rgb(239,216,11)" rx="2" ry="2" />
<text  x="713.35" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (78 samples, 0.03%)</title><rect x="1133.0" y="245" width="0.3" height="15.0" fill="rgb(243,229,33)" rx="2" ry="2" />
<text  x="1135.96" y="255.5" ></text>
</g>
<g >
<title>nom::sequence::tuple::{{closure}} (3,509 samples, 1.20%)</title><rect x="920.1" y="341" width="14.1" height="15.0" fill="rgb(248,43,38)" rx="2" ry="2" />
<text  x="923.06" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (465 samples, 0.16%)</title><rect x="1095.2" y="293" width="1.9" height="15.0" fill="rgb(234,38,9)" rx="2" ry="2" />
<text  x="1098.23" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (93 samples, 0.03%)</title><rect x="1014.7" y="149" width="0.4" height="15.0" fill="rgb(236,3,7)" rx="2" ry="2" />
<text  x="1017.70" y="159.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (285 samples, 0.10%)</title><rect x="930.8" y="149" width="1.1" height="15.0" fill="rgb(216,20,2)" rx="2" ry="2" />
<text  x="933.76" y="159.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (98 samples, 0.03%)</title><rect x="1076.1" y="373" width="0.4" height="15.0" fill="rgb(213,10,3)" rx="2" ry="2" />
<text  x="1079.08" y="383.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (276 samples, 0.09%)</title><rect x="264.0" y="309" width="1.1" height="15.0" fill="rgb(228,52,12)" rx="2" ry="2" />
<text  x="267.00" y="319.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (543 samples, 0.19%)</title><rect x="223.4" y="357" width="2.2" height="15.0" fill="rgb(237,43,34)" rx="2" ry="2" />
<text  x="226.42" y="367.5" ></text>
</g>
<g >
<title>core::ptr::write (235 samples, 0.08%)</title><rect x="238.1" y="357" width="1.0" height="15.0" fill="rgb(242,183,15)" rx="2" ry="2" />
<text  x="241.15" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (222 samples, 0.08%)</title><rect x="228.6" y="373" width="0.9" height="15.0" fill="rgb(230,189,22)" rx="2" ry="2" />
<text  x="231.65" y="383.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (3,665 samples, 1.25%)</title><rect x="766.4" y="389" width="14.8" height="15.0" fill="rgb(241,155,3)" rx="2" ry="2" />
<text  x="769.42" y="399.5" ></text>
</g>
<g >
<title>unicode_normalization::decompose::Decompositions&lt;I&gt;::push_back (117 samples, 0.04%)</title><rect x="1093.7" y="261" width="0.5" height="15.0" fill="rgb(226,31,10)" rx="2" ry="2" />
<text  x="1096.71" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (195 samples, 0.07%)</title><rect x="928.9" y="101" width="0.8" height="15.0" fill="rgb(234,62,6)" rx="2" ry="2" />
<text  x="931.89" y="111.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (108 samples, 0.04%)</title><rect x="762.7" y="277" width="0.4" height="15.0" fill="rgb(224,80,44)" rx="2" ry="2" />
<text  x="765.68" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (109 samples, 0.04%)</title><rect x="857.8" y="389" width="0.4" height="15.0" fill="rgb(227,129,43)" rx="2" ry="2" />
<text  x="860.81" y="399.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (517 samples, 0.18%)</title><rect x="981.8" y="277" width="2.0" height="15.0" fill="rgb(207,5,53)" rx="2" ry="2" />
<text  x="984.77" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (77 samples, 0.03%)</title><rect x="389.8" y="341" width="0.3" height="15.0" fill="rgb(210,9,6)" rx="2" ry="2" />
<text  x="392.83" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::common_prefix_iterator (211 samples, 0.07%)</title><rect x="529.8" y="309" width="0.9" height="15.0" fill="rgb(223,99,10)" rx="2" ry="2" />
<text  x="532.82" y="319.5" ></text>
</g>
<g >
<title>alloc::string::String::reserve (125 samples, 0.04%)</title><rect x="350.6" y="405" width="0.5" height="15.0" fill="rgb(207,191,2)" rx="2" ry="2" />
<text  x="353.61" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,661 samples, 0.57%)</title><rect x="759.7" y="341" width="6.7" height="15.0" fill="rgb(253,74,47)" rx="2" ry="2" />
<text  x="762.74" y="351.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (25,445 samples, 8.68%)</title><rect x="425.8" y="421" width="102.3" height="15.0" fill="rgb(231,32,12)" rx="2" ry="2" />
<text  x="428.75" y="431.5" >&lt;core::iter:..</text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (91 samples, 0.03%)</title><rect x="366.6" y="261" width="0.4" height="15.0" fill="rgb(210,24,27)" rx="2" ry="2" />
<text  x="369.59" y="271.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,730 samples, 0.93%)</title><rect x="767.6" y="325" width="11.0" height="15.0" fill="rgb(215,108,41)" rx="2" ry="2" />
<text  x="770.64" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (191 samples, 0.07%)</title><rect x="1030.1" y="229" width="0.7" height="15.0" fill="rgb(235,1,42)" rx="2" ry="2" />
<text  x="1033.07" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,219 samples, 0.76%)</title><rect x="1021.1" y="229" width="9.0" height="15.0" fill="rgb(206,187,9)" rx="2" ry="2" />
<text  x="1024.14" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (507 samples, 0.17%)</title><rect x="351.8" y="85" width="2.0" height="15.0" fill="rgb(250,85,16)" rx="2" ry="2" />
<text  x="354.81" y="95.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,231 samples, 1.10%)</title><rect x="920.4" y="309" width="13.0" height="15.0" fill="rgb(218,87,47)" rx="2" ry="2" />
<text  x="923.45" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (82 samples, 0.03%)</title><rect x="387.7" y="325" width="0.4" height="15.0" fill="rgb(233,2,11)" rx="2" ry="2" />
<text  x="390.73" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (331 samples, 0.11%)</title><rect x="1151.6" y="373" width="1.3" height="15.0" fill="rgb(218,58,9)" rx="2" ry="2" />
<text  x="1154.62" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (173 samples, 0.06%)</title><rect x="31.6" y="501" width="0.7" height="15.0" fill="rgb(233,66,31)" rx="2" ry="2" />
<text  x="34.58" y="511.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (89 samples, 0.03%)</title><rect x="1092.6" y="357" width="0.4" height="15.0" fill="rgb(210,163,37)" rx="2" ry="2" />
<text  x="1095.63" y="367.5" ></text>
</g>
<g >
<title>sudachi::analysis::inner::Node::new (1,170 samples, 0.40%)</title><rect x="534.9" y="453" width="4.7" height="15.0" fill="rgb(233,175,43)" rx="2" ry="2" />
<text  x="537.87" y="463.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (431 samples, 0.15%)</title><rect x="711.4" y="437" width="1.7" height="15.0" fill="rgb(236,33,31)" rx="2" ry="2" />
<text  x="714.40" y="447.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state (962 samples, 0.33%)</title><rect x="1081.1" y="309" width="3.9" height="15.0" fill="rgb(242,210,20)" rx="2" ry="2" />
<text  x="1084.09" y="319.5" ></text>
</g>
<g >
<title>&lt;sudachi::analysis::inner::Node as core::clone::Clone&gt;::clone (134 samples, 0.05%)</title><rect x="874.9" y="453" width="0.5" height="15.0" fill="rgb(215,22,9)" rx="2" ry="2" />
<text  x="877.89" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (468 samples, 0.16%)</title><rect x="1073.3" y="405" width="1.9" height="15.0" fill="rgb(207,52,53)" rx="2" ry="2" />
<text  x="1076.33" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (92 samples, 0.03%)</title><rect x="387.1" y="245" width="0.4" height="15.0" fill="rgb(247,215,35)" rx="2" ry="2" />
<text  x="390.12" y="255.5" ></text>
</g>
<g >
<title>core::ptr::write (815 samples, 0.28%)</title><rect x="881.5" y="437" width="3.3" height="15.0" fill="rgb(251,75,6)" rx="2" ry="2" />
<text  x="884.55" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (105 samples, 0.04%)</title><rect x="1163.5" y="421" width="0.4" height="15.0" fill="rgb(215,219,53)" rx="2" ry="2" />
<text  x="1166.51" y="431.5" ></text>
</g>
<g >
<title>__rust_dealloc (99 samples, 0.03%)</title><rect x="979.4" y="277" width="0.4" height="15.0" fill="rgb(254,177,25)" rx="2" ry="2" />
<text  x="982.42" y="287.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::exec_ (780 samples, 0.27%)</title><rect x="364.1" y="293" width="3.1" height="15.0" fill="rgb(240,99,31)" rx="2" ry="2" />
<text  x="367.09" y="303.5" ></text>
</g>
<g >
<title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (370 samples, 0.13%)</title><rect x="1093.1" y="341" width="1.5" height="15.0" fill="rgb(209,129,53)" rx="2" ry="2" />
<text  x="1096.10" y="351.5" ></text>
</g>
<g >
<title>_int_free (509 samples, 0.17%)</title><rect x="16.3" y="501" width="2.0" height="15.0" fill="rgb(254,57,47)" rx="2" ry="2" />
<text  x="19.29" y="511.5" ></text>
</g>
<g >
<title>&lt;unicode_normalization::decompose::Decompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (323 samples, 0.11%)</title><rect x="1093.3" y="325" width="1.3" height="15.0" fill="rgb(241,53,5)" rx="2" ry="2" />
<text  x="1096.29" y="335.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (274 samples, 0.09%)</title><rect x="932.1" y="245" width="1.1" height="15.0" fill="rgb(238,98,48)" rx="2" ry="2" />
<text  x="935.14" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (137 samples, 0.05%)</title><rect x="1062.3" y="197" width="0.6" height="15.0" fill="rgb(229,67,36)" rx="2" ry="2" />
<text  x="1065.34" y="207.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (417 samples, 0.14%)</title><rect x="812.7" y="341" width="1.7" height="15.0" fill="rgb(210,4,37)" rx="2" ry="2" />
<text  x="815.70" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (196 samples, 0.07%)</title><rect x="386.9" y="373" width="0.8" height="15.0" fill="rgb(232,58,39)" rx="2" ry="2" />
<text  x="389.93" y="383.5" ></text>
</g>
<g >
<title>__libc_write (150 samples, 0.05%)</title><rect x="90.2" y="341" width="0.6" height="15.0" fill="rgb(235,48,0)" rx="2" ry="2" />
<text  x="93.24" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next (214 samples, 0.07%)</title><rect x="331.6" y="261" width="0.8" height="15.0" fill="rgb(241,18,46)" rx="2" ry="2" />
<text  x="334.56" y="271.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3,859 samples, 1.32%)</title><rect x="295.7" y="293" width="15.5" height="15.0" fill="rgb(208,150,24)" rx="2" ry="2" />
<text  x="298.66" y="303.5" ></text>
</g>
<g >
<title>_int_malloc (599 samples, 0.20%)</title><rect x="1044.9" y="133" width="2.4" height="15.0" fill="rgb(210,137,27)" rx="2" ry="2" />
<text  x="1047.89" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (203 samples, 0.07%)</title><rect x="763.6" y="277" width="0.8" height="15.0" fill="rgb(241,70,44)" rx="2" ry="2" />
<text  x="766.59" y="287.5" ></text>
</g>
<g >
<title>sudachi::sentence_detector::parenthesis_level (3,764 samples, 1.28%)</title><rect x="359.9" y="453" width="15.1" height="15.0" fill="rgb(219,1,2)" rx="2" ry="2" />
<text  x="362.88" y="463.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (159 samples, 0.05%)</title><rect x="764.5" y="261" width="0.7" height="15.0" fill="rgb(221,83,29)" rx="2" ry="2" />
<text  x="767.54" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (75 samples, 0.03%)</title><rect x="1146.3" y="405" width="0.3" height="15.0" fill="rgb(213,18,9)" rx="2" ry="2" />
<text  x="1149.26" y="415.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (417 samples, 0.14%)</title><rect x="812.7" y="293" width="1.7" height="15.0" fill="rgb(225,126,31)" rx="2" ry="2" />
<text  x="815.70" y="303.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (1,166 samples, 0.40%)</title><rect x="317.1" y="309" width="4.7" height="15.0" fill="rgb(219,189,20)" rx="2" ry="2" />
<text  x="320.14" y="319.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (145 samples, 0.05%)</title><rect x="357.0" y="277" width="0.6" height="15.0" fill="rgb(237,123,13)" rx="2" ry="2" />
<text  x="360.02" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (116 samples, 0.04%)</title><rect x="218.5" y="373" width="0.5" height="15.0" fill="rgb(245,182,43)" rx="2" ry="2" />
<text  x="221.52" y="383.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_eos (123 samples, 0.04%)</title><rect x="539.6" y="453" width="0.5" height="15.0" fill="rgb(243,179,28)" rx="2" ry="2" />
<text  x="542.58" y="463.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::reverse (312 samples, 0.11%)</title><rect x="373.0" y="341" width="1.2" height="15.0" fill="rgb(230,171,44)" rx="2" ry="2" />
<text  x="375.97" y="351.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (485 samples, 0.17%)</title><rect x="989.8" y="277" width="2.0" height="15.0" fill="rgb(243,99,20)" rx="2" ry="2" />
<text  x="992.82" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (82 samples, 0.03%)</title><rect x="379.7" y="405" width="0.3" height="15.0" fill="rgb(220,208,38)" rx="2" ry="2" />
<text  x="382.68" y="415.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (931 samples, 0.32%)</title><rect x="164.2" y="373" width="3.8" height="15.0" fill="rgb(243,171,26)" rx="2" ry="2" />
<text  x="167.21" y="383.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (271 samples, 0.09%)</title><rect x="1166.3" y="389" width="1.1" height="15.0" fill="rgb(224,209,40)" rx="2" ry="2" />
<text  x="1169.34" y="399.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::fill_top_path (743 samples, 0.25%)</title><rect x="885.2" y="453" width="3.0" height="15.0" fill="rgb(250,165,33)" rx="2" ry="2" />
<text  x="888.23" y="463.5" ></text>
</g>
<g >
<title>&lt;core::char::decode::DecodeUtf16&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (464 samples, 0.16%)</title><rect x="995.7" y="261" width="1.9" height="15.0" fill="rgb(233,22,13)" rx="2" ry="2" />
<text  x="998.74" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::ResultNode::new (1,176 samples, 0.40%)</title><rect x="889.4" y="453" width="4.8" height="15.0" fill="rgb(236,219,53)" rx="2" ry="2" />
<text  x="892.44" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (107 samples, 0.04%)</title><rect x="387.1" y="277" width="0.4" height="15.0" fill="rgb(221,215,50)" rx="2" ry="2" />
<text  x="390.07" y="287.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (101 samples, 0.03%)</title><rect x="837.2" y="213" width="0.4" height="15.0" fill="rgb(220,41,40)" rx="2" ry="2" />
<text  x="840.22" y="223.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (82 samples, 0.03%)</title><rect x="379.7" y="373" width="0.3" height="15.0" fill="rgb(220,173,40)" rx="2" ry="2" />
<text  x="382.68" y="383.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::is_shorter (117 samples, 0.04%)</title><rect x="380.8" y="437" width="0.5" height="15.0" fill="rgb(214,192,26)" rx="2" ry="2" />
<text  x="383.81" y="447.5" ></text>
</g>
<g >
<title>core::mem::drop (171 samples, 0.06%)</title><rect x="388.3" y="373" width="0.7" height="15.0" fill="rgb(221,49,17)" rx="2" ry="2" />
<text  x="391.33" y="383.5" ></text>
</g>
<g >
<title>__libc_read (84 samples, 0.03%)</title><rect x="78.3" y="325" width="0.4" height="15.0" fill="rgb(243,152,21)" rx="2" ry="2" />
<text  x="81.33" y="335.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::shortest_dfa (4,886 samples, 1.67%)</title><rect x="321.8" y="325" width="19.7" height="15.0" fill="rgb(215,56,54)" rx="2" ry="2" />
<text  x="324.83" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (105 samples, 0.04%)</title><rect x="842.5" y="437" width="0.4" height="15.0" fill="rgb(207,183,27)" rx="2" ry="2" />
<text  x="845.46" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (165 samples, 0.06%)</title><rect x="1163.5" y="437" width="0.7" height="15.0" fill="rgb(246,44,2)" rx="2" ry="2" />
<text  x="1166.51" y="447.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (175 samples, 0.06%)</title><rect x="356.9" y="309" width="0.7" height="15.0" fill="rgb(243,215,23)" rx="2" ry="2" />
<text  x="359.90" y="319.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (256 samples, 0.09%)</title><rect x="1085.6" y="373" width="1.0" height="15.0" fill="rgb(249,94,49)" rx="2" ry="2" />
<text  x="1088.58" y="383.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (191 samples, 0.07%)</title><rect x="380.0" y="405" width="0.8" height="15.0" fill="rgb(218,63,20)" rx="2" ry="2" />
<text  x="383.01" y="415.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.04%)</title><rect x="419.4" y="453" width="0.4" height="15.0" fill="rgb(236,57,44)" rx="2" ry="2" />
<text  x="422.37" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (142 samples, 0.05%)</title><rect x="386.9" y="341" width="0.6" height="15.0" fill="rgb(207,56,45)" rx="2" ry="2" />
<text  x="389.94" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::u8_class (287 samples, 0.10%)</title><rect x="330.1" y="245" width="1.2" height="15.0" fill="rgb(248,215,39)" rx="2" ry="2" />
<text  x="333.12" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (1,045 samples, 0.36%)</title><rect x="1024.9" y="117" width="4.2" height="15.0" fill="rgb(246,120,53)" rx="2" ry="2" />
<text  x="1027.88" y="127.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (82 samples, 0.03%)</title><rect x="389.8" y="389" width="0.3" height="15.0" fill="rgb(215,0,24)" rx="2" ry="2" />
<text  x="392.82" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (156 samples, 0.05%)</title><rect x="199.4" y="325" width="0.6" height="15.0" fill="rgb(249,121,27)" rx="2" ry="2" />
<text  x="202.37" y="335.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::next_state_no_fail (331 samples, 0.11%)</title><rect x="1088.8" y="277" width="1.3" height="15.0" fill="rgb(225,133,39)" rx="2" ry="2" />
<text  x="1091.79" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,741 samples, 0.93%)</title><rect x="945.7" y="373" width="11.0" height="15.0" fill="rgb(228,83,33)" rx="2" ry="2" />
<text  x="948.66" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (2,063 samples, 0.70%)</title><rect x="1004.2" y="69" width="8.3" height="15.0" fill="rgb(227,154,39)" rx="2" ry="2" />
<text  x="1007.25" y="79.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (77 samples, 0.03%)</title><rect x="171.0" y="293" width="0.3" height="15.0" fill="rgb(245,29,53)" rx="2" ry="2" />
<text  x="174.00" y="303.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (127 samples, 0.04%)</title><rect x="285.5" y="245" width="0.5" height="15.0" fill="rgb(221,78,17)" rx="2" ry="2" />
<text  x="288.45" y="255.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::is_empty (239 samples, 0.08%)</title><rect x="294.7" y="277" width="1.0" height="15.0" fill="rgb(251,64,6)" rx="2" ry="2" />
<text  x="297.70" y="287.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (4,126 samples, 1.41%)</title><rect x="1169.3" y="469" width="16.6" height="15.0" fill="rgb(227,119,27)" rx="2" ry="2" />
<text  x="1172.28" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (87 samples, 0.03%)</title><rect x="392.9" y="341" width="0.3" height="15.0" fill="rgb(239,66,10)" rx="2" ry="2" />
<text  x="395.89" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::word_info_parser (4,066 samples, 1.39%)</title><rect x="917.9" y="389" width="16.3" height="15.0" fill="rgb(206,126,35)" rx="2" ry="2" />
<text  x="920.85" y="399.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (150 samples, 0.05%)</title><rect x="984.2" y="245" width="0.6" height="15.0" fill="rgb(248,73,37)" rx="2" ry="2" />
<text  x="987.16" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (77 samples, 0.03%)</title><rect x="1185.0" y="293" width="0.3" height="15.0" fill="rgb(254,93,37)" rx="2" ry="2" />
<text  x="1188.04" y="303.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (534 samples, 0.18%)</title><rect x="840.3" y="309" width="2.2" height="15.0" fill="rgb(248,155,1)" rx="2" ry="2" />
<text  x="843.31" y="319.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (106 samples, 0.04%)</title><rect x="178.4" y="373" width="0.5" height="15.0" fill="rgb(236,69,40)" rx="2" ry="2" />
<text  x="181.44" y="383.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (207 samples, 0.07%)</title><rect x="340.3" y="293" width="0.8" height="15.0" fill="rgb(215,56,35)" rx="2" ry="2" />
<text  x="343.30" y="303.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite::{{closure}} (16,304 samples, 5.56%)</title><rect x="1077.1" y="421" width="65.6" height="15.0" fill="rgb(229,218,54)" rx="2" ry="2" />
<text  x="1080.12" y="431.5" >sudachi..</text>
</g>
<g >
<title>filemap_read (75 samples, 0.03%)</title><rect x="78.4" y="229" width="0.3" height="15.0" fill="rgb(238,66,22)" rx="2" ry="2" />
<text  x="81.36" y="239.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (18,297 samples, 6.24%)</title><rect x="443.6" y="373" width="73.6" height="15.0" fill="rgb(252,114,1)" rx="2" ry="2" />
<text  x="446.62" y="383.5" >&lt;core::i..</text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::BufRead for alloc::boxed::Box&lt;B&gt;&gt;::read_line (1,455 samples, 0.50%)</title><rect x="74.9" y="469" width="5.9" height="15.0" fill="rgb(254,145,43)" rx="2" ry="2" />
<text  x="77.90" y="479.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (2,449 samples, 0.83%)</title><rect x="1003.8" y="85" width="9.9" height="15.0" fill="rgb(247,46,15)" rx="2" ry="2" />
<text  x="1006.82" y="95.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (660 samples, 0.23%)</title><rect x="351.3" y="197" width="2.7" height="15.0" fill="rgb(210,140,23)" rx="2" ry="2" />
<text  x="354.34" y="207.5" ></text>
</g>
<g >
<title>sudachi::dic::DictionaryLoader::read_dictionary (486 samples, 0.17%)</title><rect x="1185.9" y="437" width="2.0" height="15.0" fill="rgb(210,142,39)" rx="2" ry="2" />
<text  x="1188.93" y="447.5" ></text>
</g>
<g >
<title>core::ptr::write (153 samples, 0.05%)</title><rect x="1156.2" y="437" width="0.6" height="15.0" fill="rgb(243,13,35)" rx="2" ry="2" />
<text  x="1159.22" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (97 samples, 0.03%)</title><rect x="533.3" y="421" width="0.4" height="15.0" fill="rgb(214,126,51)" rx="2" ry="2" />
<text  x="536.34" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fancy_regex::vm::Branch&gt;&gt; (75 samples, 0.03%)</title><rect x="163.7" y="389" width="0.3" height="15.0" fill="rgb(219,195,27)" rx="2" ry="2" />
<text  x="166.66" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (338 samples, 0.12%)</title><rect x="928.4" y="165" width="1.4" height="15.0" fill="rgb(209,224,10)" rx="2" ry="2" />
<text  x="931.42" y="175.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::dfa::PremultipliedByteClass&lt;S&gt; as aho_corasick::automaton::Automaton&gt;::next_state (650 samples, 0.22%)</title><rect x="1082.3" y="261" width="2.7" height="15.0" fill="rgb(209,211,39)" rx="2" ry="2" />
<text  x="1085.35" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (100 samples, 0.03%)</title><rect x="362.0" y="325" width="0.4" height="15.0" fill="rgb(232,220,6)" rx="2" ry="2" />
<text  x="365.01" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (125 samples, 0.04%)</title><rect x="350.6" y="373" width="0.5" height="15.0" fill="rgb(212,72,6)" rx="2" ry="2" />
<text  x="353.61" y="383.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (391 samples, 0.13%)</title><rect x="326.6" y="277" width="1.5" height="15.0" fill="rgb(214,222,11)" rx="2" ry="2" />
<text  x="329.56" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,159 samples, 0.40%)</title><rect x="367.8" y="325" width="4.7" height="15.0" fill="rgb(244,16,46)" rx="2" ry="2" />
<text  x="370.82" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (955 samples, 0.33%)</title><rect x="351.1" y="245" width="3.9" height="15.0" fill="rgb(224,70,0)" rx="2" ry="2" />
<text  x="354.15" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (496 samples, 0.17%)</title><rect x="101.6" y="437" width="2.0" height="15.0" fill="rgb(235,209,21)" rx="2" ry="2" />
<text  x="104.60" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (187 samples, 0.06%)</title><rect x="79.0" y="325" width="0.7" height="15.0" fill="rgb(205,57,36)" rx="2" ry="2" />
<text  x="81.97" y="335.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,391 samples, 0.47%)</title><rect x="367.4" y="341" width="5.6" height="15.0" fill="rgb(226,182,33)" rx="2" ry="2" />
<text  x="370.37" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (194 samples, 0.07%)</title><rect x="52.7" y="501" width="0.8" height="15.0" fill="rgb(227,17,13)" rx="2" ry="2" />
<text  x="55.72" y="511.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (133 samples, 0.05%)</title><rect x="388.5" y="245" width="0.5" height="15.0" fill="rgb(205,2,54)" rx="2" ry="2" />
<text  x="391.45" y="255.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::has_previous_node (180 samples, 0.06%)</title><rect x="540.1" y="453" width="0.7" height="15.0" fill="rgb(250,117,39)" rx="2" ry="2" />
<text  x="543.07" y="463.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::Imp&lt;S&gt;::earliest_find_at (556 samples, 0.19%)</title><rect x="1088.1" y="357" width="2.2" height="15.0" fill="rgb(239,20,2)" rx="2" ry="2" />
<text  x="1091.06" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (178 samples, 0.06%)</title><rect x="533.3" y="437" width="0.8" height="15.0" fill="rgb(227,28,36)" rx="2" ry="2" />
<text  x="536.34" y="447.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,262 samples, 0.43%)</title><rect x="552.0" y="405" width="5.0" height="15.0" fill="rgb(234,135,13)" rx="2" ry="2" />
<text  x="554.96" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (551 samples, 0.19%)</title><rect x="860.2" y="357" width="2.2" height="15.0" fill="rgb(251,32,44)" rx="2" ry="2" />
<text  x="863.20" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (149 samples, 0.05%)</title><rect x="375.4" y="453" width="0.6" height="15.0" fill="rgb(225,62,7)" rx="2" ry="2" />
<text  x="378.40" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (89 samples, 0.03%)</title><rect x="1151.2" y="405" width="0.4" height="15.0" fill="rgb(211,209,45)" rx="2" ry="2" />
<text  x="1154.21" y="415.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::node (303 samples, 0.10%)</title><rect x="888.2" y="453" width="1.2" height="15.0" fill="rgb(208,182,35)" rx="2" ry="2" />
<text  x="891.22" y="463.5" ></text>
</g>
<g >
<title>core::ptr::write (142 samples, 0.05%)</title><rect x="1152.2" y="293" width="0.5" height="15.0" fill="rgb(253,217,45)" rx="2" ry="2" />
<text  x="1155.16" y="303.5" ></text>
</g>
<g >
<title>core::ptr::write (552 samples, 0.19%)</title><rect x="221.2" y="373" width="2.2" height="15.0" fill="rgb(214,105,33)" rx="2" ry="2" />
<text  x="224.19" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (350 samples, 0.12%)</title><rect x="918.2" y="373" width="1.4" height="15.0" fill="rgb(244,159,23)" rx="2" ry="2" />
<text  x="921.22" y="383.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (27,766 samples, 9.47%)</title><rect x="958.5" y="389" width="111.7" height="15.0" fill="rgb(226,153,50)" rx="2" ry="2" />
<text  x="961.52" y="399.5" >nom::sequence..</text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (87 samples, 0.03%)</title><rect x="1050.9" y="213" width="0.3" height="15.0" fill="rgb(253,225,52)" rx="2" ry="2" />
<text  x="1053.86" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (211 samples, 0.07%)</title><rect x="218.5" y="389" width="0.9" height="15.0" fill="rgb(205,1,11)" rx="2" ry="2" />
<text  x="221.52" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (151 samples, 0.05%)</title><rect x="90.2" y="373" width="0.6" height="15.0" fill="rgb(228,79,19)" rx="2" ry="2" />
<text  x="93.24" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (117 samples, 0.04%)</title><rect x="387.0" y="293" width="0.5" height="15.0" fill="rgb(215,111,47)" rx="2" ry="2" />
<text  x="390.04" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (107 samples, 0.04%)</title><rect x="1002.2" y="133" width="0.5" height="15.0" fill="rgb(226,13,46)" rx="2" ry="2" />
<text  x="1005.24" y="143.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (121 samples, 0.04%)</title><rect x="809.3" y="181" width="0.5" height="15.0" fill="rgb(231,182,0)" rx="2" ry="2" />
<text  x="812.30" y="191.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (171 samples, 0.06%)</title><rect x="1186.5" y="309" width="0.7" height="15.0" fill="rgb(253,229,14)" rx="2" ry="2" />
<text  x="1189.48" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::word_id::WordId::word (320 samples, 0.11%)</title><rect x="843.9" y="437" width="1.3" height="15.0" fill="rgb(247,123,48)" rx="2" ry="2" />
<text  x="846.91" y="447.5" ></text>
</g>
<g >
<title>std::io::read_until (686 samples, 0.23%)</title><rect x="78.0" y="405" width="2.7" height="15.0" fill="rgb(214,210,12)" rx="2" ry="2" />
<text  x="80.98" y="415.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::bitset_search (538 samples, 0.18%)</title><rect x="1078.2" y="325" width="2.2" height="15.0" fill="rgb(222,211,39)" rx="2" ry="2" />
<text  x="1081.23" y="335.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (575 samples, 0.20%)</title><rect x="188.4" y="357" width="2.3" height="15.0" fill="rgb(209,158,12)" rx="2" ry="2" />
<text  x="191.41" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (92 samples, 0.03%)</title><rect x="387.1" y="229" width="0.4" height="15.0" fill="rgb(217,59,8)" rx="2" ry="2" />
<text  x="390.12" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (140 samples, 0.05%)</title><rect x="386.9" y="325" width="0.6" height="15.0" fill="rgb(242,56,2)" rx="2" ry="2" />
<text  x="389.95" y="335.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (105 samples, 0.04%)</title><rect x="744.7" y="421" width="0.4" height="15.0" fill="rgb(248,71,17)" rx="2" ry="2" />
<text  x="747.72" y="431.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (634 samples, 0.22%)</title><rect x="528.1" y="421" width="2.6" height="15.0" fill="rgb(254,5,23)" rx="2" ry="2" />
<text  x="531.12" y="431.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_flags (446 samples, 0.15%)</title><rect x="260.5" y="309" width="1.8" height="15.0" fill="rgb(241,60,12)" rx="2" ry="2" />
<text  x="263.51" y="319.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::edit::resolve_edits (280 samples, 0.10%)</title><rect x="1076.0" y="405" width="1.1" height="15.0" fill="rgb(205,77,27)" rx="2" ry="2" />
<text  x="1078.99" y="415.5" ></text>
</g>
<g >
<title>core::ptr::write (121 samples, 0.04%)</title><rect x="1187.4" y="325" width="0.5" height="15.0" fill="rgb(218,53,25)" rx="2" ry="2" />
<text  x="1190.40" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (150 samples, 0.05%)</title><rect x="15.5" y="501" width="0.6" height="15.0" fill="rgb(206,37,48)" rx="2" ry="2" />
<text  x="18.52" y="511.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (316 samples, 0.11%)</title><rect x="756.5" y="405" width="1.3" height="15.0" fill="rgb(226,169,54)" rx="2" ry="2" />
<text  x="759.55" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (106 samples, 0.04%)</title><rect x="391.5" y="245" width="0.4" height="15.0" fill="rgb(240,70,41)" rx="2" ry="2" />
<text  x="394.52" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,213 samples, 0.75%)</title><rect x="945.9" y="293" width="8.9" height="15.0" fill="rgb(238,167,2)" rx="2" ry="2" />
<text  x="948.91" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (176 samples, 0.06%)</title><rect x="361.7" y="373" width="0.7" height="15.0" fill="rgb(238,58,21)" rx="2" ry="2" />
<text  x="364.70" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (120 samples, 0.04%)</title><rect x="387.0" y="309" width="0.5" height="15.0" fill="rgb(209,88,5)" rx="2" ry="2" />
<text  x="390.03" y="319.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::to_curr_byte_idx (212 samples, 0.07%)</title><rect x="1071.7" y="453" width="0.9" height="15.0" fill="rgb(250,157,0)" rx="2" ry="2" />
<text  x="1074.70" y="463.5" ></text>
</g>
<g >
<title>alloc::string::String::push (108 samples, 0.04%)</title><rect x="19.6" y="501" width="0.5" height="15.0" fill="rgb(228,109,4)" rx="2" ry="2" />
<text  x="22.64" y="511.5" ></text>
</g>
<g >
<title>unicode_normalization::tables::qc_nfkc (2,881 samples, 0.98%)</title><rect x="1112.5" y="341" width="11.6" height="15.0" fill="rgb(235,121,52)" rx="2" ry="2" />
<text  x="1115.48" y="351.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::build (4,660 samples, 1.59%)</title><rect x="1149.3" y="469" width="18.8" height="15.0" fill="rgb(232,38,20)" rx="2" ry="2" />
<text  x="1152.32" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (118 samples, 0.04%)</title><rect x="90.3" y="309" width="0.5" height="15.0" fill="rgb(233,17,22)" rx="2" ry="2" />
<text  x="93.32" y="319.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2,291 samples, 0.78%)</title><rect x="1039.2" y="165" width="9.2" height="15.0" fill="rgb(234,146,50)" rx="2" ry="2" />
<text  x="1042.19" y="175.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (307 samples, 0.10%)</title><rect x="190.7" y="373" width="1.3" height="15.0" fill="rgb(214,61,4)" rx="2" ry="2" />
<text  x="193.73" y="383.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (186 samples, 0.06%)</title><rect x="996.8" y="229" width="0.7" height="15.0" fill="rgb(253,16,18)" rx="2" ry="2" />
<text  x="999.76" y="239.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::compatibility_fully_decomposed (82 samples, 0.03%)</title><rect x="1094.2" y="261" width="0.4" height="15.0" fill="rgb(220,5,28)" rx="2" ry="2" />
<text  x="1097.25" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_param (29,442 samples, 10.04%)</title><rect x="726.8" y="453" width="118.4" height="15.0" fill="rgb(243,209,16)" rx="2" ry="2" />
<text  x="729.75" y="463.5" >sudachi::dic::..</text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::shortest_match_at (16,119 samples, 5.50%)</title><rect x="278.1" y="357" width="64.9" height="15.0" fill="rgb(254,179,29)" rx="2" ry="2" />
<text  x="281.12" y="367.5" >&lt;regex:..</text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::can_bow (711 samples, 0.24%)</title><rect x="845.5" y="453" width="2.8" height="15.0" fill="rgb(243,27,42)" rx="2" ry="2" />
<text  x="848.46" y="463.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (439 samples, 0.15%)</title><rect x="1151.6" y="405" width="1.7" height="15.0" fill="rgb(214,213,25)" rx="2" ry="2" />
<text  x="1154.56" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_free (293 samples, 0.10%)</title><rect x="921.3" y="261" width="1.2" height="15.0" fill="rgb(225,178,7)" rx="2" ry="2" />
<text  x="924.33" y="271.5" ></text>
</g>
<g >
<title>__rdl_alloc (189 samples, 0.06%)</title><rect x="1029.1" y="133" width="0.7" height="15.0" fill="rgb(241,219,48)" rx="2" ry="2" />
<text  x="1032.09" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 0.03%)</title><rect x="171.0" y="309" width="0.3" height="15.0" fill="rgb(226,228,17)" rx="2" ry="2" />
<text  x="174.00" y="319.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::fill_cat_continuity (681 samples, 0.23%)</title><rect x="1162.9" y="453" width="2.7" height="15.0" fill="rgb(253,204,33)" rx="2" ry="2" />
<text  x="1165.88" y="463.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (343 samples, 0.12%)</title><rect x="1030.8" y="277" width="1.4" height="15.0" fill="rgb(233,220,8)" rx="2" ry="2" />
<text  x="1033.85" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (411 samples, 0.14%)</title><rect x="658.0" y="421" width="1.6" height="15.0" fill="rgb(248,65,25)" rx="2" ry="2" />
<text  x="660.97" y="431.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (96 samples, 0.03%)</title><rect x="1168.5" y="389" width="0.4" height="15.0" fill="rgb(245,193,16)" rx="2" ry="2" />
<text  x="1171.51" y="399.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_of_range (331 samples, 0.11%)</title><rect x="384.5" y="437" width="1.3" height="15.0" fill="rgb(248,11,50)" rx="2" ry="2" />
<text  x="387.46" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (168 samples, 0.06%)</title><rect x="887.5" y="437" width="0.7" height="15.0" fill="rgb(223,227,2)" rx="2" ry="2" />
<text  x="890.52" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (137 samples, 0.05%)</title><rect x="391.5" y="325" width="0.5" height="15.0" fill="rgb(227,189,48)" rx="2" ry="2" />
<text  x="394.46" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (131 samples, 0.04%)</title><rect x="417.3" y="437" width="0.5" height="15.0" fill="rgb(238,104,12)" rx="2" ry="2" />
<text  x="420.29" y="447.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::part_of_speech (671 samples, 0.23%)</title><rect x="104.4" y="453" width="2.7" height="15.0" fill="rgb(229,207,30)" rx="2" ry="2" />
<text  x="107.44" y="463.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (206 samples, 0.07%)</title><rect x="239.1" y="341" width="0.8" height="15.0" fill="rgb(214,68,54)" rx="2" ry="2" />
<text  x="242.10" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (162 samples, 0.06%)</title><rect x="358.7" y="325" width="0.7" height="15.0" fill="rgb(229,43,24)" rx="2" ry="2" />
<text  x="361.73" y="335.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (83 samples, 0.03%)</title><rect x="997.6" y="261" width="0.3" height="15.0" fill="rgb(217,59,31)" rx="2" ry="2" />
<text  x="1000.61" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;sudachi::analysis::node::ResultNode,alloc::alloc::Global&gt;&gt; (169 samples, 0.06%)</title><rect x="389.0" y="373" width="0.7" height="15.0" fill="rgb(223,165,21)" rx="2" ry="2" />
<text  x="392.02" y="383.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (124 samples, 0.04%)</title><rect x="1139.7" y="85" width="0.5" height="15.0" fill="rgb(231,135,38)" rx="2" ry="2" />
<text  x="1142.66" y="95.5" ></text>
</g>
<g >
<title>_int_malloc (1,231 samples, 0.42%)</title><rect x="948.9" y="197" width="5.0" height="15.0" fill="rgb(231,60,28)" rx="2" ry="2" />
<text  x="951.93" y="207.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,249 samples, 0.43%)</title><rect x="876.0" y="453" width="5.0" height="15.0" fill="rgb(248,202,26)" rx="2" ry="2" />
<text  x="878.96" y="463.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,269 samples, 0.43%)</title><rect x="241.1" y="389" width="5.1" height="15.0" fill="rgb(231,64,12)" rx="2" ry="2" />
<text  x="244.10" y="399.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (361 samples, 0.12%)</title><rect x="779.7" y="277" width="1.5" height="15.0" fill="rgb(207,30,24)" rx="2" ry="2" />
<text  x="782.71" y="287.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (86 samples, 0.03%)</title><rect x="1139.0" y="85" width="0.3" height="15.0" fill="rgb(247,173,27)" rx="2" ry="2" />
<text  x="1141.95" y="95.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (609 samples, 0.21%)</title><rect x="1015.1" y="181" width="2.4" height="15.0" fill="rgb(231,49,16)" rx="2" ry="2" />
<text  x="1018.08" y="191.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (191 samples, 0.07%)</title><rect x="1030.1" y="261" width="0.7" height="15.0" fill="rgb(211,44,16)" rx="2" ry="2" />
<text  x="1033.07" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::reset (4,153 samples, 1.42%)</title><rect x="1169.2" y="485" width="16.7" height="15.0" fill="rgb(205,179,15)" rx="2" ry="2" />
<text  x="1172.20" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (96 samples, 0.03%)</title><rect x="1076.1" y="357" width="0.4" height="15.0" fill="rgb(234,161,11)" rx="2" ry="2" />
<text  x="1079.08" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (102 samples, 0.03%)</title><rect x="237.1" y="373" width="0.4" height="15.0" fill="rgb(213,185,36)" rx="2" ry="2" />
<text  x="240.08" y="383.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find (1,564 samples, 0.53%)</title><rect x="1135.5" y="261" width="6.3" height="15.0" fill="rgb(237,17,35)" rx="2" ry="2" />
<text  x="1138.47" y="271.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (467 samples, 0.16%)</title><rect x="1186.0" y="389" width="1.9" height="15.0" fill="rgb(231,102,29)" rx="2" ry="2" />
<text  x="1189.01" y="399.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (794 samples, 0.27%)</title><rect x="1077.4" y="389" width="3.2" height="15.0" fill="rgb(251,169,51)" rx="2" ry="2" />
<text  x="1080.37" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (609 samples, 0.21%)</title><rect x="1015.1" y="197" width="2.4" height="15.0" fill="rgb(231,75,52)" rx="2" ry="2" />
<text  x="1018.08" y="207.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,651 samples, 0.56%)</title><rect x="898.8" y="437" width="6.6" height="15.0" fill="rgb(240,213,4)" rx="2" ry="2" />
<text  x="901.77" y="447.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::ch_idx (231 samples, 0.08%)</title><rect x="55.1" y="501" width="0.9" height="15.0" fill="rgb(241,210,14)" rx="2" ry="2" />
<text  x="58.06" y="511.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::is_katakana_node (331 samples, 0.11%)</title><rect x="379.5" y="437" width="1.3" height="15.0" fill="rgb(225,70,12)" rx="2" ry="2" />
<text  x="382.48" y="447.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (109 samples, 0.04%)</title><rect x="1146.6" y="405" width="0.4" height="15.0" fill="rgb(238,33,39)" rx="2" ry="2" />
<text  x="1149.56" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (261 samples, 0.09%)</title><rect x="177.8" y="389" width="1.1" height="15.0" fill="rgb(230,104,36)" rx="2" ry="2" />
<text  x="180.82" y="399.5" ></text>
</g>
<g >
<title>&lt;unicode_normalization::recompose::Recompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (408 samples, 0.14%)</title><rect x="1093.0" y="357" width="1.7" height="15.0" fill="rgb(210,102,6)" rx="2" ry="2" />
<text  x="1096.05" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (168 samples, 0.06%)</title><rect x="199.3" y="373" width="0.7" height="15.0" fill="rgb(234,228,30)" rx="2" ry="2" />
<text  x="202.35" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::LexiconEntry::new (520 samples, 0.18%)</title><rect x="438.1" y="389" width="2.1" height="15.0" fill="rgb(217,96,15)" rx="2" ry="2" />
<text  x="441.13" y="399.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::quick_check (4,862 samples, 1.66%)</title><rect x="1106.5" y="373" width="19.6" height="15.0" fill="rgb(253,208,17)" rx="2" ry="2" />
<text  x="1109.52" y="383.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::done (133 samples, 0.05%)</title><rect x="392.8" y="437" width="0.5" height="15.0" fill="rgb(249,219,28)" rx="2" ry="2" />
<text  x="395.77" y="447.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_mut (392 samples, 0.13%)</title><rect x="526.5" y="389" width="1.6" height="15.0" fill="rgb(254,224,7)" rx="2" ry="2" />
<text  x="529.50" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (473 samples, 0.16%)</title><rect x="1061.7" y="293" width="1.9" height="15.0" fill="rgb(253,96,52)" rx="2" ry="2" />
<text  x="1064.67" y="303.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_state (423 samples, 0.14%)</title><rect x="262.3" y="309" width="1.7" height="15.0" fill="rgb(209,116,20)" rx="2" ry="2" />
<text  x="265.30" y="319.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at (361 samples, 0.12%)</title><rect x="779.7" y="325" width="1.5" height="15.0" fill="rgb(207,21,8)" rx="2" ry="2" />
<text  x="782.71" y="335.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (87 samples, 0.03%)</title><rect x="927.5" y="165" width="0.4" height="15.0" fill="rgb(226,62,7)" rx="2" ry="2" />
<text  x="930.52" y="175.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (77 samples, 0.03%)</title><rect x="358.9" y="309" width="0.3" height="15.0" fill="rgb(208,35,48)" rx="2" ry="2" />
<text  x="361.87" y="319.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::earliest_find_at (556 samples, 0.19%)</title><rect x="1088.1" y="325" width="2.2" height="15.0" fill="rgb(241,144,4)" rx="2" ry="2" />
<text  x="1091.06" y="335.5" ></text>
</g>
<g >
<title>regex::dfa::Byte::is_ascii_word (131 samples, 0.04%)</title><rect x="261.8" y="293" width="0.5" height="15.0" fill="rgb(226,229,3)" rx="2" ry="2" />
<text  x="264.77" y="303.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::trace_stack (189 samples, 0.06%)</title><rect x="202.4" y="389" width="0.8" height="15.0" fill="rgb(209,94,44)" rx="2" ry="2" />
<text  x="205.40" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (682 samples, 0.23%)</title><rect x="859.7" y="389" width="2.7" height="15.0" fill="rgb(205,60,36)" rx="2" ry="2" />
<text  x="862.67" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::ResultNode&gt; (4,117 samples, 1.40%)</title><rect x="1169.3" y="389" width="16.6" height="15.0" fill="rgb(244,78,39)" rx="2" ry="2" />
<text  x="1172.31" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (338 samples, 0.12%)</title><rect x="928.4" y="229" width="1.4" height="15.0" fill="rgb(231,108,29)" rx="2" ry="2" />
<text  x="931.42" y="239.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (94 samples, 0.03%)</title><rect x="269.8" y="325" width="0.4" height="15.0" fill="rgb(252,46,41)" rx="2" ry="2" />
<text  x="272.79" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (83 samples, 0.03%)</title><rect x="78.3" y="293" width="0.4" height="15.0" fill="rgb(208,14,11)" rx="2" ry="2" />
<text  x="81.34" y="303.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher (1,116 samples, 0.38%)</title><rect x="345.6" y="341" width="4.5" height="15.0" fill="rgb(240,23,12)" rx="2" ry="2" />
<text  x="348.59" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (529 samples, 0.18%)</title><rect x="925.4" y="149" width="2.1" height="15.0" fill="rgb(237,153,12)" rx="2" ry="2" />
<text  x="928.38" y="159.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::step (488 samples, 0.17%)</title><rect x="364.5" y="261" width="2.0" height="15.0" fill="rgb(242,61,7)" rx="2" ry="2" />
<text  x="367.52" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (137 samples, 0.05%)</title><rect x="388.5" y="277" width="0.5" height="15.0" fill="rgb(234,57,0)" rx="2" ry="2" />
<text  x="391.45" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (2,235 samples, 0.76%)</title><rect x="970.2" y="277" width="9.0" height="15.0" fill="rgb(236,35,24)" rx="2" ry="2" />
<text  x="973.22" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_at_char (135 samples, 0.05%)</title><rect x="857.7" y="405" width="0.5" height="15.0" fill="rgb(216,209,4)" rx="2" ry="2" />
<text  x="860.70" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (550 samples, 0.19%)</title><rect x="62.0" y="501" width="2.2" height="15.0" fill="rgb(214,132,10)" rx="2" ry="2" />
<text  x="65.02" y="511.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8 (644 samples, 0.22%)</title><rect x="75.3" y="421" width="2.6" height="15.0" fill="rgb(240,167,12)" rx="2" ry="2" />
<text  x="78.35" y="431.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_at_char (178 samples, 0.06%)</title><rect x="533.3" y="453" width="0.8" height="15.0" fill="rgb(222,129,3)" rx="2" ry="2" />
<text  x="536.34" y="463.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (361 samples, 0.12%)</title><rect x="779.7" y="341" width="1.5" height="15.0" fill="rgb(254,66,13)" rx="2" ry="2" />
<text  x="782.71" y="351.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match (585 samples, 0.20%)</title><rect x="265.6" y="341" width="2.4" height="15.0" fill="rgb(221,136,26)" rx="2" ry="2" />
<text  x="268.62" y="351.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (107 samples, 0.04%)</title><rect x="1154.2" y="373" width="0.4" height="15.0" fill="rgb(225,168,7)" rx="2" ry="2" />
<text  x="1157.22" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (353 samples, 0.12%)</title><rect x="925.8" y="101" width="1.4" height="15.0" fill="rgb(234,169,49)" rx="2" ry="2" />
<text  x="928.81" y="111.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (146 samples, 0.05%)</title><rect x="1062.3" y="229" width="0.6" height="15.0" fill="rgb(226,215,34)" rx="2" ry="2" />
<text  x="1065.30" y="239.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (158 samples, 0.05%)</title><rect x="1062.9" y="245" width="0.7" height="15.0" fill="rgb(232,54,20)" rx="2" ry="2" />
<text  x="1065.94" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (291 samples, 0.10%)</title><rect x="930.7" y="181" width="1.2" height="15.0" fill="rgb(236,94,40)" rx="2" ry="2" />
<text  x="933.74" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,674 samples, 1.25%)</title><rect x="1000.3" y="181" width="14.8" height="15.0" fill="rgb(240,45,15)" rx="2" ry="2" />
<text  x="1003.30" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (89 samples, 0.03%)</title><rect x="1185.3" y="309" width="0.4" height="15.0" fill="rgb(207,213,1)" rx="2" ry="2" />
<text  x="1188.35" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (77 samples, 0.03%)</title><rect x="389.8" y="357" width="0.3" height="15.0" fill="rgb(217,58,37)" rx="2" ry="2" />
<text  x="392.83" y="367.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (133 samples, 0.05%)</title><rect x="294.2" y="277" width="0.5" height="15.0" fill="rgb(229,31,29)" rx="2" ry="2" />
<text  x="297.16" y="287.5" ></text>
</g>
<g >
<title>core::str::validations::unwrap_or_0 (105 samples, 0.04%)</title><rect x="1074.5" y="341" width="0.4" height="15.0" fill="rgb(214,163,35)" rx="2" ry="2" />
<text  x="1077.52" y="351.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (177 samples, 0.06%)</title><rect x="47.5" y="501" width="0.7" height="15.0" fill="rgb(246,212,37)" rx="2" ry="2" />
<text  x="50.52" y="511.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (120 samples, 0.04%)</title><rect x="380.0" y="389" width="0.5" height="15.0" fill="rgb(254,37,22)" rx="2" ry="2" />
<text  x="383.01" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2,184 samples, 0.74%)</title><rect x="946.0" y="229" width="8.8" height="15.0" fill="rgb(235,207,33)" rx="2" ry="2" />
<text  x="949.03" y="239.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (856 samples, 0.29%)</title><rect x="1128.3" y="277" width="3.4" height="15.0" fill="rgb(252,45,17)" rx="2" ry="2" />
<text  x="1131.26" y="287.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::PathCost::is_connected_to_bos (356 samples, 0.12%)</title><rect x="664.1" y="421" width="1.5" height="15.0" fill="rgb(216,19,30)" rx="2" ry="2" />
<text  x="667.14" y="431.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (3,707 samples, 1.26%)</title><rect x="824.0" y="341" width="14.9" height="15.0" fill="rgb(210,81,24)" rx="2" ry="2" />
<text  x="827.03" y="351.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (5,577 samples, 1.90%)</title><rect x="203.2" y="405" width="22.4" height="15.0" fill="rgb(241,124,15)" rx="2" ry="2" />
<text  x="206.16" y="415.5" >f..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fancy_regex::vm::Branch&gt;&gt; (75 samples, 0.03%)</title><rect x="163.7" y="405" width="0.3" height="15.0" fill="rgb(224,21,31)" rx="2" ry="2" />
<text  x="166.66" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 samples, 0.07%)</title><rect x="228.7" y="341" width="0.8" height="15.0" fill="rgb(236,170,31)" rx="2" ry="2" />
<text  x="231.66" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (548 samples, 0.19%)</title><rect x="860.2" y="341" width="2.2" height="15.0" fill="rgb(211,172,12)" rx="2" ry="2" />
<text  x="863.21" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (270 samples, 0.09%)</title><rect x="918.3" y="213" width="1.1" height="15.0" fill="rgb(229,197,33)" rx="2" ry="2" />
<text  x="921.28" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,219 samples, 0.76%)</title><rect x="1021.1" y="197" width="9.0" height="15.0" fill="rgb(248,161,51)" rx="2" ry="2" />
<text  x="1024.14" y="207.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (534 samples, 0.18%)</title><rect x="351.8" y="101" width="2.1" height="15.0" fill="rgb(249,90,2)" rx="2" ry="2" />
<text  x="354.77" y="111.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (77 samples, 0.03%)</title><rect x="1185.0" y="309" width="0.3" height="15.0" fill="rgb(215,84,34)" rx="2" ry="2" />
<text  x="1188.04" y="319.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (507 samples, 0.17%)</title><rect x="761.1" y="325" width="2.0" height="15.0" fill="rgb(205,43,5)" rx="2" ry="2" />
<text  x="764.07" y="335.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::rewrite_gen (593 samples, 0.20%)</title><rect x="378.9" y="453" width="2.4" height="15.0" fill="rgb(240,76,29)" rx="2" ry="2" />
<text  x="381.90" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::capacity (365 samples, 0.12%)</title><rect x="88.6" y="421" width="1.5" height="15.0" fill="rgb(206,6,41)" rx="2" ry="2" />
<text  x="91.63" y="431.5" ></text>
</g>
<g >
<title>alloc::string::String::push (133 samples, 0.05%)</title><rect x="998.7" y="213" width="0.5" height="15.0" fill="rgb(241,159,32)" rx="2" ry="2" />
<text  x="1001.67" y="223.5" ></text>
</g>
<g >
<title>[[heap]] (2,545 samples, 0.87%)</title><rect x="14.1" y="517" width="10.2" height="15.0" fill="rgb(227,67,16)" rx="2" ry="2" />
<text  x="17.07" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (430 samples, 0.15%)</title><rect x="913.7" y="341" width="1.8" height="15.0" fill="rgb(207,203,9)" rx="2" ry="2" />
<text  x="916.75" y="351.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (534 samples, 0.18%)</title><rect x="840.3" y="341" width="2.2" height="15.0" fill="rgb(210,185,33)" rx="2" ry="2" />
<text  x="843.31" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (196 samples, 0.07%)</title><rect x="386.9" y="357" width="0.8" height="15.0" fill="rgb(233,44,31)" rx="2" ry="2" />
<text  x="389.93" y="367.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (223 samples, 0.08%)</title><rect x="48.2" y="501" width="0.9" height="15.0" fill="rgb(228,210,36)" rx="2" ry="2" />
<text  x="51.23" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (179 samples, 0.06%)</title><rect x="1187.2" y="341" width="0.7" height="15.0" fill="rgb(211,18,28)" rx="2" ry="2" />
<text  x="1190.16" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (909 samples, 0.31%)</title><rect x="256.7" y="293" width="3.6" height="15.0" fill="rgb(241,129,21)" rx="2" ry="2" />
<text  x="259.66" y="303.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (9,712 samples, 3.31%)</title><rect x="991.8" y="277" width="39.0" height="15.0" fill="rgb(228,125,33)" rx="2" ry="2" />
<text  x="994.77" y="287.5" >all..</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,665 samples, 1.25%)</title><rect x="766.4" y="373" width="14.8" height="15.0" fill="rgb(244,74,5)" rx="2" ry="2" />
<text  x="769.42" y="383.5" ></text>
</g>
<g >
<title>sudachi::hash::RoMuHash::consume (94 samples, 0.03%)</title><rect x="859.8" y="293" width="0.4" height="15.0" fill="rgb(227,114,49)" rx="2" ry="2" />
<text  x="862.82" y="303.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,279 samples, 0.44%)</title><rect x="745.1" y="421" width="5.2" height="15.0" fill="rgb(247,164,43)" rx="2" ry="2" />
<text  x="748.15" y="431.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (150 samples, 0.05%)</title><rect x="984.2" y="213" width="0.6" height="15.0" fill="rgb(247,57,4)" rx="2" ry="2" />
<text  x="987.16" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (3,665 samples, 1.25%)</title><rect x="766.4" y="405" width="14.8" height="15.0" fill="rgb(210,48,15)" rx="2" ry="2" />
<text  x="769.42" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::category_type::CategoryType::is_empty (97 samples, 0.03%)</title><rect x="1165.2" y="437" width="0.4" height="15.0" fill="rgb(250,225,48)" rx="2" ry="2" />
<text  x="1168.21" y="447.5" ></text>
</g>
<g >
<title>core::ptr::write (1,195 samples, 0.41%)</title><rect x="568.4" y="421" width="4.8" height="15.0" fill="rgb(207,211,36)" rx="2" ry="2" />
<text  x="571.42" y="431.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,303 samples, 0.79%)</title><rect x="517.2" y="389" width="9.3" height="15.0" fill="rgb(207,140,24)" rx="2" ry="2" />
<text  x="520.23" y="399.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::prefix_at (1,610 samples, 0.55%)</title><rect x="1135.3" y="277" width="6.5" height="15.0" fill="rgb(240,147,24)" rx="2" ry="2" />
<text  x="1138.28" y="287.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (473 samples, 0.16%)</title><rect x="1061.7" y="277" width="1.9" height="15.0" fill="rgb(206,83,1)" rx="2" ry="2" />
<text  x="1064.67" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::simple_oov::SimpleOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (276 samples, 0.09%)</title><rect x="863.0" y="437" width="1.1" height="15.0" fill="rgb(237,22,16)" rx="2" ry="2" />
<text  x="865.99" y="447.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (310 samples, 0.11%)</title><rect x="348.8" y="245" width="1.3" height="15.0" fill="rgb(215,91,54)" rx="2" ry="2" />
<text  x="351.83" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (635 samples, 0.22%)</title><rect x="1150.9" y="437" width="2.5" height="15.0" fill="rgb(205,186,54)" rx="2" ry="2" />
<text  x="1153.88" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::TrieEntryIter::get (8,290 samples, 2.83%)</title><rect x="454.7" y="325" width="33.4" height="15.0" fill="rgb(244,168,53)" rx="2" ry="2" />
<text  x="457.74" y="335.5" >su..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (137 samples, 0.05%)</title><rect x="1062.3" y="149" width="0.6" height="15.0" fill="rgb(238,221,21)" rx="2" ry="2" />
<text  x="1065.34" y="159.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (7,243 samples, 2.47%)</title><rect x="488.1" y="341" width="29.1" height="15.0" fill="rgb(209,152,23)" rx="2" ry="2" />
<text  x="491.09" y="351.5" >co..</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (183 samples, 0.06%)</title><rect x="108.3" y="405" width="0.8" height="15.0" fill="rgb(223,109,41)" rx="2" ry="2" />
<text  x="111.33" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::clear (2,643 samples, 0.90%)</title><rect x="715.1" y="421" width="10.6" height="15.0" fill="rgb(244,44,13)" rx="2" ry="2" />
<text  x="718.08" y="431.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (839 samples, 0.29%)</title><rect x="1065.6" y="325" width="3.4" height="15.0" fill="rgb(251,37,29)" rx="2" ry="2" />
<text  x="1068.64" y="335.5" ></text>
</g>
<g >
<title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (95 samples, 0.03%)</title><rect x="447.7" y="293" width="0.4" height="15.0" fill="rgb(242,138,3)" rx="2" ry="2" />
<text  x="450.68" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::offset (906 samples, 0.31%)</title><rect x="450.8" y="325" width="3.7" height="15.0" fill="rgb(246,121,20)" rx="2" ry="2" />
<text  x="453.83" y="335.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (534 samples, 0.18%)</title><rect x="840.3" y="293" width="2.2" height="15.0" fill="rgb(224,79,1)" rx="2" ry="2" />
<text  x="843.31" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (159 samples, 0.05%)</title><rect x="764.5" y="277" width="0.7" height="15.0" fill="rgb(239,198,28)" rx="2" ry="2" />
<text  x="767.54" y="287.5" ></text>
</g>
<g >
<title>_int_realloc (106 samples, 0.04%)</title><rect x="229.0" y="229" width="0.4" height="15.0" fill="rgb(218,164,44)" rx="2" ry="2" />
<text  x="231.96" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (123 samples, 0.04%)</title><rect x="90.3" y="325" width="0.5" height="15.0" fill="rgb(238,48,13)" rx="2" ry="2" />
<text  x="93.29" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,285 samples, 0.44%)</title><rect x="351.1" y="309" width="5.2" height="15.0" fill="rgb(232,9,43)" rx="2" ry="2" />
<text  x="354.14" y="319.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (120 samples, 0.04%)</title><rect x="78.2" y="389" width="0.5" height="15.0" fill="rgb(235,221,39)" rx="2" ry="2" />
<text  x="81.25" y="399.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (960 samples, 0.33%)</title><rect x="909.9" y="405" width="3.8" height="15.0" fill="rgb(222,1,47)" rx="2" ry="2" />
<text  x="912.86" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (225 samples, 0.08%)</title><rect x="217.5" y="373" width="0.9" height="15.0" fill="rgb(217,22,3)" rx="2" ry="2" />
<text  x="220.46" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (219 samples, 0.07%)</title><rect x="353.0" y="53" width="0.8" height="15.0" fill="rgb(219,29,12)" rx="2" ry="2" />
<text  x="355.95" y="63.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (199 samples, 0.07%)</title><rect x="983.0" y="245" width="0.8" height="15.0" fill="rgb(221,7,47)" rx="2" ry="2" />
<text  x="986.04" y="255.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_cold (191 samples, 0.07%)</title><rect x="90.1" y="437" width="0.8" height="15.0" fill="rgb(241,49,41)" rx="2" ry="2" />
<text  x="93.10" y="447.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (304 samples, 0.10%)</title><rect x="662.5" y="389" width="1.2" height="15.0" fill="rgb(254,226,6)" rx="2" ry="2" />
<text  x="665.51" y="399.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (271 samples, 0.09%)</title><rect x="85.0" y="453" width="1.1" height="15.0" fill="rgb(235,5,26)" rx="2" ry="2" />
<text  x="87.98" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (575 samples, 0.20%)</title><rect x="925.2" y="165" width="2.3" height="15.0" fill="rgb(226,97,38)" rx="2" ry="2" />
<text  x="928.19" y="175.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (1,881 samples, 0.64%)</title><rect x="1097.9" y="341" width="7.5" height="15.0" fill="rgb(216,121,3)" rx="2" ry="2" />
<text  x="1100.86" y="351.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (89 samples, 0.03%)</title><rect x="1092.6" y="373" width="0.4" height="15.0" fill="rgb(246,122,14)" rx="2" ry="2" />
<text  x="1095.63" y="383.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (414 samples, 0.14%)</title><rect x="356.6" y="325" width="1.7" height="15.0" fill="rgb(249,84,29)" rx="2" ry="2" />
<text  x="359.59" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (378 samples, 0.13%)</title><rect x="102.1" y="421" width="1.5" height="15.0" fill="rgb(253,23,28)" rx="2" ry="2" />
<text  x="105.07" y="431.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (590 samples, 0.20%)</title><rect x="896.4" y="421" width="2.4" height="15.0" fill="rgb(206,181,0)" rx="2" ry="2" />
<text  x="899.39" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (120 samples, 0.04%)</title><rect x="391.5" y="261" width="0.4" height="15.0" fill="rgb(236,220,36)" rx="2" ry="2" />
<text  x="394.46" y="271.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::get (182 samples, 0.06%)</title><rect x="229.6" y="389" width="0.7" height="15.0" fill="rgb(244,180,18)" rx="2" ry="2" />
<text  x="232.57" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_info (44,055 samples, 15.02%)</title><rect x="894.2" y="453" width="177.2" height="15.0" fill="rgb(222,120,37)" rx="2" ry="2" />
<text  x="897.19" y="463.5" >sudachi::dic::lexicon_s..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (735 samples, 0.25%)</title><rect x="924.9" y="213" width="3.0" height="15.0" fill="rgb(241,0,49)" rx="2" ry="2" />
<text  x="927.95" y="223.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (151 samples, 0.05%)</title><rect x="90.2" y="357" width="0.6" height="15.0" fill="rgb(250,109,15)" rx="2" ry="2" />
<text  x="93.24" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (125 samples, 0.04%)</title><rect x="350.6" y="389" width="0.5" height="15.0" fill="rgb(238,201,34)" rx="2" ry="2" />
<text  x="353.61" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,572 samples, 1.22%)</title><rect x="919.8" y="357" width="14.4" height="15.0" fill="rgb(209,11,5)" rx="2" ry="2" />
<text  x="922.80" y="367.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,131 samples, 0.73%)</title><rect x="757.8" y="405" width="8.6" height="15.0" fill="rgb(240,28,50)" rx="2" ry="2" />
<text  x="760.85" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (135 samples, 0.05%)</title><rect x="981.2" y="293" width="0.6" height="15.0" fill="rgb(224,24,8)" rx="2" ry="2" />
<text  x="984.22" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1,046 samples, 0.36%)</title><rect x="157.5" y="373" width="4.2" height="15.0" fill="rgb(213,44,2)" rx="2" ry="2" />
<text  x="160.50" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (593 samples, 0.20%)</title><rect x="351.6" y="165" width="2.4" height="15.0" fill="rgb(251,184,14)" rx="2" ry="2" />
<text  x="354.59" y="175.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get (141 samples, 0.05%)</title><rect x="166.9" y="341" width="0.6" height="15.0" fill="rgb(249,101,22)" rx="2" ry="2" />
<text  x="169.90" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (4,617 samples, 1.57%)</title><rect x="915.6" y="405" width="18.6" height="15.0" fill="rgb(243,179,25)" rx="2" ry="2" />
<text  x="918.64" y="415.5" ></text>
</g>
<g >
<title>core::cmp::max (127 samples, 0.04%)</title><rect x="1014.1" y="133" width="0.5" height="15.0" fill="rgb(207,187,38)" rx="2" ry="2" />
<text  x="1017.10" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (399 samples, 0.14%)</title><rect x="237.5" y="373" width="1.6" height="15.0" fill="rgb(228,204,16)" rx="2" ry="2" />
<text  x="240.49" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::dictionary::JapaneseDictionary::grammar (101 samples, 0.03%)</title><rect x="415.2" y="421" width="0.4" height="15.0" fill="rgb(242,117,36)" rx="2" ry="2" />
<text  x="418.17" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (40,830 samples, 13.92%)</title><rect x="906.0" y="421" width="164.3" height="15.0" fill="rgb(224,116,38)" rx="2" ry="2" />
<text  x="908.99" y="431.5" >sudachi::dic::lexicon..</text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (145 samples, 0.05%)</title><rect x="357.0" y="293" width="0.6" height="15.0" fill="rgb(221,19,0)" rx="2" ry="2" />
<text  x="360.02" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (137 samples, 0.05%)</title><rect x="761.1" y="277" width="0.5" height="15.0" fill="rgb(214,53,51)" rx="2" ry="2" />
<text  x="764.07" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,577 samples, 0.88%)</title><rect x="1038.0" y="261" width="10.4" height="15.0" fill="rgb(241,35,16)" rx="2" ry="2" />
<text  x="1041.04" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (312 samples, 0.11%)</title><rect x="51.3" y="501" width="1.2" height="15.0" fill="rgb(224,100,21)" rx="2" ry="2" />
<text  x="54.27" y="511.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (302 samples, 0.10%)</title><rect x="955.0" y="277" width="1.3" height="15.0" fill="rgb(239,220,17)" rx="2" ry="2" />
<text  x="958.05" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,664 samples, 1.25%)</title><rect x="1170.2" y="325" width="14.8" height="15.0" fill="rgb(234,156,45)" rx="2" ry="2" />
<text  x="1173.24" y="335.5" ></text>
</g>
<g >
<title>std::io::BufRead::read_line (1,436 samples, 0.49%)</title><rect x="75.0" y="453" width="5.8" height="15.0" fill="rgb(242,26,54)" rx="2" ry="2" />
<text  x="77.98" y="463.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (794 samples, 0.27%)</title><rect x="1017.7" y="245" width="3.2" height="15.0" fill="rgb(253,89,39)" rx="2" ry="2" />
<text  x="1020.70" y="255.5" ></text>
</g>
<g >
<title>&lt;T as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::oov_provider_plugins (307 samples, 0.10%)</title><rect x="417.8" y="453" width="1.3" height="15.0" fill="rgb(218,173,31)" rx="2" ry="2" />
<text  x="420.82" y="463.5" ></text>
</g>
<g >
<title>unicode_normalization::perfect_hash::mph_lookup (226 samples, 0.08%)</title><rect x="1105.4" y="325" width="0.9" height="15.0" fill="rgb(227,42,29)" rx="2" ry="2" />
<text  x="1108.43" y="335.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at (417 samples, 0.14%)</title><rect x="812.7" y="325" width="1.7" height="15.0" fill="rgb(212,46,2)" rx="2" ry="2" />
<text  x="815.70" y="335.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::start_build (274 samples, 0.09%)</title><rect x="1168.1" y="469" width="1.1" height="15.0" fill="rgb(251,121,16)" rx="2" ry="2" />
<text  x="1171.09" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (148 samples, 0.05%)</title><rect x="1096.5" y="261" width="0.6" height="15.0" fill="rgb(236,134,4)" rx="2" ry="2" />
<text  x="1099.51" y="271.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (295 samples, 0.10%)</title><rect x="1166.2" y="421" width="1.2" height="15.0" fill="rgb(211,81,48)" rx="2" ry="2" />
<text  x="1169.24" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,219 samples, 0.76%)</title><rect x="1021.1" y="181" width="9.0" height="15.0" fill="rgb(221,60,47)" rx="2" ry="2" />
<text  x="1024.14" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (578 samples, 0.20%)</title><rect x="925.2" y="181" width="2.3" height="15.0" fill="rgb(240,51,25)" rx="2" ry="2" />
<text  x="928.18" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (149 samples, 0.05%)</title><rect x="375.4" y="485" width="0.6" height="15.0" fill="rgb(226,208,8)" rx="2" ry="2" />
<text  x="378.40" y="495.5" ></text>
</g>
<g >
<title>&lt;sudachi::output::Simple as sudachi::output::SudachiOutput&lt;T&gt;&gt;::write (147 samples, 0.05%)</title><rect x="84.0" y="469" width="0.6" height="15.0" fill="rgb(249,133,22)" rx="2" ry="2" />
<text  x="87.03" y="479.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (229 samples, 0.08%)</title><rect x="932.3" y="229" width="0.9" height="15.0" fill="rgb(242,8,7)" rx="2" ry="2" />
<text  x="935.32" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,713 samples, 1.27%)</title><rect x="1000.1" y="197" width="15.0" height="15.0" fill="rgb(242,217,11)" rx="2" ry="2" />
<text  x="1003.14" y="207.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (132 samples, 0.05%)</title><rect x="285.4" y="293" width="0.6" height="15.0" fill="rgb(222,152,11)" rx="2" ry="2" />
<text  x="288.43" y="303.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,297 samples, 6.24%)</title><rect x="443.6" y="389" width="73.6" height="15.0" fill="rgb(220,153,43)" rx="2" ry="2" />
<text  x="446.62" y="399.5" >&lt;core::i..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (439 samples, 0.15%)</title><rect x="1151.6" y="421" width="1.7" height="15.0" fill="rgb(229,170,53)" rx="2" ry="2" />
<text  x="1154.56" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,454 samples, 0.84%)</title><rect x="1003.8" y="117" width="9.9" height="15.0" fill="rgb(237,56,6)" rx="2" ry="2" />
<text  x="1006.80" y="127.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (466 samples, 0.16%)</title><rect x="930.0" y="261" width="1.9" height="15.0" fill="rgb(254,55,10)" rx="2" ry="2" />
<text  x="933.05" y="271.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (298 samples, 0.10%)</title><rect x="1160.6" y="389" width="1.2" height="15.0" fill="rgb(212,125,43)" rx="2" ry="2" />
<text  x="1163.64" y="399.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (229 samples, 0.08%)</title><rect x="932.3" y="197" width="0.9" height="15.0" fill="rgb(254,6,4)" rx="2" ry="2" />
<text  x="935.32" y="207.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,967 samples, 1.01%)</title><rect x="967.9" y="293" width="11.9" height="15.0" fill="rgb(233,216,0)" rx="2" ry="2" />
<text  x="970.88" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,476 samples, 1.19%)</title><rect x="1170.7" y="293" width="14.0" height="15.0" fill="rgb(216,119,41)" rx="2" ry="2" />
<text  x="1173.71" y="303.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (3,707 samples, 1.26%)</title><rect x="824.0" y="357" width="14.9" height="15.0" fill="rgb(252,174,20)" rx="2" ry="2" />
<text  x="827.03" y="367.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (361 samples, 0.12%)</title><rect x="779.7" y="293" width="1.5" height="15.0" fill="rgb(210,122,14)" rx="2" ry="2" />
<text  x="782.71" y="303.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (404 samples, 0.14%)</title><rect x="1153.7" y="421" width="1.6" height="15.0" fill="rgb(238,209,29)" rx="2" ry="2" />
<text  x="1156.69" y="431.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (84 samples, 0.03%)</title><rect x="78.3" y="373" width="0.4" height="15.0" fill="rgb(210,134,30)" rx="2" ry="2" />
<text  x="81.33" y="383.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (121 samples, 0.04%)</title><rect x="809.3" y="229" width="0.5" height="15.0" fill="rgb(212,130,5)" rx="2" ry="2" />
<text  x="812.30" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (260 samples, 0.09%)</title><rect x="778.7" y="341" width="1.0" height="15.0" fill="rgb(222,38,27)" rx="2" ry="2" />
<text  x="781.67" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (3,290 samples, 1.12%)</title><rect x="1048.4" y="277" width="13.3" height="15.0" fill="rgb(226,131,10)" rx="2" ry="2" />
<text  x="1051.44" y="287.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (4,035 samples, 1.38%)</title><rect x="795.0" y="309" width="16.2" height="15.0" fill="rgb(217,137,6)" rx="2" ry="2" />
<text  x="797.99" y="319.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::get_normalized (75 samples, 0.03%)</title><rect x="390.2" y="421" width="0.3" height="15.0" fill="rgb(226,14,42)" rx="2" ry="2" />
<text  x="393.19" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::lookup::{{closure}} (308 samples, 0.11%)</title><rect x="529.4" y="341" width="1.3" height="15.0" fill="rgb(207,52,24)" rx="2" ry="2" />
<text  x="532.43" y="351.5" ></text>
</g>
<g >
<title>sudachi::output::write_morpheme_basic (6,214 samples, 2.12%)</title><rect x="84.6" y="469" width="25.0" height="15.0" fill="rgb(215,161,35)" rx="2" ry="2" />
<text  x="87.62" y="479.5" >s..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (255 samples, 0.09%)</title><rect x="1146.0" y="437" width="1.0" height="15.0" fill="rgb(233,171,22)" rx="2" ry="2" />
<text  x="1148.97" y="447.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (339 samples, 0.12%)</title><rect x="918.3" y="341" width="1.3" height="15.0" fill="rgb(249,191,31)" rx="2" ry="2" />
<text  x="921.26" y="351.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (80 samples, 0.03%)</title><rect x="1063.3" y="213" width="0.3" height="15.0" fill="rgb(234,78,17)" rx="2" ry="2" />
<text  x="1066.25" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::dictionary::JapaneseDictionary::from_cfg (504 samples, 0.17%)</title><rect x="1185.9" y="485" width="2.1" height="15.0" fill="rgb(253,110,50)" rx="2" ry="2" />
<text  x="1188.93" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (137 samples, 0.05%)</title><rect x="388.5" y="309" width="0.5" height="15.0" fill="rgb(251,216,19)" rx="2" ry="2" />
<text  x="391.45" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (708 samples, 0.24%)</title><rect x="925.1" y="197" width="2.8" height="15.0" fill="rgb(221,192,47)" rx="2" ry="2" />
<text  x="928.06" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (264 samples, 0.09%)</title><rect x="217.5" y="389" width="1.0" height="15.0" fill="rgb(242,14,36)" rx="2" ry="2" />
<text  x="220.46" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (137 samples, 0.05%)</title><rect x="388.5" y="325" width="0.5" height="15.0" fill="rgb(211,204,16)" rx="2" ry="2" />
<text  x="391.45" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1,350 samples, 0.46%)</title><rect x="196.9" y="389" width="5.5" height="15.0" fill="rgb(214,115,0)" rx="2" ry="2" />
<text  x="199.95" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,077 samples, 0.37%)</title><rect x="563.7" y="421" width="4.3" height="15.0" fill="rgb(228,136,39)" rx="2" ry="2" />
<text  x="566.67" y="431.5" ></text>
</g>
<g >
<title>regex::re_trait::RegularExpression::locations (170 samples, 0.06%)</title><rect x="1132.6" y="357" width="0.7" height="15.0" fill="rgb(243,66,37)" rx="2" ry="2" />
<text  x="1135.59" y="367.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,709 samples, 0.58%)</title><rect x="1126.4" y="373" width="6.9" height="15.0" fill="rgb(243,62,28)" rx="2" ry="2" />
<text  x="1129.40" y="383.5" ></text>
</g>
<g >
<title>fancy_regex::codepoint_len (191 samples, 0.07%)</title><rect x="240.1" y="389" width="0.8" height="15.0" fill="rgb(224,28,43)" rx="2" ry="2" />
<text  x="243.13" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (75 samples, 0.03%)</title><rect x="171.0" y="277" width="0.3" height="15.0" fill="rgb(210,99,17)" rx="2" ry="2" />
<text  x="174.01" y="287.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (164 samples, 0.06%)</title><rect x="354.3" y="197" width="0.7" height="15.0" fill="rgb(226,106,14)" rx="2" ry="2" />
<text  x="357.30" y="207.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::handle_normalization_slow (514 samples, 0.18%)</title><rect x="1093.0" y="373" width="2.1" height="15.0" fill="rgb(248,133,42)" rx="2" ry="2" />
<text  x="1095.99" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::update_dict_id (132 samples, 0.05%)</title><rect x="1070.7" y="437" width="0.5" height="15.0" fill="rgb(251,50,26)" rx="2" ry="2" />
<text  x="1073.65" y="447.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (404 samples, 0.14%)</title><rect x="1153.7" y="437" width="1.6" height="15.0" fill="rgb(234,117,22)" rx="2" ry="2" />
<text  x="1156.69" y="447.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::ok::{{closure}} (1,285 samples, 0.44%)</title><rect x="351.1" y="325" width="5.2" height="15.0" fill="rgb(214,140,24)" rx="2" ry="2" />
<text  x="354.14" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (137 samples, 0.05%)</title><rect x="79.1" y="277" width="0.6" height="15.0" fill="rgb(253,29,10)" rx="2" ry="2" />
<text  x="82.12" y="287.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i32 (282 samples, 0.10%)</title><rect x="979.8" y="293" width="1.2" height="15.0" fill="rgb(228,70,40)" rx="2" ry="2" />
<text  x="982.82" y="303.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::lexicon::word_id_table::WordIdIter as core::iter::traits::iterator::Iterator&gt;::next (1,228 samples, 0.42%)</title><rect x="517.2" y="373" width="5.0" height="15.0" fill="rgb(221,55,48)" rx="2" ry="2" />
<text  x="520.23" y="383.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,335 samples, 0.46%)</title><rect x="771.9" y="293" width="5.4" height="15.0" fill="rgb(237,219,12)" rx="2" ry="2" />
<text  x="774.91" y="303.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (202 samples, 0.07%)</title><rect x="813.6" y="245" width="0.8" height="15.0" fill="rgb(216,119,20)" rx="2" ry="2" />
<text  x="816.56" y="255.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (27,706 samples, 9.45%)</title><rect x="419.8" y="437" width="111.4" height="15.0" fill="rgb(215,117,30)" rx="2" ry="2" />
<text  x="422.79" y="447.5" >&lt;core::iter::..</text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::get_word_info (165 samples, 0.06%)</title><rect x="103.8" y="437" width="0.6" height="15.0" fill="rgb(218,110,44)" rx="2" ry="2" />
<text  x="106.78" y="447.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (837 samples, 0.29%)</title><rect x="1128.3" y="261" width="3.4" height="15.0" fill="rgb(224,45,21)" rx="2" ry="2" />
<text  x="1131.34" y="271.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::exec_nfa (921 samples, 0.31%)</title><rect x="363.6" y="341" width="3.7" height="15.0" fill="rgb(223,14,42)" rx="2" ry="2" />
<text  x="366.56" y="351.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (895 samples, 0.31%)</title><rect x="1033.3" y="245" width="3.6" height="15.0" fill="rgb(213,135,27)" rx="2" ry="2" />
<text  x="1036.31" y="255.5" ></text>
</g>
<g >
<title>core::ptr::write (586 samples, 0.20%)</title><rect x="200.0" y="373" width="2.4" height="15.0" fill="rgb(223,140,9)" rx="2" ry="2" />
<text  x="203.02" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (275 samples, 0.09%)</title><rect x="918.3" y="245" width="1.1" height="15.0" fill="rgb(220,82,18)" rx="2" ry="2" />
<text  x="921.26" y="255.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (2,598 samples, 0.89%)</title><rect x="1051.2" y="213" width="10.5" height="15.0" fill="rgb(208,206,12)" rx="2" ry="2" />
<text  x="1054.21" y="223.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (136 samples, 0.05%)</title><rect x="59.6" y="453" width="0.6" height="15.0" fill="rgb(231,8,19)" rx="2" ry="2" />
<text  x="62.64" y="463.5" ></text>
</g>
<g >
<title>sudachi::main (276,996 samples, 94.44%)</title><rect x="74.0" y="501" width="1114.4" height="15.0" fill="rgb(225,21,39)" rx="2" ry="2" />
<text  x="77.02" y="511.5" >sudachi::main</text>
</g>
<g >
<title>regex::exec::ExecNoSync::captures_nfa_type (938 samples, 0.32%)</title><rect x="363.5" y="357" width="3.8" height="15.0" fill="rgb(226,185,36)" rx="2" ry="2" />
<text  x="366.50" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (157 samples, 0.05%)</title><rect x="38.9" y="501" width="0.6" height="15.0" fill="rgb(237,101,41)" rx="2" ry="2" />
<text  x="41.90" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,855 samples, 0.63%)</title><rect x="1021.6" y="133" width="7.5" height="15.0" fill="rgb(240,128,53)" rx="2" ry="2" />
<text  x="1024.63" y="143.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup (211 samples, 0.07%)</title><rect x="529.8" y="325" width="0.9" height="15.0" fill="rgb(207,74,17)" rx="2" ry="2" />
<text  x="532.82" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (210 samples, 0.07%)</title><rect x="381.4" y="453" width="0.9" height="15.0" fill="rgb(217,69,15)" rx="2" ry="2" />
<text  x="384.42" y="463.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (102 samples, 0.03%)</title><rect x="534.5" y="421" width="0.4" height="15.0" fill="rgb(221,87,54)" rx="2" ry="2" />
<text  x="537.46" y="431.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (242 samples, 0.08%)</title><rect x="1186.2" y="341" width="1.0" height="15.0" fill="rgb(249,60,47)" rx="2" ry="2" />
<text  x="1189.19" y="351.5" ></text>
</g>
<g >
<title>__rdl_alloc (235 samples, 0.08%)</title><rect x="1047.3" y="149" width="0.9" height="15.0" fill="rgb(243,166,11)" rx="2" ry="2" />
<text  x="1050.30" y="159.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (895 samples, 0.31%)</title><rect x="1033.3" y="261" width="3.6" height="15.0" fill="rgb(231,168,51)" rx="2" ry="2" />
<text  x="1036.31" y="271.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::reverse (93 samples, 0.03%)</title><rect x="884.9" y="453" width="0.3" height="15.0" fill="rgb(246,57,25)" rx="2" ry="2" />
<text  x="887.85" y="463.5" ></text>
</g>
<g >
<title>aho_corasick::packed::api::Searcher::find (1,521 samples, 0.52%)</title><rect x="1135.6" y="245" width="6.2" height="15.0" fill="rgb(221,63,14)" rx="2" ry="2" />
<text  x="1138.64" y="255.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::normalized_form (210 samples, 0.07%)</title><rect x="103.6" y="453" width="0.8" height="15.0" fill="rgb(253,206,5)" rx="2" ry="2" />
<text  x="106.59" y="463.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (122 samples, 0.04%)</title><rect x="1148.7" y="405" width="0.4" height="15.0" fill="rgb(243,104,11)" rx="2" ry="2" />
<text  x="1151.65" y="415.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (142 samples, 0.05%)</title><rect x="384.6" y="405" width="0.6" height="15.0" fill="rgb(254,61,6)" rx="2" ry="2" />
<text  x="387.60" y="415.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::AhoCorasick&lt;S&gt;::earliest_find (994 samples, 0.34%)</title><rect x="1086.6" y="373" width="4.0" height="15.0" fill="rgb(248,50,24)" rx="2" ry="2" />
<text  x="1089.64" y="383.5" ></text>
</g>
<g >
<title>fancy_regex::vm::matches_literal (1,419 samples, 0.48%)</title><rect x="240.9" y="405" width="5.7" height="15.0" fill="rgb(243,104,44)" rx="2" ry="2" />
<text  x="243.90" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::u32_parser (1,689 samples, 0.58%)</title><rect x="934.5" y="389" width="6.8" height="15.0" fill="rgb(212,26,14)" rx="2" ry="2" />
<text  x="937.52" y="399.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::find_at (1,938 samples, 0.66%)</title><rect x="1134.4" y="341" width="7.8" height="15.0" fill="rgb(227,146,18)" rx="2" ry="2" />
<text  x="1137.41" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (27,263 samples, 9.29%)</title><rect x="732.8" y="437" width="109.7" height="15.0" fill="rgb(233,22,8)" rx="2" ry="2" />
<text  x="735.78" y="447.5" >sudachi::dic:..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (107 samples, 0.04%)</title><rect x="220.7" y="325" width="0.5" height="15.0" fill="rgb(241,184,3)" rx="2" ry="2" />
<text  x="223.72" y="335.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (250 samples, 0.09%)</title><rect x="822.4" y="405" width="1.0" height="15.0" fill="rgb(244,35,17)" rx="2" ry="2" />
<text  x="825.40" y="415.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::shortest_match_at (297 samples, 0.10%)</title><rect x="358.5" y="389" width="1.2" height="15.0" fill="rgb(220,166,25)" rx="2" ry="2" />
<text  x="361.53" y="399.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (127 samples, 0.04%)</title><rect x="778.1" y="293" width="0.5" height="15.0" fill="rgb(230,211,4)" rx="2" ry="2" />
<text  x="781.11" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (470 samples, 0.16%)</title><rect x="757.8" y="357" width="1.9" height="15.0" fill="rgb(229,68,3)" rx="2" ry="2" />
<text  x="760.85" y="367.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::captures_from_pos (3,456 samples, 1.18%)</title><rect x="360.6" y="421" width="13.9" height="15.0" fill="rgb(235,165,27)" rx="2" ry="2" />
<text  x="363.63" y="431.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state_imp (920 samples, 0.31%)</title><rect x="1081.3" y="293" width="3.7" height="15.0" fill="rgb(221,5,1)" rx="2" ry="2" />
<text  x="1084.26" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (338 samples, 0.12%)</title><rect x="928.4" y="197" width="1.4" height="15.0" fill="rgb(231,221,52)" rx="2" ry="2" />
<text  x="931.42" y="207.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (78 samples, 0.03%)</title><rect x="1076.2" y="325" width="0.3" height="15.0" fill="rgb(215,189,24)" rx="2" ry="2" />
<text  x="1079.15" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_id_table::WordIdTable::entries (4,027 samples, 1.37%)</title><rect x="501.0" y="293" width="16.2" height="15.0" fill="rgb(207,120,18)" rx="2" ry="2" />
<text  x="504.03" y="303.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (270 samples, 0.09%)</title><rect x="660.1" y="405" width="1.0" height="15.0" fill="rgb(243,126,1)" rx="2" ry="2" />
<text  x="663.06" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (199 samples, 0.07%)</title><rect x="983.0" y="261" width="0.8" height="15.0" fill="rgb(234,184,49)" rx="2" ry="2" />
<text  x="986.04" y="271.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (105 samples, 0.04%)</title><rect x="776.9" y="213" width="0.4" height="15.0" fill="rgb(220,173,11)" rx="2" ry="2" />
<text  x="779.85" y="223.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (21,839 samples, 7.45%)</title><rect x="440.2" y="405" width="87.9" height="15.0" fill="rgb(221,212,37)" rx="2" ry="2" />
<text  x="443.22" y="415.5" >&lt;core::ite..</text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (360 samples, 0.12%)</title><rect x="1166.0" y="437" width="1.4" height="15.0" fill="rgb(230,49,47)" rx="2" ry="2" />
<text  x="1168.98" y="447.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,218 samples, 1.10%)</title><rect x="825.7" y="325" width="13.0" height="15.0" fill="rgb(248,119,51)" rx="2" ry="2" />
<text  x="828.71" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (143 samples, 0.05%)</title><rect x="888.6" y="421" width="0.6" height="15.0" fill="rgb(229,219,20)" rx="2" ry="2" />
<text  x="891.63" y="431.5" ></text>
</g>
<g >
<title>std::io::BufRead::read_line::{{closure}} (697 samples, 0.24%)</title><rect x="77.9" y="421" width="2.8" height="15.0" fill="rgb(252,194,38)" rx="2" ry="2" />
<text  x="80.94" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (113 samples, 0.04%)</title><rect x="871.9" y="453" width="0.5" height="15.0" fill="rgb(221,211,40)" rx="2" ry="2" />
<text  x="874.91" y="463.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (168 samples, 0.06%)</title><rect x="1168.2" y="405" width="0.7" height="15.0" fill="rgb(231,217,5)" rx="2" ry="2" />
<text  x="1171.23" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,664 samples, 1.25%)</title><rect x="1170.2" y="309" width="14.8" height="15.0" fill="rgb(230,124,36)" rx="2" ry="2" />
<text  x="1173.24" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::u32_wid_array_parser (79 samples, 0.03%)</title><rect x="922.8" y="277" width="0.4" height="15.0" fill="rgb(230,12,4)" rx="2" ry="2" />
<text  x="925.84" y="287.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (534 samples, 0.18%)</title><rect x="840.3" y="277" width="2.2" height="15.0" fill="rgb(232,110,52)" rx="2" ry="2" />
<text  x="843.31" y="287.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (223 samples, 0.08%)</title><rect x="285.4" y="309" width="0.9" height="15.0" fill="rgb(231,92,49)" rx="2" ry="2" />
<text  x="288.43" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (82 samples, 0.03%)</title><rect x="387.7" y="373" width="0.4" height="15.0" fill="rgb(213,192,45)" rx="2" ry="2" />
<text  x="390.73" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (112 samples, 0.04%)</title><rect x="103.9" y="405" width="0.4" height="15.0" fill="rgb(207,95,27)" rx="2" ry="2" />
<text  x="106.88" y="415.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::has_visited (103 samples, 0.04%)</title><rect x="365.8" y="245" width="0.4" height="15.0" fill="rgb(245,23,30)" rx="2" ry="2" />
<text  x="368.78" y="255.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (107 samples, 0.04%)</title><rect x="534.4" y="437" width="0.5" height="15.0" fill="rgb(252,62,14)" rx="2" ry="2" />
<text  x="537.44" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (104 samples, 0.04%)</title><rect x="350.7" y="341" width="0.4" height="15.0" fill="rgb(246,56,10)" rx="2" ry="2" />
<text  x="353.68" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (695 samples, 0.24%)</title><rect x="369.4" y="293" width="2.8" height="15.0" fill="rgb(235,74,46)" rx="2" ry="2" />
<text  x="372.39" y="303.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (159 samples, 0.05%)</title><rect x="764.5" y="245" width="0.7" height="15.0" fill="rgb(234,172,19)" rx="2" ry="2" />
<text  x="767.54" y="255.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find (6,149 samples, 2.10%)</title><rect x="246.6" y="405" width="24.7" height="15.0" fill="rgb(228,107,6)" rx="2" ry="2" />
<text  x="249.61" y="415.5" >r..</text>
</g>
<g >
<title>nom::number::complete::le_u16 (623 samples, 0.21%)</title><rect x="1034.4" y="229" width="2.5" height="15.0" fill="rgb(244,98,39)" rx="2" ry="2" />
<text  x="1037.41" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (78 samples, 0.03%)</title><rect x="1133.0" y="277" width="0.3" height="15.0" fill="rgb(219,224,10)" rx="2" ry="2" />
<text  x="1135.96" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (191 samples, 0.07%)</title><rect x="79.0" y="357" width="0.7" height="15.0" fill="rgb(227,208,27)" rx="2" ry="2" />
<text  x="81.95" y="367.5" ></text>
</g>
<g >
<title>regex::pool::Pool&lt;T&gt;::get (445 samples, 0.15%)</title><rect x="269.6" y="341" width="1.7" height="15.0" fill="rgb(211,209,37)" rx="2" ry="2" />
<text  x="272.56" y="351.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::reset_vec (3,021 samples, 1.03%)</title><rect x="713.6" y="437" width="12.1" height="15.0" fill="rgb(210,222,45)" rx="2" ry="2" />
<text  x="716.57" y="447.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (238 samples, 0.08%)</title><rect x="354.0" y="213" width="1.0" height="15.0" fill="rgb(241,52,51)" rx="2" ry="2" />
<text  x="357.00" y="223.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (81 samples, 0.03%)</title><rect x="105.4" y="421" width="0.3" height="15.0" fill="rgb(213,111,16)" rx="2" ry="2" />
<text  x="108.40" y="431.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (327 samples, 0.11%)</title><rect x="809.8" y="293" width="1.3" height="15.0" fill="rgb(207,56,31)" rx="2" ry="2" />
<text  x="812.81" y="303.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (24,868 samples, 8.48%)</title><rect x="963.5" y="325" width="100.1" height="15.0" fill="rgb(218,122,37)" rx="2" ry="2" />
<text  x="966.53" y="335.5" >&lt;F as nom::i..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (81 samples, 0.03%)</title><rect x="1150.9" y="421" width="0.3" height="15.0" fill="rgb(229,130,54)" rx="2" ry="2" />
<text  x="1153.88" y="431.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (76 samples, 0.03%)</title><rect x="59.6" y="357" width="0.3" height="15.0" fill="rgb(226,61,39)" rx="2" ry="2" />
<text  x="62.64" y="367.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (194 samples, 0.07%)</title><rect x="11.8" y="501" width="0.8" height="15.0" fill="rgb(227,16,24)" rx="2" ry="2" />
<text  x="14.81" y="511.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (150 samples, 0.05%)</title><rect x="270.7" y="277" width="0.6" height="15.0" fill="rgb(248,75,30)" rx="2" ry="2" />
<text  x="273.74" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,838 samples, 0.63%)</title><rect x="1134.7" y="309" width="7.4" height="15.0" fill="rgb(232,127,23)" rx="2" ry="2" />
<text  x="1137.69" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (84 samples, 0.03%)</title><rect x="387.1" y="213" width="0.4" height="15.0" fill="rgb(232,214,28)" rx="2" ry="2" />
<text  x="390.13" y="223.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::reset::{{closure}} (4,126 samples, 1.41%)</title><rect x="1169.3" y="453" width="16.6" height="15.0" fill="rgb(240,67,16)" rx="2" ry="2" />
<text  x="1172.28" y="463.5" ></text>
</g>
<g >
<title>unicode_normalization::normalize::decompose_compatible::{{closure}} (99 samples, 0.03%)</title><rect x="1094.2" y="277" width="0.4" height="15.0" fill="rgb(245,209,0)" rx="2" ry="2" />
<text  x="1097.18" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (282 samples, 0.10%)</title><rect x="925.9" y="53" width="1.1" height="15.0" fill="rgb(216,135,21)" rx="2" ry="2" />
<text  x="928.89" y="63.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (360 samples, 0.12%)</title><rect x="954.8" y="293" width="1.5" height="15.0" fill="rgb(238,223,54)" rx="2" ry="2" />
<text  x="957.81" y="303.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (19,285 samples, 6.57%)</title><rect x="272.5" y="373" width="77.6" height="15.0" fill="rgb(235,121,25)" rx="2" ry="2" />
<text  x="275.50" y="383.5" >regex::r..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (78 samples, 0.03%)</title><rect x="390.7" y="389" width="0.3" height="15.0" fill="rgb(207,229,35)" rx="2" ry="2" />
<text  x="393.68" y="399.5" ></text>
</g>
<g >
<title>core::ptr::write (141 samples, 0.05%)</title><rect x="1167.5" y="405" width="0.6" height="15.0" fill="rgb(234,209,21)" rx="2" ry="2" />
<text  x="1170.49" y="415.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (131 samples, 0.04%)</title><rect x="859.7" y="357" width="0.5" height="15.0" fill="rgb(231,201,31)" rx="2" ry="2" />
<text  x="862.67" y="367.5" ></text>
</g>
<g >
<title>aho_corasick::dfa::DFA&lt;S&gt;::earliest_find_at (556 samples, 0.19%)</title><rect x="1088.1" y="341" width="2.2" height="15.0" fill="rgb(213,24,38)" rx="2" ry="2" />
<text  x="1091.06" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (117 samples, 0.04%)</title><rect x="178.0" y="357" width="0.4" height="15.0" fill="rgb(247,75,30)" rx="2" ry="2" />
<text  x="180.97" y="367.5" ></text>
</g>
<g >
<title>aho_corasick::dfa::DFA&lt;S&gt;::find_at_no_state (991 samples, 0.34%)</title><rect x="1081.0" y="341" width="4.0" height="15.0" fill="rgb(251,188,6)" rx="2" ry="2" />
<text  x="1083.98" y="351.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (787 samples, 0.27%)</title><rect x="891.0" y="437" width="3.2" height="15.0" fill="rgb(253,20,23)" rx="2" ry="2" />
<text  x="894.00" y="447.5" ></text>
</g>
<g >
<title>std::io::append_to_string (1,426 samples, 0.49%)</title><rect x="75.0" y="437" width="5.7" height="15.0" fill="rgb(234,118,24)" rx="2" ry="2" />
<text  x="78.00" y="447.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (931 samples, 0.32%)</title><rect x="164.2" y="405" width="3.8" height="15.0" fill="rgb(245,134,27)" rx="2" ry="2" />
<text  x="167.21" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::arith::AddAssign&lt;&amp;str&gt;&gt;::add_assign (87 samples, 0.03%)</title><rect x="392.9" y="405" width="0.3" height="15.0" fill="rgb(236,47,8)" rx="2" ry="2" />
<text  x="395.89" y="415.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (467 samples, 0.16%)</title><rect x="1186.0" y="357" width="1.9" height="15.0" fill="rgb(208,214,12)" rx="2" ry="2" />
<text  x="1189.01" y="367.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (149 samples, 0.05%)</title><rect x="860.5" y="309" width="0.6" height="15.0" fill="rgb(225,78,43)" rx="2" ry="2" />
<text  x="863.48" y="319.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::string_number::StringNumber::append (419 samples, 0.14%)</title><rect x="391.0" y="421" width="1.7" height="15.0" fill="rgb(228,14,5)" rx="2" ry="2" />
<text  x="394.02" y="431.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::boxed::Box&lt;W&gt;&gt;::write (156 samples, 0.05%)</title><rect x="90.2" y="405" width="0.6" height="15.0" fill="rgb(205,80,24)" rx="2" ry="2" />
<text  x="93.22" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with (149 samples, 0.05%)</title><rect x="1167.5" y="421" width="0.6" height="15.0" fill="rgb(227,87,40)" rx="2" ry="2" />
<text  x="1170.46" y="431.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2,161 samples, 0.74%)</title><rect x="1021.4" y="149" width="8.7" height="15.0" fill="rgb(242,84,24)" rx="2" ry="2" />
<text  x="1024.37" y="159.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin::concat (1,038 samples, 0.35%)</title><rect x="386.3" y="437" width="4.2" height="15.0" fill="rgb(247,4,46)" rx="2" ry="2" />
<text  x="389.31" y="447.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_of_range (330 samples, 0.11%)</title><rect x="379.5" y="421" width="1.3" height="15.0" fill="rgb(240,107,11)" rx="2" ry="2" />
<text  x="382.48" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (682 samples, 0.23%)</title><rect x="859.7" y="373" width="2.7" height="15.0" fill="rgb(254,213,49)" rx="2" ry="2" />
<text  x="862.67" y="383.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (3,044 samples, 1.04%)</title><rect x="766.4" y="341" width="12.3" height="15.0" fill="rgb(226,205,37)" rx="2" ry="2" />
<text  x="769.42" y="351.5" ></text>
</g>
<g >
<title>aho_corasick::packed::api::Searcher::find_at (1,520 samples, 0.52%)</title><rect x="1135.6" y="229" width="6.2" height="15.0" fill="rgb(218,155,21)" rx="2" ry="2" />
<text  x="1138.64" y="239.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (1,950 samples, 0.66%)</title><rect x="350.5" y="453" width="7.8" height="15.0" fill="rgb(248,102,22)" rx="2" ry="2" />
<text  x="353.48" y="463.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::uppercase::lookup (595 samples, 0.20%)</title><rect x="1078.2" y="341" width="2.4" height="15.0" fill="rgb(251,61,34)" rx="2" ry="2" />
<text  x="1081.17" y="351.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (101 samples, 0.03%)</title><rect x="837.2" y="181" width="0.4" height="15.0" fill="rgb(250,161,32)" rx="2" ry="2" />
<text  x="840.22" y="191.5" ></text>
</g>
<g >
<title>_int_free (507 samples, 0.17%)</title><rect x="36.0" y="501" width="2.1" height="15.0" fill="rgb(221,160,8)" rx="2" ry="2" />
<text  x="39.02" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (315 samples, 0.11%)</title><rect x="930.6" y="229" width="1.3" height="15.0" fill="rgb(246,12,47)" rx="2" ry="2" />
<text  x="933.64" y="239.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (417 samples, 0.14%)</title><rect x="812.7" y="309" width="1.7" height="15.0" fill="rgb(232,162,49)" rx="2" ry="2" />
<text  x="815.70" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::get_word_info (165 samples, 0.06%)</title><rect x="103.8" y="421" width="0.6" height="15.0" fill="rgb(219,14,6)" rx="2" ry="2" />
<text  x="106.78" y="431.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher (630 samples, 0.21%)</title><rect x="268.8" y="357" width="2.5" height="15.0" fill="rgb(207,129,54)" rx="2" ry="2" />
<text  x="271.81" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (76 samples, 0.03%)</title><rect x="59.6" y="389" width="0.3" height="15.0" fill="rgb(212,174,0)" rx="2" ry="2" />
<text  x="62.64" y="399.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (141 samples, 0.05%)</title><rect x="1073.9" y="341" width="0.6" height="15.0" fill="rgb(225,137,19)" rx="2" ry="2" />
<text  x="1076.95" y="351.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (105 samples, 0.04%)</title><rect x="776.9" y="229" width="0.4" height="15.0" fill="rgb(237,211,18)" rx="2" ry="2" />
<text  x="779.85" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3,416 samples, 1.16%)</title><rect x="1001.3" y="165" width="13.8" height="15.0" fill="rgb(240,52,53)" rx="2" ry="2" />
<text  x="1004.33" y="175.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,841 samples, 0.63%)</title><rect x="830.2" y="293" width="7.4" height="15.0" fill="rgb(221,108,18)" rx="2" ry="2" />
<text  x="833.23" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (101 samples, 0.03%)</title><rect x="860.7" y="277" width="0.4" height="15.0" fill="rgb(251,29,49)" rx="2" ry="2" />
<text  x="863.67" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (401 samples, 0.14%)</title><rect x="197.7" y="373" width="1.6" height="15.0" fill="rgb(224,122,7)" rx="2" ry="2" />
<text  x="200.73" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::u32_array_parser (472 samples, 0.16%)</title><rect x="1061.7" y="261" width="1.9" height="15.0" fill="rgb(240,38,18)" rx="2" ry="2" />
<text  x="1064.68" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (137 samples, 0.05%)</title><rect x="256.1" y="277" width="0.6" height="15.0" fill="rgb(234,143,29)" rx="2" ry="2" />
<text  x="259.11" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (399 samples, 0.14%)</title><rect x="388.1" y="389" width="1.6" height="15.0" fill="rgb(244,208,3)" rx="2" ry="2" />
<text  x="391.10" y="399.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (34,337 samples, 11.71%)</title><rect x="573.3" y="437" width="138.1" height="15.0" fill="rgb(218,57,35)" rx="2" ry="2" />
<text  x="576.26" y="447.5" >sudachi::analysis..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::truncate (2,643 samples, 0.90%)</title><rect x="715.1" y="405" width="10.6" height="15.0" fill="rgb(228,102,47)" rx="2" ry="2" />
<text  x="718.08" y="415.5" ></text>
</g>
<g >
<title>alloc::string::String::as_bytes (496 samples, 0.17%)</title><rect x="101.6" y="453" width="2.0" height="15.0" fill="rgb(242,199,20)" rx="2" ry="2" />
<text  x="104.60" y="463.5" ></text>
</g>
<g >
<title>unicode_normalization::perfect_hash::my_hash (137 samples, 0.05%)</title><rect x="1125.5" y="325" width="0.6" height="15.0" fill="rgb(207,189,16)" rx="2" ry="2" />
<text  x="1128.53" y="335.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (112 samples, 0.04%)</title><rect x="1074.1" y="309" width="0.4" height="15.0" fill="rgb(205,65,45)" rx="2" ry="2" />
<text  x="1077.07" y="319.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (724 samples, 0.25%)</title><rect x="311.2" y="293" width="2.9" height="15.0" fill="rgb(208,54,14)" rx="2" ry="2" />
<text  x="314.19" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::word_id_to_offset (140 samples, 0.05%)</title><rect x="917.3" y="389" width="0.6" height="15.0" fill="rgb(210,158,45)" rx="2" ry="2" />
<text  x="920.29" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (173 samples, 0.06%)</title><rect x="79.0" y="293" width="0.7" height="15.0" fill="rgb(217,35,1)" rx="2" ry="2" />
<text  x="82.02" y="303.5" ></text>
</g>
<g >
<title>unicode_normalization::perfect_hash::mph_lookup (82 samples, 0.03%)</title><rect x="1094.2" y="245" width="0.4" height="15.0" fill="rgb(239,1,16)" rx="2" ry="2" />
<text  x="1097.25" y="255.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (234 samples, 0.08%)</title><rect x="341.5" y="325" width="0.9" height="15.0" fill="rgb(212,30,16)" rx="2" ry="2" />
<text  x="344.48" y="335.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::replace_fast (1,061 samples, 0.36%)</title><rect x="1080.8" y="389" width="4.3" height="15.0" fill="rgb(226,145,19)" rx="2" ry="2" />
<text  x="1083.83" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (98 samples, 0.03%)</title><rect x="1076.1" y="389" width="0.4" height="15.0" fill="rgb(244,130,34)" rx="2" ry="2" />
<text  x="1079.08" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (84 samples, 0.03%)</title><rect x="78.3" y="357" width="0.4" height="15.0" fill="rgb(247,164,19)" rx="2" ry="2" />
<text  x="81.33" y="367.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (5,514 samples, 1.88%)</title><rect x="171.3" y="405" width="22.2" height="15.0" fill="rgb(236,44,31)" rx="2" ry="2" />
<text  x="174.34" y="415.5" >f..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (126 samples, 0.04%)</title><rect x="220.7" y="373" width="0.5" height="15.0" fill="rgb(252,158,42)" rx="2" ry="2" />
<text  x="223.68" y="383.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (213 samples, 0.07%)</title><rect x="57.8" y="501" width="0.9" height="15.0" fill="rgb(237,135,35)" rx="2" ry="2" />
<text  x="60.85" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (300 samples, 0.10%)</title><rect x="928.5" y="117" width="1.2" height="15.0" fill="rgb(240,212,27)" rx="2" ry="2" />
<text  x="931.47" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (134 samples, 0.05%)</title><rect x="104.9" y="437" width="0.5" height="15.0" fill="rgb(217,54,18)" rx="2" ry="2" />
<text  x="107.86" y="447.5" ></text>
</g>
<g >
<title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (80 samples, 0.03%)</title><rect x="1063.3" y="229" width="0.3" height="15.0" fill="rgb(218,133,36)" rx="2" ry="2" />
<text  x="1066.25" y="239.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (157 samples, 0.05%)</title><rect x="228.8" y="261" width="0.6" height="15.0" fill="rgb(235,199,14)" rx="2" ry="2" />
<text  x="231.80" y="271.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (154 samples, 0.05%)</title><rect x="823.4" y="405" width="0.6" height="15.0" fill="rgb(218,79,22)" rx="2" ry="2" />
<text  x="826.40" y="415.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (345 samples, 0.12%)</title><rect x="928.4" y="245" width="1.4" height="15.0" fill="rgb(223,106,36)" rx="2" ry="2" />
<text  x="931.39" y="255.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (137 samples, 0.05%)</title><rect x="391.5" y="341" width="0.5" height="15.0" fill="rgb(212,185,49)" rx="2" ry="2" />
<text  x="394.46" y="351.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (3,438 samples, 1.17%)</title><rect x="251.8" y="341" width="13.8" height="15.0" fill="rgb(239,100,5)" rx="2" ry="2" />
<text  x="254.79" y="351.5" ></text>
</g>
<g >
<title>_int_free (97 samples, 0.03%)</title><rect x="375.6" y="373" width="0.4" height="15.0" fill="rgb(224,158,37)" rx="2" ry="2" />
<text  x="378.59" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (77 samples, 0.03%)</title><rect x="389.8" y="373" width="0.3" height="15.0" fill="rgb(213,170,53)" rx="2" ry="2" />
<text  x="392.83" y="383.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (231 samples, 0.08%)</title><rect x="714.2" y="421" width="0.9" height="15.0" fill="rgb(229,157,48)" rx="2" ry="2" />
<text  x="717.15" y="431.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (82 samples, 0.03%)</title><rect x="378.6" y="453" width="0.3" height="15.0" fill="rgb(211,149,34)" rx="2" ry="2" />
<text  x="381.57" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (146 samples, 0.05%)</title><rect x="1146.0" y="421" width="0.6" height="15.0" fill="rgb(227,81,24)" rx="2" ry="2" />
<text  x="1148.97" y="431.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::grammar (346 samples, 0.12%)</title><rect x="414.2" y="437" width="1.4" height="15.0" fill="rgb(242,4,18)" rx="2" ry="2" />
<text  x="417.18" y="447.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Pattern::is_prefix (499 samples, 0.17%)</title><rect x="1137.3" y="133" width="2.0" height="15.0" fill="rgb(239,207,29)" rx="2" ry="2" />
<text  x="1140.29" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (148 samples, 0.05%)</title><rect x="1096.5" y="245" width="0.6" height="15.0" fill="rgb(241,173,48)" rx="2" ry="2" />
<text  x="1099.51" y="255.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (4,038 samples, 1.38%)</title><rect x="1107.8" y="357" width="16.3" height="15.0" fill="rgb(215,102,14)" rx="2" ry="2" />
<text  x="1110.83" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,679 samples, 0.91%)</title><rect x="945.9" y="357" width="10.8" height="15.0" fill="rgb(251,181,19)" rx="2" ry="2" />
<text  x="948.91" y="367.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::uppercase::lookup (109 samples, 0.04%)</title><rect x="72.6" y="501" width="0.5" height="15.0" fill="rgb(243,143,44)" rx="2" ry="2" />
<text  x="75.63" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (670 samples, 0.23%)</title><rect x="351.3" y="213" width="2.7" height="15.0" fill="rgb(236,135,36)" rx="2" ry="2" />
<text  x="354.30" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (145 samples, 0.05%)</title><rect x="228.8" y="245" width="0.6" height="15.0" fill="rgb(219,204,32)" rx="2" ry="2" />
<text  x="231.80" y="255.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u32&gt;::trailing_zeros (108 samples, 0.04%)</title><rect x="857.3" y="389" width="0.4" height="15.0" fill="rgb(222,94,44)" rx="2" ry="2" />
<text  x="860.27" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with (131 samples, 0.04%)</title><rect x="1164.6" y="421" width="0.6" height="15.0" fill="rgb(240,146,45)" rx="2" ry="2" />
<text  x="1167.63" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (185 samples, 0.06%)</title><rect x="1168.2" y="437" width="0.8" height="15.0" fill="rgb(208,209,13)" rx="2" ry="2" />
<text  x="1171.21" y="447.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (87 samples, 0.03%)</title><rect x="1050.9" y="181" width="0.3" height="15.0" fill="rgb(235,38,40)" rx="2" ry="2" />
<text  x="1053.86" y="191.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,361 samples, 0.46%)</title><rect x="95.5" y="405" width="5.5" height="15.0" fill="rgb(237,180,53)" rx="2" ry="2" />
<text  x="98.54" y="415.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (794 samples, 0.27%)</title><rect x="1017.7" y="229" width="3.2" height="15.0" fill="rgb(226,24,9)" rx="2" ry="2" />
<text  x="1020.70" y="239.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (94 samples, 0.03%)</title><rect x="269.8" y="309" width="0.4" height="15.0" fill="rgb(254,185,46)" rx="2" ry="2" />
<text  x="272.79" y="319.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (2,875 samples, 0.98%)</title><rect x="1050.1" y="261" width="11.6" height="15.0" fill="rgb(209,178,36)" rx="2" ry="2" />
<text  x="1053.11" y="271.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (121 samples, 0.04%)</title><rect x="838.2" y="293" width="0.4" height="15.0" fill="rgb(235,87,6)" rx="2" ry="2" />
<text  x="841.16" y="303.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (178 samples, 0.06%)</title><rect x="1168.2" y="421" width="0.7" height="15.0" fill="rgb(212,136,16)" rx="2" ry="2" />
<text  x="1171.23" y="431.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (107 samples, 0.04%)</title><rect x="1154.2" y="357" width="0.4" height="15.0" fill="rgb(227,110,47)" rx="2" ry="2" />
<text  x="1157.22" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (82 samples, 0.03%)</title><rect x="391.6" y="213" width="0.3" height="15.0" fill="rgb(231,28,32)" rx="2" ry="2" />
<text  x="394.57" y="223.5" ></text>
</g>
<g >
<title>&lt;regex::literal::imp::LiteralIter as core::iter::traits::iterator::Iterator&gt;::next (1,259 samples, 0.43%)</title><rect x="290.6" y="293" width="5.1" height="15.0" fill="rgb(235,223,44)" rx="2" ry="2" />
<text  x="293.60" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::set_len (278 samples, 0.09%)</title><rect x="91.5" y="421" width="1.1" height="15.0" fill="rgb(225,74,41)" rx="2" ry="2" />
<text  x="94.47" y="431.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (221 samples, 0.08%)</title><rect x="255.8" y="293" width="0.9" height="15.0" fill="rgb(206,64,3)" rx="2" ry="2" />
<text  x="258.77" y="303.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,573 samples, 0.88%)</title><rect x="945.9" y="325" width="10.4" height="15.0" fill="rgb(249,121,20)" rx="2" ry="2" />
<text  x="948.91" y="335.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (128 samples, 0.04%)</title><rect x="851.8" y="437" width="0.5" height="15.0" fill="rgb(247,192,16)" rx="2" ry="2" />
<text  x="854.76" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (369 samples, 0.13%)</title><rect x="184.8" y="373" width="1.4" height="15.0" fill="rgb(242,83,41)" rx="2" ry="2" />
<text  x="187.75" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (180 samples, 0.06%)</title><rect x="64.2" y="501" width="0.8" height="15.0" fill="rgb(215,139,45)" rx="2" ry="2" />
<text  x="67.23" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (213 samples, 0.07%)</title><rect x="40.8" y="453" width="0.8" height="15.0" fill="rgb(216,76,31)" rx="2" ry="2" />
<text  x="43.76" y="463.5" ></text>
</g>
<g >
<title>sudachi::hash::RoMuHash::consume (318 samples, 0.11%)</title><rect x="758.5" y="309" width="1.2" height="15.0" fill="rgb(233,104,42)" rx="2" ry="2" />
<text  x="761.46" y="319.5" ></text>
</g>
<g >
<title>alloc::string::String::push (370 samples, 0.13%)</title><rect x="40.1" y="501" width="1.5" height="15.0" fill="rgb(213,189,17)" rx="2" ry="2" />
<text  x="43.13" y="511.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,925 samples, 0.66%)</title><rect x="432.5" y="405" width="7.7" height="15.0" fill="rgb(246,105,54)" rx="2" ry="2" />
<text  x="435.47" y="415.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::is_nfkc_quick (4,906 samples, 1.67%)</title><rect x="1106.3" y="389" width="19.8" height="15.0" fill="rgb(218,221,21)" rx="2" ry="2" />
<text  x="1109.34" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (82 samples, 0.03%)</title><rect x="18.3" y="501" width="0.4" height="15.0" fill="rgb(235,219,38)" rx="2" ry="2" />
<text  x="21.34" y="511.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (95 samples, 0.03%)</title><rect x="367.4" y="325" width="0.4" height="15.0" fill="rgb(247,210,4)" rx="2" ry="2" />
<text  x="370.42" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,661 samples, 0.57%)</title><rect x="759.7" y="357" width="6.7" height="15.0" fill="rgb(234,27,46)" rx="2" ry="2" />
<text  x="762.74" y="367.5" ></text>
</g>
<g >
<title>&lt;sudachi::hash::RoMuHash as core::hash::Hasher&gt;::write_u32 (123 samples, 0.04%)</title><rect x="859.7" y="309" width="0.5" height="15.0" fill="rgb(240,21,10)" rx="2" ry="2" />
<text  x="862.70" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (341 samples, 0.12%)</title><rect x="918.3" y="357" width="1.3" height="15.0" fill="rgb(206,223,47)" rx="2" ry="2" />
<text  x="921.25" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,913 samples, 0.65%)</title><rect x="1039.6" y="149" width="7.7" height="15.0" fill="rgb(228,162,51)" rx="2" ry="2" />
<text  x="1042.60" y="159.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (158 samples, 0.05%)</title><rect x="228.8" y="293" width="0.6" height="15.0" fill="rgb(220,21,22)" rx="2" ry="2" />
<text  x="231.80" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (88 samples, 0.03%)</title><rect x="1151.2" y="389" width="0.4" height="15.0" fill="rgb(245,172,20)" rx="2" ry="2" />
<text  x="1154.21" y="399.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (204 samples, 0.07%)</title><rect x="980.1" y="213" width="0.8" height="15.0" fill="rgb(209,98,54)" rx="2" ry="2" />
<text  x="983.11" y="223.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::find_at (4,311 samples, 1.47%)</title><rect x="250.6" y="357" width="17.4" height="15.0" fill="rgb(205,137,16)" rx="2" ry="2" />
<text  x="253.63" y="367.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (465 samples, 0.16%)</title><rect x="266.1" y="325" width="1.9" height="15.0" fill="rgb(215,181,31)" rx="2" ry="2" />
<text  x="269.10" y="335.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.03%)</title><rect x="1139.0" y="101" width="0.3" height="15.0" fill="rgb(209,216,39)" rx="2" ry="2" />
<text  x="1141.95" y="111.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (215 samples, 0.07%)</title><rect x="228.7" y="325" width="0.8" height="15.0" fill="rgb(244,130,0)" rx="2" ry="2" />
<text  x="231.66" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (168 samples, 0.06%)</title><rect x="199.3" y="357" width="0.7" height="15.0" fill="rgb(243,38,44)" rx="2" ry="2" />
<text  x="202.35" y="367.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_of_range::{{closure}} (114 samples, 0.04%)</title><rect x="385.2" y="405" width="0.4" height="15.0" fill="rgb(205,97,34)" rx="2" ry="2" />
<text  x="388.18" y="415.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (109 samples, 0.04%)</title><rect x="539.6" y="437" width="0.5" height="15.0" fill="rgb(244,58,33)" rx="2" ry="2" />
<text  x="542.63" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (430 samples, 0.15%)</title><rect x="913.7" y="325" width="1.8" height="15.0" fill="rgb(240,88,30)" rx="2" ry="2" />
<text  x="916.75" y="335.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (123 samples, 0.04%)</title><rect x="859.7" y="325" width="0.5" height="15.0" fill="rgb(238,128,1)" rx="2" ry="2" />
<text  x="862.70" y="335.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::LatticeNode::char_range (76 samples, 0.03%)</title><rect x="386.0" y="437" width="0.3" height="15.0" fill="rgb(205,90,19)" rx="2" ry="2" />
<text  x="388.99" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (232 samples, 0.08%)</title><rect x="930.8" y="133" width="1.0" height="15.0" fill="rgb(206,52,11)" rx="2" ry="2" />
<text  x="933.84" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (202 samples, 0.07%)</title><rect x="236.3" y="373" width="0.8" height="15.0" fill="rgb(213,36,36)" rx="2" ry="2" />
<text  x="239.27" y="383.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher_str (777 samples, 0.26%)</title><rect x="268.2" y="373" width="3.1" height="15.0" fill="rgb(207,15,6)" rx="2" ry="2" />
<text  x="271.22" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (4,009 samples, 1.37%)</title><rect x="557.1" y="437" width="16.1" height="15.0" fill="rgb(236,56,24)" rx="2" ry="2" />
<text  x="560.10" y="447.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (80 samples, 0.03%)</title><rect x="1063.3" y="197" width="0.3" height="15.0" fill="rgb(219,155,31)" rx="2" ry="2" />
<text  x="1066.25" y="207.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8 (108 samples, 0.04%)</title><rect x="762.7" y="261" width="0.4" height="15.0" fill="rgb(237,219,7)" rx="2" ry="2" />
<text  x="765.68" y="271.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (3,006 samples, 1.02%)</title><rect x="381.3" y="469" width="12.1" height="15.0" fill="rgb(244,170,1)" rx="2" ry="2" />
<text  x="384.28" y="479.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (222 samples, 0.08%)</title><rect x="811.2" y="325" width="0.9" height="15.0" fill="rgb(230,49,41)" rx="2" ry="2" />
<text  x="814.22" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::character_category::CharacterCategory::get_category_types (1,053 samples, 0.36%)</title><rect x="1157.7" y="453" width="4.2" height="15.0" fill="rgb(218,138,15)" rx="2" ry="2" />
<text  x="1160.70" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,131 samples, 0.73%)</title><rect x="757.8" y="389" width="8.6" height="15.0" fill="rgb(243,25,9)" rx="2" ry="2" />
<text  x="760.85" y="399.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (81 samples, 0.03%)</title><rect x="533.7" y="421" width="0.4" height="15.0" fill="rgb(205,177,25)" rx="2" ry="2" />
<text  x="536.73" y="431.5" ></text>
</g>
<g >
<title>alloc::string::String::push (5,728 samples, 1.95%)</title><rect x="997.9" y="261" width="23.1" height="15.0" fill="rgb(215,115,2)" rx="2" ry="2" />
<text  x="1000.94" y="271.5" >a..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (76 samples, 0.03%)</title><rect x="59.6" y="373" width="0.3" height="15.0" fill="rgb(241,88,36)" rx="2" ry="2" />
<text  x="62.64" y="383.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (136 samples, 0.05%)</title><rect x="1095.9" y="245" width="0.6" height="15.0" fill="rgb(209,158,35)" rx="2" ry="2" />
<text  x="1098.91" y="255.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (109 samples, 0.04%)</title><rect x="1146.6" y="421" width="0.4" height="15.0" fill="rgb(206,33,51)" rx="2" ry="2" />
<text  x="1149.56" y="431.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (467 samples, 0.16%)</title><rect x="1186.0" y="373" width="1.9" height="15.0" fill="rgb(217,206,8)" rx="2" ry="2" />
<text  x="1189.01" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (250 samples, 0.09%)</title><rect x="918.3" y="197" width="1.0" height="15.0" fill="rgb(228,12,19)" rx="2" ry="2" />
<text  x="921.29" y="207.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (507 samples, 0.17%)</title><rect x="761.1" y="309" width="2.0" height="15.0" fill="rgb(237,98,10)" rx="2" ry="2" />
<text  x="764.07" y="319.5" ></text>
</g>
<g >
<title>&lt;sudachi::sentence_detector::SentenceDetector::get_eos::SENTENCE_BREAKER as core::ops::deref::Deref&gt;::deref::__stability::LAZY (810 samples, 0.28%)</title><rect x="10.8" y="517" width="3.2" height="15.0" fill="rgb(209,27,52)" rx="2" ry="2" />
<text  x="13.76" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (103 samples, 0.04%)</title><rect x="1062.4" y="117" width="0.4" height="15.0" fill="rgb(241,88,43)" rx="2" ry="2" />
<text  x="1065.41" y="127.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (509 samples, 0.17%)</title><rect x="1095.1" y="309" width="2.0" height="15.0" fill="rgb(240,130,20)" rx="2" ry="2" />
<text  x="1098.05" y="319.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite (17,282 samples, 5.89%)</title><rect x="1073.2" y="453" width="69.5" height="15.0" fill="rgb(232,162,19)" rx="2" ry="2" />
<text  x="1076.19" y="463.5" >sudachi..</text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::append (553 samples, 0.19%)</title><rect x="390.5" y="437" width="2.2" height="15.0" fill="rgb(253,142,33)" rx="2" ry="2" />
<text  x="393.49" y="447.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (641 samples, 0.22%)</title><rect x="661.1" y="421" width="2.6" height="15.0" fill="rgb(228,96,11)" rx="2" ry="2" />
<text  x="664.15" y="431.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (114 samples, 0.04%)</title><rect x="73.1" y="501" width="0.4" height="15.0" fill="rgb(231,8,6)" rx="2" ry="2" />
<text  x="76.08" y="511.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (116 samples, 0.04%)</title><rect x="1070.7" y="421" width="0.5" height="15.0" fill="rgb(228,131,17)" rx="2" ry="2" />
<text  x="1073.70" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (509 samples, 0.17%)</title><rect x="925.4" y="133" width="2.1" height="15.0" fill="rgb(207,51,9)" rx="2" ry="2" />
<text  x="928.42" y="143.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (346 samples, 0.12%)</title><rect x="358.4" y="437" width="1.4" height="15.0" fill="rgb(242,216,31)" rx="2" ry="2" />
<text  x="361.44" y="447.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::ch_idx (397 samples, 0.14%)</title><rect x="848.3" y="453" width="1.6" height="15.0" fill="rgb(218,180,52)" rx="2" ry="2" />
<text  x="851.32" y="463.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::LatticeNode::num_codepts (81 samples, 0.03%)</title><rect x="381.0" y="421" width="0.3" height="15.0" fill="rgb(253,41,46)" rx="2" ry="2" />
<text  x="383.96" y="431.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (282 samples, 0.10%)</title><rect x="979.8" y="261" width="1.2" height="15.0" fill="rgb(219,39,50)" rx="2" ry="2" />
<text  x="982.82" y="271.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::members2m128 (90 samples, 0.03%)</title><rect x="1140.8" y="165" width="0.4" height="15.0" fill="rgb(241,31,50)" rx="2" ry="2" />
<text  x="1143.84" y="175.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.03%)</title><rect x="163.7" y="373" width="0.3" height="15.0" fill="rgb(249,64,44)" rx="2" ry="2" />
<text  x="166.66" y="383.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (210 samples, 0.07%)</title><rect x="996.8" y="245" width="0.8" height="15.0" fill="rgb(233,204,43)" rx="2" ry="2" />
<text  x="999.76" y="255.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,269 samples, 0.43%)</title><rect x="1127.1" y="309" width="5.1" height="15.0" fill="rgb(227,154,28)" rx="2" ry="2" />
<text  x="1130.05" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (179 samples, 0.06%)</title><rect x="228.7" y="309" width="0.7" height="15.0" fill="rgb(224,109,40)" rx="2" ry="2" />
<text  x="231.72" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (819 samples, 0.28%)</title><rect x="763.1" y="293" width="3.3" height="15.0" fill="rgb(252,56,31)" rx="2" ry="2" />
<text  x="766.12" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (213 samples, 0.07%)</title><rect x="40.8" y="485" width="0.8" height="15.0" fill="rgb(239,223,2)" rx="2" ry="2" />
<text  x="43.76" y="495.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (4,581 samples, 1.56%)</title><rect x="824.0" y="389" width="18.5" height="15.0" fill="rgb(232,126,33)" rx="2" ry="2" />
<text  x="827.03" y="399.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (2,957 samples, 1.01%)</title><rect x="362.5" y="389" width="11.9" height="15.0" fill="rgb(209,189,9)" rx="2" ry="2" />
<text  x="365.50" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (79 samples, 0.03%)</title><rect x="387.7" y="293" width="0.4" height="15.0" fill="rgb(237,72,52)" rx="2" ry="2" />
<text  x="390.74" y="303.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (105 samples, 0.04%)</title><rect x="1013.7" y="117" width="0.4" height="15.0" fill="rgb(212,123,31)" rx="2" ry="2" />
<text  x="1016.68" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (95 samples, 0.03%)</title><rect x="362.0" y="309" width="0.4" height="15.0" fill="rgb(218,130,22)" rx="2" ry="2" />
<text  x="365.03" y="319.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_uppercase (733 samples, 0.25%)</title><rect x="1077.6" y="357" width="3.0" height="15.0" fill="rgb(227,224,11)" rx="2" ry="2" />
<text  x="1080.62" y="367.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (121 samples, 0.04%)</title><rect x="809.3" y="213" width="0.5" height="15.0" fill="rgb(226,99,36)" rx="2" ry="2" />
<text  x="812.30" y="223.5" ></text>
</g>
<g >
<title>&lt; (27,126 samples, 9.25%)</title><rect x="960.3" y="341" width="109.1" height="15.0" fill="rgb(254,53,18)" rx="2" ry="2" />
<text  x="963.28" y="351.5" >&lt;</text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (271 samples, 0.09%)</title><rect x="85.0" y="437" width="1.1" height="15.0" fill="rgb(208,170,11)" rx="2" ry="2" />
<text  x="87.98" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::resize (154 samples, 0.05%)</title><rect x="1156.8" y="453" width="0.7" height="15.0" fill="rgb(214,107,10)" rx="2" ry="2" />
<text  x="1159.83" y="463.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (264 samples, 0.09%)</title><rect x="1151.7" y="357" width="1.0" height="15.0" fill="rgb(234,164,17)" rx="2" ry="2" />
<text  x="1154.66" y="367.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (313 samples, 0.11%)</title><rect x="1061.7" y="245" width="1.2" height="15.0" fill="rgb(230,18,30)" rx="2" ry="2" />
<text  x="1064.68" y="255.5" ></text>
</g>
<g >
<title>unicode_normalization::normalize::decompose_compatible (261 samples, 0.09%)</title><rect x="1093.5" y="309" width="1.1" height="15.0" fill="rgb(228,16,25)" rx="2" ry="2" />
<text  x="1096.54" y="319.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (300 samples, 0.10%)</title><rect x="1073.8" y="373" width="1.2" height="15.0" fill="rgb(224,12,19)" rx="2" ry="2" />
<text  x="1076.76" y="383.5" ></text>
</g>
<g >
<title>regex::pool::THREAD_ID::__getit (158 samples, 0.05%)</title><rect x="270.7" y="293" width="0.6" height="15.0" fill="rgb(243,182,44)" rx="2" ry="2" />
<text  x="273.71" y="303.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::is_match (368 samples, 0.13%)</title><rect x="358.4" y="453" width="1.4" height="15.0" fill="rgb(225,128,30)" rx="2" ry="2" />
<text  x="361.35" y="463.5" ></text>
</g>
<g >
<title>__rdl_realloc (89 samples, 0.03%)</title><rect x="35.7" y="501" width="0.3" height="15.0" fill="rgb(222,13,36)" rx="2" ry="2" />
<text  x="38.66" y="511.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::build_lattice (117,000 samples, 39.89%)</title><rect x="393.4" y="469" width="470.7" height="15.0" fill="rgb(253,169,44)" rx="2" ry="2" />
<text  x="396.42" y="479.5" >sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::bui..</text>
</g>
<g >
<title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (161 samples, 0.05%)</title><rect x="83.0" y="469" width="0.7" height="15.0" fill="rgb(212,223,13)" rx="2" ry="2" />
<text  x="86.01" y="479.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (193 samples, 0.07%)</title><rect x="49.6" y="501" width="0.8" height="15.0" fill="rgb(205,93,25)" rx="2" ry="2" />
<text  x="52.63" y="511.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (122 samples, 0.04%)</title><rect x="1148.7" y="389" width="0.4" height="15.0" fill="rgb(244,11,54)" rx="2" ry="2" />
<text  x="1151.65" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (172 samples, 0.06%)</title><rect x="236.3" y="341" width="0.7" height="15.0" fill="rgb(218,168,25)" rx="2" ry="2" />
<text  x="239.27" y="351.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (237 samples, 0.08%)</title><rect x="731.8" y="405" width="1.0" height="15.0" fill="rgb(238,181,42)" rx="2" ry="2" />
<text  x="734.81" y="415.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_uppercase (483 samples, 0.16%)</title><rect x="1090.6" y="373" width="2.0" height="15.0" fill="rgb(238,146,44)" rx="2" ry="2" />
<text  x="1093.64" y="383.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::mecab_oov::MeCabOovPlugin::get_oov_node (144 samples, 0.05%)</title><rect x="862.4" y="405" width="0.6" height="15.0" fill="rgb(218,96,52)" rx="2" ry="2" />
<text  x="865.41" y="415.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::OovProviderPlugin::get_oov (3,514 samples, 1.20%)</title><rect x="850.0" y="453" width="14.1" height="15.0" fill="rgb(208,159,48)" rx="2" ry="2" />
<text  x="852.97" y="463.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (218 samples, 0.07%)</title><rect x="111.6" y="421" width="0.9" height="15.0" fill="rgb(206,153,0)" rx="2" ry="2" />
<text  x="114.59" y="431.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (229 samples, 0.08%)</title><rect x="1095.5" y="261" width="1.0" height="15.0" fill="rgb(243,46,43)" rx="2" ry="2" />
<text  x="1098.54" y="271.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1,459 samples, 0.50%)</title><rect x="1126.5" y="341" width="5.9" height="15.0" fill="rgb(213,205,25)" rx="2" ry="2" />
<text  x="1129.51" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (165 samples, 0.06%)</title><rect x="199.4" y="341" width="0.6" height="15.0" fill="rgb(226,154,22)" rx="2" ry="2" />
<text  x="202.36" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (110 samples, 0.04%)</title><rect x="659.6" y="405" width="0.5" height="15.0" fill="rgb(230,30,20)" rx="2" ry="2" />
<text  x="662.62" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_free (3,191 samples, 1.09%)</title><rect x="1171.3" y="261" width="12.9" height="15.0" fill="rgb(241,143,0)" rx="2" ry="2" />
<text  x="1174.32" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (133 samples, 0.05%)</title><rect x="388.5" y="261" width="0.5" height="15.0" fill="rgb(223,187,12)" rx="2" ry="2" />
<text  x="391.45" y="271.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (2,257 samples, 0.77%)</title><rect x="1021.0" y="261" width="9.1" height="15.0" fill="rgb(211,104,27)" rx="2" ry="2" />
<text  x="1023.99" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (79 samples, 0.03%)</title><rect x="331.0" y="229" width="0.3" height="15.0" fill="rgb(226,61,52)" rx="2" ry="2" />
<text  x="333.95" y="239.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::refresh_chars (471 samples, 0.16%)</title><rect x="1073.3" y="437" width="1.9" height="15.0" fill="rgb(238,64,34)" rx="2" ry="2" />
<text  x="1076.32" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (329 samples, 0.11%)</title><rect x="931.9" y="261" width="1.3" height="15.0" fill="rgb(249,158,23)" rx="2" ry="2" />
<text  x="934.92" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (187 samples, 0.06%)</title><rect x="79.0" y="341" width="0.7" height="15.0" fill="rgb(224,17,39)" rx="2" ry="2" />
<text  x="81.97" y="351.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::part_of_speech_id (284 samples, 0.10%)</title><rect x="105.7" y="437" width="1.2" height="15.0" fill="rgb(225,125,49)" rx="2" ry="2" />
<text  x="108.73" y="447.5" ></text>
</g>
<g >
<title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,514 samples, 0.52%)</title><rect x="74.7" y="485" width="6.1" height="15.0" fill="rgb(223,54,11)" rx="2" ry="2" />
<text  x="77.66" y="495.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (470 samples, 0.16%)</title><rect x="757.8" y="341" width="1.9" height="15.0" fill="rgb(215,215,37)" rx="2" ry="2" />
<text  x="760.85" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (293 samples, 0.10%)</title><rect x="930.7" y="213" width="1.2" height="15.0" fill="rgb(240,21,34)" rx="2" ry="2" />
<text  x="933.73" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (2,812 samples, 0.96%)</title><rect x="1002.8" y="133" width="11.3" height="15.0" fill="rgb(234,36,40)" rx="2" ry="2" />
<text  x="1005.79" y="143.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (1,096 samples, 0.37%)</title><rect x="1108.1" y="341" width="4.4" height="15.0" fill="rgb(206,225,1)" rx="2" ry="2" />
<text  x="1111.07" y="351.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (251 samples, 0.09%)</title><rect x="45.9" y="501" width="1.0" height="15.0" fill="rgb(209,136,27)" rx="2" ry="2" />
<text  x="48.86" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (197 samples, 0.07%)</title><rect x="861.6" y="309" width="0.8" height="15.0" fill="rgb(229,203,6)" rx="2" ry="2" />
<text  x="864.62" y="319.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (82 samples, 0.03%)</title><rect x="379.7" y="389" width="0.3" height="15.0" fill="rgb(234,102,32)" rx="2" ry="2" />
<text  x="382.68" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::pool::PoolGuard&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt; (259 samples, 0.09%)</title><rect x="343.0" y="325" width="1.0" height="15.0" fill="rgb(241,51,50)" rx="2" ry="2" />
<text  x="345.97" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (110 samples, 0.04%)</title><rect x="713.7" y="421" width="0.5" height="15.0" fill="rgb(217,133,28)" rx="2" ry="2" />
<text  x="716.71" y="431.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::translate_indices (1,598 samples, 0.54%)</title><rect x="1142.7" y="469" width="6.4" height="15.0" fill="rgb(236,13,32)" rx="2" ry="2" />
<text  x="1145.71" y="479.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (310 samples, 0.11%)</title><rect x="348.8" y="229" width="1.3" height="15.0" fill="rgb(223,2,54)" rx="2" ry="2" />
<text  x="351.83" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (185 samples, 0.06%)</title><rect x="1168.2" y="453" width="0.8" height="15.0" fill="rgb(211,73,16)" rx="2" ry="2" />
<text  x="1171.21" y="463.5" ></text>
</g>
<g >
<title>&lt;regex::pool::PoolGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (259 samples, 0.09%)</title><rect x="343.0" y="309" width="1.0" height="15.0" fill="rgb(235,118,31)" rx="2" ry="2" />
<text  x="345.97" y="319.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (1,537 samples, 0.52%)</title><rect x="831.5" y="277" width="6.1" height="15.0" fill="rgb(208,70,42)" rx="2" ry="2" />
<text  x="834.45" y="287.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (116 samples, 0.04%)</title><rect x="927.9" y="229" width="0.5" height="15.0" fill="rgb(228,52,38)" rx="2" ry="2" />
<text  x="930.91" y="239.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (228 samples, 0.08%)</title><rect x="1105.4" y="341" width="0.9" height="15.0" fill="rgb(234,30,27)" rx="2" ry="2" />
<text  x="1108.42" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (126 samples, 0.04%)</title><rect x="220.7" y="357" width="0.5" height="15.0" fill="rgb(245,147,24)" rx="2" ry="2" />
<text  x="223.68" y="367.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (307 samples, 0.10%)</title><rect x="190.7" y="357" width="1.3" height="15.0" fill="rgb(210,32,38)" rx="2" ry="2" />
<text  x="193.73" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup::{{closure}}::{{closure}} (1,075 samples, 0.37%)</title><rect x="522.2" y="341" width="4.3" height="15.0" fill="rgb(246,117,10)" rx="2" ry="2" />
<text  x="525.17" y="351.5" ></text>
</g>
<g >
<title>core::ptr::write (96 samples, 0.03%)</title><rect x="1168.5" y="357" width="0.4" height="15.0" fill="rgb(213,31,22)" rx="2" ry="2" />
<text  x="1171.51" y="367.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (2,938 samples, 1.00%)</title><rect x="362.6" y="373" width="11.8" height="15.0" fill="rgb(225,29,47)" rx="2" ry="2" />
<text  x="365.58" y="383.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (5,995 samples, 2.04%)</title><rect x="790.3" y="389" width="24.1" height="15.0" fill="rgb(226,33,49)" rx="2" ry="2" />
<text  x="793.26" y="399.5" >n..</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (768 samples, 0.26%)</title><rect x="881.7" y="421" width="3.1" height="15.0" fill="rgb(245,122,11)" rx="2" ry="2" />
<text  x="884.74" y="431.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (512 samples, 0.17%)</title><rect x="1063.6" y="325" width="2.0" height="15.0" fill="rgb(206,102,51)" rx="2" ry="2" />
<text  x="1066.58" y="335.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (228 samples, 0.08%)</title><rect x="391.3" y="389" width="0.9" height="15.0" fill="rgb(221,49,3)" rx="2" ry="2" />
<text  x="394.28" y="399.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (123 samples, 0.04%)</title><rect x="917.4" y="357" width="0.5" height="15.0" fill="rgb(219,145,19)" rx="2" ry="2" />
<text  x="920.36" y="367.5" ></text>
</g>
<g >
<title>&lt;sudachi::output::Simple as sudachi::output::SudachiOutput&lt;T&gt;&gt;::write (107 samples, 0.04%)</title><rect x="101.2" y="453" width="0.4" height="15.0" fill="rgb(249,142,31)" rx="2" ry="2" />
<text  x="104.17" y="463.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::word_id_to_offset (1,767 samples, 0.60%)</title><rect x="934.2" y="405" width="7.1" height="15.0" fill="rgb(232,26,48)" rx="2" ry="2" />
<text  x="937.21" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (91 samples, 0.03%)</title><rect x="1072.2" y="437" width="0.4" height="15.0" fill="rgb(215,143,38)" rx="2" ry="2" />
<text  x="1075.19" y="447.5" ></text>
</g>
<g >
<title>_int_realloc (110 samples, 0.04%)</title><rect x="926.6" y="37" width="0.4" height="15.0" fill="rgb(231,162,13)" rx="2" ry="2" />
<text  x="929.58" y="47.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (95 samples, 0.03%)</title><rect x="219.0" y="373" width="0.4" height="15.0" fill="rgb(209,203,47)" rx="2" ry="2" />
<text  x="221.99" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (199 samples, 0.07%)</title><rect x="888.6" y="437" width="0.8" height="15.0" fill="rgb(210,163,41)" rx="2" ry="2" />
<text  x="891.63" y="447.5" ></text>
</g>
<g >
<title>&lt;sudachi::analysis::morpheme::MorphemeIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (94 samples, 0.03%)</title><rect x="83.7" y="469" width="0.3" height="15.0" fill="rgb(252,201,6)" rx="2" ry="2" />
<text  x="86.65" y="479.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::ops::bit::BitAnd&gt;::bitand (114 samples, 0.04%)</title><rect x="385.2" y="389" width="0.4" height="15.0" fill="rgb(242,59,2)" rx="2" ry="2" />
<text  x="388.18" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.03%)</title><rect x="389.8" y="325" width="0.3" height="15.0" fill="rgb(248,36,51)" rx="2" ry="2" />
<text  x="392.83" y="335.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get (81 samples, 0.03%)</title><rect x="105.4" y="437" width="0.3" height="15.0" fill="rgb(238,155,24)" rx="2" ry="2" />
<text  x="108.40" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (955 samples, 0.33%)</title><rect x="351.1" y="261" width="3.9" height="15.0" fill="rgb(252,174,52)" rx="2" ry="2" />
<text  x="354.15" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::surface (587 samples, 0.20%)</title><rect x="107.1" y="453" width="2.4" height="15.0" fill="rgb(205,83,24)" rx="2" ry="2" />
<text  x="110.14" y="463.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::new (182 samples, 0.06%)</title><rect x="170.6" y="405" width="0.7" height="15.0" fill="rgb(233,105,12)" rx="2" ry="2" />
<text  x="173.61" y="415.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (89 samples, 0.03%)</title><rect x="927.5" y="181" width="0.4" height="15.0" fill="rgb(218,8,4)" rx="2" ry="2" />
<text  x="930.51" y="191.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.03%)</title><rect x="14.1" y="501" width="0.3" height="15.0" fill="rgb(215,228,54)" rx="2" ry="2" />
<text  x="17.09" y="511.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (91 samples, 0.03%)</title><rect x="286.0" y="293" width="0.3" height="15.0" fill="rgb(218,218,51)" rx="2" ry="2" />
<text  x="288.97" y="303.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (3,753 samples, 1.28%)</title><rect x="86.1" y="453" width="15.1" height="15.0" fill="rgb(212,97,0)" rx="2" ry="2" />
<text  x="89.07" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (80 samples, 0.03%)</title><rect x="171.0" y="325" width="0.3" height="15.0" fill="rgb(212,217,8)" rx="2" ry="2" />
<text  x="174.00" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (98 samples, 0.03%)</title><rect x="67.4" y="501" width="0.4" height="15.0" fill="rgb(253,77,7)" rx="2" ry="2" />
<text  x="70.44" y="511.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2,335 samples, 0.80%)</title><rect x="1039.0" y="181" width="9.4" height="15.0" fill="rgb(245,75,54)" rx="2" ry="2" />
<text  x="1042.01" y="191.5" ></text>
</g>
<g >
<title>__rdl_alloc (188 samples, 0.06%)</title><rect x="953.9" y="213" width="0.7" height="15.0" fill="rgb(217,90,4)" rx="2" ry="2" />
<text  x="956.89" y="223.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (383 samples, 0.13%)</title><rect x="1098.0" y="325" width="1.5" height="15.0" fill="rgb(252,44,6)" rx="2" ry="2" />
<text  x="1100.97" y="335.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,075 samples, 0.37%)</title><rect x="522.2" y="357" width="4.3" height="15.0" fill="rgb(234,151,13)" rx="2" ry="2" />
<text  x="525.17" y="367.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (5,433 samples, 1.85%)</title><rect x="790.3" y="357" width="21.8" height="15.0" fill="rgb(243,60,52)" rx="2" ry="2" />
<text  x="793.26" y="367.5" >c..</text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (150 samples, 0.05%)</title><rect x="984.2" y="229" width="0.6" height="15.0" fill="rgb(223,163,3)" rx="2" ry="2" />
<text  x="987.16" y="239.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (124 samples, 0.04%)</title><rect x="1139.7" y="69" width="0.5" height="15.0" fill="rgb(210,71,17)" rx="2" ry="2" />
<text  x="1142.66" y="79.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (197 samples, 0.07%)</title><rect x="861.6" y="293" width="0.8" height="15.0" fill="rgb(253,116,14)" rx="2" ry="2" />
<text  x="864.62" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (275 samples, 0.09%)</title><rect x="918.3" y="277" width="1.1" height="15.0" fill="rgb(221,19,51)" rx="2" ry="2" />
<text  x="921.26" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (85 samples, 0.03%)</title><rect x="1096.8" y="213" width="0.3" height="15.0" fill="rgb(213,48,23)" rx="2" ry="2" />
<text  x="1099.76" y="223.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (210 samples, 0.07%)</title><rect x="391.4" y="373" width="0.8" height="15.0" fill="rgb(217,187,31)" rx="2" ry="2" />
<text  x="394.36" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (82 samples, 0.03%)</title><rect x="387.7" y="357" width="0.4" height="15.0" fill="rgb(220,198,8)" rx="2" ry="2" />
<text  x="390.73" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::utf16_string_parser (19,075 samples, 6.50%)</title><rect x="984.9" y="293" width="76.8" height="15.0" fill="rgb(208,212,30)" rx="2" ry="2" />
<text  x="987.94" y="303.5" >sudachi:..</text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (136 samples, 0.05%)</title><rect x="59.6" y="469" width="0.6" height="15.0" fill="rgb(218,81,32)" rx="2" ry="2" />
<text  x="62.64" y="479.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::mecab_oov::MeCabOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (2,663 samples, 0.91%)</title><rect x="852.3" y="437" width="10.7" height="15.0" fill="rgb(205,203,4)" rx="2" ry="2" />
<text  x="855.28" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1,933 samples, 0.66%)</title><rect x="350.5" y="437" width="7.8" height="15.0" fill="rgb(254,36,3)" rx="2" ry="2" />
<text  x="353.52" y="447.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (403 samples, 0.14%)</title><rect x="447.7" y="309" width="1.6" height="15.0" fill="rgb(213,147,29)" rx="2" ry="2" />
<text  x="450.68" y="319.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (322 samples, 0.11%)</title><rect x="70.2" y="501" width="1.3" height="15.0" fill="rgb(213,34,23)" rx="2" ry="2" />
<text  x="73.16" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (280 samples, 0.10%)</title><rect x="1036.9" y="261" width="1.1" height="15.0" fill="rgb(241,118,53)" rx="2" ry="2" />
<text  x="1039.91" y="271.5" ></text>
</g>
<g >
<title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (1,730 samples, 0.59%)</title><rect x="1126.4" y="389" width="6.9" height="15.0" fill="rgb(242,95,16)" rx="2" ry="2" />
<text  x="1129.36" y="399.5" ></text>
</g>
<g >
<title>[[stack]] (8,203 samples, 2.80%)</title><rect x="24.3" y="517" width="33.0" height="15.0" fill="rgb(223,96,22)" rx="2" ry="2" />
<text  x="27.31" y="527.5" >[[..</text>
</g>
<g >
<title>alloc::string::String::push (243 samples, 0.08%)</title><rect x="71.5" y="501" width="0.9" height="15.0" fill="rgb(229,148,13)" rx="2" ry="2" />
<text  x="74.46" y="511.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,670 samples, 0.57%)</title><rect x="1135.0" y="293" width="6.8" height="15.0" fill="rgb(224,200,20)" rx="2" ry="2" />
<text  x="1138.04" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (137 samples, 0.05%)</title><rect x="1062.3" y="165" width="0.6" height="15.0" fill="rgb(206,7,8)" rx="2" ry="2" />
<text  x="1065.34" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (563 samples, 0.19%)</title><rect x="351.7" y="149" width="2.2" height="15.0" fill="rgb(241,116,7)" rx="2" ry="2" />
<text  x="354.67" y="159.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::trace_stack (386 samples, 0.13%)</title><rect x="192.0" y="389" width="1.5" height="15.0" fill="rgb(211,37,20)" rx="2" ry="2" />
<text  x="194.97" y="399.5" ></text>
</g>
<g >
<title>&lt;T as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::grammar (747 samples, 0.25%)</title><rect x="412.6" y="453" width="3.0" height="15.0" fill="rgb(247,73,13)" rx="2" ry="2" />
<text  x="415.57" y="463.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::standard_find_at (477 samples, 0.16%)</title><rect x="1088.3" y="309" width="1.9" height="15.0" fill="rgb(236,78,34)" rx="2" ry="2" />
<text  x="1091.26" y="319.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (140 samples, 0.05%)</title><rect x="39.6" y="501" width="0.5" height="15.0" fill="rgb(251,71,40)" rx="2" ry="2" />
<text  x="42.57" y="511.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::ahocorasick::FindIter&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,004 samples, 0.34%)</title><rect x="1080.9" y="373" width="4.1" height="15.0" fill="rgb(240,115,28)" rx="2" ry="2" />
<text  x="1083.92" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::category_type::CategoryType::contains (198 samples, 0.07%)</title><rect x="725.7" y="453" width="0.8" height="15.0" fill="rgb(219,35,24)" rx="2" ry="2" />
<text  x="728.72" y="463.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::to_orig_byte_idx (337 samples, 0.11%)</title><rect x="1145.7" y="453" width="1.3" height="15.0" fill="rgb(239,69,1)" rx="2" ry="2" />
<text  x="1148.65" y="463.5" ></text>
</g>
<g >
<title>__memchr_sse2 (235 samples, 0.08%)</title><rect x="79.8" y="357" width="0.9" height="15.0" fill="rgb(238,184,36)" rx="2" ry="2" />
<text  x="82.78" y="367.5" ></text>
</g>
<g >
<title>sudachi::dic::word_id::WordId::dic (209 samples, 0.07%)</title><rect x="843.1" y="437" width="0.8" height="15.0" fill="rgb(215,28,43)" rx="2" ry="2" />
<text  x="846.07" y="447.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (137 samples, 0.05%)</title><rect x="761.1" y="293" width="0.5" height="15.0" fill="rgb(253,163,1)" rx="2" ry="2" />
<text  x="764.07" y="303.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_continuous_len (233 samples, 0.08%)</title><rect x="858.2" y="405" width="1.0" height="15.0" fill="rgb(206,134,25)" rx="2" ry="2" />
<text  x="861.24" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (146 samples, 0.05%)</title><rect x="1062.3" y="213" width="0.6" height="15.0" fill="rgb(221,61,48)" rx="2" ry="2" />
<text  x="1065.30" y="223.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (224 samples, 0.08%)</title><rect x="18.7" y="501" width="0.9" height="15.0" fill="rgb(247,35,26)" rx="2" ry="2" />
<text  x="21.74" y="511.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (308 samples, 0.11%)</title><rect x="448.1" y="293" width="1.2" height="15.0" fill="rgb(207,108,27)" rx="2" ry="2" />
<text  x="451.06" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::offset (130 samples, 0.04%)</title><rect x="530.1" y="293" width="0.6" height="15.0" fill="rgb(227,198,28)" rx="2" ry="2" />
<text  x="533.14" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4,591 samples, 1.57%)</title><rect x="999.2" y="213" width="18.5" height="15.0" fill="rgb(228,189,41)" rx="2" ry="2" />
<text  x="1002.21" y="223.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (1,463 samples, 0.50%)</title><rect x="1126.5" y="357" width="5.9" height="15.0" fill="rgb(248,128,32)" rx="2" ry="2" />
<text  x="1129.50" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (394 samples, 0.13%)</title><rect x="1073.6" y="389" width="1.6" height="15.0" fill="rgb(210,115,36)" rx="2" ry="2" />
<text  x="1076.63" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (509 samples, 0.17%)</title><rect x="1095.1" y="325" width="2.0" height="15.0" fill="rgb(205,35,54)" rx="2" ry="2" />
<text  x="1098.05" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (82 samples, 0.03%)</title><rect x="79.3" y="261" width="0.3" height="15.0" fill="rgb(216,113,48)" rx="2" ry="2" />
<text  x="82.26" y="271.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::TeddySlim2Mask128::find_at (1,354 samples, 0.46%)</title><rect x="1136.1" y="197" width="5.4" height="15.0" fill="rgb(248,57,9)" rx="2" ry="2" />
<text  x="1139.09" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (191 samples, 0.07%)</title><rect x="79.0" y="389" width="0.7" height="15.0" fill="rgb(243,53,24)" rx="2" ry="2" />
<text  x="81.95" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (468 samples, 0.16%)</title><rect x="1073.3" y="421" width="1.9" height="15.0" fill="rgb(205,216,27)" rx="2" ry="2" />
<text  x="1076.33" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (120 samples, 0.04%)</title><rect x="391.5" y="277" width="0.4" height="15.0" fill="rgb(249,157,7)" rx="2" ry="2" />
<text  x="394.46" y="287.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::commit (392 samples, 0.13%)</title><rect x="1075.5" y="421" width="1.6" height="15.0" fill="rgb(250,136,42)" rx="2" ry="2" />
<text  x="1078.54" y="431.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (1,229 samples, 0.42%)</title><rect x="832.7" y="261" width="4.9" height="15.0" fill="rgb(238,33,16)" rx="2" ry="2" />
<text  x="835.69" y="271.5" ></text>
</g>
<g >
<title>_int_free (1,338 samples, 0.46%)</title><rect x="973.8" y="261" width="5.4" height="15.0" fill="rgb(253,78,6)" rx="2" ry="2" />
<text  x="976.82" y="271.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (140 samples, 0.05%)</title><rect x="65.0" y="501" width="0.5" height="15.0" fill="rgb(207,134,16)" rx="2" ry="2" />
<text  x="67.96" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (149 samples, 0.05%)</title><rect x="375.4" y="437" width="0.6" height="15.0" fill="rgb(219,6,25)" rx="2" ry="2" />
<text  x="378.40" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (98 samples, 0.03%)</title><rect x="859.2" y="405" width="0.4" height="15.0" fill="rgb(228,172,23)" rx="2" ry="2" />
<text  x="862.20" y="415.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (931 samples, 0.32%)</title><rect x="773.5" y="261" width="3.8" height="15.0" fill="rgb(243,57,48)" rx="2" ry="2" />
<text  x="776.53" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::word_info_parser (32,049 samples, 10.93%)</title><rect x="941.3" y="405" width="129.0" height="15.0" fill="rgb(233,120,11)" rx="2" ry="2" />
<text  x="944.32" y="415.5" >sudachi::dic::le..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (378 samples, 0.13%)</title><rect x="1155.3" y="453" width="1.5" height="15.0" fill="rgb(237,80,22)" rx="2" ry="2" />
<text  x="1158.31" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (181 samples, 0.06%)</title><rect x="953.9" y="197" width="0.7" height="15.0" fill="rgb(208,93,43)" rx="2" ry="2" />
<text  x="956.91" y="207.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (127 samples, 0.04%)</title><rect x="285.5" y="229" width="0.5" height="15.0" fill="rgb(249,203,44)" rx="2" ry="2" />
<text  x="288.45" y="239.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_info (40,975 samples, 13.97%)</title><rect x="905.4" y="437" width="164.9" height="15.0" fill="rgb(216,68,22)" rx="2" ry="2" />
<text  x="908.41" y="447.5" >sudachi::dic::lexicon..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::ResultNode&gt; (144 samples, 0.05%)</title><rect x="388.4" y="357" width="0.6" height="15.0" fill="rgb(220,202,7)" rx="2" ry="2" />
<text  x="391.44" y="367.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::find_at (1,422 samples, 0.48%)</title><rect x="1135.8" y="213" width="5.8" height="15.0" fill="rgb(211,121,12)" rx="2" ry="2" />
<text  x="1138.83" y="223.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite (76 samples, 0.03%)</title><rect x="56.5" y="501" width="0.3" height="15.0" fill="rgb(252,122,15)" rx="2" ry="2" />
<text  x="59.54" y="511.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (304 samples, 0.10%)</title><rect x="662.5" y="373" width="1.2" height="15.0" fill="rgb(251,4,24)" rx="2" ry="2" />
<text  x="665.51" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,664 samples, 1.25%)</title><rect x="1170.2" y="341" width="14.8" height="15.0" fill="rgb(232,2,48)" rx="2" ry="2" />
<text  x="1173.24" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (943 samples, 0.32%)</title><rect x="881.0" y="453" width="3.8" height="15.0" fill="rgb(244,47,11)" rx="2" ry="2" />
<text  x="884.03" y="463.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (179 samples, 0.06%)</title><rect x="90.1" y="421" width="0.7" height="15.0" fill="rgb(227,190,43)" rx="2" ry="2" />
<text  x="93.13" y="431.5" ></text>
</g>
<g >
<title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (105 samples, 0.04%)</title><rect x="776.9" y="245" width="0.4" height="15.0" fill="rgb(227,38,20)" rx="2" ry="2" />
<text  x="779.85" y="255.5" ></text>
</g>
<g >
<title>_int_free (99 samples, 0.03%)</title><rect x="388.6" y="213" width="0.4" height="15.0" fill="rgb(254,134,32)" rx="2" ry="2" />
<text  x="391.58" y="223.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (634 samples, 0.22%)</title><rect x="528.1" y="405" width="2.6" height="15.0" fill="rgb(206,121,2)" rx="2" ry="2" />
<text  x="531.12" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (133 samples, 0.05%)</title><rect x="348.0" y="309" width="0.5" height="15.0" fill="rgb(229,23,5)" rx="2" ry="2" />
<text  x="350.96" y="319.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin::rewrite_gen (2,761 samples, 0.94%)</title><rect x="382.3" y="453" width="11.1" height="15.0" fill="rgb(254,174,44)" rx="2" ry="2" />
<text  x="385.27" y="463.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (114 samples, 0.04%)</title><rect x="12.6" y="501" width="0.5" height="15.0" fill="rgb(207,9,25)" rx="2" ry="2" />
<text  x="15.59" y="511.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::capture_locations (264 samples, 0.09%)</title><rect x="361.3" y="405" width="1.1" height="15.0" fill="rgb(212,23,1)" rx="2" ry="2" />
<text  x="364.35" y="415.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::should_ignore (509 samples, 0.17%)</title><rect x="1095.1" y="373" width="2.0" height="15.0" fill="rgb(229,43,49)" rx="2" ry="2" />
<text  x="1098.05" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::label (355 samples, 0.12%)</title><rect x="449.4" y="325" width="1.4" height="15.0" fill="rgb(237,48,40)" rx="2" ry="2" />
<text  x="452.40" y="335.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7,243 samples, 2.47%)</title><rect x="488.1" y="325" width="29.1" height="15.0" fill="rgb(246,211,33)" rx="2" ry="2" />
<text  x="491.09" y="335.5" >co..</text>
</g>
<g >
<title>regex::re_unicode::Regex::captures_read_at (3,013 samples, 1.03%)</title><rect x="362.4" y="405" width="12.1" height="15.0" fill="rgb(236,160,43)" rx="2" ry="2" />
<text  x="365.41" y="415.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (191 samples, 0.07%)</title><rect x="1030.1" y="245" width="0.7" height="15.0" fill="rgb(240,182,42)" rx="2" ry="2" />
<text  x="1033.07" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (145 samples, 0.05%)</title><rect x="1132.7" y="341" width="0.6" height="15.0" fill="rgb(212,49,6)" rx="2" ry="2" />
<text  x="1135.69" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sudachi::dic::word_id::WordId&gt;&gt; (182 samples, 0.06%)</title><rect x="1185.0" y="341" width="0.7" height="15.0" fill="rgb(222,181,48)" rx="2" ry="2" />
<text  x="1187.98" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (440 samples, 0.15%)</title><rect x="913.7" y="357" width="1.8" height="15.0" fill="rgb(244,79,2)" rx="2" ry="2" />
<text  x="916.74" y="367.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl::{{closure}} (733 samples, 0.25%)</title><rect x="1077.6" y="373" width="3.0" height="15.0" fill="rgb(249,124,11)" rx="2" ry="2" />
<text  x="1080.62" y="383.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (688 samples, 0.23%)</title><rect x="378.5" y="469" width="2.8" height="15.0" fill="rgb(228,79,44)" rx="2" ry="2" />
<text  x="381.51" y="479.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryTypeIter as core::iter::traits::iterator::Iterator&gt;::next (618 samples, 0.21%)</title><rect x="855.2" y="405" width="2.5" height="15.0" fill="rgb(214,228,8)" rx="2" ry="2" />
<text  x="858.21" y="415.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,598 samples, 0.89%)</title><rect x="1051.2" y="245" width="10.5" height="15.0" fill="rgb(228,137,36)" rx="2" ry="2" />
<text  x="1054.21" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1,910 samples, 0.65%)</title><rect x="350.6" y="421" width="7.7" height="15.0" fill="rgb(210,168,28)" rx="2" ry="2" />
<text  x="353.57" y="431.5" ></text>
</g>
<g >
<title>fancy_regex::vm::run (59,066 samples, 20.14%)</title><rect x="112.5" y="421" width="237.6" height="15.0" fill="rgb(241,187,49)" rx="2" ry="2" />
<text  x="115.47" y="431.5" >fancy_regex::vm::run</text>
</g>
<g >
<title>&lt;sudachi::analysis::inner::Node as sudachi::analysis::node::LatticeNode&gt;::word_id (112 samples, 0.04%)</title><rect x="875.5" y="453" width="0.5" height="15.0" fill="rgb(243,103,46)" rx="2" ry="2" />
<text  x="878.51" y="463.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::AhoCorasick&lt;S&gt;::earliest_find (105 samples, 0.04%)</title><rect x="1087.4" y="357" width="0.4" height="15.0" fill="rgb(211,86,16)" rx="2" ry="2" />
<text  x="1090.40" y="367.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::shortest_match_at (15,984 samples, 5.45%)</title><rect x="278.1" y="341" width="64.3" height="15.0" fill="rgb(235,79,17)" rx="2" ry="2" />
<text  x="281.12" y="351.5" >&lt;regex:..</text>
</g>
<g >
<title>aho_corasick::packed::pattern::Pattern::equals (458 samples, 0.16%)</title><rect x="1137.5" y="117" width="1.8" height="15.0" fill="rgb(249,105,16)" rx="2" ry="2" />
<text  x="1140.46" y="127.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (621 samples, 0.21%)</title><rect x="778.7" y="357" width="2.5" height="15.0" fill="rgb(220,145,19)" rx="2" ry="2" />
<text  x="781.67" y="367.5" ></text>
</g>
<g >
<title>_int_free (313 samples, 0.11%)</title><rect x="66.2" y="501" width="1.2" height="15.0" fill="rgb(213,211,54)" rx="2" ry="2" />
<text  x="69.19" y="511.5" ></text>
</g>
<g >
<title>core::option::Option&lt;&amp;T&gt;::copied (229 samples, 0.08%)</title><rect x="932.3" y="213" width="0.9" height="15.0" fill="rgb(217,53,14)" rx="2" ry="2" />
<text  x="935.32" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (536 samples, 0.18%)</title><rect x="351.8" y="133" width="2.1" height="15.0" fill="rgb(222,154,41)" rx="2" ry="2" />
<text  x="354.77" y="143.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (534 samples, 0.18%)</title><rect x="840.3" y="261" width="2.2" height="15.0" fill="rgb(240,14,48)" rx="2" ry="2" />
<text  x="843.31" y="271.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (3,048 samples, 1.04%)</title><rect x="921.0" y="293" width="12.2" height="15.0" fill="rgb(217,142,47)" rx="2" ry="2" />
<text  x="923.98" y="303.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::stack_push (3,561 samples, 1.21%)</title><rect x="225.6" y="405" width="14.3" height="15.0" fill="rgb(207,189,25)" rx="2" ry="2" />
<text  x="228.60" y="415.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (392 samples, 0.13%)</title><rect x="348.5" y="293" width="1.6" height="15.0" fill="rgb(227,71,28)" rx="2" ry="2" />
<text  x="351.50" y="303.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::get_word_info (257 samples, 0.09%)</title><rect x="105.8" y="405" width="1.1" height="15.0" fill="rgb(232,144,2)" rx="2" ry="2" />
<text  x="108.84" y="415.5" ></text>
</g>
<g >
<title>core::ptr::read (1,114 samples, 0.38%)</title><rect x="186.2" y="373" width="4.5" height="15.0" fill="rgb(251,138,23)" rx="2" ry="2" />
<text  x="189.24" y="383.5" ></text>
</g>
<g >
<title>&lt;T as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (558 samples, 0.19%)</title><rect x="415.6" y="453" width="2.2" height="15.0" fill="rgb(253,98,0)" rx="2" ry="2" />
<text  x="418.57" y="463.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (76 samples, 0.03%)</title><rect x="1069.9" y="373" width="0.3" height="15.0" fill="rgb(240,73,25)" rx="2" ry="2" />
<text  x="1072.92" y="383.5" ></text>
</g>
<g >
<title>ksys_write (100 samples, 0.03%)</title><rect x="90.3" y="293" width="0.4" height="15.0" fill="rgb(234,109,30)" rx="2" ry="2" />
<text  x="93.35" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (111 samples, 0.04%)</title><rect x="362.0" y="341" width="0.4" height="15.0" fill="rgb(220,207,9)" rx="2" ry="2" />
<text  x="364.96" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at_reverse (170 samples, 0.06%)</title><rect x="373.3" y="325" width="0.6" height="15.0" fill="rgb(239,55,30)" rx="2" ry="2" />
<text  x="376.26" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (275 samples, 0.09%)</title><rect x="918.3" y="261" width="1.1" height="15.0" fill="rgb(224,169,43)" rx="2" ry="2" />
<text  x="921.26" y="271.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (308 samples, 0.11%)</title><rect x="529.4" y="357" width="1.3" height="15.0" fill="rgb(251,79,15)" rx="2" ry="2" />
<text  x="532.43" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (92 samples, 0.03%)</title><rect x="38.5" y="501" width="0.4" height="15.0" fill="rgb(239,149,24)" rx="2" ry="2" />
<text  x="41.52" y="511.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (76 samples, 0.03%)</title><rect x="59.6" y="341" width="0.3" height="15.0" fill="rgb(241,64,46)" rx="2" ry="2" />
<text  x="62.64" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_right_id (6,980 samples, 2.38%)</title><rect x="814.4" y="421" width="28.1" height="15.0" fill="rgb(218,173,2)" rx="2" ry="2" />
<text  x="817.38" y="431.5" >s..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (142 samples, 0.05%)</title><rect x="1152.2" y="325" width="0.5" height="15.0" fill="rgb(238,135,19)" rx="2" ry="2" />
<text  x="1155.16" y="335.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (439 samples, 0.15%)</title><rect x="1151.6" y="389" width="1.7" height="15.0" fill="rgb(218,229,21)" rx="2" ry="2" />
<text  x="1154.56" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (379 samples, 0.13%)</title><rect x="24.4" y="501" width="1.5" height="15.0" fill="rgb(244,140,49)" rx="2" ry="2" />
<text  x="27.35" y="511.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (2,755 samples, 0.94%)</title><rect x="798.7" y="261" width="11.1" height="15.0" fill="rgb(212,180,15)" rx="2" ry="2" />
<text  x="801.73" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (80 samples, 0.03%)</title><rect x="1133.0" y="293" width="0.3" height="15.0" fill="rgb(206,33,54)" rx="2" ry="2" />
<text  x="1135.95" y="303.5" ></text>
</g>
<g >
<title>__rdl_realloc (98 samples, 0.03%)</title><rect x="65.8" y="501" width="0.4" height="15.0" fill="rgb(239,30,21)" rx="2" ry="2" />
<text  x="68.79" y="511.5" ></text>
</g>
<g >
<title>_int_realloc (862 samples, 0.29%)</title><rect x="1009.1" y="53" width="3.4" height="15.0" fill="rgb(233,4,39)" rx="2" ry="2" />
<text  x="1012.07" y="63.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup::{{closure}} (7,243 samples, 2.47%)</title><rect x="488.1" y="309" width="29.1" height="15.0" fill="rgb(222,181,16)" rx="2" ry="2" />
<text  x="491.09" y="319.5" >su..</text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify_bucket (921 samples, 0.31%)</title><rect x="1136.6" y="149" width="3.8" height="15.0" fill="rgb(222,68,37)" rx="2" ry="2" />
<text  x="1139.65" y="159.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (136 samples, 0.05%)</title><rect x="59.6" y="437" width="0.6" height="15.0" fill="rgb(253,213,50)" rx="2" ry="2" />
<text  x="62.64" y="447.5" ></text>
</g>
<g >
<title>&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (59,475 samples, 20.28%)</title><rect x="110.8" y="453" width="239.3" height="15.0" fill="rgb(243,227,42)" rx="2" ry="2" />
<text  x="113.82" y="463.5" >&lt;fancy_regex::Matches as core::..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4,724 samples, 1.61%)</title><rect x="998.7" y="245" width="19.0" height="15.0" fill="rgb(252,153,3)" rx="2" ry="2" />
<text  x="1001.67" y="255.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (178 samples, 0.06%)</title><rect x="1029.1" y="117" width="0.7" height="15.0" fill="rgb(220,147,3)" rx="2" ry="2" />
<text  x="1032.13" y="127.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (8,256 samples, 2.81%)</title><rect x="781.2" y="421" width="33.2" height="15.0" fill="rgb(238,156,19)" rx="2" ry="2" />
<text  x="784.16" y="431.5" >su..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (84 samples, 0.03%)</title><rect x="78.3" y="309" width="0.4" height="15.0" fill="rgb(235,101,35)" rx="2" ry="2" />
<text  x="81.33" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (142 samples, 0.05%)</title><rect x="1152.2" y="309" width="0.5" height="15.0" fill="rgb(239,155,21)" rx="2" ry="2" />
<text  x="1155.16" y="319.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (78 samples, 0.03%)</title><rect x="390.7" y="421" width="0.3" height="15.0" fill="rgb(235,89,6)" rx="2" ry="2" />
<text  x="393.68" y="431.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (309 samples, 0.11%)</title><rect x="765.2" y="261" width="1.2" height="15.0" fill="rgb(205,45,23)" rx="2" ry="2" />
<text  x="768.18" y="271.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,262 samples, 0.43%)</title><rect x="552.0" y="421" width="5.0" height="15.0" fill="rgb(242,203,46)" rx="2" ry="2" />
<text  x="554.96" y="431.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (127 samples, 0.04%)</title><rect x="285.5" y="277" width="0.5" height="15.0" fill="rgb(221,123,29)" rx="2" ry="2" />
<text  x="288.45" y="287.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,869 samples, 0.64%)</title><rect x="1134.6" y="325" width="7.5" height="15.0" fill="rgb(246,113,21)" rx="2" ry="2" />
<text  x="1137.59" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,213 samples, 0.75%)</title><rect x="945.9" y="261" width="8.9" height="15.0" fill="rgb(207,123,10)" rx="2" ry="2" />
<text  x="948.91" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (97 samples, 0.03%)</title><rect x="659.7" y="389" width="0.4" height="15.0" fill="rgb(219,225,54)" rx="2" ry="2" />
<text  x="662.67" y="399.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::fill_orig_b2c (609 samples, 0.21%)</title><rect x="1165.6" y="453" width="2.5" height="15.0" fill="rgb(220,119,49)" rx="2" ry="2" />
<text  x="1168.62" y="463.5" ></text>
</g>
<g >
<title>__rdl_realloc (238 samples, 0.08%)</title><rect x="1012.5" y="69" width="1.0" height="15.0" fill="rgb(237,147,21)" rx="2" ry="2" />
<text  x="1015.55" y="79.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (105 samples, 0.04%)</title><rect x="776.9" y="197" width="0.4" height="15.0" fill="rgb(235,154,41)" rx="2" ry="2" />
<text  x="779.85" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (88 samples, 0.03%)</title><rect x="1139.3" y="117" width="0.4" height="15.0" fill="rgb(225,189,24)" rx="2" ry="2" />
<text  x="1142.30" y="127.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::find_from_pos (59,441 samples, 20.27%)</title><rect x="111.0" y="437" width="239.1" height="15.0" fill="rgb(214,38,21)" rx="2" ry="2" />
<text  x="113.96" y="447.5" >fancy_regex::Regex::find_from_pos</text>
</g>
<g >
<title>sudachi::sentence_detector::SentenceDetector::get_eos (65,860 samples, 22.45%)</title><rect x="110.1" y="469" width="265.0" height="15.0" fill="rgb(224,108,35)" rx="2" ry="2" />
<text  x="113.10" y="479.5" >sudachi::sentence_detector::Sentenc..</text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (117 samples, 0.04%)</title><rect x="199.4" y="309" width="0.5" height="15.0" fill="rgb(243,139,0)" rx="2" ry="2" />
<text  x="202.43" y="319.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (407 samples, 0.14%)</title><rect x="27.0" y="501" width="1.6" height="15.0" fill="rgb(227,4,17)" rx="2" ry="2" />
<text  x="29.97" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (291 samples, 0.10%)</title><rect x="930.7" y="197" width="1.2" height="15.0" fill="rgb(227,219,40)" rx="2" ry="2" />
<text  x="933.74" y="207.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (183 samples, 0.06%)</title><rect x="108.3" y="373" width="0.8" height="15.0" fill="rgb(245,193,6)" rx="2" ry="2" />
<text  x="111.33" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_free (367 samples, 0.13%)</title><rect x="60.5" y="501" width="1.5" height="15.0" fill="rgb(243,186,49)" rx="2" ry="2" />
<text  x="63.54" y="511.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,581 samples, 1.56%)</title><rect x="824.0" y="373" width="18.5" height="15.0" fill="rgb(212,94,28)" rx="2" ry="2" />
<text  x="827.03" y="383.5" ></text>
</g>
<g >
<title>regex::pool::THREAD_ID::__getit (391 samples, 0.13%)</title><rect x="348.5" y="277" width="1.6" height="15.0" fill="rgb(231,179,46)" rx="2" ry="2" />
<text  x="351.50" y="287.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::Imp&lt;S&gt;::find_at_no_state (993 samples, 0.34%)</title><rect x="1081.0" y="357" width="4.0" height="15.0" fill="rgb(228,22,53)" rx="2" ry="2" />
<text  x="1083.97" y="367.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::find_at_no_state (967 samples, 0.33%)</title><rect x="1081.1" y="325" width="3.9" height="15.0" fill="rgb(235,16,53)" rx="2" ry="2" />
<text  x="1084.07" y="335.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (579 samples, 0.20%)</title><rect x="165.1" y="357" width="2.4" height="15.0" fill="rgb(245,171,7)" rx="2" ry="2" />
<text  x="168.14" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (309 samples, 0.11%)</title><rect x="765.2" y="277" width="1.2" height="15.0" fill="rgb(249,10,11)" rx="2" ry="2" />
<text  x="768.18" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,839 samples, 0.97%)</title><rect x="945.3" y="389" width="11.4" height="15.0" fill="rgb(236,224,33)" rx="2" ry="2" />
<text  x="948.27" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (819 samples, 0.28%)</title><rect x="763.1" y="309" width="3.3" height="15.0" fill="rgb(224,222,15)" rx="2" ry="2" />
<text  x="766.12" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (98 samples, 0.03%)</title><rect x="1014.1" y="101" width="0.4" height="15.0" fill="rgb(251,3,38)" rx="2" ry="2" />
<text  x="1017.10" y="111.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (206 samples, 0.07%)</title><rect x="239.1" y="357" width="0.8" height="15.0" fill="rgb(229,77,17)" rx="2" ry="2" />
<text  x="242.10" y="367.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (176 samples, 0.06%)</title><rect x="361.7" y="357" width="0.7" height="15.0" fill="rgb(238,183,34)" rx="2" ry="2" />
<text  x="364.70" y="367.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (5,858 samples, 2.00%)</title><rect x="247.8" y="389" width="23.5" height="15.0" fill="rgb(225,213,3)" rx="2" ry="2" />
<text  x="250.78" y="399.5" >r..</text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (19,560 samples, 6.67%)</title><rect x="271.4" y="405" width="78.7" height="15.0" fill="rgb(248,68,14)" rx="2" ry="2" />
<text  x="274.40" y="415.5" >regex::re..</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5,995 samples, 2.04%)</title><rect x="790.3" y="373" width="24.1" height="15.0" fill="rgb(210,53,48)" rx="2" ry="2" />
<text  x="793.26" y="383.5" >&lt;..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (129 samples, 0.04%)</title><rect x="847.6" y="421" width="0.5" height="15.0" fill="rgb(235,63,26)" rx="2" ry="2" />
<text  x="850.60" y="431.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (922 samples, 0.31%)</title><rect x="242.5" y="341" width="3.7" height="15.0" fill="rgb(227,203,38)" rx="2" ry="2" />
<text  x="245.49" y="351.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (171 samples, 0.06%)</title><rect x="860.5" y="325" width="0.7" height="15.0" fill="rgb(250,188,29)" rx="2" ry="2" />
<text  x="863.48" y="335.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (196,850 samples, 67.11%)</title><rect x="377.3" y="485" width="791.9" height="15.0" fill="rgb(246,114,28)" rx="2" ry="2" />
<text  x="380.28" y="495.5" >sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize</text>
</g>
<g >
<title>&lt;sudachi::dic::lexicon::trie::TrieEntryIter as core::iter::traits::iterator::Iterator&gt;::next (11,054 samples, 3.77%)</title><rect x="443.6" y="341" width="44.5" height="15.0" fill="rgb(223,185,53)" rx="2" ry="2" />
<text  x="446.62" y="351.5" >&lt;sud..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (380 samples, 0.13%)</title><rect x="659.6" y="421" width="1.5" height="15.0" fill="rgb(218,89,17)" rx="2" ry="2" />
<text  x="662.62" y="431.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::quick_check (2,238 samples, 0.76%)</title><rect x="1097.3" y="357" width="9.0" height="15.0" fill="rgb(238,67,39)" rx="2" ry="2" />
<text  x="1100.34" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (315 samples, 0.11%)</title><rect x="930.6" y="245" width="1.3" height="15.0" fill="rgb(248,138,16)" rx="2" ry="2" />
<text  x="933.64" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (367 samples, 0.13%)</title><rect x="58.7" y="501" width="1.5" height="15.0" fill="rgb(251,179,14)" rx="2" ry="2" />
<text  x="61.71" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (491 samples, 0.17%)</title><rect x="730.8" y="437" width="2.0" height="15.0" fill="rgb(238,205,16)" rx="2" ry="2" />
<text  x="733.79" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (191 samples, 0.07%)</title><rect x="79.0" y="373" width="0.7" height="15.0" fill="rgb(216,185,14)" rx="2" ry="2" />
<text  x="81.95" y="383.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,130 samples, 0.39%)</title><rect x="1127.3" y="293" width="4.5" height="15.0" fill="rgb(210,148,48)" rx="2" ry="2" />
<text  x="1130.29" y="303.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (151 samples, 0.05%)</title><rect x="29.2" y="501" width="0.6" height="15.0" fill="rgb(232,75,22)" rx="2" ry="2" />
<text  x="32.17" y="511.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (90 samples, 0.03%)</title><rect x="1076.1" y="341" width="0.4" height="15.0" fill="rgb(224,94,3)" rx="2" ry="2" />
<text  x="1079.11" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1,003 samples, 0.34%)</title><rect x="219.4" y="389" width="4.0" height="15.0" fill="rgb(213,62,35)" rx="2" ry="2" />
<text  x="222.37" y="399.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (2,393 samples, 0.82%)</title><rect x="230.3" y="389" width="9.6" height="15.0" fill="rgb(219,129,22)" rx="2" ry="2" />
<text  x="233.30" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (338 samples, 0.12%)</title><rect x="928.4" y="213" width="1.4" height="15.0" fill="rgb(208,67,10)" rx="2" ry="2" />
<text  x="931.42" y="223.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (747 samples, 0.25%)</title><rect x="369.2" y="309" width="3.0" height="15.0" fill="rgb(209,77,36)" rx="2" ry="2" />
<text  x="372.18" y="319.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (248 samples, 0.08%)</title><rect x="358.7" y="341" width="1.0" height="15.0" fill="rgb(205,11,1)" rx="2" ry="2" />
<text  x="361.66" y="351.5" ></text>
</g>
<g >
<title>_int_realloc (400 samples, 0.14%)</title><rect x="67.8" y="501" width="1.6" height="15.0" fill="rgb(211,43,26)" rx="2" ry="2" />
<text  x="70.84" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::clear (4,126 samples, 1.41%)</title><rect x="1169.3" y="437" width="16.6" height="15.0" fill="rgb(228,106,39)" rx="2" ry="2" />
<text  x="1172.28" y="447.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (97 samples, 0.03%)</title><rect x="933.7" y="309" width="0.4" height="15.0" fill="rgb(250,106,5)" rx="2" ry="2" />
<text  x="936.70" y="319.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::grammar (245 samples, 0.08%)</title><rect x="14.5" y="501" width="1.0" height="15.0" fill="rgb(222,28,41)" rx="2" ry="2" />
<text  x="17.47" y="511.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (121 samples, 0.04%)</title><rect x="809.3" y="197" width="0.5" height="15.0" fill="rgb(251,78,36)" rx="2" ry="2" />
<text  x="812.30" y="207.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memchr (240 samples, 0.08%)</title><rect x="79.8" y="373" width="0.9" height="15.0" fill="rgb(223,70,7)" rx="2" ry="2" />
<text  x="82.77" y="383.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (641 samples, 0.22%)</title><rect x="661.1" y="405" width="2.6" height="15.0" fill="rgb(243,81,38)" rx="2" ry="2" />
<text  x="664.15" y="415.5" ></text>
</g>
<g >
<title>sudachi::analysis::inner::Node::new (466 samples, 0.16%)</title><rect x="20.2" y="501" width="1.9" height="15.0" fill="rgb(217,180,29)" rx="2" ry="2" />
<text  x="23.23" y="511.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (80 samples, 0.03%)</title><rect x="1063.3" y="165" width="0.3" height="15.0" fill="rgb(210,82,14)" rx="2" ry="2" />
<text  x="1066.25" y="175.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::exec (878 samples, 0.30%)</title><rect x="363.7" y="309" width="3.5" height="15.0" fill="rgb(206,95,7)" rx="2" ry="2" />
<text  x="366.70" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (276 samples, 0.09%)</title><rect x="979.8" y="245" width="1.1" height="15.0" fill="rgb(250,113,47)" rx="2" ry="2" />
<text  x="982.82" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (92 samples, 0.03%)</title><rect x="387.1" y="261" width="0.4" height="15.0" fill="rgb(220,68,27)" rx="2" ry="2" />
<text  x="390.12" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (2,298 samples, 0.78%)</title><rect x="323.6" y="293" width="9.3" height="15.0" fill="rgb(238,125,43)" rx="2" ry="2" />
<text  x="326.63" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (100 samples, 0.03%)</title><rect x="391.5" y="229" width="0.4" height="15.0" fill="rgb(228,74,14)" rx="2" ry="2" />
<text  x="394.53" y="239.5" ></text>
</g>
<g >
<title>core::option::Option&lt;&amp;T&gt;::copied (2,598 samples, 0.89%)</title><rect x="1051.2" y="229" width="10.5" height="15.0" fill="rgb(206,181,30)" rx="2" ry="2" />
<text  x="1054.21" y="239.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (1,689 samples, 0.58%)</title><rect x="934.5" y="373" width="6.8" height="15.0" fill="rgb(244,159,15)" rx="2" ry="2" />
<text  x="937.52" y="383.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (309 samples, 0.11%)</title><rect x="765.2" y="229" width="1.2" height="15.0" fill="rgb(217,139,11)" rx="2" ry="2" />
<text  x="768.18" y="239.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (101 samples, 0.03%)</title><rect x="860.7" y="293" width="0.4" height="15.0" fill="rgb(235,28,30)" rx="2" ry="2" />
<text  x="863.67" y="303.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (393 samples, 0.13%)</title><rect x="908.3" y="405" width="1.6" height="15.0" fill="rgb(241,105,39)" rx="2" ry="2" />
<text  x="911.28" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,473 samples, 0.50%)</title><rect x="157.2" y="405" width="5.9" height="15.0" fill="rgb(229,47,1)" rx="2" ry="2" />
<text  x="160.15" y="415.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (2,679 samples, 0.91%)</title><rect x="945.9" y="341" width="10.8" height="15.0" fill="rgb(244,56,11)" rx="2" ry="2" />
<text  x="948.91" y="351.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (1,975 samples, 0.67%)</title><rect x="770.7" y="309" width="7.9" height="15.0" fill="rgb(241,92,46)" rx="2" ry="2" />
<text  x="773.68" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_right_id (185 samples, 0.06%)</title><rect x="53.5" y="501" width="0.7" height="15.0" fill="rgb(218,209,7)" rx="2" ry="2" />
<text  x="56.50" y="511.5" ></text>
</g>
<g >
<title>_int_free (269 samples, 0.09%)</title><rect x="914.3" y="293" width="1.1" height="15.0" fill="rgb(250,19,21)" rx="2" ry="2" />
<text  x="917.32" y="303.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (80 samples, 0.03%)</title><rect x="1063.3" y="181" width="0.3" height="15.0" fill="rgb(236,132,46)" rx="2" ry="2" />
<text  x="1066.25" y="191.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (404 samples, 0.14%)</title><rect x="1153.7" y="453" width="1.6" height="15.0" fill="rgb(225,44,30)" rx="2" ry="2" />
<text  x="1156.69" y="463.5" ></text>
</g>
<g >
<title>new_sync_read (76 samples, 0.03%)</title><rect x="78.4" y="245" width="0.3" height="15.0" fill="rgb(252,178,32)" rx="2" ry="2" />
<text  x="81.36" y="255.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (391 samples, 0.13%)</title><rect x="348.5" y="261" width="1.6" height="15.0" fill="rgb(233,57,24)" rx="2" ry="2" />
<text  x="351.50" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::u8_class (247 samples, 0.08%)</title><rect x="258.5" y="261" width="1.0" height="15.0" fill="rgb(219,187,31)" rx="2" ry="2" />
<text  x="261.47" y="271.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,777 samples, 0.61%)</title><rect x="351.1" y="373" width="7.2" height="15.0" fill="rgb(251,56,21)" rx="2" ry="2" />
<text  x="354.11" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie_array_parser (467 samples, 0.16%)</title><rect x="1186.0" y="405" width="1.9" height="15.0" fill="rgb(249,172,44)" rx="2" ry="2" />
<text  x="1189.01" y="415.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (403 samples, 0.14%)</title><rect x="447.7" y="325" width="1.6" height="15.0" fill="rgb(218,190,9)" rx="2" ry="2" />
<text  x="450.68" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (127 samples, 0.04%)</title><rect x="388.5" y="229" width="0.5" height="15.0" fill="rgb(245,104,11)" rx="2" ry="2" />
<text  x="391.47" y="239.5" ></text>
</g>
<g >
<title>&lt;sudachi::sentence_splitter::SentenceIter as core::iter::traits::iterator::Iterator&gt;::next (65,979 samples, 22.49%)</title><rect x="109.6" y="485" width="265.5" height="15.0" fill="rgb(244,62,29)" rx="2" ry="2" />
<text  x="112.62" y="495.5" >&lt;sudachi::sentence_splitter::Senten..</text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (1,285 samples, 0.44%)</title><rect x="351.1" y="341" width="5.2" height="15.0" fill="rgb(226,48,54)" rx="2" ry="2" />
<text  x="354.14" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (2,946 samples, 1.00%)</title><rect x="178.9" y="389" width="11.8" height="15.0" fill="rgb(236,134,6)" rx="2" ry="2" />
<text  x="181.87" y="399.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::mecab_oov::MeCabOovPlugin::provide_oov_gen (2,168 samples, 0.74%)</title><rect x="854.3" y="421" width="8.7" height="15.0" fill="rgb(248,214,38)" rx="2" ry="2" />
<text  x="857.27" y="431.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify64 (988 samples, 0.34%)</title><rect x="1136.6" y="165" width="4.0" height="15.0" fill="rgb(252,86,30)" rx="2" ry="2" />
<text  x="1139.58" y="175.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::next_state_no_fail (650 samples, 0.22%)</title><rect x="1082.3" y="277" width="2.7" height="15.0" fill="rgb(229,70,46)" rx="2" ry="2" />
<text  x="1085.35" y="287.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at (534 samples, 0.18%)</title><rect x="840.3" y="325" width="2.2" height="15.0" fill="rgb(241,77,2)" rx="2" ry="2" />
<text  x="843.31" y="335.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (93 samples, 0.03%)</title><rect x="862.0" y="229" width="0.4" height="15.0" fill="rgb(229,82,34)" rx="2" ry="2" />
<text  x="865.04" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (145 samples, 0.05%)</title><rect x="812.1" y="341" width="0.6" height="15.0" fill="rgb(211,115,8)" rx="2" ry="2" />
<text  x="815.12" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (5,995 samples, 2.04%)</title><rect x="790.3" y="405" width="24.1" height="15.0" fill="rgb(224,218,41)" rx="2" ry="2" />
<text  x="793.26" y="415.5" >s..</text>
</g>
<g >
<title>sudachi::dic::word_id::WordId::new (418 samples, 0.14%)</title><rect x="524.8" y="309" width="1.7" height="15.0" fill="rgb(210,14,29)" rx="2" ry="2" />
<text  x="527.81" y="319.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::ch_idx (459 samples, 0.16%)</title><rect x="22.4" y="501" width="1.8" height="15.0" fill="rgb(237,184,29)" rx="2" ry="2" />
<text  x="25.39" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (602 samples, 0.21%)</title><rect x="351.6" y="181" width="2.4" height="15.0" fill="rgb(210,225,26)" rx="2" ry="2" />
<text  x="354.58" y="191.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (105 samples, 0.04%)</title><rect x="776.9" y="181" width="0.4" height="15.0" fill="rgb(218,45,27)" rx="2" ry="2" />
<text  x="779.85" y="191.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,777 samples, 0.61%)</title><rect x="253.4" y="309" width="7.1" height="15.0" fill="rgb(205,68,13)" rx="2" ry="2" />
<text  x="256.36" y="319.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Patterns::get_unchecked (212 samples, 0.07%)</title><rect x="1139.3" y="133" width="0.9" height="15.0" fill="rgb(228,32,41)" rx="2" ry="2" />
<text  x="1142.30" y="143.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (337 samples, 0.11%)</title><rect x="161.7" y="389" width="1.4" height="15.0" fill="rgb(233,139,32)" rx="2" ry="2" />
<text  x="164.72" y="399.5" ></text>
</g>
<g >
<title>nom::sequence::tuple::{{closure}} (27,223 samples, 9.28%)</title><rect x="960.3" y="357" width="109.5" height="15.0" fill="rgb(207,52,34)" rx="2" ry="2" />
<text  x="963.28" y="367.5" >nom::sequence..</text>
</g>
<g >
<title>fancy_regex::vm::State::pop (351 samples, 0.12%)</title><rect x="42.1" y="501" width="1.5" height="15.0" fill="rgb(239,138,9)" rx="2" ry="2" />
<text  x="45.15" y="511.5" ></text>
</g>
<g >
<title>ksys_read (81 samples, 0.03%)</title><rect x="78.3" y="277" width="0.4" height="15.0" fill="rgb(208,202,51)" rx="2" ry="2" />
<text  x="81.34" y="287.5" ></text>
</g>
<g >
<title>alloc::string::String::push (1,285 samples, 0.44%)</title><rect x="351.1" y="277" width="5.2" height="15.0" fill="rgb(247,218,14)" rx="2" ry="2" />
<text  x="354.14" y="287.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (83 samples, 0.03%)</title><rect x="1092.7" y="341" width="0.3" height="15.0" fill="rgb(243,110,25)" rx="2" ry="2" />
<text  x="1095.65" y="351.5" ></text>
</g>
<g >
<title>all (293,314 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(248,77,18)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (2,560 samples, 0.87%)</title><rect x="90.9" y="437" width="10.3" height="15.0" fill="rgb(249,173,8)" rx="2" ry="2" />
<text  x="93.87" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::truncate (4,126 samples, 1.41%)</title><rect x="1169.3" y="421" width="16.6" height="15.0" fill="rgb(222,63,39)" rx="2" ry="2" />
<text  x="1172.28" y="431.5" ></text>
</g>
<g >
<title>&lt; (3,499 samples, 1.19%)</title><rect x="920.1" y="325" width="14.0" height="15.0" fill="rgb(235,154,19)" rx="2" ry="2" />
<text  x="923.06" y="335.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::reset (3,128 samples, 1.07%)</title><rect x="713.1" y="453" width="12.6" height="15.0" fill="rgb(243,165,35)" rx="2" ry="2" />
<text  x="716.13" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (88 samples, 0.03%)</title><rect x="1132.9" y="309" width="0.4" height="15.0" fill="rgb(245,190,14)" rx="2" ry="2" />
<text  x="1135.92" y="319.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (361 samples, 0.12%)</title><rect x="779.7" y="261" width="1.5" height="15.0" fill="rgb(252,96,14)" rx="2" ry="2" />
<text  x="782.71" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4,724 samples, 1.61%)</title><rect x="998.7" y="229" width="19.0" height="15.0" fill="rgb(205,224,38)" rx="2" ry="2" />
<text  x="1001.67" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,335 samples, 0.80%)</title><rect x="1039.0" y="213" width="9.4" height="15.0" fill="rgb(217,137,40)" rx="2" ry="2" />
<text  x="1042.01" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::u32_parser (123 samples, 0.04%)</title><rect x="917.4" y="373" width="0.5" height="15.0" fill="rgb(220,15,30)" rx="2" ry="2" />
<text  x="920.36" y="383.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (417 samples, 0.14%)</title><rect x="812.7" y="277" width="1.7" height="15.0" fill="rgb(212,56,38)" rx="2" ry="2" />
<text  x="815.70" y="287.5" ></text>
</g>
<g >
<title>core::ptr::write (97 samples, 0.03%)</title><rect x="1037.6" y="245" width="0.4" height="15.0" fill="rgb(241,91,11)" rx="2" ry="2" />
<text  x="1040.65" y="255.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (417 samples, 0.14%)</title><rect x="812.7" y="261" width="1.7" height="15.0" fill="rgb(218,5,16)" rx="2" ry="2" />
<text  x="815.70" y="271.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,799 samples, 1.64%)</title><rect x="791.9" y="325" width="19.3" height="15.0" fill="rgb(249,164,45)" rx="2" ry="2" />
<text  x="794.92" y="335.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (1,075 samples, 0.37%)</title><rect x="522.2" y="373" width="4.3" height="15.0" fill="rgb(228,166,52)" rx="2" ry="2" />
<text  x="525.17" y="383.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::push (2,397 samples, 0.82%)</title><rect x="193.5" y="405" width="9.7" height="15.0" fill="rgb(208,2,45)" rx="2" ry="2" />
<text  x="196.52" y="415.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (89 samples, 0.03%)</title><rect x="83.3" y="453" width="0.4" height="15.0" fill="rgb(210,169,49)" rx="2" ry="2" />
<text  x="86.29" y="463.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::concat_nodes (918 samples, 0.31%)</title><rect x="386.5" y="421" width="3.7" height="15.0" fill="rgb(212,159,27)" rx="2" ry="2" />
<text  x="389.50" y="431.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (106 samples, 0.04%)</title><rect x="178.4" y="357" width="0.5" height="15.0" fill="rgb(242,61,30)" rx="2" ry="2" />
<text  x="181.44" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (140 samples, 0.05%)</title><rect x="375.4" y="421" width="0.6" height="15.0" fill="rgb(221,57,2)" rx="2" ry="2" />
<text  x="378.43" y="431.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (110 samples, 0.04%)</title><rect x="108.6" y="357" width="0.5" height="15.0" fill="rgb(226,25,3)" rx="2" ry="2" />
<text  x="111.62" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2,213 samples, 0.75%)</title><rect x="945.9" y="245" width="8.9" height="15.0" fill="rgb(211,190,25)" rx="2" ry="2" />
<text  x="948.91" y="255.5" ></text>
</g>
<g >
<title>_int_free (88 samples, 0.03%)</title><rect x="1169.7" y="357" width="0.4" height="15.0" fill="rgb(222,24,14)" rx="2" ry="2" />
<text  x="1172.73" y="367.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::iter (368 samples, 0.13%)</title><rect x="314.1" y="293" width="1.5" height="15.0" fill="rgb(218,146,2)" rx="2" ry="2" />
<text  x="317.10" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::any_bit_set (262 samples, 0.09%)</title><rect x="761.6" y="293" width="1.1" height="15.0" fill="rgb(243,183,9)" rx="2" ry="2" />
<text  x="764.62" y="303.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (2,729 samples, 0.93%)</title><rect x="300.2" y="245" width="11.0" height="15.0" fill="rgb(230,227,31)" rx="2" ry="2" />
<text  x="303.20" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSync&gt; (259 samples, 0.09%)</title><rect x="343.0" y="341" width="1.0" height="15.0" fill="rgb(249,80,25)" rx="2" ry="2" />
<text  x="345.97" y="351.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (627 samples, 0.21%)</title><rect x="872.4" y="453" width="2.5" height="15.0" fill="rgb(207,202,2)" rx="2" ry="2" />
<text  x="875.36" y="463.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (116 samples, 0.04%)</title><rect x="43.6" y="501" width="0.4" height="15.0" fill="rgb(211,119,13)" rx="2" ry="2" />
<text  x="46.56" y="511.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::clear (165 samples, 0.06%)</title><rect x="366.5" y="277" width="0.6" height="15.0" fill="rgb(252,131,23)" rx="2" ry="2" />
<text  x="369.48" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (84 samples, 0.03%)</title><rect x="171.0" y="357" width="0.3" height="15.0" fill="rgb(206,191,50)" rx="2" ry="2" />
<text  x="174.00" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (338 samples, 0.12%)</title><rect x="928.4" y="149" width="1.4" height="15.0" fill="rgb(237,67,23)" rx="2" ry="2" />
<text  x="931.42" y="159.5" ></text>
</g>
<g >
<title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (150 samples, 0.05%)</title><rect x="984.2" y="261" width="0.6" height="15.0" fill="rgb(252,77,0)" rx="2" ry="2" />
<text  x="987.16" y="271.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2,219 samples, 0.76%)</title><rect x="1021.1" y="165" width="9.0" height="15.0" fill="rgb(225,24,52)" rx="2" ry="2" />
<text  x="1024.14" y="175.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sudachi::dic::word_id::WordId&gt;&gt; (182 samples, 0.06%)</title><rect x="1185.0" y="357" width="0.7" height="15.0" fill="rgb(231,105,23)" rx="2" ry="2" />
<text  x="1187.98" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (440 samples, 0.15%)</title><rect x="913.7" y="405" width="1.8" height="15.0" fill="rgb(211,26,0)" rx="2" ry="2" />
<text  x="916.74" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::LoadedDictionary::from_system_dictionary (488 samples, 0.17%)</title><rect x="1185.9" y="469" width="2.0" height="15.0" fill="rgb(229,71,32)" rx="2" ry="2" />
<text  x="1188.93" y="479.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (1,470 samples, 0.50%)</title><rect x="924.0" y="261" width="5.9" height="15.0" fill="rgb(205,94,8)" rx="2" ry="2" />
<text  x="926.98" y="271.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (121 samples, 0.04%)</title><rect x="167.5" y="357" width="0.5" height="15.0" fill="rgb(246,123,37)" rx="2" ry="2" />
<text  x="170.47" y="367.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::mecab_oov::MeCabOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (78 samples, 0.03%)</title><rect x="854.0" y="421" width="0.3" height="15.0" fill="rgb(250,127,30)" rx="2" ry="2" />
<text  x="856.96" y="431.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (4,581 samples, 1.56%)</title><rect x="824.0" y="405" width="18.5" height="15.0" fill="rgb(217,23,22)" rx="2" ry="2" />
<text  x="827.03" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_state (771 samples, 0.26%)</title><rect x="337.2" y="293" width="3.1" height="15.0" fill="rgb(205,109,16)" rx="2" ry="2" />
<text  x="340.20" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3,278 samples, 1.12%)</title><rect x="1001.5" y="149" width="13.2" height="15.0" fill="rgb(224,131,18)" rx="2" ry="2" />
<text  x="1004.51" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (338 samples, 0.12%)</title><rect x="928.4" y="181" width="1.4" height="15.0" fill="rgb(234,182,12)" rx="2" ry="2" />
<text  x="931.42" y="191.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (430 samples, 0.15%)</title><rect x="531.4" y="453" width="1.7" height="15.0" fill="rgb(245,42,40)" rx="2" ry="2" />
<text  x="534.40" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,219 samples, 0.76%)</title><rect x="1021.1" y="213" width="9.0" height="15.0" fill="rgb(250,167,27)" rx="2" ry="2" />
<text  x="1024.14" y="223.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i32::{{closure}} (205 samples, 0.07%)</title><rect x="980.1" y="229" width="0.8" height="15.0" fill="rgb(250,132,47)" rx="2" ry="2" />
<text  x="983.10" y="239.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (81 samples, 0.03%)</title><rect x="533.7" y="405" width="0.4" height="15.0" fill="rgb(209,205,34)" rx="2" ry="2" />
<text  x="536.73" y="415.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (3,037 samples, 1.04%)</title><rect x="797.6" y="277" width="12.2" height="15.0" fill="rgb(206,167,32)" rx="2" ry="2" />
<text  x="800.59" y="287.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,777 samples, 0.61%)</title><rect x="351.1" y="389" width="7.2" height="15.0" fill="rgb(208,167,29)" rx="2" ry="2" />
<text  x="354.11" y="399.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (260 samples, 0.09%)</title><rect x="355.1" y="245" width="1.1" height="15.0" fill="rgb(251,99,52)" rx="2" ry="2" />
<text  x="358.12" y="255.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::find_at (4,328 samples, 1.48%)</title><rect x="250.6" y="373" width="17.4" height="15.0" fill="rgb(238,113,41)" rx="2" ry="2" />
<text  x="253.63" y="383.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.04%)</title><rect x="419.4" y="437" width="0.4" height="15.0" fill="rgb(214,31,47)" rx="2" ry="2" />
<text  x="422.37" y="447.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (282 samples, 0.10%)</title><rect x="979.8" y="277" width="1.2" height="15.0" fill="rgb(212,215,17)" rx="2" ry="2" />
<text  x="982.82" y="287.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (230 samples, 0.08%)</title><rect x="1085.7" y="357" width="0.9" height="15.0" fill="rgb(221,223,40)" rx="2" ry="2" />
<text  x="1088.69" y="367.5" ></text>
</g>
<g >
<title>&lt;sudachi::hash::RoMuHash as core::hash::Hasher&gt;::write_u32 (470 samples, 0.16%)</title><rect x="757.8" y="325" width="1.9" height="15.0" fill="rgb(251,111,43)" rx="2" ry="2" />
<text  x="760.85" y="335.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (116 samples, 0.04%)</title><rect x="927.9" y="213" width="0.5" height="15.0" fill="rgb(247,22,49)" rx="2" ry="2" />
<text  x="930.91" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_free (301 samples, 0.10%)</title><rect x="30.4" y="501" width="1.2" height="15.0" fill="rgb(230,123,4)" rx="2" ry="2" />
<text  x="33.36" y="511.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match_at (346 samples, 0.12%)</title><rect x="358.4" y="421" width="1.4" height="15.0" fill="rgb(226,198,54)" rx="2" ry="2" />
<text  x="361.44" y="431.5" ></text>
</g>
<g >
<title>regex::re_trait::RegularExpression::locations (208 samples, 0.07%)</title><rect x="361.6" y="389" width="0.8" height="15.0" fill="rgb(252,166,52)" rx="2" ry="2" />
<text  x="364.57" y="399.5" ></text>
</g>
<g >
<title>&lt;regex::re_unicode::Matches as core::iter::traits::iterator::Iterator&gt;::next (2,057 samples, 0.70%)</title><rect x="1134.0" y="389" width="8.3" height="15.0" fill="rgb(209,44,26)" rx="2" ry="2" />
<text  x="1137.00" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (96 samples, 0.03%)</title><rect x="1168.5" y="373" width="0.4" height="15.0" fill="rgb(253,225,54)" rx="2" ry="2" />
<text  x="1171.51" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::resize (149 samples, 0.05%)</title><rect x="1167.5" y="437" width="0.6" height="15.0" fill="rgb(223,64,48)" rx="2" ry="2" />
<text  x="1170.46" y="447.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (509 samples, 0.17%)</title><rect x="1095.1" y="357" width="2.0" height="15.0" fill="rgb(244,203,40)" rx="2" ry="2" />
<text  x="1098.05" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (114 samples, 0.04%)</title><rect x="104.9" y="421" width="0.5" height="15.0" fill="rgb(220,78,16)" rx="2" ry="2" />
<text  x="107.94" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (196 samples, 0.07%)</title><rect x="386.9" y="389" width="0.8" height="15.0" fill="rgb(249,91,28)" rx="2" ry="2" />
<text  x="389.93" y="399.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::prolonged_sound_mark::ProlongedSoundMarkPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (2,233 samples, 0.76%)</title><rect x="1133.7" y="405" width="9.0" height="15.0" fill="rgb(225,127,36)" rx="2" ry="2" />
<text  x="1136.69" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (536 samples, 0.18%)</title><rect x="351.8" y="117" width="2.1" height="15.0" fill="rgb(234,176,12)" rx="2" ry="2" />
<text  x="354.77" y="127.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1,777 samples, 0.61%)</title><rect x="351.1" y="357" width="7.2" height="15.0" fill="rgb(253,30,54)" rx="2" ry="2" />
<text  x="354.11" y="367.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (127 samples, 0.04%)</title><rect x="285.5" y="261" width="0.5" height="15.0" fill="rgb(224,196,46)" rx="2" ry="2" />
<text  x="288.45" y="271.5" ></text>
</g>
<g >
<title>sudachi::plugin::loader::PluginContainer&lt;T&gt;::plugins (92 samples, 0.03%)</title><rect x="418.7" y="421" width="0.4" height="15.0" fill="rgb(235,32,50)" rx="2" ry="2" />
<text  x="421.68" y="431.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (329 samples, 0.11%)</title><rect x="918.3" y="309" width="1.3" height="15.0" fill="rgb(239,202,40)" rx="2" ry="2" />
<text  x="921.26" y="319.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (100 samples, 0.03%)</title><rect x="842.1" y="245" width="0.4" height="15.0" fill="rgb(218,163,47)" rx="2" ry="2" />
<text  x="845.06" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (87 samples, 0.03%)</title><rect x="392.9" y="373" width="0.3" height="15.0" fill="rgb(236,193,26)" rx="2" ry="2" />
<text  x="395.89" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (275 samples, 0.09%)</title><rect x="918.3" y="229" width="1.1" height="15.0" fill="rgb(212,110,40)" rx="2" ry="2" />
<text  x="921.26" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (440 samples, 0.15%)</title><rect x="913.7" y="389" width="1.8" height="15.0" fill="rgb(211,27,38)" rx="2" ry="2" />
<text  x="916.74" y="399.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::spare_capacity (732 samples, 0.25%)</title><rect x="87.2" y="437" width="2.9" height="15.0" fill="rgb(230,156,46)" rx="2" ry="2" />
<text  x="90.16" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (1,285 samples, 0.44%)</title><rect x="351.1" y="293" width="5.2" height="15.0" fill="rgb(242,106,33)" rx="2" ry="2" />
<text  x="354.14" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (148 samples, 0.05%)</title><rect x="1096.5" y="229" width="0.6" height="15.0" fill="rgb(218,159,7)" rx="2" ry="2" />
<text  x="1099.51" y="239.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (84 samples, 0.03%)</title><rect x="387.7" y="405" width="0.4" height="15.0" fill="rgb(238,17,0)" rx="2" ry="2" />
<text  x="390.72" y="415.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (27,744 samples, 9.46%)</title><rect x="419.8" y="453" width="111.6" height="15.0" fill="rgb(252,52,18)" rx="2" ry="2" />
<text  x="422.79" y="463.5" >&lt;core::iter::..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (148 samples, 0.05%)</title><rect x="41.0" y="437" width="0.6" height="15.0" fill="rgb(228,204,6)" rx="2" ry="2" />
<text  x="44.03" y="447.5" ></text>
</g>
<g >
<title>&lt;sudachi::output::Simple as sudachi::output::SudachiOutput&lt;T&gt;&gt;::write (6,790 samples, 2.31%)</title><rect x="82.3" y="485" width="27.3" height="15.0" fill="rgb(221,188,17)" rx="2" ry="2" />
<text  x="85.31" y="495.5" >&lt;..</text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::get_word_info (257 samples, 0.09%)</title><rect x="105.8" y="421" width="1.1" height="15.0" fill="rgb(240,70,48)" rx="2" ry="2" />
<text  x="108.84" y="431.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search (1,041 samples, 0.35%)</title><rect x="1157.8" y="437" width="4.1" height="15.0" fill="rgb(219,65,46)" rx="2" ry="2" />
<text  x="1160.75" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[sudachi::analysis::node::ResultNode]&gt; (4,125 samples, 1.41%)</title><rect x="1169.3" y="405" width="16.6" height="15.0" fill="rgb(223,119,43)" rx="2" ry="2" />
<text  x="1172.28" y="415.5" ></text>
</g>
<g >
<title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (87 samples, 0.03%)</title><rect x="1050.9" y="245" width="0.3" height="15.0" fill="rgb(210,57,49)" rx="2" ry="2" />
<text  x="1053.86" y="255.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (242 samples, 0.08%)</title><rect x="1186.2" y="325" width="1.0" height="15.0" fill="rgb(233,149,19)" rx="2" ry="2" />
<text  x="1189.19" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (7,673 samples, 2.62%)</title><rect x="750.3" y="421" width="30.9" height="15.0" fill="rgb(237,89,37)" rx="2" ry="2" />
<text  x="753.29" y="431.5" >su..</text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (101 samples, 0.03%)</title><rect x="837.2" y="197" width="0.4" height="15.0" fill="rgb(209,46,31)" rx="2" ry="2" />
<text  x="840.22" y="207.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::exec_backtrack (893 samples, 0.30%)</title><rect x="363.7" y="325" width="3.5" height="15.0" fill="rgb(230,52,7)" rx="2" ry="2" />
<text  x="366.65" y="335.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (1,152 samples, 0.39%)</title><rect x="864.1" y="469" width="4.6" height="15.0" fill="rgb(215,35,49)" rx="2" ry="2" />
<text  x="867.11" y="479.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (183 samples, 0.06%)</title><rect x="788.7" y="405" width="0.7" height="15.0" fill="rgb(239,100,43)" rx="2" ry="2" />
<text  x="791.67" y="415.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (42,838 samples, 14.60%)</title><rect x="540.8" y="453" width="172.3" height="15.0" fill="rgb(214,209,30)" rx="2" ry="2" />
<text  x="543.80" y="463.5" >sudachi::analysis::lat..</text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (509 samples, 0.17%)</title><rect x="1095.1" y="341" width="2.0" height="15.0" fill="rgb(218,130,2)" rx="2" ry="2" />
<text  x="1098.05" y="351.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,269 samples, 0.43%)</title><rect x="241.1" y="373" width="5.1" height="15.0" fill="rgb(250,112,48)" rx="2" ry="2" />
<text  x="244.10" y="383.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (4,030 samples, 1.37%)</title><rect x="1032.2" y="277" width="16.2" height="15.0" fill="rgb(239,8,17)" rx="2" ry="2" />
<text  x="1035.23" y="287.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (300 samples, 0.10%)</title><rect x="1073.8" y="357" width="1.2" height="15.0" fill="rgb(230,112,49)" rx="2" ry="2" />
<text  x="1076.76" y="367.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (1,777 samples, 0.61%)</title><rect x="351.1" y="405" width="7.2" height="15.0" fill="rgb(209,139,9)" rx="2" ry="2" />
<text  x="354.11" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (106 samples, 0.04%)</title><rect x="931.3" y="117" width="0.5" height="15.0" fill="rgb(208,219,25)" rx="2" ry="2" />
<text  x="934.35" y="127.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (3,476 samples, 1.19%)</title><rect x="1170.7" y="277" width="14.0" height="15.0" fill="rgb(205,24,0)" rx="2" ry="2" />
<text  x="1173.71" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::oov_provider_plugins (112 samples, 0.04%)</title><rect x="418.6" y="437" width="0.5" height="15.0" fill="rgb(213,39,7)" rx="2" ry="2" />
<text  x="421.60" y="447.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (7,271 samples, 2.48%)</title><rect x="286.3" y="309" width="29.3" height="15.0" fill="rgb(252,27,15)" rx="2" ry="2" />
<text  x="289.33" y="319.5" >re..</text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::unchecked_add (95 samples, 0.03%)</title><rect x="447.7" y="277" width="0.4" height="15.0" fill="rgb(208,40,21)" rx="2" ry="2" />
<text  x="450.68" y="287.5" ></text>
</g>
<g >
<title>std::os::imp::unix::net::datagram::UnixDatagram::send (155 samples, 0.05%)</title><rect x="90.2" y="389" width="0.6" height="15.0" fill="rgb(243,31,16)" rx="2" ry="2" />
<text  x="93.22" y="399.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::string_number::StringNumber::to_string (75 samples, 0.03%)</title><rect x="390.2" y="405" width="0.3" height="15.0" fill="rgb(223,47,34)" rx="2" ry="2" />
<text  x="393.19" y="415.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (131 samples, 0.04%)</title><rect x="837.6" y="293" width="0.6" height="15.0" fill="rgb(243,74,5)" rx="2" ry="2" />
<text  x="840.63" y="303.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (690 samples, 0.24%)</title><rect x="896.0" y="437" width="2.8" height="15.0" fill="rgb(247,130,26)" rx="2" ry="2" />
<text  x="898.99" y="447.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (537 samples, 0.18%)</title><rect x="872.7" y="437" width="2.2" height="15.0" fill="rgb(236,25,22)" rx="2" ry="2" />
<text  x="875.73" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (232 samples, 0.08%)</title><rect x="1047.3" y="133" width="0.9" height="15.0" fill="rgb(223,119,46)" rx="2" ry="2" />
<text  x="1050.31" y="143.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (141 samples, 0.05%)</title><rect x="170.8" y="373" width="0.5" height="15.0" fill="rgb(239,78,17)" rx="2" ry="2" />
<text  x="173.77" y="383.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::shortest_match_at (292 samples, 0.10%)</title><rect x="358.5" y="373" width="1.2" height="15.0" fill="rgb(243,110,47)" rx="2" ry="2" />
<text  x="361.53" y="383.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,297 samples, 6.24%)</title><rect x="443.6" y="357" width="73.6" height="15.0" fill="rgb(216,24,34)" rx="2" ry="2" />
<text  x="446.62" y="367.5" >&lt;core::i..</text>
</g>
<g >
<title>alloc::alloc::realloc (352 samples, 0.12%)</title><rect x="925.8" y="69" width="1.4" height="15.0" fill="rgb(239,221,40)" rx="2" ry="2" />
<text  x="928.81" y="79.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::with_editor (16,778 samples, 5.72%)</title><rect x="1075.2" y="437" width="67.5" height="15.0" fill="rgb(243,173,53)" rx="2" ry="2" />
<text  x="1078.22" y="447.5" >sudachi..</text>
</g>
<g >
<title>alloc::alloc::alloc (336 samples, 0.11%)</title><rect x="928.4" y="133" width="1.4" height="15.0" fill="rgb(237,71,0)" rx="2" ry="2" />
<text  x="931.43" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (254 samples, 0.09%)</title><rect x="730.8" y="421" width="1.0" height="15.0" fill="rgb(249,214,2)" rx="2" ry="2" />
<text  x="733.79" y="431.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::rewrite_input (17,440 samples, 5.95%)</title><rect x="1072.6" y="469" width="70.1" height="15.0" fill="rgb(212,192,42)" rx="2" ry="2" />
<text  x="1075.55" y="479.5" >sudachi..</text>
</g>
<g >
<title>regex::exec::ExecNoSync::shortest_dfa (261 samples, 0.09%)</title><rect x="358.7" y="357" width="1.0" height="15.0" fill="rgb(244,105,5)" rx="2" ry="2" />
<text  x="361.65" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (191 samples, 0.07%)</title><rect x="1030.1" y="213" width="0.7" height="15.0" fill="rgb(222,175,5)" rx="2" ry="2" />
<text  x="1033.07" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_info (100 samples, 0.03%)</title><rect x="1070.3" y="437" width="0.4" height="15.0" fill="rgb(247,80,53)" rx="2" ry="2" />
<text  x="1073.25" y="447.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::replace_slow (5,280 samples, 1.80%)</title><rect x="1085.1" y="389" width="21.2" height="15.0" fill="rgb(210,28,49)" rx="2" ry="2" />
<text  x="1088.10" y="399.5" >s..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (213 samples, 0.07%)</title><rect x="40.8" y="469" width="0.8" height="15.0" fill="rgb(240,93,53)" rx="2" ry="2" />
<text  x="43.76" y="479.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::ok::{{closure}} (142 samples, 0.05%)</title><rect x="1152.2" y="341" width="0.5" height="15.0" fill="rgb(241,137,54)" rx="2" ry="2" />
<text  x="1155.16" y="351.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (93 samples, 0.03%)</title><rect x="862.0" y="261" width="0.4" height="15.0" fill="rgb(230,204,9)" rx="2" ry="2" />
<text  x="865.04" y="271.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (112 samples, 0.04%)</title><rect x="1074.1" y="325" width="0.4" height="15.0" fill="rgb(211,216,45)" rx="2" ry="2" />
<text  x="1077.07" y="335.5" ></text>
</g>
<g >
<title>std::sys_common::memchr::memchr (248 samples, 0.08%)</title><rect x="79.7" y="389" width="1.0" height="15.0" fill="rgb(227,10,43)" rx="2" ry="2" />
<text  x="82.74" y="399.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (271 samples, 0.09%)</title><rect x="1166.3" y="405" width="1.1" height="15.0" fill="rgb(244,72,8)" rx="2" ry="2" />
<text  x="1169.34" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (177 samples, 0.06%)</title><rect x="106.0" y="389" width="0.7" height="15.0" fill="rgb(244,126,48)" rx="2" ry="2" />
<text  x="109.00" y="399.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (260 samples, 0.09%)</title><rect x="355.1" y="261" width="1.1" height="15.0" fill="rgb(228,129,38)" rx="2" ry="2" />
<text  x="358.12" y="271.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (339 samples, 0.12%)</title><rect x="918.3" y="325" width="1.3" height="15.0" fill="rgb(240,166,10)" rx="2" ry="2" />
<text  x="921.26" y="335.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (394 samples, 0.13%)</title><rect x="348.5" y="309" width="1.6" height="15.0" fill="rgb(209,118,44)" rx="2" ry="2" />
<text  x="351.49" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_mul (134 samples, 0.05%)</title><rect x="759.2" y="293" width="0.5" height="15.0" fill="rgb(235,127,50)" rx="2" ry="2" />
<text  x="762.20" y="303.5" ></text>
</g>
<g >
<title>alloc::string::String::push (880 samples, 0.30%)</title><rect x="924.8" y="245" width="3.6" height="15.0" fill="rgb(215,69,24)" rx="2" ry="2" />
<text  x="927.85" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,369 samples, 0.81%)</title><rect x="1038.9" y="229" width="9.5" height="15.0" fill="rgb(233,109,9)" rx="2" ry="2" />
<text  x="1041.88" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::resize (135 samples, 0.05%)</title><rect x="1164.6" y="437" width="0.6" height="15.0" fill="rgb(211,187,44)" rx="2" ry="2" />
<text  x="1167.62" y="447.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (141 samples, 0.05%)</title><rect x="166.9" y="325" width="0.6" height="15.0" fill="rgb(233,128,11)" rx="2" ry="2" />
<text  x="169.90" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (92 samples, 0.03%)</title><rect x="418.7" y="405" width="0.4" height="15.0" fill="rgb(211,130,11)" rx="2" ry="2" />
<text  x="421.68" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,915 samples, 0.65%)</title><rect x="946.2" y="213" width="7.7" height="15.0" fill="rgb(233,121,36)" rx="2" ry="2" />
<text  x="949.18" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (89 samples, 0.03%)</title><rect x="69.8" y="501" width="0.4" height="15.0" fill="rgb(215,7,19)" rx="2" ry="2" />
<text  x="72.80" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,219 samples, 0.76%)</title><rect x="1021.1" y="245" width="9.0" height="15.0" fill="rgb(242,199,43)" rx="2" ry="2" />
<text  x="1024.14" y="255.5" ></text>
</g>
<g >
<title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (169 samples, 0.06%)</title><rect x="389.0" y="357" width="0.7" height="15.0" fill="rgb(215,18,53)" rx="2" ry="2" />
<text  x="392.02" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (313 samples, 0.11%)</title><rect x="848.7" y="437" width="1.2" height="15.0" fill="rgb(234,186,20)" rx="2" ry="2" />
<text  x="851.66" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::utf16_string_parser (2,507 samples, 0.85%)</title><rect x="923.2" y="277" width="10.0" height="15.0" fill="rgb(212,35,45)" rx="2" ry="2" />
<text  x="926.16" y="287.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (352 samples, 0.12%)</title><rect x="956.7" y="389" width="1.4" height="15.0" fill="rgb(254,185,29)" rx="2" ry="2" />
<text  x="959.69" y="399.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,306 samples, 0.45%)</title><rect x="1127.0" y="325" width="5.3" height="15.0" fill="rgb(253,44,22)" rx="2" ry="2" />
<text  x="1130.03" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,577 samples, 0.88%)</title><rect x="1038.0" y="245" width="10.4" height="15.0" fill="rgb(250,161,42)" rx="2" ry="2" />
<text  x="1041.04" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::new (467 samples, 0.16%)</title><rect x="1186.0" y="421" width="1.9" height="15.0" fill="rgb(236,54,42)" rx="2" ry="2" />
<text  x="1189.01" y="431.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (1,065 samples, 0.36%)</title><rect x="328.1" y="277" width="4.3" height="15.0" fill="rgb(253,111,0)" rx="2" ry="2" />
<text  x="331.13" y="287.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (293 samples, 0.10%)</title><rect x="270.2" y="325" width="1.1" height="15.0" fill="rgb(217,110,28)" rx="2" ry="2" />
<text  x="273.17" y="335.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (27,621 samples, 9.42%)</title><rect x="958.7" y="373" width="111.1" height="15.0" fill="rgb(251,98,22)" rx="2" ry="2" />
<text  x="961.68" y="383.5" >&lt;F as nom::in..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (136 samples, 0.05%)</title><rect x="59.6" y="485" width="0.6" height="15.0" fill="rgb(207,106,30)" rx="2" ry="2" />
<text  x="62.64" y="495.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (124 samples, 0.04%)</title><rect x="1139.7" y="117" width="0.5" height="15.0" fill="rgb(212,137,0)" rx="2" ry="2" />
<text  x="1142.66" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.03%)</title><rect x="419.1" y="453" width="0.3" height="15.0" fill="rgb(207,107,23)" rx="2" ry="2" />
<text  x="422.05" y="463.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (227 samples, 0.08%)</title><rect x="528.5" y="357" width="0.9" height="15.0" fill="rgb(210,49,38)" rx="2" ry="2" />
<text  x="531.52" y="367.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,740 samples, 0.59%)</title><rect x="367.3" y="357" width="7.0" height="15.0" fill="rgb(238,213,27)" rx="2" ry="2" />
<text  x="370.27" y="367.5" ></text>
</g>
<g >
<title>regex::pool::Pool&lt;T&gt;::get (870 samples, 0.30%)</title><rect x="346.6" y="325" width="3.5" height="15.0" fill="rgb(254,157,18)" rx="2" ry="2" />
<text  x="349.58" y="335.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (207 samples, 0.07%)</title><rect x="789.4" y="405" width="0.8" height="15.0" fill="rgb(238,150,48)" rx="2" ry="2" />
<text  x="792.41" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (182 samples, 0.06%)</title><rect x="1185.0" y="325" width="0.7" height="15.0" fill="rgb(222,137,20)" rx="2" ry="2" />
<text  x="1187.98" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (232 samples, 0.08%)</title><rect x="81.2" y="485" width="0.9" height="15.0" fill="rgb(240,169,10)" rx="2" ry="2" />
<text  x="84.19" y="495.5" ></text>
</g>
<g >
<title>sudachi::dic::connect::ConnectionMatrix::cost (11,391 samples, 3.88%)</title><rect x="665.6" y="421" width="45.8" height="15.0" fill="rgb(248,6,39)" rx="2" ry="2" />
<text  x="668.57" y="431.5" >suda..</text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (337 samples, 0.11%)</title><rect x="161.7" y="373" width="1.4" height="15.0" fill="rgb(244,219,17)" rx="2" ry="2" />
<text  x="164.72" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (172 samples, 0.06%)</title><rect x="236.3" y="357" width="0.7" height="15.0" fill="rgb(238,217,2)" rx="2" ry="2" />
<text  x="239.27" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (78 samples, 0.03%)</title><rect x="1133.0" y="261" width="0.3" height="15.0" fill="rgb(209,2,20)" rx="2" ry="2" />
<text  x="1135.96" y="271.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (206 samples, 0.07%)</title><rect x="239.1" y="373" width="0.8" height="15.0" fill="rgb(250,129,5)" rx="2" ry="2" />
<text  x="242.10" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (2,454 samples, 0.84%)</title><rect x="1003.8" y="101" width="9.9" height="15.0" fill="rgb(253,170,11)" rx="2" ry="2" />
<text  x="1006.80" y="111.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (108 samples, 0.04%)</title><rect x="350.7" y="357" width="0.4" height="15.0" fill="rgb(243,183,42)" rx="2" ry="2" />
<text  x="353.68" y="367.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (89 samples, 0.03%)</title><rect x="35.7" y="485" width="0.3" height="15.0" fill="rgb(208,94,10)" rx="2" ry="2" />
<text  x="38.66" y="495.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (413 samples, 0.14%)</title><rect x="283.8" y="309" width="1.6" height="15.0" fill="rgb(245,167,38)" rx="2" ry="2" />
<text  x="286.77" y="319.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (87 samples, 0.03%)</title><rect x="392.9" y="389" width="0.3" height="15.0" fill="rgb(246,75,22)" rx="2" ry="2" />
<text  x="395.89" y="399.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher_str (1,508 samples, 0.51%)</title><rect x="344.0" y="357" width="6.1" height="15.0" fill="rgb(221,213,31)" rx="2" ry="2" />
<text  x="347.01" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (202 samples, 0.07%)</title><rect x="813.6" y="229" width="0.8" height="15.0" fill="rgb(223,137,28)" rx="2" ry="2" />
<text  x="816.56" y="239.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (291 samples, 0.10%)</title><rect x="270.2" y="309" width="1.1" height="15.0" fill="rgb(240,1,52)" rx="2" ry="2" />
<text  x="273.17" y="319.5" ></text>
</g>
</g>
</svg>
