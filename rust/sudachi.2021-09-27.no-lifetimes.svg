<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="358.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="341" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="341" > </text>
<g id="frames">
<g >
<title>__audit_syscall_exit (492 samples, 0.06%)</title><rect x="143.2" y="101" width="0.7" height="15.0" fill="rgb(219,182,1)" rx="2" ry="2" />
<text  x="146.20" y="111.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (242 samples, 0.03%)</title><rect x="1045.9" y="117" width="0.4" height="15.0" fill="rgb(228,19,13)" rx="2" ry="2" />
<text  x="1048.91" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,024 samples, 0.13%)</title><rect x="301.6" y="69" width="1.5" height="15.0" fill="rgb(206,149,46)" rx="2" ry="2" />
<text  x="304.57" y="79.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (603 samples, 0.07%)</title><rect x="400.9" y="53" width="0.8" height="15.0" fill="rgb(234,228,40)" rx="2" ry="2" />
<text  x="403.87" y="63.5" ></text>
</g>
<g >
<title>&lt;join_katakana_oov::JoinKarakanaOovPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (5,445 samples, 0.67%)</title><rect x="237.0" y="117" width="7.9" height="15.0" fill="rgb(225,215,8)" rx="2" ry="2" />
<text  x="239.99" y="127.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,426 samples, 0.18%)</title><rect x="298.1" y="117" width="2.1" height="15.0" fill="rgb(234,215,27)" rx="2" ry="2" />
<text  x="301.14" y="127.5" ></text>
</g>
<g >
<title>sudachi::lattice::Lattice::connect_node (264,422 samples, 32.52%)</title><rect x="446.8" y="101" width="383.7" height="15.0" fill="rgb(232,145,14)" rx="2" ry="2" />
<text  x="449.81" y="111.5" >sudachi::lattice::Lattice::connect_node</text>
</g>
<g >
<title>nom::number::complete::le_u16 (220 samples, 0.03%)</title><rect x="862.9" y="53" width="0.3" height="15.0" fill="rgb(224,29,13)" rx="2" ry="2" />
<text  x="865.91" y="63.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::captures_read_at (1,960 samples, 0.24%)</title><rect x="971.2" y="117" width="2.8" height="15.0" fill="rgb(217,159,9)" rx="2" ry="2" />
<text  x="974.19" y="127.5" ></text>
</g>
<g >
<title>sudachi::dic::character_category::CharacterCategory::get_category_types (3,557 samples, 0.44%)</title><rect x="927.3" y="149" width="5.1" height="15.0" fill="rgb(236,109,51)" rx="2" ry="2" />
<text  x="930.28" y="159.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7,129 samples, 0.88%)</title><rect x="300.8" y="85" width="10.4" height="15.0" fill="rgb(220,191,24)" rx="2" ry="2" />
<text  x="303.81" y="95.5" ></text>
</g>
<g >
<title>sudachi::lattice::node::Node::fill_word_info (23,411 samples, 2.88%)</title><rect x="834.1" y="117" width="34.0" height="15.0" fill="rgb(245,180,33)" rx="2" ry="2" />
<text  x="837.12" y="127.5" >su..</text>
</g>
<g >
<title>core::fmt::Formatter::pad (907 samples, 0.11%)</title><rect x="1135.2" y="277" width="1.3" height="15.0" fill="rgb(232,12,22)" rx="2" ry="2" />
<text  x="1138.17" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (505 samples, 0.06%)</title><rect x="242.2" y="85" width="0.7" height="15.0" fill="rgb(215,103,27)" rx="2" ry="2" />
<text  x="245.19" y="95.5" ></text>
</g>
<g >
<title>__rust_dealloc (262 samples, 0.03%)</title><rect x="234.1" y="101" width="0.4" height="15.0" fill="rgb(243,1,48)" rx="2" ry="2" />
<text  x="237.10" y="111.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (387 samples, 0.05%)</title><rect x="421.4" y="101" width="0.6" height="15.0" fill="rgb(215,148,36)" rx="2" ry="2" />
<text  x="424.40" y="111.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (973 samples, 0.12%)</title><rect x="176.1" y="149" width="1.4" height="15.0" fill="rgb(237,205,41)" rx="2" ry="2" />
<text  x="179.08" y="159.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (437 samples, 0.05%)</title><rect x="861.5" y="53" width="0.7" height="15.0" fill="rgb(229,192,15)" rx="2" ry="2" />
<text  x="864.54" y="63.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (853 samples, 0.10%)</title><rect x="257.9" y="85" width="1.2" height="15.0" fill="rgb(210,218,49)" rx="2" ry="2" />
<text  x="260.87" y="95.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (2,015 samples, 0.25%)</title><rect x="896.0" y="69" width="3.0" height="15.0" fill="rgb(226,101,22)" rx="2" ry="2" />
<text  x="899.04" y="79.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_original_substring (578 samples, 0.07%)</title><rect x="310.3" y="53" width="0.9" height="15.0" fill="rgb(230,103,19)" rx="2" ry="2" />
<text  x="313.31" y="63.5" ></text>
</g>
<g >
<title>alloc_perturb (273 samples, 0.03%)</title><rect x="118.4" y="261" width="0.4" height="15.0" fill="rgb(238,224,11)" rx="2" ry="2" />
<text  x="121.45" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,947 samples, 0.36%)</title><rect x="381.5" y="85" width="4.3" height="15.0" fill="rgb(221,199,23)" rx="2" ry="2" />
<text  x="384.49" y="95.5" ></text>
</g>
<g >
<title>malloc_consolidate (411 samples, 0.05%)</title><rect x="119.4" y="261" width="0.6" height="15.0" fill="rgb(230,77,48)" rx="2" ry="2" />
<text  x="122.38" y="271.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (6,416 samples, 0.79%)</title><rect x="125.3" y="261" width="9.3" height="15.0" fill="rgb(236,120,41)" rx="2" ry="2" />
<text  x="128.31" y="271.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,769 samples, 0.59%)</title><rect x="407.9" y="69" width="7.0" height="15.0" fill="rgb(239,31,21)" rx="2" ry="2" />
<text  x="410.93" y="79.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (717 samples, 0.09%)</title><rect x="955.5" y="133" width="1.0" height="15.0" fill="rgb(251,226,16)" rx="2" ry="2" />
<text  x="958.51" y="143.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (407 samples, 0.05%)</title><rect x="856.8" y="37" width="0.6" height="15.0" fill="rgb(243,95,25)" rx="2" ry="2" />
<text  x="859.82" y="47.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (470 samples, 0.06%)</title><rect x="255.8" y="53" width="0.7" height="15.0" fill="rgb(213,68,5)" rx="2" ry="2" />
<text  x="258.79" y="63.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,120 samples, 0.14%)</title><rect x="238.1" y="101" width="1.6" height="15.0" fill="rgb(207,153,39)" rx="2" ry="2" />
<text  x="241.10" y="111.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (2,307 samples, 0.28%)</title><rect x="830.8" y="101" width="3.3" height="15.0" fill="rgb(246,145,35)" rx="2" ry="2" />
<text  x="833.76" y="111.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (639 samples, 0.08%)</title><rect x="1059.3" y="101" width="1.0" height="15.0" fill="rgb(239,71,20)" rx="2" ry="2" />
<text  x="1062.34" y="111.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl str&gt;::to_lowercase (696 samples, 0.09%)</title><rect x="198.3" y="181" width="1.0" height="15.0" fill="rgb(210,187,52)" rx="2" ry="2" />
<text  x="201.29" y="191.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_char_category_continuous_length (246 samples, 0.03%)</title><rect x="900.3" y="85" width="0.4" height="15.0" fill="rgb(245,16,17)" rx="2" ry="2" />
<text  x="903.32" y="95.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (648,590 samples, 79.76%)</title><rect x="134.6" y="229" width="941.1" height="15.0" fill="rgb(251,164,10)" rx="2" ry="2" />
<text  x="137.62" y="239.5" >std::sys_common::backtrace::__rust_begin_short_backtrace</text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (228 samples, 0.03%)</title><rect x="933.9" y="165" width="0.3" height="15.0" fill="rgb(250,28,0)" rx="2" ry="2" />
<text  x="936.91" y="175.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (216 samples, 0.03%)</title><rect x="196.5" y="181" width="0.4" height="15.0" fill="rgb(214,25,33)" rx="2" ry="2" />
<text  x="199.54" y="191.5" ></text>
</g>
<g >
<title>sudachi::dic::dictionary::JapaneseDictionary::from_cfg (372 samples, 0.05%)</title><rect x="1074.3" y="197" width="0.5" height="15.0" fill="rgb(252,85,17)" rx="2" ry="2" />
<text  x="1077.28" y="207.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2,245 samples, 0.28%)</title><rect x="317.5" y="117" width="3.3" height="15.0" fill="rgb(218,152,12)" rx="2" ry="2" />
<text  x="320.52" y="127.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2,538 samples, 0.31%)</title><rect x="182.1" y="165" width="3.7" height="15.0" fill="rgb(236,214,31)" rx="2" ry="2" />
<text  x="185.10" y="175.5" ></text>
</g>
<g >
<title>__rust_dealloc (359 samples, 0.04%)</title><rect x="197.7" y="181" width="0.5" height="15.0" fill="rgb(228,169,7)" rx="2" ry="2" />
<text  x="200.72" y="191.5" ></text>
</g>
<g >
<title>sudachi::dic::LoadedDictionary::from_system_dictionary (367 samples, 0.05%)</title><rect x="1074.3" y="181" width="0.5" height="15.0" fill="rgb(231,58,27)" rx="2" ry="2" />
<text  x="1077.28" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (421 samples, 0.05%)</title><rect x="926.3" y="149" width="0.6" height="15.0" fill="rgb(236,1,23)" rx="2" ry="2" />
<text  x="929.31" y="159.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (6,726 samples, 0.83%)</title><rect x="1004.3" y="101" width="9.8" height="15.0" fill="rgb(216,177,50)" rx="2" ry="2" />
<text  x="1007.34" y="111.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (520 samples, 0.06%)</title><rect x="883.5" y="85" width="0.8" height="15.0" fill="rgb(208,74,38)" rx="2" ry="2" />
<text  x="886.53" y="95.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (211 samples, 0.03%)</title><rect x="144.0" y="117" width="0.3" height="15.0" fill="rgb(232,191,47)" rx="2" ry="2" />
<text  x="147.00" y="127.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (365 samples, 0.04%)</title><rect x="263.8" y="69" width="0.6" height="15.0" fill="rgb(231,140,11)" rx="2" ry="2" />
<text  x="266.85" y="79.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_char_category_types (2,314 samples, 0.28%)</title><rect x="900.7" y="85" width="3.3" height="15.0" fill="rgb(252,75,24)" rx="2" ry="2" />
<text  x="903.67" y="95.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (603 samples, 0.07%)</title><rect x="375.3" y="101" width="0.9" height="15.0" fill="rgb(222,6,30)" rx="2" ry="2" />
<text  x="378.33" y="111.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (342 samples, 0.04%)</title><rect x="415.5" y="69" width="0.5" height="15.0" fill="rgb(236,144,41)" rx="2" ry="2" />
<text  x="418.47" y="79.5" ></text>
</g>
<g >
<title>__rdl_realloc (431 samples, 0.05%)</title><rect x="1086.7" y="277" width="0.6" height="15.0" fill="rgb(206,148,13)" rx="2" ry="2" />
<text  x="1089.69" y="287.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (755 samples, 0.09%)</title><rect x="1139.9" y="261" width="1.1" height="15.0" fill="rgb(222,225,11)" rx="2" ry="2" />
<text  x="1142.87" y="271.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (4,166 samples, 0.51%)</title><rect x="824.4" y="69" width="6.1" height="15.0" fill="rgb(245,203,33)" rx="2" ry="2" />
<text  x="827.45" y="79.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (430 samples, 0.05%)</title><rect x="190.3" y="149" width="0.7" height="15.0" fill="rgb(224,51,19)" rx="2" ry="2" />
<text  x="193.35" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (321 samples, 0.04%)</title><rect x="266.9" y="37" width="0.5" height="15.0" fill="rgb(253,21,39)" rx="2" ry="2" />
<text  x="269.90" y="47.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (777 samples, 0.10%)</title><rect x="1036.8" y="69" width="1.1" height="15.0" fill="rgb(242,114,27)" rx="2" ry="2" />
<text  x="1039.80" y="79.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (846 samples, 0.10%)</title><rect x="189.1" y="149" width="1.2" height="15.0" fill="rgb(218,67,8)" rx="2" ry="2" />
<text  x="192.12" y="159.5" ></text>
</g>
<g >
<title>alloc::slice::merge_sort (413 samples, 0.05%)</title><rect x="159.4" y="133" width="0.6" height="15.0" fill="rgb(216,216,10)" rx="2" ry="2" />
<text  x="162.37" y="143.5" ></text>
</g>
<g >
<title>realloc (231 samples, 0.03%)</title><rect x="442.2" y="85" width="0.4" height="15.0" fill="rgb(246,198,14)" rx="2" ry="2" />
<text  x="445.24" y="95.5" ></text>
</g>
<g >
<title>sudachi::lattice::Lattice::insert (434 samples, 0.05%)</title><rect x="216.6" y="133" width="0.7" height="15.0" fill="rgb(212,165,36)" rx="2" ry="2" />
<text  x="219.64" y="143.5" ></text>
</g>
<g >
<title>malloc (285 samples, 0.04%)</title><rect x="914.2" y="181" width="0.4" height="15.0" fill="rgb(217,109,37)" rx="2" ry="2" />
<text  x="917.23" y="191.5" ></text>
</g>
<g >
<title>malloc (1,045 samples, 0.13%)</title><rect x="891.0" y="85" width="1.5" height="15.0" fill="rgb(217,135,54)" rx="2" ry="2" />
<text  x="893.98" y="95.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,461 samples, 0.18%)</title><rect x="948.6" y="133" width="2.1" height="15.0" fill="rgb(222,118,14)" rx="2" ry="2" />
<text  x="951.59" y="143.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (865 samples, 0.11%)</title><rect x="865.8" y="37" width="1.2" height="15.0" fill="rgb(210,5,49)" rx="2" ry="2" />
<text  x="868.78" y="47.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4,306 samples, 0.53%)</title><rect x="436.3" y="101" width="6.3" height="15.0" fill="rgb(251,142,10)" rx="2" ry="2" />
<text  x="439.32" y="111.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (6,006 samples, 0.74%)</title><rect x="1126.5" y="277" width="8.7" height="15.0" fill="rgb(236,2,15)" rx="2" ry="2" />
<text  x="1129.46" y="287.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (7,166 samples, 0.88%)</title><rect x="203.2" y="133" width="10.4" height="15.0" fill="rgb(248,47,46)" rx="2" ry="2" />
<text  x="206.22" y="143.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (2,194 samples, 0.27%)</title><rect x="864.9" y="69" width="3.2" height="15.0" fill="rgb(250,30,50)" rx="2" ry="2" />
<text  x="867.90" y="79.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_fully_decomposed (490 samples, 0.06%)</title><rect x="161.3" y="133" width="0.7" height="15.0" fill="rgb(207,44,8)" rx="2" ry="2" />
<text  x="164.26" y="143.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_char_category_types_range (3,342 samples, 0.41%)</title><rect x="240.0" y="101" width="4.8" height="15.0" fill="rgb(252,163,44)" rx="2" ry="2" />
<text  x="242.96" y="111.5" ></text>
</g>
<g >
<title>sudachi (813,198 samples, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(254,131,50)" rx="2" ry="2" />
<text  x="13.02" y="303.5" >sudachi</text>
</g>
<g >
<title>alloc::string::String::push (291 samples, 0.04%)</title><rect x="861.1" y="53" width="0.4" height="15.0" fill="rgb(235,212,52)" rx="2" ry="2" />
<text  x="864.12" y="63.5" ></text>
</g>
<g >
<title>__rdl_alloc (269 samples, 0.03%)</title><rect x="857.7" y="53" width="0.4" height="15.0" fill="rgb(244,36,16)" rx="2" ry="2" />
<text  x="860.68" y="63.5" ></text>
</g>
<g >
<title>__fget_light (256 samples, 0.03%)</title><rect x="141.9" y="101" width="0.4" height="15.0" fill="rgb(249,86,46)" rx="2" ry="2" />
<text  x="144.91" y="111.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::can_bow (2,165 samples, 0.27%)</title><rect x="416.1" y="117" width="3.2" height="15.0" fill="rgb(247,57,17)" rx="2" ry="2" />
<text  x="419.15" y="127.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (650 samples, 0.08%)</title><rect x="235.9" y="101" width="1.0" height="15.0" fill="rgb(219,4,52)" rx="2" ry="2" />
<text  x="238.92" y="111.5" ></text>
</g>
<g >
<title>malloc (216 samples, 0.03%)</title><rect x="401.7" y="53" width="0.4" height="15.0" fill="rgb(220,120,8)" rx="2" ry="2" />
<text  x="404.75" y="63.5" ></text>
</g>
<g >
<title>core::iter::adapters::process_results (11,274 samples, 1.39%)</title><rect x="300.2" y="117" width="16.4" height="15.0" fill="rgb(229,138,44)" rx="2" ry="2" />
<text  x="303.21" y="127.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::common_prefix_search (12,843 samples, 1.58%)</title><rect x="387.5" y="85" width="18.6" height="15.0" fill="rgb(242,41,37)" rx="2" ry="2" />
<text  x="390.46" y="95.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (297 samples, 0.04%)</title><rect x="230.5" y="117" width="0.4" height="15.0" fill="rgb(242,202,33)" rx="2" ry="2" />
<text  x="233.46" y="127.5" ></text>
</g>
<g >
<title>sudachi::morpheme::Morpheme::pos (424 samples, 0.05%)</title><rect x="1074.9" y="197" width="0.7" height="15.0" fill="rgb(210,82,0)" rx="2" ry="2" />
<text  x="1077.94" y="207.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (49,633 samples, 6.10%)</title><rect x="752.2" y="53" width="72.0" height="15.0" fill="rgb(233,33,13)" rx="2" ry="2" />
<text  x="755.22" y="63.5" >&lt;std::co..</text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,637 samples, 0.20%)</title><rect x="880.3" y="85" width="2.4" height="15.0" fill="rgb(247,202,0)" rx="2" ry="2" />
<text  x="883.34" y="95.5" ></text>
</g>
<g >
<title>_int_malloc (3,779 samples, 0.46%)</title><rect x="1110.4" y="277" width="5.5" height="15.0" fill="rgb(209,86,42)" rx="2" ry="2" />
<text  x="1113.39" y="287.5" ></text>
</g>
<g >
<title>alloc::string::String::replace_range (313 samples, 0.04%)</title><rect x="179.0" y="149" width="0.5" height="15.0" fill="rgb(254,56,19)" rx="2" ry="2" />
<text  x="182.00" y="159.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (9,473 samples, 1.16%)</title><rect x="152.6" y="165" width="13.8" height="15.0" fill="rgb(233,227,4)" rx="2" ry="2" />
<text  x="155.65" y="175.5" ></text>
</g>
<g >
<title>std::rt::lang_start_internal (648,590 samples, 79.76%)</title><rect x="134.6" y="261" width="941.1" height="15.0" fill="rgb(254,89,48)" rx="2" ry="2" />
<text  x="137.62" y="271.5" >std::rt::lang_start_internal</text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (744 samples, 0.09%)</title><rect x="930.4" y="133" width="1.1" height="15.0" fill="rgb(248,80,43)" rx="2" ry="2" />
<text  x="933.45" y="143.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (261 samples, 0.03%)</title><rect x="262.2" y="85" width="0.3" height="15.0" fill="rgb(230,2,40)" rx="2" ry="2" />
<text  x="265.16" y="95.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (36,320 samples, 4.47%)</title><rect x="580.7" y="69" width="52.7" height="15.0" fill="rgb(240,189,34)" rx="2" ry="2" />
<text  x="583.72" y="79.5" >&lt;F as..</text>
</g>
<g >
<title>_int_realloc (3,605 samples, 0.44%)</title><rect x="1115.9" y="277" width="5.2" height="15.0" fill="rgb(220,195,40)" rx="2" ry="2" />
<text  x="1118.87" y="287.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (412 samples, 0.05%)</title><rect x="369.0" y="69" width="0.6" height="15.0" fill="rgb(249,72,40)" rx="2" ry="2" />
<text  x="371.98" y="79.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (246 samples, 0.03%)</title><rect x="145.7" y="181" width="0.4" height="15.0" fill="rgb(218,70,33)" rx="2" ry="2" />
<text  x="148.73" y="191.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup (12,373 samples, 1.52%)</title><rect x="1048.5" y="133" width="18.0" height="15.0" fill="rgb(254,19,29)" rx="2" ry="2" />
<text  x="1051.55" y="143.5" ></text>
</g>
<g >
<title>[unknown] (84,955 samples, 10.45%)</title><rect x="11.3" y="277" width="123.3" height="15.0" fill="rgb(226,156,30)" rx="2" ry="2" />
<text  x="14.35" y="287.5" >[unknown]</text>
</g>
<g >
<title>malloc (18,433 samples, 2.27%)</title><rect x="1141.7" y="277" width="26.8" height="15.0" fill="rgb(216,111,6)" rx="2" ry="2" />
<text  x="1144.71" y="287.5" >m..</text>
</g>
<g >
<title>malloc_consolidate (11,497 samples, 1.41%)</title><rect x="1168.5" y="277" width="16.6" height="15.0" fill="rgb(251,222,53)" rx="2" ry="2" />
<text  x="1171.45" y="287.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (333 samples, 0.04%)</title><rect x="1074.3" y="117" width="0.5" height="15.0" fill="rgb(249,70,30)" rx="2" ry="2" />
<text  x="1077.30" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (534 samples, 0.07%)</title><rect x="384.7" y="69" width="0.7" height="15.0" fill="rgb(216,80,1)" rx="2" ry="2" />
<text  x="387.65" y="79.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find (4,241 samples, 0.52%)</title><rect x="1014.1" y="101" width="6.2" height="15.0" fill="rgb(209,18,6)" rx="2" ry="2" />
<text  x="1017.12" y="111.5" ></text>
</g>
<g >
<title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (5,901 samples, 0.73%)</title><rect x="155.2" y="149" width="8.5" height="15.0" fill="rgb(212,177,37)" rx="2" ry="2" />
<text  x="158.18" y="159.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,265 samples, 0.16%)</title><rect x="886.1" y="85" width="1.8" height="15.0" fill="rgb(206,49,24)" rx="2" ry="2" />
<text  x="889.08" y="95.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (352 samples, 0.04%)</title><rect x="369.6" y="101" width="0.5" height="15.0" fill="rgb(212,28,38)" rx="2" ry="2" />
<text  x="372.58" y="111.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,182 samples, 0.15%)</title><rect x="262.7" y="85" width="1.7" height="15.0" fill="rgb(220,155,26)" rx="2" ry="2" />
<text  x="265.66" y="95.5" ></text>
</g>
<g >
<title>sudachi::lattice::Lattice::connect_node (341 samples, 0.04%)</title><rect x="423.6" y="117" width="0.5" height="15.0" fill="rgb(240,50,2)" rx="2" ry="2" />
<text  x="426.57" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,898 samples, 0.23%)</title><rect x="399.3" y="69" width="2.8" height="15.0" fill="rgb(248,96,53)" rx="2" ry="2" />
<text  x="402.31" y="79.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,307 samples, 0.28%)</title><rect x="1062.7" y="101" width="3.4" height="15.0" fill="rgb(231,63,49)" rx="2" ry="2" />
<text  x="1065.72" y="111.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (320 samples, 0.04%)</title><rect x="932.4" y="165" width="0.5" height="15.0" fill="rgb(247,82,19)" rx="2" ry="2" />
<text  x="935.44" y="175.5" ></text>
</g>
<g >
<title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,027 samples, 0.13%)</title><rect x="139.8" y="197" width="1.5" height="15.0" fill="rgb(214,3,45)" rx="2" ry="2" />
<text  x="142.85" y="207.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (436 samples, 0.05%)</title><rect x="165.1" y="149" width="0.6" height="15.0" fill="rgb(238,10,27)" rx="2" ry="2" />
<text  x="168.06" y="159.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,778 samples, 0.22%)</title><rect x="906.0" y="101" width="2.6" height="15.0" fill="rgb(234,113,3)" rx="2" ry="2" />
<text  x="908.97" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,819 samples, 0.22%)</title><rect x="141.7" y="149" width="2.7" height="15.0" fill="rgb(220,164,33)" rx="2" ry="2" />
<text  x="144.72" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (281 samples, 0.03%)</title><rect x="1059.7" y="85" width="0.4" height="15.0" fill="rgb(213,48,11)" rx="2" ry="2" />
<text  x="1062.74" y="95.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (257 samples, 0.03%)</title><rect x="256.5" y="69" width="0.4" height="15.0" fill="rgb(224,221,31)" rx="2" ry="2" />
<text  x="259.53" y="79.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (942 samples, 0.12%)</title><rect x="838.4" y="85" width="1.4" height="15.0" fill="rgb(240,206,52)" rx="2" ry="2" />
<text  x="841.43" y="95.5" ></text>
</g>
<g >
<title>all (813,214 samples, 100%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(224,65,0)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,206 samples, 0.15%)</title><rect x="242.9" y="85" width="1.8" height="15.0" fill="rgb(248,178,29)" rx="2" ry="2" />
<text  x="245.92" y="95.5" ></text>
</g>
<g >
<title>&lt; (1,690 samples, 0.21%)</title><rect x="865.5" y="53" width="2.4" height="15.0" fill="rgb(245,125,13)" rx="2" ry="2" />
<text  x="868.45" y="63.5" ></text>
</g>
<g >
<title>__fdget_pos (272 samples, 0.03%)</title><rect x="141.9" y="117" width="0.4" height="15.0" fill="rgb(224,84,39)" rx="2" ry="2" />
<text  x="144.88" y="127.5" ></text>
</g>
<g >
<title>_int_free (21,778 samples, 2.68%)</title><rect x="13.7" y="261" width="31.6" height="15.0" fill="rgb(244,17,33)" rx="2" ry="2" />
<text  x="16.68" y="271.5" >_i..</text>
</g>
<g >
<title>__rdl_alloc (595 samples, 0.07%)</title><rect x="887.9" y="85" width="0.9" height="15.0" fill="rgb(237,123,18)" rx="2" ry="2" />
<text  x="890.91" y="95.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (262 samples, 0.03%)</title><rect x="872.2" y="101" width="0.4" height="15.0" fill="rgb(227,130,26)" rx="2" ry="2" />
<text  x="875.17" y="111.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (422 samples, 0.05%)</title><rect x="908.8" y="101" width="0.6" height="15.0" fill="rgb(239,111,25)" rx="2" ry="2" />
<text  x="911.82" y="111.5" ></text>
</g>
<g >
<title>sudachi::lattice::Lattice::get_best_path (2,611 samples, 0.32%)</title><rect x="424.1" y="117" width="3.8" height="15.0" fill="rgb(213,128,23)" rx="2" ry="2" />
<text  x="427.07" y="127.5" ></text>
</g>
<g >
<title>_int_malloc (49,618 samples, 6.10%)</title><rect x="45.3" y="261" width="72.0" height="15.0" fill="rgb(207,15,8)" rx="2" ry="2" />
<text  x="48.28" y="271.5" >_int_mal..</text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (454 samples, 0.06%)</title><rect x="239.1" y="85" width="0.6" height="15.0" fill="rgb(226,65,40)" rx="2" ry="2" />
<text  x="242.07" y="95.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (429 samples, 0.05%)</title><rect x="261.4" y="85" width="0.7" height="15.0" fill="rgb(206,3,46)" rx="2" ry="2" />
<text  x="264.45" y="95.5" ></text>
</g>
<g >
<title>sudachi::lattice::node::Node::new_oov (221 samples, 0.03%)</title><rect x="904.9" y="85" width="0.3" height="15.0" fill="rgb(212,171,18)" rx="2" ry="2" />
<text  x="907.90" y="95.5" ></text>
</g>
<g >
<title>[unknown] (233 samples, 0.03%)</title><rect x="11.4" y="229" width="0.3" height="15.0" fill="rgb(219,182,7)" rx="2" ry="2" />
<text  x="14.38" y="239.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (557 samples, 0.07%)</title><rect x="339.7" y="69" width="0.8" height="15.0" fill="rgb(245,117,53)" rx="2" ry="2" />
<text  x="342.73" y="79.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (790 samples, 0.10%)</title><rect x="1018.9" y="69" width="1.1" height="15.0" fill="rgb(231,86,15)" rx="2" ry="2" />
<text  x="1021.89" y="79.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (295 samples, 0.04%)</title><rect x="913.5" y="181" width="0.4" height="15.0" fill="rgb(239,48,51)" rx="2" ry="2" />
<text  x="916.45" y="191.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::stateless_tokeniser::DictionaryAccess&gt;::lexicon (328 samples, 0.04%)</title><rect x="268.3" y="117" width="0.5" height="15.0" fill="rgb(243,225,2)" rx="2" ry="2" />
<text  x="271.31" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,853 samples, 0.23%)</title><rect x="141.7" y="165" width="2.7" height="15.0" fill="rgb(226,30,47)" rx="2" ry="2" />
<text  x="144.68" y="175.5" ></text>
</g>
<g >
<title>&lt;simple_oov::SimpleOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (412 samples, 0.05%)</title><rect x="905.2" y="101" width="0.6" height="15.0" fill="rgb(252,133,44)" rx="2" ry="2" />
<text  x="908.22" y="111.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (235 samples, 0.03%)</title><rect x="956.7" y="149" width="0.4" height="15.0" fill="rgb(251,43,41)" rx="2" ry="2" />
<text  x="959.72" y="159.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1,045 samples, 0.13%)</title><rect x="969.0" y="149" width="1.5" height="15.0" fill="rgb(219,0,33)" rx="2" ry="2" />
<text  x="972.03" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (585 samples, 0.07%)</title><rect x="171.4" y="165" width="0.9" height="15.0" fill="rgb(205,17,16)" rx="2" ry="2" />
<text  x="174.44" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (283 samples, 0.03%)</title><rect x="890.3" y="69" width="0.4" height="15.0" fill="rgb(216,179,54)" rx="2" ry="2" />
<text  x="893.28" y="79.5" ></text>
</g>
<g >
<title>sudachi::main (646,669 samples, 79.52%)</title><rect x="137.3" y="213" width="938.3" height="15.0" fill="rgb(236,3,5)" rx="2" ry="2" />
<text  x="140.29" y="223.5" >sudachi::main</text>
</g>
<g >
<title>join_numeric::numeric_parser::NumericParser::new (4,935 samples, 0.61%)</title><rect x="252.2" y="101" width="7.1" height="15.0" fill="rgb(214,28,20)" rx="2" ry="2" />
<text  x="255.18" y="111.5" ></text>
</g>
<g >
<title>realloc (409 samples, 0.05%)</title><rect x="12.7" y="245" width="0.6" height="15.0" fill="rgb(209,42,44)" rx="2" ry="2" />
<text  x="15.69" y="255.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (313 samples, 0.04%)</title><rect x="932.9" y="165" width="0.5" height="15.0" fill="rgb(220,181,27)" rx="2" ry="2" />
<text  x="935.94" y="175.5" ></text>
</g>
<g >
<title>realloc (254 samples, 0.03%)</title><rect x="1185.1" y="277" width="0.4" height="15.0" fill="rgb(208,155,31)" rx="2" ry="2" />
<text  x="1188.14" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (231,741 samples, 28.50%)</title><rect x="494.2" y="85" width="336.3" height="15.0" fill="rgb(236,49,18)" rx="2" ry="2" />
<text  x="497.23" y="95.5" >sudachi::dic::grammar::Grammar::get_connect_c..</text>
</g>
<g >
<title>&lt;prolonged_sound_mark::ProlongedSoundMarkPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite (2,748 samples, 0.34%)</title><rect x="191.5" y="181" width="4.0" height="15.0" fill="rgb(225,35,21)" rx="2" ry="2" />
<text  x="194.50" y="191.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (308 samples, 0.04%)</title><rect x="143.9" y="133" width="0.5" height="15.0" fill="rgb(211,127,40)" rx="2" ry="2" />
<text  x="146.92" y="143.5" ></text>
</g>
<g >
<title>std::io::BufRead::read_line (936 samples, 0.12%)</title><rect x="139.9" y="181" width="1.4" height="15.0" fill="rgb(249,113,37)" rx="2" ry="2" />
<text  x="142.93" y="191.5" ></text>
</g>
<g >
<title>std::io::append_to_string (801 samples, 0.10%)</title><rect x="140.1" y="165" width="1.2" height="15.0" fill="rgb(239,228,2)" rx="2" ry="2" />
<text  x="143.09" y="175.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (357 samples, 0.04%)</title><rect x="933.4" y="165" width="0.5" height="15.0" fill="rgb(211,79,43)" rx="2" ry="2" />
<text  x="936.39" y="175.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (249 samples, 0.03%)</title><rect x="370.1" y="101" width="0.4" height="15.0" fill="rgb(213,30,42)" rx="2" ry="2" />
<text  x="373.09" y="111.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (3,064 samples, 0.38%)</title><rect x="1185.6" y="277" width="4.4" height="15.0" fill="rgb(219,227,39)" rx="2" ry="2" />
<text  x="1188.55" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (1,236 samples, 0.15%)</title><rect x="884.3" y="85" width="1.8" height="15.0" fill="rgb(243,197,32)" rx="2" ry="2" />
<text  x="887.28" y="95.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (936 samples, 0.12%)</title><rect x="901.6" y="69" width="1.3" height="15.0" fill="rgb(253,84,24)" rx="2" ry="2" />
<text  x="904.56" y="79.5" ></text>
</g>
<g >
<title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h838d3d2c8f3474dc (648,590 samples, 79.76%)</title><rect x="134.6" y="245" width="941.1" height="15.0" fill="rgb(225,170,29)" rx="2" ry="2" />
<text  x="137.62" y="255.5" >std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h838d3d2c8f3474dc</text>
</g>
<g >
<title>sudachi::lattice::Lattice::insert (277,398 samples, 34.11%)</title><rect x="428.0" y="117" width="402.5" height="15.0" fill="rgb(243,144,48)" rx="2" ry="2" />
<text  x="430.98" y="127.5" >sudachi::lattice::Lattice::insert</text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::slice (2,780 samples, 0.34%)</title><rect x="959.9" y="165" width="4.0" height="15.0" fill="rgb(205,162,14)" rx="2" ry="2" />
<text  x="962.90" y="175.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (561 samples, 0.07%)</title><rect x="422.8" y="101" width="0.8" height="15.0" fill="rgb(241,190,20)" rx="2" ry="2" />
<text  x="425.76" y="111.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::get_connect_cost (2,747 samples, 0.34%)</title><rect x="442.8" y="101" width="4.0" height="15.0" fill="rgb(241,27,32)" rx="2" ry="2" />
<text  x="445.82" y="111.5" ></text>
</g>
<g >
<title>sudachi::dic::DictionaryLoader::read_dictionary (367 samples, 0.05%)</title><rect x="1074.3" y="149" width="0.5" height="15.0" fill="rgb(220,213,4)" rx="2" ry="2" />
<text  x="1077.28" y="159.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,145 samples, 0.26%)</title><rect x="485.4" y="85" width="3.1" height="15.0" fill="rgb(215,9,29)" rx="2" ry="2" />
<text  x="488.42" y="95.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (255 samples, 0.03%)</title><rect x="863.3" y="69" width="0.4" height="15.0" fill="rgb(209,77,41)" rx="2" ry="2" />
<text  x="866.31" y="79.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,198 samples, 0.15%)</title><rect x="440.2" y="85" width="1.7" height="15.0" fill="rgb(223,180,11)" rx="2" ry="2" />
<text  x="443.18" y="95.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9,495 samples, 1.17%)</title><rect x="918.7" y="165" width="13.7" height="15.0" fill="rgb(206,197,37)" rx="2" ry="2" />
<text  x="921.66" y="175.5" ></text>
</g>
<g >
<title>__rdl_alloc (359 samples, 0.04%)</title><rect x="196.9" y="181" width="0.5" height="15.0" fill="rgb(215,93,1)" rx="2" ry="2" />
<text  x="199.85" y="191.5" ></text>
</g>
<g >
<title>malloc (505 samples, 0.06%)</title><rect x="862.2" y="53" width="0.7" height="15.0" fill="rgb(247,207,28)" rx="2" ry="2" />
<text  x="865.18" y="63.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (620 samples, 0.08%)</title><rect x="180.7" y="165" width="0.9" height="15.0" fill="rgb(232,171,51)" rx="2" ry="2" />
<text  x="183.75" y="175.5" ></text>
</g>
<g >
<title>core::iter::adapters::process_results (488,481 samples, 60.07%)</title><rect x="201.6" y="181" width="708.8" height="15.0" fill="rgb(215,112,21)" rx="2" ry="2" />
<text  x="204.65" y="191.5" >core::iter::adapters::process_results</text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (488,161 samples, 60.03%)</title><rect x="201.9" y="149" width="708.4" height="15.0" fill="rgb(229,129,6)" rx="2" ry="2" />
<text  x="204.92" y="159.5" >&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold</text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (884 samples, 0.11%)</title><rect x="160.0" y="133" width="1.3" height="15.0" fill="rgb(213,86,15)" rx="2" ry="2" />
<text  x="162.98" y="143.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::compatibility_fully_decomposed (1,199 samples, 0.15%)</title><rect x="162.0" y="133" width="1.7" height="15.0" fill="rgb(242,148,25)" rx="2" ry="2" />
<text  x="164.97" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (768 samples, 0.09%)</title><rect x="1121.1" y="277" width="1.1" height="15.0" fill="rgb(207,11,30)" rx="2" ry="2" />
<text  x="1124.10" y="287.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (7,521 samples, 0.92%)</title><rect x="1075.7" y="277" width="11.0" height="15.0" fill="rgb(213,95,23)" rx="2" ry="2" />
<text  x="1078.75" y="287.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (2,430 samples, 0.30%)</title><rect x="1033.3" y="69" width="3.5" height="15.0" fill="rgb(225,228,27)" rx="2" ry="2" />
<text  x="1036.26" y="79.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (7,577 samples, 0.93%)</title><rect x="934.7" y="165" width="11.0" height="15.0" fill="rgb(225,5,10)" rx="2" ry="2" />
<text  x="937.69" y="175.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (236 samples, 0.03%)</title><rect x="1048.2" y="133" width="0.3" height="15.0" fill="rgb(220,143,29)" rx="2" ry="2" />
<text  x="1051.20" y="143.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (787 samples, 0.10%)</title><rect x="1032.1" y="69" width="1.2" height="15.0" fill="rgb(223,52,9)" rx="2" ry="2" />
<text  x="1035.11" y="79.5" ></text>
</g>
<g >
<title>mecab_oov::MeCabOovPlugin::get_oov_node (5,388 samples, 0.66%)</title><rect x="892.5" y="85" width="7.8" height="15.0" fill="rgb(246,130,21)" rx="2" ry="2" />
<text  x="895.50" y="95.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (435 samples, 0.05%)</title><rect x="882.7" y="85" width="0.6" height="15.0" fill="rgb(227,36,25)" rx="2" ry="2" />
<text  x="885.71" y="95.5" ></text>
</g>
<g >
<title>[unknown] (222 samples, 0.03%)</title><rect x="11.4" y="213" width="0.3" height="15.0" fill="rgb(215,12,16)" rx="2" ry="2" />
<text  x="14.38" y="223.5" ></text>
</g>
<g >
<title>[unknown] (793 samples, 0.10%)</title><rect x="11.4" y="245" width="1.1" height="15.0" fill="rgb(222,84,1)" rx="2" ry="2" />
<text  x="14.38" y="255.5" ></text>
</g>
<g >
<title>sudachi::lattice::node::Node::new (1,015 samples, 0.12%)</title><rect x="868.1" y="117" width="1.5" height="15.0" fill="rgb(247,124,4)" rx="2" ry="2" />
<text  x="871.09" y="127.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (1,154 samples, 0.14%)</title><rect x="1060.3" y="101" width="1.7" height="15.0" fill="rgb(237,211,23)" rx="2" ry="2" />
<text  x="1063.31" y="111.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (787 samples, 0.10%)</title><rect x="1066.7" y="197" width="1.1" height="15.0" fill="rgb(209,166,26)" rx="2" ry="2" />
<text  x="1069.66" y="207.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (798 samples, 0.10%)</title><rect x="426.1" y="101" width="1.2" height="15.0" fill="rgb(224,50,13)" rx="2" ry="2" />
<text  x="429.11" y="111.5" ></text>
</g>
<g >
<title>join_numeric::JoinNumericPlugin::concat (739 samples, 0.09%)</title><rect x="250.7" y="101" width="1.0" height="15.0" fill="rgb(246,226,4)" rx="2" ry="2" />
<text  x="253.66" y="111.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (642 samples, 0.08%)</title><rect x="143.0" y="133" width="0.9" height="15.0" fill="rgb(232,60,44)" rx="2" ry="2" />
<text  x="145.99" y="143.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (4,015 samples, 0.49%)</title><rect x="1014.5" y="85" width="5.8" height="15.0" fill="rgb(221,90,52)" rx="2" ry="2" />
<text  x="1017.45" y="95.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::is_match (251 samples, 0.03%)</title><rect x="1045.9" y="149" width="0.4" height="15.0" fill="rgb(250,184,38)" rx="2" ry="2" />
<text  x="1048.90" y="159.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (813 samples, 0.10%)</title><rect x="420.2" y="101" width="1.2" height="15.0" fill="rgb(240,19,25)" rx="2" ry="2" />
<text  x="423.22" y="111.5" ></text>
</g>
<g >
<title>sudachi::lattice::node::Node::new (341 samples, 0.04%)</title><rect x="217.4" y="133" width="0.5" height="15.0" fill="rgb(254,128,51)" rx="2" ry="2" />
<text  x="220.44" y="143.5" ></text>
</g>
<g >
<title>alloc::string::String::push (2,148 samples, 0.26%)</title><rect x="1123.3" y="277" width="3.2" height="15.0" fill="rgb(212,140,9)" rx="2" ry="2" />
<text  x="1126.34" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (261 samples, 0.03%)</title><rect x="1051.8" y="101" width="0.3" height="15.0" fill="rgb(235,117,8)" rx="2" ry="2" />
<text  x="1054.77" y="111.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (19,519 samples, 2.40%)</title><rect x="268.9" y="117" width="28.3" height="15.0" fill="rgb(217,121,4)" rx="2" ry="2" />
<text  x="271.88" y="127.5" >__..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (883 samples, 0.11%)</title><rect x="266.1" y="53" width="1.3" height="15.0" fill="rgb(247,160,6)" rx="2" ry="2" />
<text  x="269.15" y="63.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (540 samples, 0.07%)</title><rect x="949.8" y="117" width="0.8" height="15.0" fill="rgb(246,45,18)" rx="2" ry="2" />
<text  x="952.81" y="127.5" ></text>
</g>
<g >
<title>sudachi::stateless_tokeniser::split_sentences (74,581 samples, 9.17%)</title><rect x="958.4" y="181" width="108.3" height="15.0" fill="rgb(228,81,41)" rx="2" ry="2" />
<text  x="961.44" y="191.5" >sudachi::stat..</text>
</g>
<g >
<title>hashbrown::map::make_hash (7,363 samples, 0.91%)</title><rect x="340.6" y="69" width="10.6" height="15.0" fill="rgb(217,95,34)" rx="2" ry="2" />
<text  x="343.55" y="79.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (443 samples, 0.05%)</title><rect x="1071.5" y="197" width="0.6" height="15.0" fill="rgb(214,20,7)" rx="2" ry="2" />
<text  x="1074.45" y="207.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (15,140 samples, 1.86%)</title><rect x="329.7" y="85" width="21.9" height="15.0" fill="rgb(247,177,5)" rx="2" ry="2" />
<text  x="332.67" y="95.5" >s..</text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::PathRewritePlugin::concatenate (550 samples, 0.07%)</title><rect x="250.9" y="85" width="0.8" height="15.0" fill="rgb(210,210,23)" rx="2" ry="2" />
<text  x="253.94" y="95.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (453 samples, 0.06%)</title><rect x="1052.3" y="117" width="0.7" height="15.0" fill="rgb(227,29,36)" rx="2" ry="2" />
<text  x="1055.33" y="127.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (1,032 samples, 0.13%)</title><rect x="367.5" y="53" width="1.5" height="15.0" fill="rgb(207,19,21)" rx="2" ry="2" />
<text  x="370.48" y="63.5" ></text>
</g>
<g >
<title>&lt;mecab_oov::MeCabOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (22,450 samples, 2.76%)</title><rect x="872.6" y="101" width="32.6" height="15.0" fill="rgb(223,19,43)" rx="2" ry="2" />
<text  x="875.64" y="111.5" >&lt;m..</text>
</g>
<g >
<title>nom::number::complete::le_u32 (1,072 samples, 0.13%)</title><rect x="413.3" y="53" width="1.6" height="15.0" fill="rgb(243,60,45)" rx="2" ry="2" />
<text  x="416.30" y="63.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8 (503 samples, 0.06%)</title><rect x="1141.0" y="277" width="0.7" height="15.0" fill="rgb(237,1,37)" rx="2" ry="2" />
<text  x="1143.97" y="287.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,347 samples, 0.29%)</title><rect x="336.3" y="69" width="3.4" height="15.0" fill="rgb(242,10,11)" rx="2" ry="2" />
<text  x="339.33" y="79.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::find_from_pos (48,593 samples, 5.98%)</title><rect x="974.3" y="133" width="70.5" height="15.0" fill="rgb(239,216,4)" rx="2" ry="2" />
<text  x="977.28" y="143.5" >fancy_r..</text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (376 samples, 0.05%)</title><rect x="962.8" y="149" width="0.6" height="15.0" fill="rgb(234,219,9)" rx="2" ry="2" />
<text  x="965.81" y="159.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (641 samples, 0.08%)</title><rect x="166.4" y="165" width="0.9" height="15.0" fill="rgb(229,164,11)" rx="2" ry="2" />
<text  x="169.39" y="175.5" ></text>
</g>
<g >
<title>sudachi::lattice::node::Node::new_oov (929 samples, 0.11%)</title><rect x="899.0" y="69" width="1.3" height="15.0" fill="rgb(226,43,46)" rx="2" ry="2" />
<text  x="901.97" y="79.5" ></text>
</g>
<g >
<title>sudachi::stateless_tokeniser::tokenize_input_text (476,809 samples, 58.63%)</title><rect x="218.4" y="133" width="691.9" height="15.0" fill="rgb(248,228,22)" rx="2" ry="2" />
<text  x="221.39" y="143.5" >sudachi::stateless_tokeniser::tokenize_input_text</text>
</g>
<g >
<title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt; (2,157 samples, 0.27%)</title><rect x="253.9" y="85" width="3.1" height="15.0" fill="rgb(217,26,38)" rx="2" ry="2" />
<text  x="256.85" y="95.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::OovProviderPlugin::get_oov (27,956 samples, 3.44%)</title><rect x="869.7" y="117" width="40.6" height="15.0" fill="rgb(231,85,10)" rx="2" ry="2" />
<text  x="872.69" y="127.5" >sud..</text>
</g>
<g >
<title>core::fmt::write (3,088 samples, 0.38%)</title><rect x="1136.5" y="277" width="4.5" height="15.0" fill="rgb(227,121,45)" rx="2" ry="2" />
<text  x="1139.49" y="287.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (764 samples, 0.09%)</title><rect x="213.8" y="133" width="1.1" height="15.0" fill="rgb(206,158,47)" rx="2" ry="2" />
<text  x="216.84" y="143.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3,544 samples, 0.44%)</title><rect x="172.4" y="165" width="5.1" height="15.0" fill="rgb(236,202,15)" rx="2" ry="2" />
<text  x="175.36" y="175.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (126,265 samples, 15.53%)</title><rect x="641.2" y="69" width="183.2" height="15.0" fill="rgb(238,202,10)" rx="2" ry="2" />
<text  x="644.23" y="79.5" >hashbrown::map::make_hash</text>
</g>
<g >
<title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (2,509 samples, 0.31%)</title><rect x="141.3" y="197" width="3.7" height="15.0" fill="rgb(242,73,14)" rx="2" ry="2" />
<text  x="144.34" y="207.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (275 samples, 0.03%)</title><rect x="136.7" y="213" width="0.4" height="15.0" fill="rgb(245,65,24)" rx="2" ry="2" />
<text  x="139.66" y="223.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1,850 samples, 0.23%)</title><rect x="971.3" y="101" width="2.7" height="15.0" fill="rgb(237,144,34)" rx="2" ry="2" />
<text  x="974.32" y="111.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (792 samples, 0.10%)</title><rect x="243.5" y="69" width="1.1" height="15.0" fill="rgb(253,130,2)" rx="2" ry="2" />
<text  x="246.48" y="79.5" ></text>
</g>
<g >
<title>malloc (225 samples, 0.03%)</title><rect x="840.2" y="85" width="0.3" height="15.0" fill="rgb(254,178,26)" rx="2" ry="2" />
<text  x="843.20" y="95.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1,271 samples, 0.16%)</title><rect x="265.6" y="69" width="1.9" height="15.0" fill="rgb(253,189,31)" rx="2" ry="2" />
<text  x="268.63" y="79.5" ></text>
</g>
<g >
<title>__tls_get_addr (291 samples, 0.04%)</title><rect x="257.0" y="85" width="0.5" height="15.0" fill="rgb(215,39,22)" rx="2" ry="2" />
<text  x="260.05" y="95.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (305 samples, 0.04%)</title><rect x="902.9" y="69" width="0.5" height="15.0" fill="rgb(205,32,4)" rx="2" ry="2" />
<text  x="905.92" y="79.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,081 samples, 0.13%)</title><rect x="1050.7" y="117" width="1.6" height="15.0" fill="rgb(219,176,4)" rx="2" ry="2" />
<text  x="1053.68" y="127.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (280 samples, 0.03%)</title><rect x="196.1" y="181" width="0.4" height="15.0" fill="rgb(254,70,6)" rx="2" ry="2" />
<text  x="199.12" y="191.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,986 samples, 0.49%)</title><rect x="355.4" y="69" width="5.8" height="15.0" fill="rgb(210,20,51)" rx="2" ry="2" />
<text  x="358.42" y="79.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (2,350 samples, 0.29%)</title><rect x="942.3" y="149" width="3.4" height="15.0" fill="rgb(251,188,38)" rx="2" ry="2" />
<text  x="945.26" y="159.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (15,719 samples, 1.93%)</title><rect x="1021.2" y="85" width="22.8" height="15.0" fill="rgb(252,78,14)" rx="2" ry="2" />
<text  x="1024.22" y="95.5" >r..</text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (18,991 samples, 2.34%)</title><rect x="840.5" y="85" width="27.6" height="15.0" fill="rgb(236,135,13)" rx="2" ry="2" />
<text  x="843.53" y="95.5" >s..</text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (267 samples, 0.03%)</title><rect x="164.3" y="133" width="0.4" height="15.0" fill="rgb(253,94,54)" rx="2" ry="2" />
<text  x="167.27" y="143.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_right_id (5,614 samples, 0.69%)</title><rect x="361.4" y="85" width="8.2" height="15.0" fill="rgb(251,38,51)" rx="2" ry="2" />
<text  x="364.44" y="95.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (911 samples, 0.11%)</title><rect x="338.4" y="53" width="1.3" height="15.0" fill="rgb(205,64,9)" rx="2" ry="2" />
<text  x="341.41" y="63.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (846 samples, 0.10%)</title><rect x="184.4" y="149" width="1.2" height="15.0" fill="rgb(245,155,39)" rx="2" ry="2" />
<text  x="187.38" y="159.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,758 samples, 0.22%)</title><rect x="314.0" y="101" width="2.5" height="15.0" fill="rgb(244,55,6)" rx="2" ry="2" />
<text  x="316.96" y="111.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (299 samples, 0.04%)</title><rect x="423.1" y="85" width="0.5" height="15.0" fill="rgb(244,208,39)" rx="2" ry="2" />
<text  x="426.12" y="95.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,426 samples, 0.18%)</title><rect x="311.3" y="85" width="2.1" height="15.0" fill="rgb(210,25,30)" rx="2" ry="2" />
<text  x="314.28" y="95.5" ></text>
</g>
<g >
<title>sudachi::dic::DictionaryLoader::read_system_dictionary (367 samples, 0.05%)</title><rect x="1074.3" y="165" width="0.5" height="15.0" fill="rgb(208,106,28)" rx="2" ry="2" />
<text  x="1077.28" y="175.5" ></text>
</g>
<g >
<title>&lt;sudachi::lattice::node::Node as core::clone::Clone&gt;::clone (895 samples, 0.11%)</title><rect x="424.8" y="101" width="1.3" height="15.0" fill="rgb(210,193,27)" rx="2" ry="2" />
<text  x="427.81" y="111.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::stateless_tokeniser::DictionaryAccess&gt;::lexicon (383 samples, 0.05%)</title><rect x="202.6" y="133" width="0.6" height="15.0" fill="rgb(250,175,21)" rx="2" ry="2" />
<text  x="205.61" y="143.5" ></text>
</g>
<g >
<title>realloc (418 samples, 0.05%)</title><rect x="11.9" y="229" width="0.6" height="15.0" fill="rgb(236,70,28)" rx="2" ry="2" />
<text  x="14.92" y="239.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::conversions::to_lower (1,638 samples, 0.20%)</title><rect x="911.1" y="181" width="2.4" height="15.0" fill="rgb(228,35,18)" rx="2" ry="2" />
<text  x="914.08" y="191.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (389 samples, 0.05%)</title><rect x="241.1" y="85" width="0.6" height="15.0" fill="rgb(205,164,31)" rx="2" ry="2" />
<text  x="244.09" y="95.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (384 samples, 0.05%)</title><rect x="316.6" y="117" width="0.5" height="15.0" fill="rgb(246,183,40)" rx="2" ry="2" />
<text  x="319.57" y="127.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::common_prefix_search (6,203 samples, 0.76%)</title><rect x="1053.0" y="117" width="9.0" height="15.0" fill="rgb(244,226,13)" rx="2" ry="2" />
<text  x="1055.98" y="127.5" ></text>
</g>
<g >
<title>__memchr_sse2 (335 samples, 0.04%)</title><rect x="140.3" y="149" width="0.5" height="15.0" fill="rgb(235,78,46)" rx="2" ry="2" />
<text  x="143.32" y="159.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::can_bow (430 samples, 0.05%)</title><rect x="215.8" y="133" width="0.6" height="15.0" fill="rgb(210,224,21)" rx="2" ry="2" />
<text  x="218.82" y="143.5" ></text>
</g>
<g >
<title>sudachi::lattice::Lattice::connect_eos_node (715 samples, 0.09%)</title><rect x="422.5" y="117" width="1.1" height="15.0" fill="rgb(221,209,14)" rx="2" ry="2" />
<text  x="425.53" y="127.5" ></text>
</g>
<g >
<title>malloc (214 samples, 0.03%)</title><rect x="441.9" y="85" width="0.3" height="15.0" fill="rgb(248,220,12)" rx="2" ry="2" />
<text  x="444.93" y="95.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (488,297 samples, 60.05%)</title><rect x="201.8" y="165" width="708.5" height="15.0" fill="rgb(231,144,48)" rx="2" ry="2" />
<text  x="204.79" y="175.5" >&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (1,296 samples, 0.16%)</title><rect x="1138.0" y="261" width="1.9" height="15.0" fill="rgb(218,168,21)" rx="2" ry="2" />
<text  x="1140.99" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::lookup (13,982 samples, 1.72%)</title><rect x="1046.4" y="149" width="20.3" height="15.0" fill="rgb(219,9,13)" rx="2" ry="2" />
<text  x="1049.37" y="159.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (360 samples, 0.04%)</title><rect x="931.5" y="133" width="0.5" height="15.0" fill="rgb(240,33,45)" rx="2" ry="2" />
<text  x="934.53" y="143.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,671 samples, 0.21%)</title><rect x="348.8" y="53" width="2.4" height="15.0" fill="rgb(245,59,48)" rx="2" ry="2" />
<text  x="351.81" y="63.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (420 samples, 0.05%)</title><rect x="975.9" y="117" width="0.6" height="15.0" fill="rgb(214,111,14)" rx="2" ry="2" />
<text  x="978.90" y="127.5" ></text>
</g>
<g >
<title>realloc (3,633 samples, 0.45%)</title><rect x="120.0" y="261" width="5.3" height="15.0" fill="rgb(237,154,27)" rx="2" ry="2" />
<text  x="122.99" y="271.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (378 samples, 0.05%)</title><rect x="194.9" y="149" width="0.6" height="15.0" fill="rgb(226,46,2)" rx="2" ry="2" />
<text  x="197.94" y="159.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (485 samples, 0.06%)</title><rect x="1065.4" y="85" width="0.7" height="15.0" fill="rgb(230,26,27)" rx="2" ry="2" />
<text  x="1068.37" y="95.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_id_table::WordIdTable::get (3,111 samples, 0.38%)</title><rect x="1062.0" y="117" width="4.5" height="15.0" fill="rgb(243,110,29)" rx="2" ry="2" />
<text  x="1064.99" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (318 samples, 0.04%)</title><rect x="258.4" y="53" width="0.4" height="15.0" fill="rgb(245,99,31)" rx="2" ry="2" />
<text  x="261.38" y="63.5" ></text>
</g>
<g >
<title>&lt;str as core::fmt::Display&gt;::fmt (223 samples, 0.03%)</title><rect x="10.9" y="277" width="0.4" height="15.0" fill="rgb(227,34,34)" rx="2" ry="2" />
<text  x="13.94" y="287.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text_builder::Utf8InputTextBuilder::build (25,210 samples, 3.10%)</title><rect x="914.8" y="181" width="36.6" height="15.0" fill="rgb(244,123,6)" rx="2" ry="2" />
<text  x="917.79" y="191.5" >sud..</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,520 samples, 0.31%)</title><rect x="365.3" y="69" width="3.7" height="15.0" fill="rgb(237,223,18)" rx="2" ry="2" />
<text  x="368.32" y="79.5" ></text>
</g>
<g >
<title>&lt;sudachi::stateless_tokeniser::StatelessTokenizer&lt;T&gt; as sudachi::tokenizer::Tokenize&gt;::tokenize_sentences (635,148 samples, 78.10%)</title><rect x="145.0" y="197" width="921.7" height="15.0" fill="rgb(224,183,25)" rx="2" ry="2" />
<text  x="148.04" y="207.5" >&lt;sudachi::stateless_tokeniser::StatelessTokenizer&lt;T&gt; as sudachi::tokenizer::Tokenize&gt;::tokenize_sentences</text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text_builder::Utf8InputTextBuilder::replace (1,389 samples, 0.17%)</title><rect x="177.5" y="165" width="2.1" height="15.0" fill="rgb(244,214,51)" rx="2" ry="2" />
<text  x="180.54" y="175.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (322 samples, 0.04%)</title><rect x="265.2" y="69" width="0.4" height="15.0" fill="rgb(250,224,22)" rx="2" ry="2" />
<text  x="268.16" y="79.5" ></text>
</g>
<g >
<title>__libc_write (2,134 samples, 0.26%)</title><rect x="141.4" y="181" width="3.1" height="15.0" fill="rgb(218,180,47)" rx="2" ry="2" />
<text  x="144.40" y="191.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (3,280 samples, 0.40%)</title><rect x="1039.3" y="69" width="4.7" height="15.0" fill="rgb(234,123,22)" rx="2" ry="2" />
<text  x="1042.27" y="79.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (372 samples, 0.05%)</title><rect x="10.4" y="277" width="0.5" height="15.0" fill="rgb(236,74,39)" rx="2" ry="2" />
<text  x="13.40" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (658 samples, 0.08%)</title><rect x="924.8" y="133" width="0.9" height="15.0" fill="rgb(234,67,22)" rx="2" ry="2" />
<text  x="927.78" y="143.5" ></text>
</g>
<g >
<title>_int_realloc (801 samples, 0.10%)</title><rect x="117.3" y="261" width="1.1" height="15.0" fill="rgb(230,158,22)" rx="2" ry="2" />
<text  x="120.28" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,116 samples, 0.51%)</title><rect x="230.9" y="117" width="6.0" height="15.0" fill="rgb(233,49,38)" rx="2" ry="2" />
<text  x="233.89" y="127.5" ></text>
</g>
<g >
<title>&lt;fancy_regex::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (2,491 samples, 0.31%)</title><rect x="970.5" y="149" width="3.7" height="15.0" fill="rgb(222,49,11)" rx="2" ry="2" />
<text  x="973.54" y="159.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (372 samples, 0.05%)</title><rect x="167.3" y="165" width="0.6" height="15.0" fill="rgb(227,140,17)" rx="2" ry="2" />
<text  x="170.33" y="175.5" ></text>
</g>
<g >
<title>malloc (487 samples, 0.06%)</title><rect x="306.6" y="69" width="0.7" height="15.0" fill="rgb(245,135,46)" rx="2" ry="2" />
<text  x="309.56" y="79.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (865 samples, 0.11%)</title><rect x="961.6" y="149" width="1.2" height="15.0" fill="rgb(215,1,40)" rx="2" ry="2" />
<text  x="964.56" y="159.5" ></text>
</g>
<g >
<title>malloc (207 samples, 0.03%)</title><rect x="415.2" y="69" width="0.3" height="15.0" fill="rgb(235,7,17)" rx="2" ry="2" />
<text  x="418.17" y="79.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (6,749 samples, 0.83%)</title><rect x="351.6" y="85" width="9.8" height="15.0" fill="rgb(228,163,52)" rx="2" ry="2" />
<text  x="354.64" y="95.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (374 samples, 0.05%)</title><rect x="195.6" y="181" width="0.5" height="15.0" fill="rgb(230,228,20)" rx="2" ry="2" />
<text  x="198.58" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2,063 samples, 0.25%)</title><rect x="947.8" y="149" width="3.0" height="15.0" fill="rgb(218,216,5)" rx="2" ry="2" />
<text  x="950.77" y="159.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (279 samples, 0.03%)</title><rect x="351.2" y="69" width="0.4" height="15.0" fill="rgb(245,201,17)" rx="2" ry="2" />
<text  x="354.24" y="79.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_param (299 samples, 0.04%)</title><rect x="215.3" y="133" width="0.4" height="15.0" fill="rgb(225,219,20)" rx="2" ry="2" />
<text  x="218.26" y="143.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::exec_nfa (334 samples, 0.04%)</title><rect x="973.5" y="85" width="0.5" height="15.0" fill="rgb(251,131,37)" rx="2" ry="2" />
<text  x="976.50" y="95.5" ></text>
</g>
<g >
<title>fancy_regex::vm::run (46,067 samples, 5.66%)</title><rect x="977.6" y="117" width="66.8" height="15.0" fill="rgb(219,192,17)" rx="2" ry="2" />
<text  x="980.57" y="127.5" >fancy_r..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (539 samples, 0.07%)</title><rect x="243.8" y="53" width="0.8" height="15.0" fill="rgb(239,154,22)" rx="2" ry="2" />
<text  x="246.81" y="63.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (993 samples, 0.12%)</title><rect x="234.5" y="101" width="1.4" height="15.0" fill="rgb(228,22,38)" rx="2" ry="2" />
<text  x="237.48" y="111.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (989 samples, 0.12%)</title><rect x="252.4" y="85" width="1.5" height="15.0" fill="rgb(224,43,22)" rx="2" ry="2" />
<text  x="255.42" y="95.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (744 samples, 0.09%)</title><rect x="163.7" y="149" width="1.1" height="15.0" fill="rgb(225,137,44)" rx="2" ry="2" />
<text  x="166.74" y="159.5" ></text>
</g>
<g >
<title>malloc (226 samples, 0.03%)</title><rect x="963.6" y="149" width="0.3" height="15.0" fill="rgb(240,74,11)" rx="2" ry="2" />
<text  x="966.61" y="159.5" ></text>
</g>
<g >
<title>__rust_dealloc (213 samples, 0.03%)</title><rect x="297.5" y="117" width="0.4" height="15.0" fill="rgb(239,159,1)" rx="2" ry="2" />
<text  x="300.54" y="127.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,023 samples, 0.37%)</title><rect x="952.3" y="149" width="4.4" height="15.0" fill="rgb(253,135,24)" rx="2" ry="2" />
<text  x="955.34" y="159.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (900 samples, 0.11%)</title><rect x="319.5" y="101" width="1.3" height="15.0" fill="rgb(251,42,47)" rx="2" ry="2" />
<text  x="322.47" y="111.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup (27,397 samples, 3.37%)</title><rect x="376.2" y="101" width="39.8" height="15.0" fill="rgb(221,53,9)" rx="2" ry="2" />
<text  x="379.21" y="111.5" >sud..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9,351 samples, 1.15%)</title><rect x="300.3" y="101" width="13.5" height="15.0" fill="rgb(207,2,37)" rx="2" ry="2" />
<text  x="303.28" y="111.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,414 samples, 0.17%)</title><rect x="834.6" y="101" width="2.0" height="15.0" fill="rgb(223,154,31)" rx="2" ry="2" />
<text  x="837.58" y="111.5" ></text>
</g>
<g >
<title>__rdl_alloc (253 samples, 0.03%)</title><rect x="306.0" y="69" width="0.4" height="15.0" fill="rgb(251,11,41)" rx="2" ry="2" />
<text  x="309.02" y="79.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (377 samples, 0.05%)</title><rect x="957.1" y="149" width="0.6" height="15.0" fill="rgb(210,71,35)" rx="2" ry="2" />
<text  x="960.11" y="159.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_char_category_types (1,999 samples, 0.25%)</title><rect x="419.5" y="117" width="2.9" height="15.0" fill="rgb(250,12,16)" rx="2" ry="2" />
<text  x="422.50" y="127.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,160 samples, 0.27%)</title><rect x="264.4" y="85" width="3.1" height="15.0" fill="rgb(235,157,4)" rx="2" ry="2" />
<text  x="267.38" y="95.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (572 samples, 0.07%)</title><rect x="837.6" y="85" width="0.8" height="15.0" fill="rgb(219,197,35)" rx="2" ry="2" />
<text  x="840.60" y="95.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (20,546 samples, 2.53%)</title><rect x="603.6" y="53" width="29.8" height="15.0" fill="rgb(239,115,1)" rx="2" ry="2" />
<text  x="606.61" y="63.5" >no..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (254 samples, 0.03%)</title><rect x="313.4" y="85" width="0.3" height="15.0" fill="rgb(211,11,37)" rx="2" ry="2" />
<text  x="316.35" y="95.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (31,621 samples, 3.89%)</title><rect x="323.7" y="101" width="45.9" height="15.0" fill="rgb(205,118,45)" rx="2" ry="2" />
<text  x="326.70" y="111.5" >suda..</text>
</g>
<g >
<title>_int_free (15,843 samples, 1.95%)</title><rect x="1087.4" y="277" width="23.0" height="15.0" fill="rgb(241,149,43)" rx="2" ry="2" />
<text  x="1090.40" y="287.5" >_..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,456 samples, 0.18%)</title><rect x="373.1" y="101" width="2.1" height="15.0" fill="rgb(223,196,51)" rx="2" ry="2" />
<text  x="376.12" y="111.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (1,061 samples, 0.13%)</title><rect x="385.9" y="85" width="1.6" height="15.0" fill="rgb(224,43,54)" rx="2" ry="2" />
<text  x="388.92" y="95.5" ></text>
</g>
<g >
<title>vfs_write (448 samples, 0.06%)</title><rect x="142.3" y="117" width="0.6" height="15.0" fill="rgb(227,98,36)" rx="2" ry="2" />
<text  x="145.28" y="127.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,783 samples, 0.22%)</title><rect x="192.9" y="165" width="2.6" height="15.0" fill="rgb(253,49,42)" rx="2" ry="2" />
<text  x="195.90" y="175.5" ></text>
</g>
<g >
<title>&lt;ignore_yomigana::IgnoreYomiganaPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite (7,906 samples, 0.97%)</title><rect x="180.0" y="181" width="11.5" height="15.0" fill="rgb(253,195,36)" rx="2" ry="2" />
<text  x="183.03" y="191.5" ></text>
</g>
<g >
<title>std::io::Write::write_fmt (670 samples, 0.08%)</title><rect x="1073.3" y="197" width="1.0" height="15.0" fill="rgb(223,168,30)" rx="2" ry="2" />
<text  x="1076.29" y="207.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (260 samples, 0.03%)</title><rect x="1044.0" y="101" width="0.4" height="15.0" fill="rgb(241,80,37)" rx="2" ry="2" />
<text  x="1047.03" y="111.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (293 samples, 0.04%)</title><rect x="867.1" y="37" width="0.5" height="15.0" fill="rgb(254,11,34)" rx="2" ry="2" />
<text  x="870.14" y="47.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (16,282 samples, 2.00%)</title><rect x="1020.4" y="101" width="23.6" height="15.0" fill="rgb(212,107,8)" rx="2" ry="2" />
<text  x="1023.41" y="111.5" >r..</text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (419 samples, 0.05%)</title><rect x="374.4" y="85" width="0.6" height="15.0" fill="rgb(240,175,52)" rx="2" ry="2" />
<text  x="377.41" y="95.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (581 samples, 0.07%)</title><rect x="1047.3" y="133" width="0.9" height="15.0" fill="rgb(254,165,48)" rx="2" ry="2" />
<text  x="1050.32" y="143.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (245 samples, 0.03%)</title><rect x="317.1" y="117" width="0.4" height="15.0" fill="rgb(237,186,49)" rx="2" ry="2" />
<text  x="320.12" y="127.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,785 samples, 0.34%)</title><rect x="921.8" y="149" width="4.1" height="15.0" fill="rgb(248,191,4)" rx="2" ry="2" />
<text  x="924.83" y="159.5" ></text>
</g>
<g >
<title>syscall_exit_work (558 samples, 0.07%)</title><rect x="143.1" y="117" width="0.8" height="15.0" fill="rgb(228,4,26)" rx="2" ry="2" />
<text  x="146.11" y="127.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_param (33,895 samples, 4.17%)</title><rect x="321.7" y="117" width="49.2" height="15.0" fill="rgb(205,23,21)" rx="2" ry="2" />
<text  x="324.72" y="127.5" >suda..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (749 samples, 0.09%)</title><rect x="252.8" y="69" width="1.0" height="15.0" fill="rgb(207,172,5)" rx="2" ry="2" />
<text  x="255.76" y="79.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_char_category_types_range (5,606 samples, 0.69%)</title><rect x="259.5" y="101" width="8.2" height="15.0" fill="rgb(221,61,30)" rx="2" ry="2" />
<text  x="262.53" y="111.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,613 samples, 0.20%)</title><rect x="199.3" y="181" width="2.3" height="15.0" fill="rgb(232,86,31)" rx="2" ry="2" />
<text  x="202.30" y="191.5" ></text>
</g>
<g >
<title>sudachi::sentence_detector::SentenceDetector::get_eos (70,792 samples, 8.71%)</title><rect x="963.9" y="165" width="102.8" height="15.0" fill="rgb(231,148,24)" rx="2" ry="2" />
<text  x="966.94" y="175.5" >sudachi::sen..</text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_info (21,550 samples, 2.65%)</title><rect x="836.8" y="101" width="31.3" height="15.0" fill="rgb(212,30,49)" rx="2" ry="2" />
<text  x="839.82" y="111.5" >su..</text>
</g>
<g >
<title>join_numeric::numeric_parser::NumericParser::append (311 samples, 0.04%)</title><rect x="251.7" y="101" width="0.5" height="15.0" fill="rgb(225,124,45)" rx="2" ry="2" />
<text  x="254.73" y="111.5" ></text>
</g>
<g >
<title>&lt; (12,553 samples, 1.54%)</title><rect x="845.1" y="69" width="18.2" height="15.0" fill="rgb(244,111,52)" rx="2" ry="2" />
<text  x="848.09" y="79.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (245 samples, 0.03%)</title><rect x="1045.9" y="133" width="0.4" height="15.0" fill="rgb(236,47,38)" rx="2" ry="2" />
<text  x="1048.91" y="143.5" ></text>
</g>
<g >
<title>ksys_write (768 samples, 0.09%)</title><rect x="141.8" y="133" width="1.1" height="15.0" fill="rgb(228,30,21)" rx="2" ry="2" />
<text  x="144.81" y="143.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (725 samples, 0.09%)</title><rect x="328.4" y="85" width="1.0" height="15.0" fill="rgb(253,52,37)" rx="2" ry="2" />
<text  x="331.36" y="95.5" ></text>
</g>
<g >
<title>sudachi::dic::character_category::CharacterCategory::get_category_types (3,912 samples, 0.48%)</title><rect x="185.8" y="165" width="5.7" height="15.0" fill="rgb(224,117,28)" rx="2" ry="2" />
<text  x="188.82" y="175.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7,048 samples, 0.87%)</title><rect x="847.4" y="53" width="10.3" height="15.0" fill="rgb(216,197,42)" rx="2" ry="2" />
<text  x="850.45" y="63.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::captures_from_pos (2,353 samples, 0.29%)</title><rect x="970.6" y="133" width="3.4" height="15.0" fill="rgb(246,80,14)" rx="2" ry="2" />
<text  x="973.62" y="143.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (4,253 samples, 0.52%)</title><rect x="998.2" y="101" width="6.1" height="15.0" fill="rgb(241,196,44)" rx="2" ry="2" />
<text  x="1001.17" y="111.5" ></text>
</g>
<g >
<title>sudachi::lattice::Lattice::new (2,496 samples, 0.31%)</title><rect x="830.5" y="117" width="3.6" height="15.0" fill="rgb(207,229,3)" rx="2" ry="2" />
<text  x="833.49" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (220 samples, 0.03%)</title><rect x="427.3" y="101" width="0.3" height="15.0" fill="rgb(205,30,10)" rx="2" ry="2" />
<text  x="430.27" y="111.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,110 samples, 0.14%)</title><rect x="889.3" y="85" width="1.6" height="15.0" fill="rgb(209,34,8)" rx="2" ry="2" />
<text  x="892.27" y="95.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (338 samples, 0.04%)</title><rect x="321.1" y="117" width="0.5" height="15.0" fill="rgb(252,97,51)" rx="2" ry="2" />
<text  x="324.07" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,495 samples, 0.55%)</title><rect x="951.4" y="165" width="6.6" height="15.0" fill="rgb(242,131,12)" rx="2" ry="2" />
<text  x="954.44" y="175.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,189 samples, 0.15%)</title><rect x="134.7" y="213" width="1.7" height="15.0" fill="rgb(208,173,14)" rx="2" ry="2" />
<text  x="137.71" y="223.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text_builder::Utf8InputTextBuilder::new (4,769 samples, 0.59%)</title><rect x="951.4" y="181" width="6.9" height="15.0" fill="rgb(244,62,25)" rx="2" ry="2" />
<text  x="954.37" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (596 samples, 0.07%)</title><rect x="1122.2" y="277" width="0.9" height="15.0" fill="rgb(220,123,20)" rx="2" ry="2" />
<text  x="1125.22" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_right_id (308 samples, 0.04%)</title><rect x="370.5" y="101" width="0.4" height="15.0" fill="rgb(205,195,46)" rx="2" ry="2" />
<text  x="373.45" y="111.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (1,806 samples, 0.22%)</title><rect x="858.5" y="53" width="2.6" height="15.0" fill="rgb(238,137,5)" rx="2" ry="2" />
<text  x="861.50" y="63.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,598 samples, 0.44%)</title><rect x="945.7" y="165" width="5.2" height="15.0" fill="rgb(242,158,52)" rx="2" ry="2" />
<text  x="948.68" y="175.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::input_text::utf8_input_text::Utf8InputText&gt; (435 samples, 0.05%)</title><rect x="910.4" y="181" width="0.7" height="15.0" fill="rgb(252,147,6)" rx="2" ry="2" />
<text  x="913.45" y="191.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (730 samples, 0.09%)</title><rect x="976.5" y="117" width="1.1" height="15.0" fill="rgb(205,66,47)" rx="2" ry="2" />
<text  x="979.51" y="127.5" ></text>
</g>
<g >
<title>sudachi::morpheme::Morpheme::new (2,649 samples, 0.33%)</title><rect x="307.3" y="69" width="3.9" height="15.0" fill="rgb(215,22,44)" rx="2" ry="2" />
<text  x="310.31" y="79.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5,281 samples, 0.65%)</title><rect x="633.4" y="69" width="7.7" height="15.0" fill="rgb(226,128,15)" rx="2" ry="2" />
<text  x="636.42" y="79.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::exec (278 samples, 0.03%)</title><rect x="973.6" y="69" width="0.4" height="15.0" fill="rgb(216,16,46)" rx="2" ry="2" />
<text  x="976.56" y="79.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_substring (324 samples, 0.04%)</title><rect x="904.4" y="85" width="0.5" height="15.0" fill="rgb(216,201,14)" rx="2" ry="2" />
<text  x="907.43" y="95.5" ></text>
</g>
<g >
<title>&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (48,708 samples, 5.99%)</title><rect x="974.2" y="149" width="70.6" height="15.0" fill="rgb(243,90,42)" rx="2" ry="2" />
<text  x="977.16" y="159.5" >&lt;fancy_..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2,543 samples, 0.31%)</title><rect x="246.9" y="101" width="3.6" height="15.0" fill="rgb(216,29,3)" rx="2" ry="2" />
<text  x="249.85" y="111.5" ></text>
</g>
<g >
<title>&lt;join_numeric::JoinNumericPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (15,704 samples, 1.93%)</title><rect x="244.9" y="117" width="22.8" height="15.0" fill="rgb(218,47,32)" rx="2" ry="2" />
<text  x="247.89" y="127.5" >&lt;..</text>
</g>
<g >
<title>core::fmt::write (426 samples, 0.05%)</title><rect x="1072.1" y="197" width="0.6" height="15.0" fill="rgb(238,54,30)" rx="2" ry="2" />
<text  x="1075.10" y="207.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_id_table::WordIdTable::get (6,803 samples, 0.84%)</title><rect x="406.1" y="85" width="9.9" height="15.0" fill="rgb(221,0,6)" rx="2" ry="2" />
<text  x="409.09" y="95.5" ></text>
</g>
<g >
<title>__rdl_realloc (411 samples, 0.05%)</title><rect x="439.3" y="85" width="0.6" height="15.0" fill="rgb(215,132,16)" rx="2" ry="2" />
<text  x="442.26" y="95.5" ></text>
</g>
<g >
<title>sudachi::input_text::utf8_input_text::Utf8InputText::get_code_points_offset_length (274 samples, 0.03%)</title><rect x="904.0" y="85" width="0.4" height="15.0" fill="rgb(245,221,31)" rx="2" ry="2" />
<text  x="907.03" y="95.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (2,012 samples, 0.25%)</title><rect x="303.1" y="69" width="2.9" height="15.0" fill="rgb(207,190,52)" rx="2" ry="2" />
<text  x="306.10" y="79.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (781 samples, 0.10%)</title><rect x="249.4" y="85" width="1.1" height="15.0" fill="rgb(245,162,39)" rx="2" ry="2" />
<text  x="252.41" y="95.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (928 samples, 0.11%)</title><rect x="1037.9" y="69" width="1.4" height="15.0" fill="rgb(213,156,15)" rx="2" ry="2" />
<text  x="1040.93" y="79.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (447 samples, 0.05%)</title><rect x="258.2" y="69" width="0.7" height="15.0" fill="rgb(230,111,8)" rx="2" ry="2" />
<text  x="261.24" y="79.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (548 samples, 0.07%)</title><rect x="947.0" y="149" width="0.8" height="15.0" fill="rgb(249,171,6)" rx="2" ry="2" />
<text  x="949.98" y="159.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3,874 samples, 0.48%)</title><rect x="488.6" y="85" width="5.6" height="15.0" fill="rgb(224,216,20)" rx="2" ry="2" />
<text  x="491.61" y="95.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (824 samples, 0.10%)</title><rect x="974.4" y="117" width="1.2" height="15.0" fill="rgb(234,79,27)" rx="2" ry="2" />
<text  x="977.39" y="127.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (2,537 samples, 0.31%)</title><rect x="357.5" y="53" width="3.7" height="15.0" fill="rgb(229,32,13)" rx="2" ry="2" />
<text  x="360.52" y="63.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::OovProviderPlugin::get_oov (314 samples, 0.04%)</title><rect x="217.9" y="133" width="0.5" height="15.0" fill="rgb(216,143,3)" rx="2" ry="2" />
<text  x="220.93" y="143.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::new (358 samples, 0.04%)</title><rect x="1074.3" y="133" width="0.5" height="15.0" fill="rgb(238,1,20)" rx="2" ry="2" />
<text  x="1077.30" y="143.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (757 samples, 0.09%)</title><rect x="167.9" y="165" width="1.1" height="15.0" fill="rgb(217,187,15)" rx="2" ry="2" />
<text  x="170.87" y="175.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy (2,236 samples, 0.27%)</title><rect x="1068.2" y="197" width="3.2" height="15.0" fill="rgb(245,170,50)" rx="2" ry="2" />
<text  x="1071.20" y="207.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (686 samples, 0.08%)</title><rect x="863.8" y="69" width="0.9" height="15.0" fill="rgb(215,123,30)" rx="2" ry="2" />
<text  x="866.75" y="79.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (2,679 samples, 0.33%)</title><rect x="402.2" y="69" width="3.9" height="15.0" fill="rgb(238,21,0)" rx="2" ry="2" />
<text  x="405.20" y="79.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,309 samples, 0.16%)</title><rect x="169.2" y="165" width="1.9" height="15.0" fill="rgb(237,139,0)" rx="2" ry="2" />
<text  x="172.24" y="175.5" ></text>
</g>
<g >
<title>__rust_alloc (337 samples, 0.04%)</title><rect x="888.8" y="85" width="0.5" height="15.0" fill="rgb(248,205,47)" rx="2" ry="2" />
<text  x="891.78" y="95.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (448 samples, 0.06%)</title><rect x="1044.8" y="149" width="0.7" height="15.0" fill="rgb(224,96,48)" rx="2" ry="2" />
<text  x="1047.83" y="159.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (207 samples, 0.03%)</title><rect x="1044.5" y="117" width="0.3" height="15.0" fill="rgb(243,173,29)" rx="2" ry="2" />
<text  x="1047.49" y="127.5" ></text>
</g>
<g >
<title>__libc_start_main (648,590 samples, 79.76%)</title><rect x="134.6" y="277" width="941.1" height="15.0" fill="rgb(221,77,24)" rx="2" ry="2" />
<text  x="137.62" y="287.5" >__libc_start_main</text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::lookup (31,184 samples, 3.83%)</title><rect x="370.9" y="117" width="45.2" height="15.0" fill="rgb(223,176,35)" rx="2" ry="2" />
<text  x="373.90" y="127.5" >suda..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,524 samples, 0.19%)</title><rect x="254.3" y="69" width="2.2" height="15.0" fill="rgb(247,163,29)" rx="2" ry="2" />
<text  x="257.26" y="79.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (278 samples, 0.03%)</title><rect x="997.4" y="101" width="0.4" height="15.0" fill="rgb(254,176,29)" rx="2" ry="2" />
<text  x="1000.36" y="111.5" ></text>
</g>
<g >
<title>[unknown] (1,317 samples, 0.16%)</title><rect x="11.4" y="261" width="1.9" height="15.0" fill="rgb(254,60,50)" rx="2" ry="2" />
<text  x="14.38" y="271.5" ></text>
</g>
<g >
<title>&lt;default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite (23,191 samples, 2.85%)</title><rect x="146.1" y="181" width="33.6" height="15.0" fill="rgb(233,95,31)" rx="2" ry="2" />
<text  x="149.09" y="191.5" >&lt;d..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (247 samples, 0.03%)</title><rect x="253.5" y="53" width="0.3" height="15.0" fill="rgb(211,116,0)" rx="2" ry="2" />
<text  x="256.49" y="63.5" ></text>
</g>
</g>
</svg>
