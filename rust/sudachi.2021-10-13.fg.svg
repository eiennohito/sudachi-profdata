<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>fancy_regex::prev_codepoint_ix (519 samples, 0.15%)</title><rect x="150.2" y="405" width="1.8" height="15.0" fill="rgb(214,74,34)" rx="2" ry="2" />
<text  x="153.21" y="415.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (114 samples, 0.03%)</title><rect x="477.3" y="213" width="0.4" height="15.0" fill="rgb(214,3,44)" rx="2" ry="2" />
<text  x="480.28" y="223.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::string_number::StringNumber::append (489 samples, 0.14%)</title><rect x="339.7" y="421" width="1.7" height="15.0" fill="rgb(247,123,24)" rx="2" ry="2" />
<text  x="342.74" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (148 samples, 0.04%)</title><rect x="14.0" y="485" width="0.5" height="15.0" fill="rgb(254,143,44)" rx="2" ry="2" />
<text  x="17.01" y="495.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (151 samples, 0.04%)</title><rect x="1079.3" y="197" width="0.5" height="15.0" fill="rgb(240,191,35)" rx="2" ry="2" />
<text  x="1082.32" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (356 samples, 0.10%)</title><rect x="196.9" y="293" width="1.2" height="15.0" fill="rgb(238,150,40)" rx="2" ry="2" />
<text  x="199.91" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (466 samples, 0.14%)</title><rect x="1117.0" y="309" width="1.6" height="15.0" fill="rgb(226,192,15)" rx="2" ry="2" />
<text  x="1120.03" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (166 samples, 0.05%)</title><rect x="93.9" y="357" width="0.6" height="15.0" fill="rgb(232,106,33)" rx="2" ry="2" />
<text  x="96.90" y="367.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (161 samples, 0.05%)</title><rect x="334.4" y="357" width="0.6" height="15.0" fill="rgb(254,86,23)" rx="2" ry="2" />
<text  x="337.45" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (776 samples, 0.23%)</title><rect x="1065.6" y="389" width="2.6" height="15.0" fill="rgb(230,89,7)" rx="2" ry="2" />
<text  x="1068.57" y="399.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,399 samples, 0.70%)</title><rect x="1025.6" y="325" width="8.3" height="15.0" fill="rgb(227,120,34)" rx="2" ry="2" />
<text  x="1028.61" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (238 samples, 0.07%)</title><rect x="40.3" y="453" width="0.8" height="15.0" fill="rgb(216,93,29)" rx="2" ry="2" />
<text  x="43.32" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (397 samples, 0.12%)</title><rect x="871.8" y="389" width="1.4" height="15.0" fill="rgb(247,113,9)" rx="2" ry="2" />
<text  x="874.79" y="399.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (1,120 samples, 0.33%)</title><rect x="1127.6" y="341" width="3.9" height="15.0" fill="rgb(227,81,19)" rx="2" ry="2" />
<text  x="1130.61" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (586 samples, 0.17%)</title><rect x="1043.0" y="405" width="2.0" height="15.0" fill="rgb(208,111,49)" rx="2" ry="2" />
<text  x="1046.02" y="415.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (143 samples, 0.04%)</title><rect x="1154.3" y="85" width="0.5" height="15.0" fill="rgb(234,223,54)" rx="2" ry="2" />
<text  x="1157.33" y="95.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (136 samples, 0.04%)</title><rect x="474.8" y="293" width="0.4" height="15.0" fill="rgb(254,98,49)" rx="2" ry="2" />
<text  x="477.77" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (615 samples, 0.18%)</title><rect x="325.3" y="277" width="2.1" height="15.0" fill="rgb(218,13,3)" rx="2" ry="2" />
<text  x="328.27" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (165 samples, 0.05%)</title><rect x="314.8" y="437" width="0.5" height="15.0" fill="rgb(237,140,15)" rx="2" ry="2" />
<text  x="317.75" y="447.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (115 samples, 0.03%)</title><rect x="425.6" y="229" width="0.4" height="15.0" fill="rgb(207,89,38)" rx="2" ry="2" />
<text  x="428.62" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (95 samples, 0.03%)</title><rect x="10.1" y="421" width="0.3" height="15.0" fill="rgb(215,193,9)" rx="2" ry="2" />
<text  x="13.11" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (135 samples, 0.04%)</title><rect x="370.5" y="357" width="0.5" height="15.0" fill="rgb(242,112,15)" rx="2" ry="2" />
<text  x="373.52" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (95 samples, 0.03%)</title><rect x="476.7" y="197" width="0.3" height="15.0" fill="rgb(237,142,8)" rx="2" ry="2" />
<text  x="479.70" y="207.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (95 samples, 0.03%)</title><rect x="10.1" y="405" width="0.3" height="15.0" fill="rgb(227,82,49)" rx="2" ry="2" />
<text  x="13.11" y="415.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::standard_find_at (517 samples, 0.15%)</title><rect x="1111.4" y="309" width="1.8" height="15.0" fill="rgb(253,187,2)" rx="2" ry="2" />
<text  x="1114.43" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (175 samples, 0.05%)</title><rect x="23.5" y="501" width="0.6" height="15.0" fill="rgb(252,14,53)" rx="2" ry="2" />
<text  x="26.52" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,130 samples, 0.91%)</title><rect x="1070.3" y="373" width="10.7" height="15.0" fill="rgb(235,217,43)" rx="2" ry="2" />
<text  x="1073.26" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::decode_dictword_id (104 samples, 0.03%)</title><rect x="558.9" y="437" width="0.3" height="15.0" fill="rgb(216,141,5)" rx="2" ry="2" />
<text  x="561.89" y="447.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (367 samples, 0.11%)</title><rect x="984.2" y="421" width="1.2" height="15.0" fill="rgb(237,136,15)" rx="2" ry="2" />
<text  x="987.18" y="431.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (110 samples, 0.03%)</title><rect x="1048.3" y="437" width="0.4" height="15.0" fill="rgb(237,47,40)" rx="2" ry="2" />
<text  x="1051.33" y="447.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (2,513 samples, 0.73%)</title><rect x="253.0" y="245" width="8.6" height="15.0" fill="rgb(236,112,52)" rx="2" ry="2" />
<text  x="256.00" y="255.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (137 samples, 0.04%)</title><rect x="204.0" y="341" width="0.5" height="15.0" fill="rgb(236,200,8)" rx="2" ry="2" />
<text  x="207.05" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,158 samples, 1.21%)</title><rect x="508.5" y="213" width="14.3" height="15.0" fill="rgb(236,124,46)" rx="2" ry="2" />
<text  x="511.54" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (2,801 samples, 0.82%)</title><rect x="492.8" y="133" width="9.6" height="15.0" fill="rgb(238,53,7)" rx="2" ry="2" />
<text  x="495.76" y="143.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (365 samples, 0.11%)</title><rect x="1034.2" y="293" width="1.3" height="15.0" fill="rgb(249,132,7)" rx="2" ry="2" />
<text  x="1037.25" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (598 samples, 0.17%)</title><rect x="946.5" y="277" width="2.0" height="15.0" fill="rgb(218,177,10)" rx="2" ry="2" />
<text  x="949.46" y="287.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (137 samples, 0.04%)</title><rect x="204.0" y="357" width="0.5" height="15.0" fill="rgb(236,204,10)" rx="2" ry="2" />
<text  x="207.05" y="367.5" ></text>
</g>
<g >
<title>[unknown] (330,601 samples, 96.22%)</title><rect x="52.4" y="517" width="1135.4" height="15.0" fill="rgb(249,128,9)" rx="2" ry="2" />
<text  x="55.44" y="527.5" >[unknown]</text>
</g>
<g >
<title>nom::multi::count::{{closure}} (556 samples, 0.16%)</title><rect x="428.8" y="261" width="1.9" height="15.0" fill="rgb(210,164,1)" rx="2" ry="2" />
<text  x="431.81" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (123 samples, 0.04%)</title><rect x="174.8" y="325" width="0.4" height="15.0" fill="rgb(216,142,1)" rx="2" ry="2" />
<text  x="177.77" y="335.5" ></text>
</g>
<g >
<title>_int_free (144 samples, 0.04%)</title><rect x="342.7" y="373" width="0.5" height="15.0" fill="rgb(215,102,49)" rx="2" ry="2" />
<text  x="345.70" y="383.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (115 samples, 0.03%)</title><rect x="1086.8" y="245" width="0.4" height="15.0" fill="rgb(238,33,35)" rx="2" ry="2" />
<text  x="1089.82" y="255.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (2,108 samples, 0.61%)</title><rect x="198.9" y="389" width="7.2" height="15.0" fill="rgb(241,197,41)" rx="2" ry="2" />
<text  x="201.91" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (418 samples, 0.12%)</title><rect x="196.8" y="341" width="1.4" height="15.0" fill="rgb(242,78,47)" rx="2" ry="2" />
<text  x="199.79" y="351.5" ></text>
</g>
<g >
<title>core::ptr::write (98 samples, 0.03%)</title><rect x="79.9" y="341" width="0.3" height="15.0" fill="rgb(219,98,49)" rx="2" ry="2" />
<text  x="82.90" y="351.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (252 samples, 0.07%)</title><rect x="376.9" y="437" width="0.8" height="15.0" fill="rgb(215,115,2)" rx="2" ry="2" />
<text  x="379.86" y="447.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (161 samples, 0.05%)</title><rect x="1018.7" y="245" width="0.5" height="15.0" fill="rgb(250,153,9)" rx="2" ry="2" />
<text  x="1021.65" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (285 samples, 0.08%)</title><rect x="660.1" y="437" width="1.0" height="15.0" fill="rgb(206,83,52)" rx="2" ry="2" />
<text  x="663.11" y="447.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (306 samples, 0.09%)</title><rect x="523.4" y="277" width="1.0" height="15.0" fill="rgb(221,188,5)" rx="2" ry="2" />
<text  x="526.37" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (437 samples, 0.13%)</title><rect x="196.7" y="389" width="1.5" height="15.0" fill="rgb(234,92,1)" rx="2" ry="2" />
<text  x="199.72" y="399.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher (853 samples, 0.25%)</title><rect x="288.0" y="341" width="2.9" height="15.0" fill="rgb(239,72,16)" rx="2" ry="2" />
<text  x="290.99" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (22,774 samples, 6.63%)</title><rect x="732.9" y="421" width="78.2" height="15.0" fill="rgb(213,122,52)" rx="2" ry="2" />
<text  x="735.92" y="431.5" >alloc::ve..</text>
</g>
<g >
<title>alloc::alloc::alloc (4,101 samples, 1.19%)</title><rect x="508.7" y="149" width="14.1" height="15.0" fill="rgb(218,148,36)" rx="2" ry="2" />
<text  x="511.74" y="159.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (143 samples, 0.04%)</title><rect x="1154.3" y="117" width="0.5" height="15.0" fill="rgb(228,55,54)" rx="2" ry="2" />
<text  x="1157.33" y="127.5" ></text>
</g>
<g >
<title>core::ptr::swap (1,072 samples, 0.31%)</title><rect x="389.3" y="437" width="3.7" height="15.0" fill="rgb(243,52,47)" rx="2" ry="2" />
<text  x="392.28" y="447.5" ></text>
</g>
<g >
<title>_int_realloc (728 samples, 0.21%)</title><rect x="382.5" y="293" width="2.5" height="15.0" fill="rgb(210,219,24)" rx="2" ry="2" />
<text  x="385.51" y="303.5" ></text>
</g>
<g >
<title>nom::combinator::cond::{{closure}} (778 samples, 0.23%)</title><rect x="550.9" y="309" width="2.6" height="15.0" fill="rgb(243,15,15)" rx="2" ry="2" />
<text  x="553.86" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,715 samples, 0.50%)</title><rect x="291.8" y="229" width="5.9" height="15.0" fill="rgb(212,202,34)" rx="2" ry="2" />
<text  x="294.76" y="239.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (148 samples, 0.04%)</title><rect x="14.0" y="437" width="0.5" height="15.0" fill="rgb(229,51,31)" rx="2" ry="2" />
<text  x="17.01" y="447.5" ></text>
</g>
<g >
<title>alloc::string::String::push (424 samples, 0.12%)</title><rect x="39.7" y="501" width="1.4" height="15.0" fill="rgb(235,117,1)" rx="2" ry="2" />
<text  x="42.68" y="511.5" ></text>
</g>
<g >
<title>nom::sequence::tuple::{{closure}} (3,867 samples, 1.13%)</title><rect x="419.3" y="341" width="13.3" height="15.0" fill="rgb(253,109,46)" rx="2" ry="2" />
<text  x="422.34" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,303 samples, 0.38%)</title><rect x="292.2" y="165" width="4.5" height="15.0" fill="rgb(245,116,25)" rx="2" ry="2" />
<text  x="295.20" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (277 samples, 0.08%)</title><rect x="38.7" y="501" width="1.0" height="15.0" fill="rgb(240,151,15)" rx="2" ry="2" />
<text  x="41.72" y="511.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (292 samples, 0.08%)</title><rect x="289.9" y="245" width="1.0" height="15.0" fill="rgb(206,84,23)" rx="2" ry="2" />
<text  x="292.92" y="255.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (281 samples, 0.08%)</title><rect x="576.6" y="437" width="0.9" height="15.0" fill="rgb(241,202,2)" rx="2" ry="2" />
<text  x="579.57" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4,769 samples, 1.39%)</title><rect x="489.2" y="229" width="16.4" height="15.0" fill="rgb(212,188,17)" rx="2" ry="2" />
<text  x="492.19" y="239.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (292 samples, 0.08%)</title><rect x="289.9" y="229" width="1.0" height="15.0" fill="rgb(252,132,33)" rx="2" ry="2" />
<text  x="292.92" y="239.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::earliest_find_at (610 samples, 0.18%)</title><rect x="1111.2" y="325" width="2.1" height="15.0" fill="rgb(249,130,26)" rx="2" ry="2" />
<text  x="1114.24" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (280 samples, 0.08%)</title><rect x="164.2" y="373" width="0.9" height="15.0" fill="rgb(245,137,9)" rx="2" ry="2" />
<text  x="167.16" y="383.5" ></text>
</g>
<g >
<title>malloc_consolidate (4,730 samples, 1.38%)</title><rect x="959.3" y="277" width="16.3" height="15.0" fill="rgb(245,46,53)" rx="2" ry="2" />
<text  x="962.33" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,493 samples, 0.43%)</title><rect x="1081.2" y="181" width="5.2" height="15.0" fill="rgb(250,40,18)" rx="2" ry="2" />
<text  x="1084.25" y="191.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2,881 samples, 0.84%)</title><rect x="441.9" y="245" width="9.9" height="15.0" fill="rgb(219,194,38)" rx="2" ry="2" />
<text  x="444.95" y="255.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (365 samples, 0.11%)</title><rect x="1034.2" y="261" width="1.3" height="15.0" fill="rgb(231,85,8)" rx="2" ry="2" />
<text  x="1037.25" y="271.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (277 samples, 0.08%)</title><rect x="296.7" y="213" width="0.9" height="15.0" fill="rgb(226,67,3)" rx="2" ry="2" />
<text  x="299.69" y="223.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_mul (242 samples, 0.07%)</title><rect x="947.7" y="213" width="0.8" height="15.0" fill="rgb(219,185,39)" rx="2" ry="2" />
<text  x="950.68" y="223.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (97 samples, 0.03%)</title><rect x="559.6" y="405" width="0.3" height="15.0" fill="rgb(211,206,2)" rx="2" ry="2" />
<text  x="562.56" y="415.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (267 samples, 0.08%)</title><rect x="396.4" y="453" width="0.9" height="15.0" fill="rgb(239,225,50)" rx="2" ry="2" />
<text  x="399.37" y="463.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (334 samples, 0.10%)</title><rect x="417.8" y="309" width="1.2" height="15.0" fill="rgb(249,168,38)" rx="2" ry="2" />
<text  x="420.81" y="319.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,809 samples, 0.53%)</title><rect x="1081.0" y="341" width="6.2" height="15.0" fill="rgb(208,220,50)" rx="2" ry="2" />
<text  x="1084.01" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::any_bit_set (136 samples, 0.04%)</title><rect x="1012.6" y="293" width="0.4" height="15.0" fill="rgb(229,103,29)" rx="2" ry="2" />
<text  x="1015.58" y="303.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::lexicon::trie::TrieEntryIter as core::iter::traits::iterator::Iterator&gt;::next (11,798 samples, 3.43%)</title><rect x="583.1" y="341" width="40.5" height="15.0" fill="rgb(241,201,25)" rx="2" ry="2" />
<text  x="586.05" y="351.5" >&lt;su..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (942 samples, 0.27%)</title><rect x="189.5" y="389" width="3.2" height="15.0" fill="rgb(254,199,33)" rx="2" ry="2" />
<text  x="192.47" y="399.5" ></text>
</g>
<g >
<title>&lt;sudachi::hash::RoMuHash as core::hash::Hasher&gt;::write_u32 (672 samples, 0.20%)</title><rect x="1008.7" y="325" width="2.3" height="15.0" fill="rgb(220,45,18)" rx="2" ry="2" />
<text  x="1011.74" y="335.5" ></text>
</g>
<g >
<title>unicode_normalization::normalize::decompose_compatible (261 samples, 0.08%)</title><rect x="1115.8" y="309" width="0.9" height="15.0" fill="rgb(232,101,32)" rx="2" ry="2" />
<text  x="1118.77" y="319.5" ></text>
</g>
<g >
<title>_int_malloc (1,458 samples, 0.42%)</title><rect x="533.1" y="133" width="5.0" height="15.0" fill="rgb(231,79,0)" rx="2" ry="2" />
<text  x="536.13" y="143.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (101 samples, 0.03%)</title><rect x="44.4" y="501" width="0.3" height="15.0" fill="rgb(214,67,11)" rx="2" ry="2" />
<text  x="47.36" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (331 samples, 0.10%)</title><rect x="943.2" y="357" width="1.1" height="15.0" fill="rgb(214,16,49)" rx="2" ry="2" />
<text  x="946.16" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,323 samples, 0.68%)</title><rect x="1008.7" y="389" width="8.0" height="15.0" fill="rgb(208,112,3)" rx="2" ry="2" />
<text  x="1011.74" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,881 samples, 0.84%)</title><rect x="441.9" y="277" width="9.9" height="15.0" fill="rgb(239,131,5)" rx="2" ry="2" />
<text  x="444.95" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::lexicon::word_id_table::WordIdIter as core::iter::traits::iterator::Iterator&gt;::next (966 samples, 0.28%)</title><rect x="649.0" y="373" width="3.3" height="15.0" fill="rgb(210,53,19)" rx="2" ry="2" />
<text  x="652.00" y="383.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (394 samples, 0.11%)</title><rect x="239.4" y="309" width="1.3" height="15.0" fill="rgb(240,104,21)" rx="2" ry="2" />
<text  x="242.38" y="319.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,809 samples, 0.53%)</title><rect x="1081.0" y="357" width="6.2" height="15.0" fill="rgb(244,32,31)" rx="2" ry="2" />
<text  x="1084.01" y="367.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::start_build (317 samples, 0.09%)</title><rect x="1171.0" y="469" width="1.1" height="15.0" fill="rgb(246,139,47)" rx="2" ry="2" />
<text  x="1173.99" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (96 samples, 0.03%)</title><rect x="291.4" y="357" width="0.3" height="15.0" fill="rgb(216,104,43)" rx="2" ry="2" />
<text  x="294.39" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,252 samples, 0.36%)</title><rect x="292.3" y="133" width="4.3" height="15.0" fill="rgb(239,204,34)" rx="2" ry="2" />
<text  x="295.33" y="143.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (130 samples, 0.04%)</title><rect x="1088.6" y="373" width="0.5" height="15.0" fill="rgb(217,170,3)" rx="2" ry="2" />
<text  x="1091.63" y="383.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_cold (224 samples, 0.07%)</title><rect x="93.7" y="437" width="0.8" height="15.0" fill="rgb(238,170,0)" rx="2" ry="2" />
<text  x="96.73" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;fancy_regex::vm::Branch&gt;&gt; (97 samples, 0.03%)</title><rect x="147.2" y="389" width="0.3" height="15.0" fill="rgb(250,2,24)" rx="2" ry="2" />
<text  x="150.17" y="399.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (107 samples, 0.03%)</title><rect x="1067.9" y="261" width="0.3" height="15.0" fill="rgb(211,79,13)" rx="2" ry="2" />
<text  x="1070.87" y="271.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (145 samples, 0.04%)</title><rect x="660.6" y="405" width="0.5" height="15.0" fill="rgb(244,56,25)" rx="2" ry="2" />
<text  x="663.59" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (367 samples, 0.11%)</title><rect x="417.7" y="373" width="1.3" height="15.0" fill="rgb(212,84,23)" rx="2" ry="2" />
<text  x="420.74" y="383.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::curr_slice (96 samples, 0.03%)</title><rect x="1062.3" y="405" width="0.3" height="15.0" fill="rgb(239,138,26)" rx="2" ry="2" />
<text  x="1065.26" y="415.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (113 samples, 0.03%)</title><rect x="648.6" y="277" width="0.4" height="15.0" fill="rgb(215,64,39)" rx="2" ry="2" />
<text  x="651.61" y="287.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (219 samples, 0.06%)</title><rect x="431.1" y="197" width="0.7" height="15.0" fill="rgb(210,73,30)" rx="2" ry="2" />
<text  x="434.05" y="207.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (188 samples, 0.05%)</title><rect x="227.2" y="325" width="0.7" height="15.0" fill="rgb(248,98,2)" rx="2" ry="2" />
<text  x="230.24" y="335.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,006 samples, 0.29%)</title><rect x="996.7" y="421" width="3.4" height="15.0" fill="rgb(215,26,24)" rx="2" ry="2" />
<text  x="999.68" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,274 samples, 0.95%)</title><rect x="1173.1" y="341" width="11.3" height="15.0" fill="rgb(247,9,17)" rx="2" ry="2" />
<text  x="1176.14" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (303 samples, 0.09%)</title><rect x="424.0" y="69" width="1.1" height="15.0" fill="rgb(230,219,15)" rx="2" ry="2" />
<text  x="427.03" y="79.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (104 samples, 0.03%)</title><rect x="808.3" y="341" width="0.4" height="15.0" fill="rgb(206,160,8)" rx="2" ry="2" />
<text  x="811.35" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::drain (97 samples, 0.03%)</title><rect x="686.7" y="453" width="0.4" height="15.0" fill="rgb(246,223,40)" rx="2" ry="2" />
<text  x="689.74" y="463.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::exec_nfa (839 samples, 0.24%)</title><rect x="304.8" y="341" width="2.9" height="15.0" fill="rgb(207,180,44)" rx="2" ry="2" />
<text  x="307.79" y="351.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (266 samples, 0.08%)</title><rect x="108.3" y="405" width="0.9" height="15.0" fill="rgb(248,31,25)" rx="2" ry="2" />
<text  x="111.28" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (1,818 samples, 0.53%)</title><rect x="445.0" y="197" width="6.3" height="15.0" fill="rgb(214,69,21)" rx="2" ry="2" />
<text  x="448.03" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::resize (144 samples, 0.04%)</title><rect x="1170.1" y="437" width="0.5" height="15.0" fill="rgb(234,140,6)" rx="2" ry="2" />
<text  x="1173.07" y="447.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::build_lattice (154,530 samples, 44.97%)</title><rect x="559.9" y="469" width="530.7" height="15.0" fill="rgb(209,195,3)" rx="2" ry="2" />
<text  x="562.90" y="479.5" >sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::build_lattice</text>
</g>
<g >
<title>core::unicode::unicode_data::uppercase::lookup (512 samples, 0.15%)</title><rect x="1103.3" y="341" width="1.8" height="15.0" fill="rgb(212,163,27)" rx="2" ry="2" />
<text  x="1106.30" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (175 samples, 0.05%)</title><rect x="85.7" y="357" width="0.6" height="15.0" fill="rgb(222,171,52)" rx="2" ry="2" />
<text  x="88.74" y="367.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (715 samples, 0.21%)</title><rect x="147.8" y="389" width="2.4" height="15.0" fill="rgb(208,99,24)" rx="2" ry="2" />
<text  x="150.75" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (1,495 samples, 0.44%)</title><rect x="937.6" y="325" width="5.1" height="15.0" fill="rgb(234,182,51)" rx="2" ry="2" />
<text  x="940.60" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (276 samples, 0.08%)</title><rect x="420.4" y="261" width="1.0" height="15.0" fill="rgb(224,116,15)" rx="2" ry="2" />
<text  x="423.45" y="271.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (2,728 samples, 0.79%)</title><rect x="541.5" y="213" width="9.4" height="15.0" fill="rgb(215,214,26)" rx="2" ry="2" />
<text  x="544.49" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (2,606 samples, 0.76%)</title><rect x="291.4" y="421" width="8.9" height="15.0" fill="rgb(210,84,42)" rx="2" ry="2" />
<text  x="294.36" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::index (96 samples, 0.03%)</title><rect x="1062.3" y="389" width="0.3" height="15.0" fill="rgb(229,203,40)" rx="2" ry="2" />
<text  x="1065.26" y="399.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::shortest_match_at (15,019 samples, 4.37%)</title><rect x="234.5" y="357" width="51.6" height="15.0" fill="rgb(205,153,40)" rx="2" ry="2" />
<text  x="237.48" y="367.5" >&lt;rege..</text>
</g>
<g >
<title>_int_free (420 samples, 0.12%)</title><rect x="331.6" y="325" width="1.4" height="15.0" fill="rgb(248,45,13)" rx="2" ry="2" />
<text  x="334.57" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (125 samples, 0.04%)</title><rect x="810.1" y="341" width="0.4" height="15.0" fill="rgb(231,134,5)" rx="2" ry="2" />
<text  x="813.12" y="351.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (155 samples, 0.05%)</title><rect x="40.6" y="437" width="0.5" height="15.0" fill="rgb(233,110,1)" rx="2" ry="2" />
<text  x="43.61" y="447.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (127 samples, 0.04%)</title><rect x="373.2" y="437" width="0.4" height="15.0" fill="rgb(225,65,20)" rx="2" ry="2" />
<text  x="376.18" y="447.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (21,189 samples, 6.17%)</title><rect x="580.1" y="405" width="72.7" height="15.0" fill="rgb(214,40,34)" rx="2" ry="2" />
<text  x="583.07" y="415.5" >&lt;core::i..</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (27,624 samples, 8.04%)</title><rect x="458.7" y="325" width="94.8" height="15.0" fill="rgb(208,159,30)" rx="2" ry="2" />
<text  x="461.66" y="335.5" >&lt;F as nom::..</text>
</g>
<g >
<title>sudachi::dic::lexicon::trie_array_parser (276 samples, 0.08%)</title><rect x="79.3" y="421" width="1.0" height="15.0" fill="rgb(216,50,11)" rx="2" ry="2" />
<text  x="82.32" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (131 samples, 0.04%)</title><rect x="1148.5" y="341" width="0.5" height="15.0" fill="rgb(213,165,8)" rx="2" ry="2" />
<text  x="1151.52" y="351.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (546 samples, 0.16%)</title><rect x="397.7" y="437" width="1.9" height="15.0" fill="rgb(211,148,19)" rx="2" ry="2" />
<text  x="400.70" y="447.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (192 samples, 0.06%)</title><rect x="1080.1" y="277" width="0.7" height="15.0" fill="rgb(208,66,38)" rx="2" ry="2" />
<text  x="1083.11" y="287.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (2,399 samples, 0.70%)</title><rect x="1025.6" y="357" width="8.3" height="15.0" fill="rgb(238,14,52)" rx="2" ry="2" />
<text  x="1028.61" y="367.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (276 samples, 0.08%)</title><rect x="79.3" y="373" width="1.0" height="15.0" fill="rgb(244,36,28)" rx="2" ry="2" />
<text  x="82.32" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (418 samples, 0.12%)</title><rect x="423.8" y="133" width="1.4" height="15.0" fill="rgb(214,46,39)" rx="2" ry="2" />
<text  x="426.77" y="143.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (253 samples, 0.07%)</title><rect x="477.0" y="277" width="0.9" height="15.0" fill="rgb(217,118,41)" rx="2" ry="2" />
<text  x="480.02" y="287.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (99 samples, 0.03%)</title><rect x="429.0" y="245" width="0.3" height="15.0" fill="rgb(232,170,51)" rx="2" ry="2" />
<text  x="431.95" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (95 samples, 0.03%)</title><rect x="476.7" y="229" width="0.3" height="15.0" fill="rgb(229,63,32)" rx="2" ry="2" />
<text  x="479.70" y="239.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (285 samples, 0.08%)</title><rect x="654.0" y="357" width="1.0" height="15.0" fill="rgb(225,139,32)" rx="2" ry="2" />
<text  x="656.99" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (318 samples, 0.09%)</title><rect x="204.5" y="373" width="1.1" height="15.0" fill="rgb(213,91,42)" rx="2" ry="2" />
<text  x="207.52" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (3,495 samples, 1.02%)</title><rect x="1173.0" y="405" width="12.0" height="15.0" fill="rgb(248,127,28)" rx="2" ry="2" />
<text  x="1175.98" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (1,952 samples, 0.57%)</title><rect x="1072.6" y="197" width="6.7" height="15.0" fill="rgb(225,57,30)" rx="2" ry="2" />
<text  x="1075.60" y="207.5" ></text>
</g>
<g >
<title>ksys_write (95 samples, 0.03%)</title><rect x="94.0" y="293" width="0.3" height="15.0" fill="rgb(207,141,46)" rx="2" ry="2" />
<text  x="96.98" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (103 samples, 0.03%)</title><rect x="370.2" y="357" width="0.3" height="15.0" fill="rgb(224,181,4)" rx="2" ry="2" />
<text  x="373.17" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (88 samples, 0.03%)</title><rect x="340.8" y="373" width="0.3" height="15.0" fill="rgb(235,223,29)" rx="2" ry="2" />
<text  x="343.85" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (514 samples, 0.15%)</title><rect x="60.3" y="501" width="1.8" height="15.0" fill="rgb(220,125,43)" rx="2" ry="2" />
<text  x="63.29" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_free (558 samples, 0.16%)</title><rect x="54.3" y="501" width="2.0" height="15.0" fill="rgb(250,101,30)" rx="2" ry="2" />
<text  x="57.34" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (574 samples, 0.17%)</title><rect x="1158.7" y="437" width="2.0" height="15.0" fill="rgb(213,29,40)" rx="2" ry="2" />
<text  x="1161.70" y="447.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (115 samples, 0.03%)</title><rect x="240.7" y="293" width="0.4" height="15.0" fill="rgb(213,8,45)" rx="2" ry="2" />
<text  x="243.73" y="303.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (466 samples, 0.14%)</title><rect x="1117.0" y="357" width="1.6" height="15.0" fill="rgb(228,42,48)" rx="2" ry="2" />
<text  x="1120.03" y="367.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (122 samples, 0.04%)</title><rect x="781.2" y="277" width="0.4" height="15.0" fill="rgb(207,91,41)" rx="2" ry="2" />
<text  x="784.19" y="287.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,677 samples, 0.78%)</title><rect x="873.4" y="405" width="9.2" height="15.0" fill="rgb(216,100,50)" rx="2" ry="2" />
<text  x="876.36" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (586 samples, 0.17%)</title><rect x="1158.7" y="453" width="2.0" height="15.0" fill="rgb(235,165,53)" rx="2" ry="2" />
<text  x="1161.70" y="463.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::uppercase::lookup (335 samples, 0.10%)</title><rect x="1113.9" y="357" width="1.2" height="15.0" fill="rgb(236,128,26)" rx="2" ry="2" />
<text  x="1116.94" y="367.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (3,034 samples, 0.88%)</title><rect x="540.4" y="261" width="10.5" height="15.0" fill="rgb(249,148,2)" rx="2" ry="2" />
<text  x="543.44" y="271.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (107 samples, 0.03%)</title><rect x="1067.9" y="245" width="0.3" height="15.0" fill="rgb(241,97,36)" rx="2" ry="2" />
<text  x="1070.87" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (805 samples, 0.23%)</title><rect x="142.9" y="389" width="2.7" height="15.0" fill="rgb(231,217,9)" rx="2" ry="2" />
<text  x="145.86" y="399.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (11,845 samples, 3.45%)</title><rect x="1102.5" y="405" width="40.7" height="15.0" fill="rgb(229,199,19)" rx="2" ry="2" />
<text  x="1105.53" y="415.5" >&lt;su..</text>
</g>
<g >
<title>unicode_normalization::quick_check::is_nfkc_quick (2,226 samples, 0.65%)</title><rect x="1118.6" y="373" width="7.7" height="15.0" fill="rgb(230,177,17)" rx="2" ry="2" />
<text  x="1121.63" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (148 samples, 0.04%)</title><rect x="337.0" y="261" width="0.5" height="15.0" fill="rgb(239,93,31)" rx="2" ry="2" />
<text  x="340.02" y="271.5" ></text>
</g>
<g >
<title>std::sys_common::memchr::memchr (235 samples, 0.07%)</title><rect x="86.3" y="389" width="0.9" height="15.0" fill="rgb(234,68,14)" rx="2" ry="2" />
<text  x="89.35" y="399.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_of_range::{{closure}} (99 samples, 0.03%)</title><rect x="321.6" y="389" width="0.4" height="15.0" fill="rgb(247,116,53)" rx="2" ry="2" />
<text  x="324.64" y="399.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::get_word_info (105 samples, 0.03%)</title><rect x="107.4" y="421" width="0.4" height="15.0" fill="rgb(244,192,37)" rx="2" ry="2" />
<text  x="110.39" y="431.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (246 samples, 0.07%)</title><rect x="1079.9" y="309" width="0.9" height="15.0" fill="rgb(228,107,53)" rx="2" ry="2" />
<text  x="1082.92" y="319.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (2,426 samples, 0.71%)</title><rect x="493.7" y="85" width="8.3" height="15.0" fill="rgb(224,141,44)" rx="2" ry="2" />
<text  x="496.67" y="95.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (349 samples, 0.10%)</title><rect x="423.9" y="117" width="1.2" height="15.0" fill="rgb(228,229,5)" rx="2" ry="2" />
<text  x="426.92" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (122 samples, 0.04%)</title><rect x="94.0" y="309" width="0.4" height="15.0" fill="rgb(248,172,38)" rx="2" ry="2" />
<text  x="96.97" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,580 samples, 0.46%)</title><rect x="937.4" y="373" width="5.4" height="15.0" fill="rgb(238,51,29)" rx="2" ry="2" />
<text  x="940.37" y="383.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (725 samples, 0.21%)</title><rect x="1016.7" y="373" width="2.5" height="15.0" fill="rgb(222,172,22)" rx="2" ry="2" />
<text  x="1019.71" y="383.5" ></text>
</g>
<g >
<title>fancy_regex::vm::matches_literal (1,346 samples, 0.39%)</title><rect x="206.7" y="405" width="4.6" height="15.0" fill="rgb(244,228,47)" rx="2" ry="2" />
<text  x="209.65" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,159 samples, 0.92%)</title><rect x="1173.3" y="309" width="10.9" height="15.0" fill="rgb(245,104,41)" rx="2" ry="2" />
<text  x="1176.32" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,158 samples, 1.21%)</title><rect x="508.5" y="181" width="14.3" height="15.0" fill="rgb(217,141,47)" rx="2" ry="2" />
<text  x="511.54" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (479 samples, 0.14%)</title><rect x="335.0" y="405" width="1.7" height="15.0" fill="rgb(223,203,8)" rx="2" ry="2" />
<text  x="338.01" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::grammar::Grammar::connect_cost (13,766 samples, 4.01%)</title><rect x="889.4" y="421" width="47.3" height="15.0" fill="rgb(237,32,3)" rx="2" ry="2" />
<text  x="892.43" y="431.5" >suda..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (166 samples, 0.05%)</title><rect x="85.8" y="309" width="0.5" height="15.0" fill="rgb(207,9,51)" rx="2" ry="2" />
<text  x="88.77" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (105 samples, 0.03%)</title><rect x="188.4" y="389" width="0.4" height="15.0" fill="rgb(238,191,36)" rx="2" ry="2" />
<text  x="191.41" y="399.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::stack_push (3,456 samples, 1.01%)</title><rect x="194.3" y="405" width="11.8" height="15.0" fill="rgb(240,52,41)" rx="2" ry="2" />
<text  x="197.28" y="415.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_loadu_si128 (90 samples, 0.03%)</title><rect x="1015.0" y="261" width="0.3" height="15.0" fill="rgb(247,212,48)" rx="2" ry="2" />
<text  x="1017.99" y="271.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (193 samples, 0.06%)</title><rect x="944.3" y="309" width="0.7" height="15.0" fill="rgb(233,104,42)" rx="2" ry="2" />
<text  x="947.30" y="319.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (424 samples, 0.12%)</title><rect x="585.8" y="325" width="1.4" height="15.0" fill="rgb(223,14,5)" rx="2" ry="2" />
<text  x="588.77" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (934 samples, 0.27%)</title><rect x="324.9" y="437" width="3.2" height="15.0" fill="rgb(252,16,42)" rx="2" ry="2" />
<text  x="327.90" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (151 samples, 0.04%)</title><rect x="552.8" y="133" width="0.5" height="15.0" fill="rgb(214,118,47)" rx="2" ry="2" />
<text  x="555.81" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (172 samples, 0.05%)</title><rect x="1184.4" y="341" width="0.6" height="15.0" fill="rgb(250,222,46)" rx="2" ry="2" />
<text  x="1187.39" y="351.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (106 samples, 0.03%)</title><rect x="416.6" y="389" width="0.3" height="15.0" fill="rgb(252,150,6)" rx="2" ry="2" />
<text  x="419.58" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::word_info_parser (4,417 samples, 1.29%)</title><rect x="417.5" y="389" width="15.1" height="15.0" fill="rgb(208,74,39)" rx="2" ry="2" />
<text  x="420.47" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (88 samples, 0.03%)</title><rect x="340.8" y="357" width="0.3" height="15.0" fill="rgb(224,113,50)" rx="2" ry="2" />
<text  x="343.85" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (123 samples, 0.04%)</title><rect x="94.0" y="325" width="0.4" height="15.0" fill="rgb(227,107,33)" rx="2" ry="2" />
<text  x="96.97" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (143 samples, 0.04%)</title><rect x="337.0" y="229" width="0.5" height="15.0" fill="rgb(212,170,29)" rx="2" ry="2" />
<text  x="340.04" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (340 samples, 0.10%)</title><rect x="196.9" y="245" width="1.2" height="15.0" fill="rgb(207,57,48)" rx="2" ry="2" />
<text  x="199.93" y="255.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (97 samples, 0.03%)</title><rect x="289.2" y="309" width="0.4" height="15.0" fill="rgb(249,67,41)" rx="2" ry="2" />
<text  x="292.22" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (113 samples, 0.03%)</title><rect x="338.5" y="357" width="0.3" height="15.0" fill="rgb(209,102,4)" rx="2" ry="2" />
<text  x="341.46" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (672 samples, 0.20%)</title><rect x="1008.7" y="357" width="2.3" height="15.0" fill="rgb(212,54,46)" rx="2" ry="2" />
<text  x="1011.74" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (221 samples, 0.06%)</title><rect x="552.6" y="213" width="0.7" height="15.0" fill="rgb(234,184,19)" rx="2" ry="2" />
<text  x="555.57" y="223.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,449 samples, 1.00%)</title><rect x="441.9" y="357" width="11.9" height="15.0" fill="rgb(227,104,33)" rx="2" ry="2" />
<text  x="444.95" y="367.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at (365 samples, 0.11%)</title><rect x="1034.2" y="325" width="1.3" height="15.0" fill="rgb(223,129,2)" rx="2" ry="2" />
<text  x="1037.25" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4,645 samples, 1.35%)</title><rect x="489.6" y="213" width="16.0" height="15.0" fill="rgb(210,68,47)" rx="2" ry="2" />
<text  x="492.61" y="223.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (424 samples, 0.12%)</title><rect x="585.8" y="309" width="1.4" height="15.0" fill="rgb(207,44,52)" rx="2" ry="2" />
<text  x="588.77" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (304 samples, 0.09%)</title><rect x="417.8" y="277" width="1.1" height="15.0" fill="rgb(241,36,17)" rx="2" ry="2" />
<text  x="420.81" y="287.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::collect_results (596 samples, 0.17%)</title><rect x="316.0" y="485" width="2.1" height="15.0" fill="rgb(236,136,45)" rx="2" ry="2" />
<text  x="319.01" y="495.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (821 samples, 0.24%)</title><rect x="382.3" y="325" width="2.8" height="15.0" fill="rgb(220,60,4)" rx="2" ry="2" />
<text  x="385.28" y="335.5" ></text>
</g>
<g >
<title>_int_realloc (10,968 samples, 3.19%)</title><rect x="743.3" y="277" width="37.7" height="15.0" fill="rgb(246,175,19)" rx="2" ry="2" />
<text  x="746.30" y="287.5" >_in..</text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (239 samples, 0.07%)</title><rect x="1067.4" y="309" width="0.8" height="15.0" fill="rgb(230,61,12)" rx="2" ry="2" />
<text  x="1070.41" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt; (220 samples, 0.06%)</title><rect x="342.5" y="469" width="0.7" height="15.0" fill="rgb(226,71,46)" rx="2" ry="2" />
<text  x="345.48" y="479.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (3,159 samples, 0.92%)</title><rect x="1173.3" y="293" width="10.9" height="15.0" fill="rgb(219,71,44)" rx="2" ry="2" />
<text  x="1176.32" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_free (192 samples, 0.06%)</title><rect x="342.5" y="389" width="0.7" height="15.0" fill="rgb(216,178,13)" rx="2" ry="2" />
<text  x="345.54" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (236 samples, 0.07%)</title><rect x="197.3" y="213" width="0.8" height="15.0" fill="rgb(208,43,17)" rx="2" ry="2" />
<text  x="200.28" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (93 samples, 0.03%)</title><rect x="340.3" y="213" width="0.3" height="15.0" fill="rgb(236,39,49)" rx="2" ry="2" />
<text  x="343.26" y="223.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (276 samples, 0.08%)</title><rect x="79.3" y="405" width="1.0" height="15.0" fill="rgb(249,75,26)" rx="2" ry="2" />
<text  x="82.32" y="415.5" ></text>
</g>
<g >
<title>unicode_normalization::perfect_hash::mph_lookup (496 samples, 0.14%)</title><rect x="1141.5" y="341" width="1.7" height="15.0" fill="rgb(210,215,43)" rx="2" ry="2" />
<text  x="1144.51" y="351.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,105 samples, 0.90%)</title><rect x="1070.3" y="357" width="10.7" height="15.0" fill="rgb(207,68,41)" rx="2" ry="2" />
<text  x="1073.34" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (115 samples, 0.03%)</title><rect x="53.8" y="453" width="0.4" height="15.0" fill="rgb(241,17,54)" rx="2" ry="2" />
<text  x="56.78" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (262 samples, 0.08%)</title><rect x="158.3" y="373" width="0.9" height="15.0" fill="rgb(218,110,39)" rx="2" ry="2" />
<text  x="161.26" y="383.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (2,760 samples, 0.80%)</title><rect x="94.5" y="437" width="9.5" height="15.0" fill="rgb(241,51,14)" rx="2" ry="2" />
<text  x="97.50" y="447.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,913 samples, 1.14%)</title><rect x="419.2" y="357" width="13.4" height="15.0" fill="rgb(207,179,15)" rx="2" ry="2" />
<text  x="422.18" y="367.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,499 samples, 0.73%)</title><rect x="291.7" y="389" width="8.6" height="15.0" fill="rgb(230,34,21)" rx="2" ry="2" />
<text  x="294.72" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (119 samples, 0.03%)</title><rect x="338.4" y="389" width="0.5" height="15.0" fill="rgb(227,102,29)" rx="2" ry="2" />
<text  x="341.45" y="399.5" ></text>
</g>
<g >
<title>_int_free (2,211 samples, 0.64%)</title><rect x="1176.2" y="261" width="7.6" height="15.0" fill="rgb(248,43,14)" rx="2" ry="2" />
<text  x="1179.18" y="271.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::can_bow (108 samples, 0.03%)</title><rect x="49.7" y="501" width="0.4" height="15.0" fill="rgb(245,47,35)" rx="2" ry="2" />
<text  x="52.72" y="511.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (319 samples, 0.09%)</title><rect x="368.8" y="293" width="1.1" height="15.0" fill="rgb(247,87,13)" rx="2" ry="2" />
<text  x="371.80" y="303.5" ></text>
</g>
<g >
<title>aho_corasick::dfa::DFA&lt;S&gt;::find_at_no_state (1,053 samples, 0.31%)</title><rect x="1105.5" y="341" width="3.6" height="15.0" fill="rgb(217,216,11)" rx="2" ry="2" />
<text  x="1108.45" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (172 samples, 0.05%)</title><rect x="1184.4" y="373" width="0.6" height="15.0" fill="rgb(250,174,52)" rx="2" ry="2" />
<text  x="1187.39" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (127 samples, 0.04%)</title><rect x="326.5" y="245" width="0.5" height="15.0" fill="rgb(228,77,2)" rx="2" ry="2" />
<text  x="329.55" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (99 samples, 0.03%)</title><rect x="1148.0" y="277" width="0.4" height="15.0" fill="rgb(237,183,51)" rx="2" ry="2" />
<text  x="1151.05" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (113 samples, 0.03%)</title><rect x="338.5" y="341" width="0.3" height="15.0" fill="rgb(230,14,11)" rx="2" ry="2" />
<text  x="341.46" y="351.5" ></text>
</g>
<g >
<title>ksys_read (97 samples, 0.03%)</title><rect x="85.2" y="277" width="0.4" height="15.0" fill="rgb(218,225,39)" rx="2" ry="2" />
<text  x="88.24" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,951 samples, 0.57%)</title><rect x="353.4" y="245" width="6.7" height="15.0" fill="rgb(224,186,24)" rx="2" ry="2" />
<text  x="356.37" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (304 samples, 0.09%)</title><rect x="417.8" y="245" width="1.1" height="15.0" fill="rgb(210,208,6)" rx="2" ry="2" />
<text  x="420.81" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup::{{closure}} (7,405 samples, 2.16%)</title><rect x="623.6" y="309" width="25.4" height="15.0" fill="rgb(210,160,46)" rx="2" ry="2" />
<text  x="626.57" y="319.5" >s..</text>
</g>
<g >
<title>core::str::validations::next_code_point (276 samples, 0.08%)</title><rect x="1161.1" y="405" width="1.0" height="15.0" fill="rgb(238,187,16)" rx="2" ry="2" />
<text  x="1164.13" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::u32_parser (1,689 samples, 0.49%)</title><rect x="432.9" y="389" width="5.8" height="15.0" fill="rgb(242,181,23)" rx="2" ry="2" />
<text  x="435.94" y="399.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_continuous_len (525 samples, 0.15%)</title><rect x="1060.5" y="405" width="1.8" height="15.0" fill="rgb(239,19,49)" rx="2" ry="2" />
<text  x="1063.46" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,164 samples, 0.34%)</title><rect x="382.0" y="405" width="4.0" height="15.0" fill="rgb(228,38,54)" rx="2" ry="2" />
<text  x="384.97" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::arith::Add&lt;&amp;str&gt;&gt;::add (420 samples, 0.12%)</title><rect x="335.2" y="373" width="1.4" height="15.0" fill="rgb(205,213,11)" rx="2" ry="2" />
<text  x="338.19" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (821 samples, 0.24%)</title><rect x="382.3" y="341" width="2.8" height="15.0" fill="rgb(215,162,4)" rx="2" ry="2" />
<text  x="385.28" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (101 samples, 0.03%)</title><rect x="334.5" y="197" width="0.4" height="15.0" fill="rgb(214,216,15)" rx="2" ry="2" />
<text  x="337.50" y="207.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,809 samples, 0.53%)</title><rect x="1081.0" y="293" width="6.2" height="15.0" fill="rgb(252,186,15)" rx="2" ry="2" />
<text  x="1084.01" y="303.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (114 samples, 0.03%)</title><rect x="240.7" y="245" width="0.4" height="15.0" fill="rgb(232,34,42)" rx="2" ry="2" />
<text  x="243.73" y="255.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::fill_cat_continuity (681 samples, 0.20%)</title><rect x="1168.7" y="453" width="2.3" height="15.0" fill="rgb(240,162,46)" rx="2" ry="2" />
<text  x="1171.65" y="463.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::captures_from_pos (3,430 samples, 1.00%)</title><rect x="302.2" y="421" width="11.8" height="15.0" fill="rgb(225,189,10)" rx="2" ry="2" />
<text  x="305.22" y="431.5" ></text>
</g>
<g >
<title>core::ptr::write (170 samples, 0.05%)</title><rect x="205.0" y="357" width="0.6" height="15.0" fill="rgb(239,9,24)" rx="2" ry="2" />
<text  x="208.03" y="367.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (99 samples, 0.03%)</title><rect x="429.0" y="229" width="0.3" height="15.0" fill="rgb(250,24,13)" rx="2" ry="2" />
<text  x="431.95" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::capacity (294 samples, 0.09%)</title><rect x="92.7" y="421" width="1.0" height="15.0" fill="rgb(236,102,36)" rx="2" ry="2" />
<text  x="95.72" y="431.5" ></text>
</g>
<g >
<title>alloc::string::String::reserve (103 samples, 0.03%)</title><rect x="291.4" y="405" width="0.3" height="15.0" fill="rgb(229,80,27)" rx="2" ry="2" />
<text  x="294.37" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (430 samples, 0.13%)</title><rect x="423.8" y="149" width="1.4" height="15.0" fill="rgb(207,200,47)" rx="2" ry="2" />
<text  x="426.76" y="159.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (863 samples, 0.25%)</title><rect x="325.1" y="405" width="3.0" height="15.0" fill="rgb(226,130,22)" rx="2" ry="2" />
<text  x="328.14" y="415.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (153 samples, 0.04%)</title><rect x="45.2" y="501" width="0.5" height="15.0" fill="rgb(238,183,38)" rx="2" ry="2" />
<text  x="48.22" y="511.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (4,000 samples, 1.16%)</title><rect x="90.2" y="453" width="13.8" height="15.0" fill="rgb(241,193,16)" rx="2" ry="2" />
<text  x="93.24" y="463.5" ></text>
</g>
<g >
<title>_int_realloc (818 samples, 0.24%)</title><rect x="498.3" y="53" width="2.8" height="15.0" fill="rgb(231,26,24)" rx="2" ry="2" />
<text  x="501.28" y="63.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (5,238 samples, 1.52%)</title><rect x="152.8" y="405" width="18.0" height="15.0" fill="rgb(241,18,35)" rx="2" ry="2" />
<text  x="155.79" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (276 samples, 0.08%)</title><rect x="335.4" y="261" width="1.0" height="15.0" fill="rgb(220,187,25)" rx="2" ry="2" />
<text  x="338.40" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::get (156 samples, 0.05%)</title><rect x="654.0" y="293" width="0.5" height="15.0" fill="rgb(251,200,49)" rx="2" ry="2" />
<text  x="656.99" y="303.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::is_nfkc_quick (4,931 samples, 1.44%)</title><rect x="1126.3" y="389" width="16.9" height="15.0" fill="rgb(218,43,47)" rx="2" ry="2" />
<text  x="1129.28" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (344 samples, 0.10%)</title><rect x="371.0" y="437" width="1.2" height="15.0" fill="rgb(211,56,40)" rx="2" ry="2" />
<text  x="373.99" y="447.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (132 samples, 0.04%)</title><rect x="558.1" y="341" width="0.5" height="15.0" fill="rgb(219,213,43)" rx="2" ry="2" />
<text  x="561.11" y="351.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl::{{closure}} (668 samples, 0.19%)</title><rect x="1102.8" y="373" width="2.3" height="15.0" fill="rgb(254,97,45)" rx="2" ry="2" />
<text  x="1105.77" y="383.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::is_shorter (143 samples, 0.04%)</title><rect x="322.6" y="437" width="0.5" height="15.0" fill="rgb(252,165,32)" rx="2" ry="2" />
<text  x="325.60" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::pool::PoolGuard&lt;std::panic::AssertUnwindSafe&lt;core::cell::RefCell&lt;regex::exec::ProgramCacheInner&gt;&gt;&gt;&gt; (207 samples, 0.06%)</title><rect x="286.1" y="325" width="0.7" height="15.0" fill="rgb(236,29,50)" rx="2" ry="2" />
<text  x="289.06" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,789 samples, 0.81%)</title><rect x="1070.3" y="261" width="9.6" height="15.0" fill="rgb(233,43,31)" rx="2" ry="2" />
<text  x="1073.34" y="271.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_of_range (326 samples, 0.09%)</title><rect x="328.4" y="437" width="1.1" height="15.0" fill="rgb(249,12,22)" rx="2" ry="2" />
<text  x="331.37" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (1,251 samples, 0.36%)</title><rect x="292.3" y="101" width="4.3" height="15.0" fill="rgb(239,57,2)" rx="2" ry="2" />
<text  x="295.34" y="111.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::ignore_yomigana::IgnoreYomiganaPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (1,750 samples, 0.51%)</title><rect x="1143.2" y="405" width="6.0" height="15.0" fill="rgb(221,210,40)" rx="2" ry="2" />
<text  x="1146.21" y="415.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Pattern::is_prefix (562 samples, 0.16%)</title><rect x="1152.1" y="133" width="1.9" height="15.0" fill="rgb(239,140,0)" rx="2" ry="2" />
<text  x="1155.09" y="143.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (625 samples, 0.18%)</title><rect x="1040.9" y="405" width="2.1" height="15.0" fill="rgb(230,148,24)" rx="2" ry="2" />
<text  x="1043.86" y="415.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (7,405 samples, 2.16%)</title><rect x="623.6" y="341" width="25.4" height="15.0" fill="rgb(239,104,8)" rx="2" ry="2" />
<text  x="626.57" y="351.5" >c..</text>
</g>
<g >
<title>sudachi::dic::connect::ConnectionMatrix::cost (11,962 samples, 3.48%)</title><rect x="895.6" y="405" width="41.1" height="15.0" fill="rgb(239,97,32)" rx="2" ry="2" />
<text  x="898.63" y="415.5" >sud..</text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (781 samples, 0.23%)</title><rect x="330.5" y="389" width="2.7" height="15.0" fill="rgb(217,3,31)" rx="2" ry="2" />
<text  x="333.48" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::LoadedDictionary::from_system_dictionary (287 samples, 0.08%)</title><rect x="79.3" y="485" width="1.0" height="15.0" fill="rgb(241,107,52)" rx="2" ry="2" />
<text  x="82.28" y="495.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (189 samples, 0.06%)</title><rect x="240.7" y="309" width="0.7" height="15.0" fill="rgb(211,24,44)" rx="2" ry="2" />
<text  x="243.73" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (417 samples, 0.12%)</title><rect x="1016.7" y="293" width="1.4" height="15.0" fill="rgb(218,63,36)" rx="2" ry="2" />
<text  x="1019.71" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (128 samples, 0.04%)</title><rect x="1101.2" y="373" width="0.4" height="15.0" fill="rgb(232,181,50)" rx="2" ry="2" />
<text  x="1104.17" y="383.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (246 samples, 0.07%)</title><rect x="538.1" y="133" width="0.9" height="15.0" fill="rgb(217,156,49)" rx="2" ry="2" />
<text  x="541.14" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (376 samples, 0.11%)</title><rect x="196.8" y="309" width="1.3" height="15.0" fill="rgb(212,123,17)" rx="2" ry="2" />
<text  x="199.84" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,173 samples, 0.34%)</title><rect x="381.9" y="421" width="4.1" height="15.0" fill="rgb(226,67,9)" rx="2" ry="2" />
<text  x="384.94" y="431.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (721 samples, 0.21%)</title><rect x="390.5" y="421" width="2.5" height="15.0" fill="rgb(245,196,11)" rx="2" ry="2" />
<text  x="393.49" y="431.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::can_bow (956 samples, 0.28%)</title><rect x="1048.7" y="453" width="3.3" height="15.0" fill="rgb(253,174,39)" rx="2" ry="2" />
<text  x="1051.70" y="463.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (301 samples, 0.09%)</title><rect x="417.8" y="213" width="1.1" height="15.0" fill="rgb(219,101,35)" rx="2" ry="2" />
<text  x="420.82" y="223.5" ></text>
</g>
<g >
<title>__rdl_alloc (153 samples, 0.04%)</title><rect x="1079.3" y="213" width="0.5" height="15.0" fill="rgb(213,87,9)" rx="2" ry="2" />
<text  x="1082.31" y="223.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (4,079 samples, 1.19%)</title><rect x="1127.4" y="357" width="14.0" height="15.0" fill="rgb(223,104,42)" rx="2" ry="2" />
<text  x="1130.43" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,652 samples, 0.48%)</title><rect x="1081.0" y="229" width="5.7" height="15.0" fill="rgb(245,178,53)" rx="2" ry="2" />
<text  x="1084.01" y="239.5" ></text>
</g>
<g >
<title>alloc::string::String::as_bytes (533 samples, 0.16%)</title><rect x="104.5" y="453" width="1.8" height="15.0" fill="rgb(212,113,53)" rx="2" ry="2" />
<text  x="107.47" y="463.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (198 samples, 0.06%)</title><rect x="1034.8" y="229" width="0.7" height="15.0" fill="rgb(253,211,43)" rx="2" ry="2" />
<text  x="1037.82" y="239.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (121 samples, 0.04%)</title><rect x="762.5" y="245" width="0.4" height="15.0" fill="rgb(224,36,16)" rx="2" ry="2" />
<text  x="765.47" y="255.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search_by (1,040 samples, 0.30%)</title><rect x="1164.4" y="421" width="3.5" height="15.0" fill="rgb(217,193,22)" rx="2" ry="2" />
<text  x="1167.38" y="431.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (22,166 samples, 6.45%)</title><rect x="578.9" y="437" width="76.1" height="15.0" fill="rgb(243,160,11)" rx="2" ry="2" />
<text  x="581.85" y="447.5" >&lt;core::i..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (423 samples, 0.12%)</title><rect x="1117.2" y="277" width="1.4" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="1120.18" y="287.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::append (603 samples, 0.18%)</title><rect x="339.4" y="437" width="2.0" height="15.0" fill="rgb(238,227,4)" rx="2" ry="2" />
<text  x="342.36" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (89 samples, 0.03%)</title><rect x="476.7" y="149" width="0.3" height="15.0" fill="rgb(250,157,4)" rx="2" ry="2" />
<text  x="479.70" y="159.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (90 samples, 0.03%)</title><rect x="1015.0" y="245" width="0.3" height="15.0" fill="rgb(207,116,9)" rx="2" ry="2" />
<text  x="1017.99" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (101 samples, 0.03%)</title><rect x="14.0" y="405" width="0.4" height="15.0" fill="rgb(249,41,17)" rx="2" ry="2" />
<text  x="17.01" y="415.5" ></text>
</g>
<g >
<title>all (343,603 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(242,192,38)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (689 samples, 0.20%)</title><rect x="309.4" y="293" width="2.4" height="15.0" fill="rgb(251,202,40)" rx="2" ry="2" />
<text  x="312.43" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (101 samples, 0.03%)</title><rect x="14.0" y="389" width="0.4" height="15.0" fill="rgb(239,151,54)" rx="2" ry="2" />
<text  x="17.01" y="399.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::mecab_oov::MeCabOovPlugin::provide_oov_gen (9,171 samples, 2.67%)</title><rect x="1057.6" y="421" width="31.5" height="15.0" fill="rgb(232,112,16)" rx="2" ry="2" />
<text  x="1060.58" y="431.5" >su..</text>
</g>
<g >
<title>sudachi::analysis::node::translate_node_ranges (308 samples, 0.09%)</title><rect x="316.9" y="453" width="1.1" height="15.0" fill="rgb(235,143,51)" rx="2" ry="2" />
<text  x="319.93" y="463.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search::{{closure}} (308 samples, 0.09%)</title><rect x="1166.9" y="405" width="1.0" height="15.0" fill="rgb(243,83,52)" rx="2" ry="2" />
<text  x="1169.89" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (101 samples, 0.03%)</title><rect x="334.5" y="181" width="0.4" height="15.0" fill="rgb(220,198,7)" rx="2" ry="2" />
<text  x="337.50" y="191.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next (158 samples, 0.05%)</title><rect x="220.2" y="277" width="0.6" height="15.0" fill="rgb(237,112,26)" rx="2" ry="2" />
<text  x="223.21" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (4,363 samples, 1.27%)</title><rect x="269.5" y="309" width="14.9" height="15.0" fill="rgb(215,72,35)" rx="2" ry="2" />
<text  x="272.45" y="319.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::shortest_dfa (192 samples, 0.06%)</title><rect x="300.6" y="357" width="0.7" height="15.0" fill="rgb(231,202,43)" rx="2" ry="2" />
<text  x="303.61" y="367.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (220 samples, 0.06%)</title><rect x="217.1" y="293" width="0.8" height="15.0" fill="rgb(243,182,29)" rx="2" ry="2" />
<text  x="220.13" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::decode_dictword_id (585 samples, 0.17%)</title><rect x="1046.3" y="437" width="2.0" height="15.0" fill="rgb(210,142,11)" rx="2" ry="2" />
<text  x="1049.30" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12,134 samples, 3.53%)</title><rect x="740.0" y="341" width="41.7" height="15.0" fill="rgb(240,124,37)" rx="2" ry="2" />
<text  x="743.03" y="351.5" >&lt;al..</text>
</g>
<g >
<title>alloc::alloc::alloc (2,762 samples, 0.80%)</title><rect x="1070.4" y="229" width="9.5" height="15.0" fill="rgb(212,32,12)" rx="2" ry="2" />
<text  x="1073.44" y="239.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (101 samples, 0.03%)</title><rect x="303.5" y="261" width="0.3" height="15.0" fill="rgb(237,227,8)" rx="2" ry="2" />
<text  x="306.45" y="271.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (92 samples, 0.03%)</title><rect x="1062.3" y="341" width="0.3" height="15.0" fill="rgb(251,180,28)" rx="2" ry="2" />
<text  x="1065.28" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (155 samples, 0.05%)</title><rect x="329.9" y="421" width="0.6" height="15.0" fill="rgb(221,64,52)" rx="2" ry="2" />
<text  x="332.95" y="431.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::find_at_no_state (1,031 samples, 0.30%)</title><rect x="1105.5" y="325" width="3.6" height="15.0" fill="rgb(227,131,29)" rx="2" ry="2" />
<text  x="1108.53" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (111 samples, 0.03%)</title><rect x="338.5" y="277" width="0.3" height="15.0" fill="rgb(245,212,18)" rx="2" ry="2" />
<text  x="341.46" y="287.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new_eos (90 samples, 0.03%)</title><rect x="689.4" y="437" width="0.3" height="15.0" fill="rgb(240,198,0)" rx="2" ry="2" />
<text  x="692.43" y="447.5" ></text>
</g>
<g >
<title>sudachi::sentence_detector::SentenceDetector::get_eos (59,647 samples, 17.36%)</title><rect x="109.6" y="469" width="204.8" height="15.0" fill="rgb(205,11,23)" rx="2" ry="2" />
<text  x="112.57" y="479.5" >sudachi::sentence_detector..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1,936 samples, 0.56%)</title><rect x="381.8" y="453" width="6.6" height="15.0" fill="rgb(249,28,6)" rx="2" ry="2" />
<text  x="384.76" y="463.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (365 samples, 0.11%)</title><rect x="1034.2" y="309" width="1.3" height="15.0" fill="rgb(243,26,47)" rx="2" ry="2" />
<text  x="1037.25" y="319.5" ></text>
</g>
<g >
<title>malloc_consolidate (152 samples, 0.04%)</title><rect x="368.3" y="293" width="0.5" height="15.0" fill="rgb(205,191,4)" rx="2" ry="2" />
<text  x="371.27" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (171 samples, 0.05%)</title><rect x="396.7" y="437" width="0.6" height="15.0" fill="rgb(223,122,24)" rx="2" ry="2" />
<text  x="399.70" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (92 samples, 0.03%)</title><rect x="1148.7" y="309" width="0.3" height="15.0" fill="rgb(254,185,39)" rx="2" ry="2" />
<text  x="1151.65" y="319.5" ></text>
</g>
<g >
<title>_int_malloc (540 samples, 0.16%)</title><rect x="19.9" y="501" width="1.9" height="15.0" fill="rgb(245,167,51)" rx="2" ry="2" />
<text  x="22.91" y="511.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (95 samples, 0.03%)</title><rect x="10.1" y="453" width="0.3" height="15.0" fill="rgb(206,187,45)" rx="2" ry="2" />
<text  x="13.11" y="463.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new_oov (469 samples, 0.14%)</title><rect x="1087.5" y="389" width="1.6" height="15.0" fill="rgb(212,99,17)" rx="2" ry="2" />
<text  x="1090.47" y="399.5" ></text>
</g>
<g >
<title>core::iter::adapters::process_results (160 samples, 0.05%)</title><rect x="334.4" y="341" width="0.6" height="15.0" fill="rgb(213,121,12)" rx="2" ry="2" />
<text  x="337.45" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::character_category::CharacterCategory::get_category_types (1,107 samples, 0.32%)</title><rect x="1164.3" y="453" width="3.8" height="15.0" fill="rgb(227,138,10)" rx="2" ry="2" />
<text  x="1167.26" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (155 samples, 0.05%)</title><rect x="334.5" y="293" width="0.5" height="15.0" fill="rgb(228,82,28)" rx="2" ry="2" />
<text  x="337.46" y="303.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_mul (242 samples, 0.07%)</title><rect x="947.7" y="229" width="0.8" height="15.0" fill="rgb(252,173,22)" rx="2" ry="2" />
<text  x="950.68" y="239.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::prefix_at (1,619 samples, 0.47%)</title><rect x="1150.5" y="277" width="5.6" height="15.0" fill="rgb(221,214,21)" rx="2" ry="2" />
<text  x="1153.53" y="287.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (718 samples, 0.21%)</title><rect x="1102.6" y="389" width="2.5" height="15.0" fill="rgb(219,58,22)" rx="2" ry="2" />
<text  x="1105.60" y="399.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (183 samples, 0.05%)</title><rect x="1066.4" y="325" width="0.6" height="15.0" fill="rgb(238,63,27)" rx="2" ry="2" />
<text  x="1069.39" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,638 samples, 1.93%)</title><rect x="952.9" y="357" width="22.8" height="15.0" fill="rgb(247,98,27)" rx="2" ry="2" />
<text  x="955.91" y="367.5" >&lt;..</text>
</g>
<g >
<title>unlink_chunk.constprop.0 (951 samples, 0.28%)</title><rect x="804.5" y="309" width="3.3" height="15.0" fill="rgb(247,99,21)" rx="2" ry="2" />
<text  x="807.51" y="319.5" ></text>
</g>
<g >
<title>unicode_normalization::tables::qc_nfkc (1,416 samples, 0.41%)</title><rect x="1120.7" y="325" width="4.9" height="15.0" fill="rgb(253,184,7)" rx="2" ry="2" />
<text  x="1123.71" y="335.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (6,923 samples, 2.01%)</title><rect x="814.4" y="405" width="23.8" height="15.0" fill="rgb(234,94,43)" rx="2" ry="2" />
<text  x="817.43" y="415.5" >_..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::truncate (3,738 samples, 1.09%)</title><rect x="1172.1" y="453" width="12.9" height="15.0" fill="rgb(230,173,26)" rx="2" ry="2" />
<text  x="1175.14" y="463.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,607 samples, 0.47%)</title><rect x="1143.4" y="373" width="5.6" height="15.0" fill="rgb(236,179,5)" rx="2" ry="2" />
<text  x="1146.45" y="383.5" ></text>
</g>
<g >
<title>core::mem::drop (192 samples, 0.06%)</title><rect x="336.9" y="373" width="0.7" height="15.0" fill="rgb(253,115,3)" rx="2" ry="2" />
<text  x="339.89" y="383.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (22,630 samples, 6.59%)</title><rect x="578.9" y="453" width="77.7" height="15.0" fill="rgb(220,129,10)" rx="2" ry="2" />
<text  x="581.85" y="463.5" >&lt;core::i..</text>
</g>
<g >
<title>core::ptr::write (699 samples, 0.20%)</title><rect x="1063.1" y="389" width="2.4" height="15.0" fill="rgb(221,51,32)" rx="2" ry="2" />
<text  x="1066.12" y="399.5" ></text>
</g>
<g >
<title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (114 samples, 0.03%)</title><rect x="477.3" y="261" width="0.4" height="15.0" fill="rgb(244,206,22)" rx="2" ry="2" />
<text  x="480.28" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (363 samples, 0.11%)</title><rect x="272.9" y="277" width="1.3" height="15.0" fill="rgb(231,128,23)" rx="2" ry="2" />
<text  x="275.91" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (101 samples, 0.03%)</title><rect x="322.1" y="421" width="0.3" height="15.0" fill="rgb(237,144,50)" rx="2" ry="2" />
<text  x="325.09" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (165 samples, 0.05%)</title><rect x="314.8" y="453" width="0.5" height="15.0" fill="rgb(224,191,11)" rx="2" ry="2" />
<text  x="317.75" y="463.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (140 samples, 0.04%)</title><rect x="43.8" y="501" width="0.4" height="15.0" fill="rgb(208,84,24)" rx="2" ry="2" />
<text  x="46.75" y="511.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (269 samples, 0.08%)</title><rect x="224.0" y="309" width="1.0" height="15.0" fill="rgb(220,42,32)" rx="2" ry="2" />
<text  x="227.04" y="319.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (838 samples, 0.24%)</title><rect x="777.8" y="245" width="2.9" height="15.0" fill="rgb(237,152,19)" rx="2" ry="2" />
<text  x="780.80" y="255.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::string_number::StringNumber::to_string (112 samples, 0.03%)</title><rect x="339.0" y="405" width="0.4" height="15.0" fill="rgb(252,206,0)" rx="2" ry="2" />
<text  x="341.97" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (171 samples, 0.05%)</title><rect x="948.5" y="277" width="0.6" height="15.0" fill="rgb(228,161,8)" rx="2" ry="2" />
<text  x="951.51" y="287.5" ></text>
</g>
<g >
<title>_int_free (246 samples, 0.07%)</title><rect x="414.9" y="293" width="0.9" height="15.0" fill="rgb(213,88,30)" rx="2" ry="2" />
<text  x="417.94" y="303.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin::concat (1,711 samples, 0.50%)</title><rect x="333.5" y="437" width="5.9" height="15.0" fill="rgb(220,215,8)" rx="2" ry="2" />
<text  x="336.48" y="447.5" ></text>
</g>
<g >
<title>unicode_normalization::tables::qc_nfkc (2,906 samples, 0.85%)</title><rect x="1131.5" y="341" width="9.9" height="15.0" fill="rgb(227,108,51)" rx="2" ry="2" />
<text  x="1134.46" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (99 samples, 0.03%)</title><rect x="1148.0" y="293" width="0.4" height="15.0" fill="rgb(217,27,42)" rx="2" ry="2" />
<text  x="1151.05" y="303.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (115 samples, 0.03%)</title><rect x="537.7" y="117" width="0.4" height="15.0" fill="rgb(225,175,44)" rx="2" ry="2" />
<text  x="540.75" y="127.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (101 samples, 0.03%)</title><rect x="303.5" y="277" width="0.3" height="15.0" fill="rgb(219,29,51)" rx="2" ry="2" />
<text  x="306.45" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,712 samples, 1.08%)</title><rect x="490.5" y="197" width="12.8" height="15.0" fill="rgb(237,195,1)" rx="2" ry="2" />
<text  x="493.50" y="207.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (117 samples, 0.03%)</title><rect x="338.5" y="373" width="0.4" height="15.0" fill="rgb(231,173,22)" rx="2" ry="2" />
<text  x="341.46" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (6,634 samples, 1.93%)</title><rect x="952.9" y="325" width="22.8" height="15.0" fill="rgb(212,189,4)" rx="2" ry="2" />
<text  x="955.92" y="335.5" >a..</text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify128 (1,133 samples, 0.33%)</title><rect x="1151.5" y="181" width="3.9" height="15.0" fill="rgb(210,101,11)" rx="2" ry="2" />
<text  x="1154.54" y="191.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (71,830 samples, 20.90%)</title><rect x="690.2" y="453" width="246.7" height="15.0" fill="rgb(213,46,12)" rx="2" ry="2" />
<text  x="693.21" y="463.5" >sudachi::analysis::lattice::Latt..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (422 samples, 0.12%)</title><rect x="104.9" y="421" width="1.4" height="15.0" fill="rgb(237,87,51)" rx="2" ry="2" />
<text  x="107.85" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,881 samples, 0.84%)</title><rect x="441.9" y="293" width="9.9" height="15.0" fill="rgb(205,21,41)" rx="2" ry="2" />
<text  x="444.95" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with (137 samples, 0.04%)</title><rect x="1170.1" y="421" width="0.4" height="15.0" fill="rgb(239,103,21)" rx="2" ry="2" />
<text  x="1173.07" y="431.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (818 samples, 0.24%)</title><rect x="325.1" y="373" width="2.8" height="15.0" fill="rgb(243,113,35)" rx="2" ry="2" />
<text  x="328.14" y="383.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::next_state_no_fail (359 samples, 0.10%)</title><rect x="1111.9" y="277" width="1.2" height="15.0" fill="rgb(232,227,7)" rx="2" ry="2" />
<text  x="1114.91" y="287.5" ></text>
</g>
<g >
<title>__memchr_sse2 (213 samples, 0.06%)</title><rect x="86.4" y="357" width="0.7" height="15.0" fill="rgb(209,141,5)" rx="2" ry="2" />
<text  x="89.40" y="367.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::find_from_pos (52,614 samples, 15.31%)</title><rect x="110.2" y="437" width="180.7" height="15.0" fill="rgb(244,220,37)" rx="2" ry="2" />
<text  x="113.24" y="447.5" >fancy_regex::Regex::fin..</text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (137 samples, 0.04%)</title><rect x="453.3" y="325" width="0.5" height="15.0" fill="rgb(205,181,37)" rx="2" ry="2" />
<text  x="456.32" y="335.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (126 samples, 0.04%)</title><rect x="373.2" y="421" width="0.4" height="15.0" fill="rgb(222,228,13)" rx="2" ry="2" />
<text  x="376.18" y="431.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (114 samples, 0.03%)</title><rect x="477.3" y="229" width="0.4" height="15.0" fill="rgb(244,48,48)" rx="2" ry="2" />
<text  x="480.28" y="239.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (90 samples, 0.03%)</title><rect x="87.2" y="485" width="0.3" height="15.0" fill="rgb(251,119,42)" rx="2" ry="2" />
<text  x="90.17" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (315 samples, 0.09%)</title><rect x="335.3" y="293" width="1.1" height="15.0" fill="rgb(233,184,22)" rx="2" ry="2" />
<text  x="338.27" y="303.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (417 samples, 0.12%)</title><rect x="1016.7" y="341" width="1.4" height="15.0" fill="rgb(211,181,33)" rx="2" ry="2" />
<text  x="1019.71" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (417 samples, 0.12%)</title><rect x="414.4" y="405" width="1.4" height="15.0" fill="rgb(227,213,2)" rx="2" ry="2" />
<text  x="417.41" y="415.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::replace_slow (4,973 samples, 1.45%)</title><rect x="1109.2" y="389" width="17.1" height="15.0" fill="rgb(247,226,52)" rx="2" ry="2" />
<text  x="1112.20" y="399.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (1,308 samples, 0.38%)</title><rect x="1143.5" y="357" width="4.5" height="15.0" fill="rgb(247,49,20)" rx="2" ry="2" />
<text  x="1146.54" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (238 samples, 0.07%)</title><rect x="40.3" y="485" width="0.8" height="15.0" fill="rgb(218,56,28)" rx="2" ry="2" />
<text  x="43.32" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (2,077 samples, 0.60%)</title><rect x="494.0" y="69" width="7.1" height="15.0" fill="rgb(223,41,17)" rx="2" ry="2" />
<text  x="496.97" y="79.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (148 samples, 0.04%)</title><rect x="14.0" y="469" width="0.5" height="15.0" fill="rgb(253,140,21)" rx="2" ry="2" />
<text  x="17.01" y="479.5" ></text>
</g>
<g >
<title>alloc::string::String::push (5,748 samples, 1.67%)</title><rect x="488.5" y="261" width="19.7" height="15.0" fill="rgb(222,164,6)" rx="2" ry="2" />
<text  x="491.46" y="271.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (212 samples, 0.06%)</title><rect x="10.8" y="501" width="0.7" height="15.0" fill="rgb(215,61,9)" rx="2" ry="2" />
<text  x="13.76" y="511.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_at (4,718 samples, 1.37%)</title><rect x="211.8" y="389" width="16.2" height="15.0" fill="rgb(210,55,11)" rx="2" ry="2" />
<text  x="214.82" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (713 samples, 0.21%)</title><rect x="426.1" y="133" width="2.5" height="15.0" fill="rgb(249,78,13)" rx="2" ry="2" />
<text  x="429.13" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (98 samples, 0.03%)</title><rect x="334.5" y="165" width="0.3" height="15.0" fill="rgb(215,221,25)" rx="2" ry="2" />
<text  x="337.51" y="175.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (330 samples, 0.10%)</title><rect x="389.4" y="405" width="1.1" height="15.0" fill="rgb(219,182,14)" rx="2" ry="2" />
<text  x="392.36" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (130 samples, 0.04%)</title><rect x="174.8" y="341" width="0.4" height="15.0" fill="rgb(221,89,15)" rx="2" ry="2" />
<text  x="177.76" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (104 samples, 0.03%)</title><rect x="334.5" y="229" width="0.4" height="15.0" fill="rgb(225,4,37)" rx="2" ry="2" />
<text  x="337.49" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (2,033 samples, 0.59%)</title><rect x="291.8" y="293" width="6.9" height="15.0" fill="rgb(235,75,7)" rx="2" ry="2" />
<text  x="294.75" y="303.5" ></text>
</g>
<g >
<title>&lt;unicode_normalization::recompose::Recompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (378 samples, 0.11%)</title><rect x="1115.5" y="357" width="1.3" height="15.0" fill="rgb(231,62,10)" rx="2" ry="2" />
<text  x="1118.45" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (863 samples, 0.25%)</title><rect x="325.1" y="389" width="3.0" height="15.0" fill="rgb(215,70,24)" rx="2" ry="2" />
<text  x="328.14" y="399.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3,795 samples, 1.10%)</title><rect x="248.6" y="261" width="13.0" height="15.0" fill="rgb(230,20,50)" rx="2" ry="2" />
<text  x="251.60" y="271.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,397 samples, 0.41%)</title><rect x="944.3" y="325" width="4.8" height="15.0" fill="rgb(221,0,17)" rx="2" ry="2" />
<text  x="947.30" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,789 samples, 0.81%)</title><rect x="1070.3" y="293" width="9.6" height="15.0" fill="rgb(226,80,32)" rx="2" ry="2" />
<text  x="1073.34" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (781 samples, 0.23%)</title><rect x="330.5" y="421" width="2.7" height="15.0" fill="rgb(242,28,8)" rx="2" ry="2" />
<text  x="333.48" y="431.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (516 samples, 0.15%)</title><rect x="475.3" y="277" width="1.7" height="15.0" fill="rgb(224,77,34)" rx="2" ry="2" />
<text  x="478.25" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (540 samples, 0.16%)</title><rect x="426.6" y="101" width="1.9" height="15.0" fill="rgb(206,11,13)" rx="2" ry="2" />
<text  x="429.60" y="111.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (2,930 samples, 0.85%)</title><rect x="746.2" y="261" width="10.1" height="15.0" fill="rgb(227,181,7)" rx="2" ry="2" />
<text  x="749.25" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (206 samples, 0.06%)</title><rect x="1061.0" y="373" width="0.7" height="15.0" fill="rgb(211,14,29)" rx="2" ry="2" />
<text  x="1063.97" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (508 samples, 0.15%)</title><rect x="871.6" y="421" width="1.8" height="15.0" fill="rgb(221,184,6)" rx="2" ry="2" />
<text  x="874.62" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (120 samples, 0.03%)</title><rect x="335.8" y="213" width="0.4" height="15.0" fill="rgb(253,161,38)" rx="2" ry="2" />
<text  x="338.81" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_info (46,602 samples, 13.56%)</title><rect x="399.9" y="453" width="160.0" height="15.0" fill="rgb(242,100,54)" rx="2" ry="2" />
<text  x="402.86" y="463.5" >sudachi::dic::lexico..</text>
</g>
<g >
<title>__rdl_alloc (247 samples, 0.07%)</title><rect x="538.1" y="149" width="0.9" height="15.0" fill="rgb(238,7,51)" rx="2" ry="2" />
<text  x="541.14" y="159.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::get (197 samples, 0.06%)</title><rect x="198.2" y="389" width="0.7" height="15.0" fill="rgb(252,222,2)" rx="2" ry="2" />
<text  x="201.23" y="399.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (116 samples, 0.03%)</title><rect x="1033.9" y="341" width="0.3" height="15.0" fill="rgb(209,102,29)" rx="2" ry="2" />
<text  x="1036.85" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (162 samples, 0.05%)</title><rect x="736.0" y="341" width="0.6" height="15.0" fill="rgb(223,86,18)" rx="2" ry="2" />
<text  x="739.00" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memchr (220 samples, 0.06%)</title><rect x="86.4" y="373" width="0.8" height="15.0" fill="rgb(247,109,5)" rx="2" ry="2" />
<text  x="89.40" y="383.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,031 samples, 0.88%)</title><rect x="463.1" y="293" width="10.4" height="15.0" fill="rgb(206,72,48)" rx="2" ry="2" />
<text  x="466.06" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2,631 samples, 0.77%)</title><rect x="442.2" y="213" width="9.1" height="15.0" fill="rgb(206,119,33)" rx="2" ry="2" />
<text  x="445.24" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (145 samples, 0.04%)</title><rect x="340.2" y="309" width="0.5" height="15.0" fill="rgb(208,43,30)" rx="2" ry="2" />
<text  x="343.17" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (2,179 samples, 0.63%)</title><rect x="1090.6" y="469" width="7.5" height="15.0" fill="rgb(248,158,19)" rx="2" ry="2" />
<text  x="1093.58" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (413 samples, 0.12%)</title><rect x="414.4" y="341" width="1.4" height="15.0" fill="rgb(220,63,53)" rx="2" ry="2" />
<text  x="417.41" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (307 samples, 0.09%)</title><rect x="424.0" y="101" width="1.1" height="15.0" fill="rgb(224,69,31)" rx="2" ry="2" />
<text  x="427.01" y="111.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (331 samples, 0.10%)</title><rect x="158.3" y="389" width="1.1" height="15.0" fill="rgb(240,108,34)" rx="2" ry="2" />
<text  x="161.26" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,529 samples, 0.44%)</title><rect x="937.5" y="341" width="5.2" height="15.0" fill="rgb(226,195,12)" rx="2" ry="2" />
<text  x="940.48" y="351.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at (189 samples, 0.06%)</title><rect x="1018.6" y="325" width="0.6" height="15.0" fill="rgb(215,184,23)" rx="2" ry="2" />
<text  x="1021.55" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (132 samples, 0.04%)</title><rect x="174.8" y="373" width="0.4" height="15.0" fill="rgb(221,146,14)" rx="2" ry="2" />
<text  x="177.76" y="383.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (289 samples, 0.08%)</title><rect x="168.9" y="373" width="0.9" height="15.0" fill="rgb(247,75,5)" rx="2" ry="2" />
<text  x="171.86" y="383.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,203 samples, 5.59%)</title><rect x="583.1" y="389" width="65.9" height="15.0" fill="rgb(210,79,53)" rx="2" ry="2" />
<text  x="586.05" y="399.5" >&lt;core::..</text>
</g>
<g >
<title>__GI___libc_realloc (11,800 samples, 3.43%)</title><rect x="740.4" y="293" width="40.6" height="15.0" fill="rgb(205,68,39)" rx="2" ry="2" />
<text  x="743.44" y="303.5" >__G..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (228 samples, 0.07%)</title><rect x="1171.1" y="421" width="0.8" height="15.0" fill="rgb(215,210,5)" rx="2" ry="2" />
<text  x="1174.09" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (338 samples, 0.10%)</title><rect x="950.0" y="389" width="1.2" height="15.0" fill="rgb(243,197,41)" rx="2" ry="2" />
<text  x="953.04" y="399.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::build (171 samples, 0.05%)</title><rect x="1168.1" y="453" width="0.6" height="15.0" fill="rgb(214,120,15)" rx="2" ry="2" />
<text  x="1171.07" y="463.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (687 samples, 0.20%)</title><rect x="390.6" y="405" width="2.4" height="15.0" fill="rgb(211,177,20)" rx="2" ry="2" />
<text  x="393.61" y="415.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (211 samples, 0.06%)</title><rect x="1171.1" y="405" width="0.7" height="15.0" fill="rgb(230,49,43)" rx="2" ry="2" />
<text  x="1174.09" y="415.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::simple_oov::SimpleOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (321 samples, 0.09%)</title><rect x="1089.1" y="437" width="1.1" height="15.0" fill="rgb(236,50,25)" rx="2" ry="2" />
<text  x="1092.08" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (399 samples, 0.12%)</title><rect x="335.3" y="309" width="1.3" height="15.0" fill="rgb(223,203,47)" rx="2" ry="2" />
<text  x="338.26" y="319.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (270 samples, 0.08%)</title><rect x="145.6" y="389" width="1.0" height="15.0" fill="rgb(239,149,12)" rx="2" ry="2" />
<text  x="148.62" y="399.5" ></text>
</g>
<g >
<title>&lt;sudachi::output::Simple as sudachi::output::SudachiOutput&lt;T&gt;&gt;::write (143 samples, 0.04%)</title><rect x="104.0" y="453" width="0.5" height="15.0" fill="rgb(216,218,20)" rx="2" ry="2" />
<text  x="106.98" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,652 samples, 0.48%)</title><rect x="1081.0" y="245" width="5.7" height="15.0" fill="rgb(227,59,32)" rx="2" ry="2" />
<text  x="1084.01" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (107 samples, 0.03%)</title><rect x="1067.9" y="277" width="0.3" height="15.0" fill="rgb(253,126,31)" rx="2" ry="2" />
<text  x="1070.87" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (319 samples, 0.09%)</title><rect x="1045.1" y="437" width="1.0" height="15.0" fill="rgb(231,81,26)" rx="2" ry="2" />
<text  x="1048.05" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,443 samples, 0.71%)</title><rect x="493.6" y="117" width="8.4" height="15.0" fill="rgb(247,198,2)" rx="2" ry="2" />
<text  x="496.61" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (220 samples, 0.06%)</title><rect x="342.5" y="437" width="0.7" height="15.0" fill="rgb(253,181,15)" rx="2" ry="2" />
<text  x="345.48" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[sudachi::analysis::node::Node]&gt; (3,720 samples, 1.08%)</title><rect x="1172.2" y="437" width="12.8" height="15.0" fill="rgb(227,217,42)" rx="2" ry="2" />
<text  x="1175.20" y="447.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (527 samples, 0.15%)</title><rect x="553.5" y="325" width="1.8" height="15.0" fill="rgb(253,195,33)" rx="2" ry="2" />
<text  x="556.53" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (88 samples, 0.03%)</title><rect x="341.6" y="293" width="0.3" height="15.0" fill="rgb(235,84,1)" rx="2" ry="2" />
<text  x="344.65" y="303.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (95 samples, 0.03%)</title><rect x="559.6" y="389" width="0.3" height="15.0" fill="rgb(208,168,39)" rx="2" ry="2" />
<text  x="562.57" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2,622 samples, 0.76%)</title><rect x="291.3" y="437" width="9.0" height="15.0" fill="rgb(237,127,27)" rx="2" ry="2" />
<text  x="294.32" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (122 samples, 0.04%)</title><rect x="190.7" y="341" width="0.4" height="15.0" fill="rgb(209,209,42)" rx="2" ry="2" />
<text  x="193.69" y="351.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (327 samples, 0.10%)</title><rect x="520.9" y="101" width="1.1" height="15.0" fill="rgb(252,31,51)" rx="2" ry="2" />
<text  x="523.89" y="111.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (175 samples, 0.05%)</title><rect x="12.0" y="501" width="0.6" height="15.0" fill="rgb(248,33,40)" rx="2" ry="2" />
<text  x="14.99" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (107 samples, 0.03%)</title><rect x="1148.0" y="341" width="0.4" height="15.0" fill="rgb(254,87,38)" rx="2" ry="2" />
<text  x="1151.03" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (101 samples, 0.03%)</title><rect x="14.0" y="357" width="0.4" height="15.0" fill="rgb(235,177,31)" rx="2" ry="2" />
<text  x="17.01" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free (98 samples, 0.03%)</title><rect x="338.5" y="261" width="0.3" height="15.0" fill="rgb(206,4,39)" rx="2" ry="2" />
<text  x="341.49" y="271.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::u8_class (273 samples, 0.08%)</title><rect x="275.8" y="245" width="0.9" height="15.0" fill="rgb(232,200,24)" rx="2" ry="2" />
<text  x="278.77" y="255.5" ></text>
</g>
<g >
<title>regex::pool::THREAD_ID::__getit (92 samples, 0.03%)</title><rect x="227.6" y="293" width="0.3" height="15.0" fill="rgb(211,179,32)" rx="2" ry="2" />
<text  x="230.57" y="303.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::PathRewritePlugin::concatenate::{{closure}} (453 samples, 0.13%)</title><rect x="335.1" y="389" width="1.6" height="15.0" fill="rgb(237,151,35)" rx="2" ry="2" />
<text  x="338.09" y="399.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (450 samples, 0.13%)</title><rect x="192.7" y="373" width="1.6" height="15.0" fill="rgb(250,101,26)" rx="2" ry="2" />
<text  x="195.73" y="383.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::fill_word_info (48,549 samples, 14.13%)</title><rect x="393.2" y="469" width="166.7" height="15.0" fill="rgb(232,22,38)" rx="2" ry="2" />
<text  x="396.17" y="479.5" >sudachi::analysis::no..</text>
</g>
<g >
<title>alloc::string::String::push (124 samples, 0.04%)</title><rect x="489.2" y="213" width="0.4" height="15.0" fill="rgb(242,69,19)" rx="2" ry="2" />
<text  x="492.19" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_id (268 samples, 0.08%)</title><rect x="1047.4" y="421" width="0.9" height="15.0" fill="rgb(254,128,17)" rx="2" ry="2" />
<text  x="1050.39" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (128 samples, 0.04%)</title><rect x="303.4" y="325" width="0.4" height="15.0" fill="rgb(239,68,37)" rx="2" ry="2" />
<text  x="306.37" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (2,665 samples, 0.78%)</title><rect x="351.3" y="341" width="9.2" height="15.0" fill="rgb(236,208,47)" rx="2" ry="2" />
<text  x="354.33" y="351.5" ></text>
</g>
<g >
<title>unicode_normalization::perfect_hash::mph_lookup (200 samples, 0.06%)</title><rect x="1125.6" y="325" width="0.7" height="15.0" fill="rgb(245,50,1)" rx="2" ry="2" />
<text  x="1128.59" y="335.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::captures_nfa_type (848 samples, 0.25%)</title><rect x="304.8" y="357" width="2.9" height="15.0" fill="rgb(235,171,29)" rx="2" ry="2" />
<text  x="307.76" y="367.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (689 samples, 0.20%)</title><rect x="698.4" y="405" width="2.3" height="15.0" fill="rgb(227,155,35)" rx="2" ry="2" />
<text  x="701.35" y="415.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (114 samples, 0.03%)</title><rect x="477.3" y="245" width="0.4" height="15.0" fill="rgb(208,70,12)" rx="2" ry="2" />
<text  x="480.28" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (154 samples, 0.04%)</title><rect x="337.0" y="325" width="0.6" height="15.0" fill="rgb(213,71,6)" rx="2" ry="2" />
<text  x="340.02" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,158 samples, 1.21%)</title><rect x="508.5" y="229" width="14.3" height="15.0" fill="rgb(223,170,24)" rx="2" ry="2" />
<text  x="511.54" y="239.5" ></text>
</g>
<g >
<title>_int_realloc (97 samples, 0.03%)</title><rect x="424.6" y="37" width="0.3" height="15.0" fill="rgb(253,21,53)" rx="2" ry="2" />
<text  x="427.59" y="47.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::find_at (1,458 samples, 0.42%)</title><rect x="1150.9" y="213" width="5.1" height="15.0" fill="rgb(244,92,44)" rx="2" ry="2" />
<text  x="1153.95" y="223.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (186 samples, 0.05%)</title><rect x="300.6" y="341" width="0.7" height="15.0" fill="rgb(248,146,30)" rx="2" ry="2" />
<text  x="303.62" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,813 samples, 0.82%)</title><rect x="529.5" y="213" width="9.6" height="15.0" fill="rgb(227,136,12)" rx="2" ry="2" />
<text  x="532.48" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (213 samples, 0.06%)</title><rect x="385.1" y="357" width="0.7" height="15.0" fill="rgb(234,44,45)" rx="2" ry="2" />
<text  x="388.10" y="367.5" ></text>
</g>
<g >
<title>_int_free (147 samples, 0.04%)</title><rect x="383.4" y="277" width="0.5" height="15.0" fill="rgb(220,114,34)" rx="2" ry="2" />
<text  x="386.43" y="287.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (406 samples, 0.12%)</title><rect x="1119.3" y="325" width="1.4" height="15.0" fill="rgb(248,217,46)" rx="2" ry="2" />
<text  x="1122.32" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,881 samples, 0.84%)</title><rect x="441.9" y="261" width="9.9" height="15.0" fill="rgb(231,203,26)" rx="2" ry="2" />
<text  x="444.95" y="271.5" ></text>
</g>
<g >
<title>core::ptr::write (467 samples, 0.14%)</title><rect x="191.1" y="373" width="1.6" height="15.0" fill="rgb(211,147,42)" rx="2" ry="2" />
<text  x="194.11" y="383.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (289 samples, 0.08%)</title><rect x="168.9" y="389" width="0.9" height="15.0" fill="rgb(243,229,19)" rx="2" ry="2" />
<text  x="171.86" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (363 samples, 0.11%)</title><rect x="48.1" y="501" width="1.2" height="15.0" fill="rgb(226,93,18)" rx="2" ry="2" />
<text  x="51.05" y="511.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (269 samples, 0.08%)</title><rect x="653.1" y="357" width="0.9" height="15.0" fill="rgb(250,49,7)" rx="2" ry="2" />
<text  x="656.07" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (154 samples, 0.04%)</title><rect x="152.3" y="389" width="0.5" height="15.0" fill="rgb(217,64,36)" rx="2" ry="2" />
<text  x="155.26" y="399.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,809 samples, 0.53%)</title><rect x="1081.0" y="325" width="6.2" height="15.0" fill="rgb(207,52,36)" rx="2" ry="2" />
<text  x="1084.01" y="335.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (150 samples, 0.04%)</title><rect x="1061.7" y="357" width="0.5" height="15.0" fill="rgb(234,162,46)" rx="2" ry="2" />
<text  x="1064.67" y="367.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (450 samples, 0.13%)</title><rect x="192.7" y="357" width="1.6" height="15.0" fill="rgb(230,76,21)" rx="2" ry="2" />
<text  x="195.73" y="367.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (147 samples, 0.04%)</title><rect x="501.3" y="53" width="0.5" height="15.0" fill="rgb(234,119,9)" rx="2" ry="2" />
<text  x="504.34" y="63.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (88 samples, 0.03%)</title><rect x="1153.7" y="85" width="0.3" height="15.0" fill="rgb(229,142,46)" rx="2" ry="2" />
<text  x="1156.72" y="95.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,575 samples, 0.46%)</title><rect x="215.6" y="309" width="5.4" height="15.0" fill="rgb(239,42,41)" rx="2" ry="2" />
<text  x="218.55" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (119 samples, 0.03%)</title><rect x="1061.3" y="357" width="0.4" height="15.0" fill="rgb(222,97,39)" rx="2" ry="2" />
<text  x="1064.27" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (145 samples, 0.04%)</title><rect x="340.2" y="325" width="0.5" height="15.0" fill="rgb(253,65,36)" rx="2" ry="2" />
<text  x="343.17" y="335.5" ></text>
</g>
<g >
<title>__libc_write (164 samples, 0.05%)</title><rect x="93.9" y="341" width="0.6" height="15.0" fill="rgb(228,187,1)" rx="2" ry="2" />
<text  x="96.90" y="351.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (93 samples, 0.03%)</title><rect x="189.2" y="357" width="0.3" height="15.0" fill="rgb(221,179,24)" rx="2" ry="2" />
<text  x="192.16" y="367.5" ></text>
</g>
<g >
<title>_int_malloc (302 samples, 0.09%)</title><rect x="383.9" y="277" width="1.1" height="15.0" fill="rgb(248,57,16)" rx="2" ry="2" />
<text  x="386.93" y="287.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (187 samples, 0.05%)</title><rect x="285.4" y="341" width="0.7" height="15.0" fill="rgb(240,19,24)" rx="2" ry="2" />
<text  x="288.42" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (1,252 samples, 0.36%)</title><rect x="292.3" y="117" width="4.3" height="15.0" fill="rgb(235,148,49)" rx="2" ry="2" />
<text  x="295.33" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (138 samples, 0.04%)</title><rect x="204.0" y="373" width="0.5" height="15.0" fill="rgb(235,159,51)" rx="2" ry="2" />
<text  x="207.05" y="383.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (348 samples, 0.10%)</title><rect x="27.2" y="501" width="1.2" height="15.0" fill="rgb(220,149,19)" rx="2" ry="2" />
<text  x="30.25" y="511.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::word_info_parser (34,987 samples, 10.18%)</title><rect x="438.7" y="405" width="120.2" height="15.0" fill="rgb(218,194,24)" rx="2" ry="2" />
<text  x="441.74" y="415.5" >sudachi::dic::..</text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::rewrite_gen (833 samples, 0.24%)</title><rect x="320.2" y="453" width="2.9" height="15.0" fill="rgb(248,118,35)" rx="2" ry="2" />
<text  x="323.23" y="463.5" ></text>
</g>
<g >
<title>_int_malloc (198 samples, 0.06%)</title><rect x="385.1" y="341" width="0.7" height="15.0" fill="rgb(245,21,36)" rx="2" ry="2" />
<text  x="388.15" y="351.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite (17,001 samples, 4.95%)</title><rect x="1098.6" y="453" width="58.4" height="15.0" fill="rgb(212,86,17)" rx="2" ry="2" />
<text  x="1101.62" y="463.5" >sudach..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (90 samples, 0.03%)</title><rect x="211.0" y="373" width="0.3" height="15.0" fill="rgb(231,203,5)" rx="2" ry="2" />
<text  x="213.97" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (716 samples, 0.21%)</title><rect x="426.1" y="213" width="2.5" height="15.0" fill="rgb(227,15,30)" rx="2" ry="2" />
<text  x="429.12" y="223.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (3,449 samples, 1.00%)</title><rect x="441.9" y="341" width="11.9" height="15.0" fill="rgb(243,63,52)" rx="2" ry="2" />
<text  x="444.95" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (5,545 samples, 1.61%)</title><rect x="1000.2" y="421" width="19.0" height="15.0" fill="rgb(244,76,29)" rx="2" ry="2" />
<text  x="1003.16" y="431.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,119 samples, 0.33%)</title><rect x="1143.9" y="309" width="3.9" height="15.0" fill="rgb(234,79,51)" rx="2" ry="2" />
<text  x="1146.94" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (716 samples, 0.21%)</title><rect x="426.1" y="229" width="2.5" height="15.0" fill="rgb(220,126,2)" rx="2" ry="2" />
<text  x="429.12" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (421 samples, 0.12%)</title><rect x="196.8" y="373" width="1.4" height="15.0" fill="rgb(250,39,23)" rx="2" ry="2" />
<text  x="199.78" y="383.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (124 samples, 0.04%)</title><rect x="217.5" y="277" width="0.4" height="15.0" fill="rgb(218,58,10)" rx="2" ry="2" />
<text  x="220.46" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::output::Simple as sudachi::output::SudachiOutput&lt;T&gt;&gt;::write (6,273 samples, 1.83%)</title><rect x="87.6" y="485" width="21.6" height="15.0" fill="rgb(206,88,21)" rx="2" ry="2" />
<text  x="90.65" y="495.5" >&lt;..</text>
</g>
<g >
<title>alloc::string::String::with_capacity (4,259 samples, 1.24%)</title><rect x="508.2" y="261" width="14.6" height="15.0" fill="rgb(231,39,5)" rx="2" ry="2" />
<text  x="511.20" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (112 samples, 0.03%)</title><rect x="502.4" y="101" width="0.4" height="15.0" fill="rgb(238,49,3)" rx="2" ry="2" />
<text  x="505.37" y="111.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,881 samples, 0.84%)</title><rect x="441.9" y="309" width="9.9" height="15.0" fill="rgb(243,125,48)" rx="2" ry="2" />
<text  x="444.95" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with (126 samples, 0.04%)</title><rect x="1163.5" y="437" width="0.5" height="15.0" fill="rgb(220,132,20)" rx="2" ry="2" />
<text  x="1166.55" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (101 samples, 0.03%)</title><rect x="303.5" y="293" width="0.3" height="15.0" fill="rgb(222,148,48)" rx="2" ry="2" />
<text  x="306.45" y="303.5" ></text>
</g>
<g >
<title>_int_free (2,127 samples, 0.62%)</title><rect x="362.6" y="309" width="7.3" height="15.0" fill="rgb(210,22,22)" rx="2" ry="2" />
<text  x="365.59" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::lookup (115 samples, 0.03%)</title><rect x="1048.3" y="453" width="0.4" height="15.0" fill="rgb(207,32,38)" rx="2" ry="2" />
<text  x="1051.31" y="463.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,728 samples, 0.79%)</title><rect x="541.5" y="245" width="9.4" height="15.0" fill="rgb(252,70,43)" rx="2" ry="2" />
<text  x="544.49" y="255.5" ></text>
</g>
<g >
<title>regex::dfa::Result&lt;T&gt;::set_non_match (88 samples, 0.03%)</title><rect x="277.6" y="277" width="0.3" height="15.0" fill="rgb(235,44,40)" rx="2" ry="2" />
<text  x="280.60" y="287.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (2,193 samples, 0.64%)</title><rect x="96.2" y="421" width="7.5" height="15.0" fill="rgb(229,111,16)" rx="2" ry="2" />
<text  x="99.18" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (166 samples, 0.05%)</title><rect x="810.5" y="373" width="0.6" height="15.0" fill="rgb(240,135,45)" rx="2" ry="2" />
<text  x="813.55" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,075 samples, 0.31%)</title><rect x="142.9" y="405" width="3.7" height="15.0" fill="rgb(229,33,35)" rx="2" ry="2" />
<text  x="145.86" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (1,010 samples, 0.29%)</title><rect x="293.1" y="53" width="3.5" height="15.0" fill="rgb(237,120,31)" rx="2" ry="2" />
<text  x="296.12" y="63.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_word_param (19,829 samples, 5.77%)</title><rect x="980.2" y="453" width="68.1" height="15.0" fill="rgb(221,187,47)" rx="2" ry="2" />
<text  x="983.21" y="463.5" >sudachi..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (114 samples, 0.03%)</title><rect x="240.7" y="261" width="0.4" height="15.0" fill="rgb(218,206,31)" rx="2" ry="2" />
<text  x="243.73" y="271.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (125 samples, 0.04%)</title><rect x="1065.6" y="325" width="0.4" height="15.0" fill="rgb(243,65,50)" rx="2" ry="2" />
<text  x="1068.61" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (421 samples, 0.12%)</title><rect x="196.8" y="357" width="1.4" height="15.0" fill="rgb(211,82,41)" rx="2" ry="2" />
<text  x="199.78" y="367.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (567 samples, 0.17%)</title><rect x="401.1" y="421" width="1.9" height="15.0" fill="rgb(233,224,10)" rx="2" ry="2" />
<text  x="404.08" y="431.5" ></text>
</g>
<g >
<title>_int_free (552 samples, 0.16%)</title><rect x="35.7" y="501" width="1.9" height="15.0" fill="rgb(227,35,14)" rx="2" ry="2" />
<text  x="38.70" y="511.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (312 samples, 0.09%)</title><rect x="1043.0" y="309" width="1.1" height="15.0" fill="rgb(222,125,26)" rx="2" ry="2" />
<text  x="1046.02" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (127 samples, 0.04%)</title><rect x="807.8" y="325" width="0.4" height="15.0" fill="rgb(238,86,29)" rx="2" ry="2" />
<text  x="810.80" y="335.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::ok::{{closure}} (2,033 samples, 0.59%)</title><rect x="291.8" y="325" width="6.9" height="15.0" fill="rgb(218,16,29)" rx="2" ry="2" />
<text  x="294.75" y="335.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1,306 samples, 0.38%)</title><rect x="1143.5" y="341" width="4.5" height="15.0" fill="rgb(245,119,11)" rx="2" ry="2" />
<text  x="1146.55" y="351.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (611 samples, 0.18%)</title><rect x="503.3" y="181" width="2.1" height="15.0" fill="rgb(242,50,45)" rx="2" ry="2" />
<text  x="506.28" y="191.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (92 samples, 0.03%)</title><rect x="227.6" y="277" width="0.3" height="15.0" fill="rgb(253,25,31)" rx="2" ry="2" />
<text  x="230.57" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,158 samples, 1.21%)</title><rect x="508.5" y="245" width="14.3" height="15.0" fill="rgb(206,74,44)" rx="2" ry="2" />
<text  x="511.54" y="255.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (423 samples, 0.12%)</title><rect x="1159.0" y="405" width="1.4" height="15.0" fill="rgb(206,104,9)" rx="2" ry="2" />
<text  x="1161.97" y="415.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set1_epi8 (413 samples, 0.12%)</title><rect x="1015.3" y="261" width="1.4" height="15.0" fill="rgb(217,27,35)" rx="2" ry="2" />
<text  x="1018.30" y="271.5" ></text>
</g>
<g >
<title>_int_free (89 samples, 0.03%)</title><rect x="1172.6" y="405" width="0.3" height="15.0" fill="rgb(229,127,23)" rx="2" ry="2" />
<text  x="1175.57" y="415.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (163 samples, 0.05%)</title><rect x="334.4" y="405" width="0.6" height="15.0" fill="rgb(226,98,31)" rx="2" ry="2" />
<text  x="337.45" y="415.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (161 samples, 0.05%)</title><rect x="1018.7" y="229" width="0.5" height="15.0" fill="rgb(237,48,15)" rx="2" ry="2" />
<text  x="1021.65" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (109 samples, 0.03%)</title><rect x="340.2" y="229" width="0.4" height="15.0" fill="rgb(250,200,21)" rx="2" ry="2" />
<text  x="343.22" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (453 samples, 0.13%)</title><rect x="423.7" y="165" width="1.5" height="15.0" fill="rgb(211,148,19)" rx="2" ry="2" />
<text  x="426.68" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (397 samples, 0.12%)</title><rect x="1162.2" y="453" width="1.3" height="15.0" fill="rgb(223,182,26)" rx="2" ry="2" />
<text  x="1165.17" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,979 samples, 0.87%)</title><rect x="528.9" y="261" width="10.2" height="15.0" fill="rgb(205,130,48)" rx="2" ry="2" />
<text  x="531.92" y="271.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (89 samples, 0.03%)</title><rect x="937.0" y="437" width="0.3" height="15.0" fill="rgb(214,62,54)" rx="2" ry="2" />
<text  x="940.03" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (132 samples, 0.04%)</title><rect x="451.3" y="197" width="0.4" height="15.0" fill="rgb(242,175,31)" rx="2" ry="2" />
<text  x="454.29" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (261 samples, 0.08%)</title><rect x="1050.6" y="421" width="0.9" height="15.0" fill="rgb(250,226,45)" rx="2" ry="2" />
<text  x="1053.56" y="431.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::clear (118 samples, 0.03%)</title><rect x="307.2" y="277" width="0.4" height="15.0" fill="rgb(218,224,5)" rx="2" ry="2" />
<text  x="310.20" y="287.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (156 samples, 0.05%)</title><rect x="205.6" y="373" width="0.5" height="15.0" fill="rgb(226,123,54)" rx="2" ry="2" />
<text  x="208.61" y="383.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (434 samples, 0.13%)</title><rect x="409.9" y="405" width="1.5" height="15.0" fill="rgb(249,185,41)" rx="2" ry="2" />
<text  x="412.87" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (236 samples, 0.07%)</title><rect x="946.5" y="245" width="0.8" height="15.0" fill="rgb(232,17,12)" rx="2" ry="2" />
<text  x="949.46" y="255.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new (316 samples, 0.09%)</title><rect x="24.1" y="501" width="1.1" height="15.0" fill="rgb(217,37,11)" rx="2" ry="2" />
<text  x="27.12" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_free (126 samples, 0.04%)</title><rect x="337.1" y="213" width="0.4" height="15.0" fill="rgb(240,37,33)" rx="2" ry="2" />
<text  x="340.06" y="223.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (201 samples, 0.06%)</title><rect x="342.5" y="405" width="0.7" height="15.0" fill="rgb(245,146,40)" rx="2" ry="2" />
<text  x="345.52" y="415.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_some (307 samples, 0.09%)</title><rect x="884.0" y="421" width="1.0" height="15.0" fill="rgb(209,179,36)" rx="2" ry="2" />
<text  x="886.99" y="431.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (108 samples, 0.03%)</title><rect x="651.9" y="357" width="0.4" height="15.0" fill="rgb(209,213,53)" rx="2" ry="2" />
<text  x="654.95" y="367.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (2,033 samples, 0.59%)</title><rect x="291.8" y="341" width="6.9" height="15.0" fill="rgb(240,97,32)" rx="2" ry="2" />
<text  x="294.75" y="351.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3,795 samples, 1.10%)</title><rect x="248.6" y="293" width="13.0" height="15.0" fill="rgb(244,23,46)" rx="2" ry="2" />
<text  x="251.60" y="303.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (145 samples, 0.04%)</title><rect x="11.5" y="501" width="0.5" height="15.0" fill="rgb(246,91,24)" rx="2" ry="2" />
<text  x="14.49" y="511.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2,851 samples, 0.83%)</title><rect x="442.1" y="229" width="9.7" height="15.0" fill="rgb(220,52,10)" rx="2" ry="2" />
<text  x="445.05" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,586 samples, 0.46%)</title><rect x="937.4" y="421" width="5.4" height="15.0" fill="rgb(242,229,42)" rx="2" ry="2" />
<text  x="940.35" y="431.5" ></text>
</g>
<g >
<title>&lt;regex::literal::imp::LiteralIter as core::iter::traits::iterator::Iterator&gt;::next (1,038 samples, 0.30%)</title><rect x="245.0" y="293" width="3.6" height="15.0" fill="rgb(208,10,37)" rx="2" ry="2" />
<text  x="248.02" y="303.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (349 samples, 0.10%)</title><rect x="452.1" y="277" width="1.2" height="15.0" fill="rgb(219,57,32)" rx="2" ry="2" />
<text  x="455.13" y="287.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::fill_word_info (248 samples, 0.07%)</title><rect x="316.0" y="469" width="0.9" height="15.0" fill="rgb(207,152,8)" rx="2" ry="2" />
<text  x="319.01" y="479.5" ></text>
</g>
<g >
<title>_int_malloc (5,182 samples, 1.51%)</title><rect x="762.9" y="261" width="17.8" height="15.0" fill="rgb(229,118,37)" rx="2" ry="2" />
<text  x="765.89" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (136 samples, 0.04%)</title><rect x="1065.6" y="357" width="0.4" height="15.0" fill="rgb(235,197,40)" rx="2" ry="2" />
<text  x="1068.57" y="367.5" ></text>
</g>
<g >
<title>sudachi (343,584 samples, 99.99%)</title><rect x="10.1" y="533" width="1179.9" height="15.0" fill="rgb(231,186,29)" rx="2" ry="2" />
<text  x="13.07" y="543.5" >sudachi</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (95 samples, 0.03%)</title><rect x="476.7" y="213" width="0.3" height="15.0" fill="rgb(237,133,17)" rx="2" ry="2" />
<text  x="479.70" y="223.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (565 samples, 0.16%)</title><rect x="15.1" y="501" width="1.9" height="15.0" fill="rgb(223,138,46)" rx="2" ry="2" />
<text  x="18.08" y="511.5" ></text>
</g>
<g >
<title>&lt;regex::re_unicode::Matches as core::iter::traits::iterator::Iterator&gt;::next (2,110 samples, 0.61%)</title><rect x="1149.4" y="389" width="7.3" height="15.0" fill="rgb(207,147,28)" rx="2" ry="2" />
<text  x="1152.40" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (153 samples, 0.04%)</title><rect x="334.5" y="277" width="0.5" height="15.0" fill="rgb(239,158,42)" rx="2" ry="2" />
<text  x="337.47" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (5,563 samples, 1.62%)</title><rect x="323.1" y="469" width="19.1" height="15.0" fill="rgb(217,17,44)" rx="2" ry="2" />
<text  x="326.09" y="479.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (89 samples, 0.03%)</title><rect x="487.5" y="197" width="0.3" height="15.0" fill="rgb(226,13,52)" rx="2" ry="2" />
<text  x="490.48" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::index (268 samples, 0.08%)</title><rect x="108.3" y="421" width="0.9" height="15.0" fill="rgb(216,214,13)" rx="2" ry="2" />
<text  x="111.27" y="431.5" ></text>
</g>
<g >
<title>aho_corasick::dfa::DFA&lt;S&gt;::earliest_find_at (610 samples, 0.18%)</title><rect x="1111.2" y="341" width="2.1" height="15.0" fill="rgb(210,85,32)" rx="2" ry="2" />
<text  x="1114.24" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,798 samples, 0.52%)</title><rect x="1150.2" y="309" width="6.2" height="15.0" fill="rgb(241,41,42)" rx="2" ry="2" />
<text  x="1153.25" y="319.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,274 samples, 0.95%)</title><rect x="1173.1" y="325" width="11.3" height="15.0" fill="rgb(244,121,37)" rx="2" ry="2" />
<text  x="1176.14" y="335.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (118 samples, 0.03%)</title><rect x="300.6" y="325" width="0.5" height="15.0" fill="rgb(218,203,3)" rx="2" ry="2" />
<text  x="303.65" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSyncStr&gt; (207 samples, 0.06%)</title><rect x="286.1" y="357" width="0.7" height="15.0" fill="rgb(212,28,37)" rx="2" ry="2" />
<text  x="289.06" y="367.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher (235 samples, 0.07%)</title><rect x="227.1" y="357" width="0.8" height="15.0" fill="rgb(250,16,9)" rx="2" ry="2" />
<text  x="230.08" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (201 samples, 0.06%)</title><rect x="342.5" y="421" width="0.7" height="15.0" fill="rgb(223,144,26)" rx="2" ry="2" />
<text  x="345.52" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (416 samples, 0.12%)</title><rect x="1050.6" y="437" width="1.4" height="15.0" fill="rgb(241,205,39)" rx="2" ry="2" />
<text  x="1053.56" y="447.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (365 samples, 0.11%)</title><rect x="1034.2" y="277" width="1.3" height="15.0" fill="rgb(210,119,52)" rx="2" ry="2" />
<text  x="1037.25" y="287.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (416 samples, 0.12%)</title><rect x="148.4" y="357" width="1.4" height="15.0" fill="rgb(252,85,18)" rx="2" ry="2" />
<text  x="151.37" y="367.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (448 samples, 0.13%)</title><rect x="552.0" y="277" width="1.5" height="15.0" fill="rgb(247,44,27)" rx="2" ry="2" />
<text  x="554.98" y="287.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (274 samples, 0.08%)</title><rect x="1044.1" y="357" width="0.9" height="15.0" fill="rgb(206,124,32)" rx="2" ry="2" />
<text  x="1047.09" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (356 samples, 0.10%)</title><rect x="429.5" y="165" width="1.2" height="15.0" fill="rgb(242,206,32)" rx="2" ry="2" />
<text  x="432.48" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4,158 samples, 1.21%)</title><rect x="508.5" y="197" width="14.3" height="15.0" fill="rgb(241,160,48)" rx="2" ry="2" />
<text  x="511.54" y="207.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (289 samples, 0.08%)</title><rect x="168.9" y="357" width="0.9" height="15.0" fill="rgb(217,192,24)" rx="2" ry="2" />
<text  x="171.86" y="367.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (627 samples, 0.18%)</title><rect x="811.1" y="405" width="2.2" height="15.0" fill="rgb(222,86,51)" rx="2" ry="2" />
<text  x="814.13" y="415.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,397 samples, 0.41%)</title><rect x="944.3" y="357" width="4.8" height="15.0" fill="rgb(228,226,50)" rx="2" ry="2" />
<text  x="947.30" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (399 samples, 0.12%)</title><rect x="335.3" y="341" width="1.3" height="15.0" fill="rgb(213,99,30)" rx="2" ry="2" />
<text  x="338.26" y="351.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (124 samples, 0.04%)</title><rect x="417.0" y="357" width="0.5" height="15.0" fill="rgb(231,175,26)" rx="2" ry="2" />
<text  x="420.04" y="367.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (207 samples, 0.06%)</title><rect x="12.7" y="501" width="0.7" height="15.0" fill="rgb(239,162,8)" rx="2" ry="2" />
<text  x="15.66" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (21,009 samples, 6.11%)</title><rect x="736.6" y="357" width="72.1" height="15.0" fill="rgb(241,194,13)" rx="2" ry="2" />
<text  x="739.56" y="367.5" >alloc::r..</text>
</g>
<g >
<title>nom::number::complete::le_u32 (1,689 samples, 0.49%)</title><rect x="432.9" y="373" width="5.8" height="15.0" fill="rgb(211,33,12)" rx="2" ry="2" />
<text  x="435.94" y="383.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (139 samples, 0.04%)</title><rect x="25.7" y="501" width="0.5" height="15.0" fill="rgb(233,62,34)" rx="2" ry="2" />
<text  x="28.71" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (115 samples, 0.03%)</title><rect x="53.8" y="485" width="0.4" height="15.0" fill="rgb(205,114,7)" rx="2" ry="2" />
<text  x="56.78" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (155 samples, 0.05%)</title><rect x="158.6" y="357" width="0.6" height="15.0" fill="rgb(221,95,12)" rx="2" ry="2" />
<text  x="161.63" y="367.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (28,683 samples, 8.35%)</title><rect x="838.2" y="437" width="98.5" height="15.0" fill="rgb(246,170,27)" rx="2" ry="2" />
<text  x="841.20" y="447.5" >sudachi::an..</text>
</g>
<g >
<title>alloc::alloc::dealloc (1,951 samples, 0.57%)</title><rect x="353.4" y="229" width="6.7" height="15.0" fill="rgb(239,122,33)" rx="2" ry="2" />
<text  x="356.37" y="239.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (365 samples, 0.11%)</title><rect x="1034.2" y="341" width="1.3" height="15.0" fill="rgb(218,143,26)" rx="2" ry="2" />
<text  x="1037.25" y="351.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7,405 samples, 2.16%)</title><rect x="623.6" y="325" width="25.4" height="15.0" fill="rgb(215,4,37)" rx="2" ry="2" />
<text  x="626.57" y="335.5" >c..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (140 samples, 0.04%)</title><rect x="41.9" y="501" width="0.5" height="15.0" fill="rgb(207,20,24)" rx="2" ry="2" />
<text  x="44.89" y="511.5" ></text>
</g>
<g >
<title>sudachi::dic::dictionary::JapaneseDictionary::from_cfg (301 samples, 0.09%)</title><rect x="79.3" y="501" width="1.0" height="15.0" fill="rgb(241,1,54)" rx="2" ry="2" />
<text  x="82.28" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,308 samples, 0.38%)</title><rect x="292.2" y="181" width="4.5" height="15.0" fill="rgb(252,49,22)" rx="2" ry="2" />
<text  x="295.19" y="191.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::oov::mecab_oov::MeCabOovPlugin as sudachi::plugin::oov::OovProviderPlugin&gt;::provide_oov (9,674 samples, 2.82%)</title><rect x="1055.9" y="437" width="33.2" height="15.0" fill="rgb(206,8,4)" rx="2" ry="2" />
<text  x="1058.86" y="447.5" >&lt;s..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (356 samples, 0.10%)</title><rect x="429.5" y="181" width="1.2" height="15.0" fill="rgb(241,40,27)" rx="2" ry="2" />
<text  x="432.48" y="191.5" ></text>
</g>
<g >
<title>std::io::BufRead::read_line::{{closure}} (636 samples, 0.19%)</title><rect x="85.0" y="421" width="2.2" height="15.0" fill="rgb(247,78,36)" rx="2" ry="2" />
<text  x="87.97" y="431.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (266 samples, 0.08%)</title><rect x="108.3" y="389" width="0.9" height="15.0" fill="rgb(224,35,14)" rx="2" ry="2" />
<text  x="111.28" y="399.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,433 samples, 0.42%)</title><rect x="98.8" y="405" width="4.9" height="15.0" fill="rgb(208,171,41)" rx="2" ry="2" />
<text  x="101.79" y="415.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (155 samples, 0.05%)</title><rect x="1117.7" y="245" width="0.5" height="15.0" fill="rgb(212,178,1)" rx="2" ry="2" />
<text  x="1120.70" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (424 samples, 0.12%)</title><rect x="1117.2" y="293" width="1.4" height="15.0" fill="rgb(230,36,13)" rx="2" ry="2" />
<text  x="1120.17" y="303.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Patterns::get_unchecked (233 samples, 0.07%)</title><rect x="1154.0" y="133" width="0.8" height="15.0" fill="rgb(238,48,53)" rx="2" ry="2" />
<text  x="1157.02" y="143.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (355 samples, 0.10%)</title><rect x="196.9" y="261" width="1.2" height="15.0" fill="rgb(246,170,46)" rx="2" ry="2" />
<text  x="199.91" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (163 samples, 0.05%)</title><rect x="552.8" y="197" width="0.5" height="15.0" fill="rgb(215,29,11)" rx="2" ry="2" />
<text  x="555.76" y="207.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::shortest_match_at (213 samples, 0.06%)</title><rect x="300.5" y="373" width="0.8" height="15.0" fill="rgb(216,78,32)" rx="2" ry="2" />
<text  x="303.53" y="383.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::hash::Hash&gt;::hash (136 samples, 0.04%)</title><rect x="1065.6" y="341" width="0.4" height="15.0" fill="rgb(242,55,42)" rx="2" ry="2" />
<text  x="1068.57" y="351.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (390 samples, 0.11%)</title><rect x="289.6" y="261" width="1.3" height="15.0" fill="rgb(223,220,11)" rx="2" ry="2" />
<text  x="292.58" y="271.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (148 samples, 0.04%)</title><rect x="14.0" y="453" width="0.5" height="15.0" fill="rgb(212,28,1)" rx="2" ry="2" />
<text  x="17.01" y="463.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (516 samples, 0.15%)</title><rect x="1141.4" y="357" width="1.8" height="15.0" fill="rgb(241,141,18)" rx="2" ry="2" />
<text  x="1144.44" y="367.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::exec_backtrack (814 samples, 0.24%)</title><rect x="304.9" y="325" width="2.8" height="15.0" fill="rgb(254,78,6)" rx="2" ry="2" />
<text  x="307.86" y="335.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match_at (276 samples, 0.08%)</title><rect x="300.5" y="421" width="0.9" height="15.0" fill="rgb(215,72,5)" rx="2" ry="2" />
<text  x="303.49" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::re_trait::Locations&gt; (107 samples, 0.03%)</title><rect x="1148.0" y="357" width="0.4" height="15.0" fill="rgb(217,195,33)" rx="2" ry="2" />
<text  x="1151.03" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (485 samples, 0.14%)</title><rect x="325.3" y="261" width="1.7" height="15.0" fill="rgb(237,226,16)" rx="2" ry="2" />
<text  x="328.32" y="271.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (246 samples, 0.07%)</title><rect x="1079.9" y="293" width="0.9" height="15.0" fill="rgb(238,203,23)" rx="2" ry="2" />
<text  x="1082.92" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_right_id (2,775 samples, 0.81%)</title><rect x="1035.5" y="421" width="9.5" height="15.0" fill="rgb(224,204,51)" rx="2" ry="2" />
<text  x="1038.50" y="431.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (154 samples, 0.04%)</title><rect x="522.8" y="245" width="0.6" height="15.0" fill="rgb(221,1,28)" rx="2" ry="2" />
<text  x="525.83" y="255.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (121 samples, 0.04%)</title><rect x="1066.5" y="293" width="0.4" height="15.0" fill="rgb(206,153,42)" rx="2" ry="2" />
<text  x="1069.50" y="303.5" ></text>
</g>
<g >
<title>regex::pool::THREAD_ID::__getit (390 samples, 0.11%)</title><rect x="289.6" y="277" width="1.3" height="15.0" fill="rgb(208,183,2)" rx="2" ry="2" />
<text  x="292.58" y="287.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (195 samples, 0.06%)</title><rect x="382.8" y="277" width="0.6" height="15.0" fill="rgb(227,176,10)" rx="2" ry="2" />
<text  x="385.76" y="287.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (189 samples, 0.06%)</title><rect x="1018.6" y="309" width="0.6" height="15.0" fill="rgb(209,102,27)" rx="2" ry="2" />
<text  x="1021.55" y="319.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (29,984 samples, 8.73%)</title><rect x="455.6" y="373" width="103.0" height="15.0" fill="rgb(241,85,32)" rx="2" ry="2" />
<text  x="458.59" y="383.5" >&lt;F as nom::i..</text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (1,003 samples, 0.29%)</title><rect x="274.2" y="277" width="3.4" height="15.0" fill="rgb(252,2,48)" rx="2" ry="2" />
<text  x="277.15" y="287.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::num_codepts (127 samples, 0.04%)</title><rect x="322.7" y="421" width="0.4" height="15.0" fill="rgb(230,105,26)" rx="2" ry="2" />
<text  x="325.65" y="431.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (2,399 samples, 0.70%)</title><rect x="1025.6" y="277" width="8.3" height="15.0" fill="rgb(206,166,26)" rx="2" ry="2" />
<text  x="1028.61" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (239 samples, 0.07%)</title><rect x="1067.4" y="293" width="0.8" height="15.0" fill="rgb(248,163,48)" rx="2" ry="2" />
<text  x="1070.41" y="303.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (210 samples, 0.06%)</title><rect x="93.7" y="421" width="0.8" height="15.0" fill="rgb(237,9,31)" rx="2" ry="2" />
<text  x="96.75" y="431.5" ></text>
</g>
<g >
<title>_int_free (1,415 samples, 0.41%)</title><rect x="468.3" y="261" width="4.8" height="15.0" fill="rgb(229,68,43)" rx="2" ry="2" />
<text  x="471.28" y="271.5" ></text>
</g>
<g >
<title>core::ptr::write (481 samples, 0.14%)</title><rect x="951.2" y="389" width="1.7" height="15.0" fill="rgb(226,55,48)" rx="2" ry="2" />
<text  x="954.24" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (274 samples, 0.08%)</title><rect x="949.1" y="373" width="0.9" height="15.0" fill="rgb(205,115,49)" rx="2" ry="2" />
<text  x="952.10" y="383.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (143 samples, 0.04%)</title><rect x="1154.3" y="69" width="0.5" height="15.0" fill="rgb(211,45,0)" rx="2" ry="2" />
<text  x="1157.33" y="79.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (236 samples, 0.07%)</title><rect x="946.5" y="261" width="0.8" height="15.0" fill="rgb(244,7,40)" rx="2" ry="2" />
<text  x="949.46" y="271.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2,813 samples, 0.82%)</title><rect x="529.5" y="181" width="9.6" height="15.0" fill="rgb(227,110,5)" rx="2" ry="2" />
<text  x="532.48" y="191.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (100 samples, 0.03%)</title><rect x="238.1" y="325" width="0.3" height="15.0" fill="rgb(243,124,45)" rx="2" ry="2" />
<text  x="241.06" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (490 samples, 0.14%)</title><rect x="336.7" y="389" width="1.7" height="15.0" fill="rgb(218,13,4)" rx="2" ry="2" />
<text  x="339.70" y="399.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::AhoCorasick&lt;S&gt;::earliest_find (961 samples, 0.28%)</title><rect x="1110.3" y="373" width="3.3" height="15.0" fill="rgb(234,169,41)" rx="2" ry="2" />
<text  x="1113.26" y="383.5" ></text>
</g>
<g >
<title>alloc::string::String::push (222 samples, 0.06%)</title><rect x="77.0" y="501" width="0.7" height="15.0" fill="rgb(212,148,6)" rx="2" ry="2" />
<text  x="79.97" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (143 samples, 0.04%)</title><rect x="341.6" y="357" width="0.4" height="15.0" fill="rgb(243,223,26)" rx="2" ry="2" />
<text  x="344.55" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (101 samples, 0.03%)</title><rect x="14.0" y="373" width="0.4" height="15.0" fill="rgb(226,132,38)" rx="2" ry="2" />
<text  x="17.01" y="383.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (115 samples, 0.03%)</title><rect x="53.8" y="469" width="0.4" height="15.0" fill="rgb(236,169,16)" rx="2" ry="2" />
<text  x="56.78" y="479.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (189 samples, 0.06%)</title><rect x="1018.6" y="261" width="0.6" height="15.0" fill="rgb(254,107,7)" rx="2" ry="2" />
<text  x="1021.55" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2,834 samples, 0.82%)</title><rect x="943.2" y="405" width="9.7" height="15.0" fill="rgb(236,165,51)" rx="2" ry="2" />
<text  x="946.16" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (142 samples, 0.04%)</title><rect x="341.6" y="341" width="0.4" height="15.0" fill="rgb(217,218,32)" rx="2" ry="2" />
<text  x="344.55" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (6,617 samples, 1.93%)</title><rect x="953.0" y="309" width="22.7" height="15.0" fill="rgb(222,39,2)" rx="2" ry="2" />
<text  x="955.95" y="319.5" >_..</text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (111 samples, 0.03%)</title><rect x="1171.1" y="389" width="0.4" height="15.0" fill="rgb(219,15,41)" rx="2" ry="2" />
<text  x="1174.10" y="399.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (417 samples, 0.12%)</title><rect x="1016.7" y="261" width="1.4" height="15.0" fill="rgb(244,114,0)" rx="2" ry="2" />
<text  x="1019.71" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (114 samples, 0.03%)</title><rect x="341.6" y="325" width="0.3" height="15.0" fill="rgb(229,57,4)" rx="2" ry="2" />
<text  x="344.56" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::offset (129 samples, 0.04%)</title><rect x="654.5" y="293" width="0.5" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="657.53" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::resize (130 samples, 0.04%)</title><rect x="1163.5" y="453" width="0.5" height="15.0" fill="rgb(216,198,18)" rx="2" ry="2" />
<text  x="1166.53" y="463.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,087 samples, 0.61%)</title><rect x="1149.4" y="373" width="7.2" height="15.0" fill="rgb(246,157,21)" rx="2" ry="2" />
<text  x="1152.43" y="383.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (431 samples, 0.13%)</title><rect x="451.8" y="293" width="1.5" height="15.0" fill="rgb(225,160,33)" rx="2" ry="2" />
<text  x="454.84" y="303.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (219 samples, 0.06%)</title><rect x="431.1" y="229" width="0.7" height="15.0" fill="rgb(224,218,13)" rx="2" ry="2" />
<text  x="434.05" y="239.5" ></text>
</g>
<g >
<title>vfs_read (89 samples, 0.03%)</title><rect x="85.3" y="261" width="0.3" height="15.0" fill="rgb(230,177,31)" rx="2" ry="2" />
<text  x="88.27" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (99 samples, 0.03%)</title><rect x="1051.1" y="405" width="0.4" height="15.0" fill="rgb(233,137,29)" rx="2" ry="2" />
<text  x="1054.11" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next (186 samples, 0.05%)</title><rect x="277.0" y="261" width="0.6" height="15.0" fill="rgb(223,65,13)" rx="2" ry="2" />
<text  x="279.96" y="271.5" ></text>
</g>
<g >
<title>&lt;T as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::lexicon (704 samples, 0.20%)</title><rect x="575.1" y="453" width="2.4" height="15.0" fill="rgb(209,73,18)" rx="2" ry="2" />
<text  x="578.12" y="463.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::part_of_speech_id (140 samples, 0.04%)</title><rect x="107.3" y="437" width="0.5" height="15.0" fill="rgb(244,194,17)" rx="2" ry="2" />
<text  x="110.27" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (121 samples, 0.04%)</title><rect x="552.8" y="117" width="0.4" height="15.0" fill="rgb(249,200,21)" rx="2" ry="2" />
<text  x="555.83" y="127.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::dfa::PremultipliedByteClass&lt;S&gt; as aho_corasick::automaton::Automaton&gt;::next_state (714 samples, 0.21%)</title><rect x="1106.6" y="261" width="2.5" height="15.0" fill="rgb(211,191,43)" rx="2" ry="2" />
<text  x="1109.62" y="271.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::is_empty (200 samples, 0.06%)</title><rect x="247.9" y="277" width="0.7" height="15.0" fill="rgb(242,64,49)" rx="2" ry="2" />
<text  x="250.90" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (653 samples, 0.19%)</title><rect x="325.1" y="309" width="2.3" height="15.0" fill="rgb(254,189,2)" rx="2" ry="2" />
<text  x="328.14" y="319.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::iter (323 samples, 0.09%)</title><rect x="263.1" y="293" width="1.2" height="15.0" fill="rgb(249,53,37)" rx="2" ry="2" />
<text  x="266.14" y="303.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (138 samples, 0.04%)</title><rect x="327.5" y="325" width="0.4" height="15.0" fill="rgb(249,203,18)" rx="2" ry="2" />
<text  x="330.47" y="335.5" ></text>
</g>
<g >
<title>__libc_read (104 samples, 0.03%)</title><rect x="85.2" y="325" width="0.4" height="15.0" fill="rgb(230,90,50)" rx="2" ry="2" />
<text  x="88.23" y="335.5" ></text>
</g>
<g >
<title>core::ptr::write (96 samples, 0.03%)</title><rect x="1171.5" y="357" width="0.3" height="15.0" fill="rgb(217,73,3)" rx="2" ry="2" />
<text  x="1174.48" y="367.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (312 samples, 0.09%)</title><rect x="1043.0" y="341" width="1.1" height="15.0" fill="rgb(215,223,3)" rx="2" ry="2" />
<text  x="1046.02" y="351.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (102 samples, 0.03%)</title><rect x="110.7" y="421" width="0.3" height="15.0" fill="rgb(212,29,13)" rx="2" ry="2" />
<text  x="113.67" y="431.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (541 samples, 0.16%)</title><rect x="167.0" y="357" width="1.9" height="15.0" fill="rgb(206,64,45)" rx="2" ry="2" />
<text  x="169.99" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (1,228 samples, 0.36%)</title><rect x="292.4" y="85" width="4.2" height="15.0" fill="rgb(226,182,34)" rx="2" ry="2" />
<text  x="295.38" y="95.5" ></text>
</g>
<g >
<title>[[stack]] (7,549 samples, 2.20%)</title><rect x="25.7" y="517" width="25.9" height="15.0" fill="rgb(242,156,7)" rx="2" ry="2" />
<text  x="28.70" y="527.5" >[..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,715 samples, 0.50%)</title><rect x="291.8" y="245" width="5.9" height="15.0" fill="rgb(245,102,11)" rx="2" ry="2" />
<text  x="294.76" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1,110 samples, 0.32%)</title><rect x="172.8" y="389" width="3.8" height="15.0" fill="rgb(236,130,16)" rx="2" ry="2" />
<text  x="175.82" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sudachi::analysis::node::Node&gt;&gt; (3,058 samples, 0.89%)</title><rect x="360.5" y="389" width="10.5" height="15.0" fill="rgb(229,177,41)" rx="2" ry="2" />
<text  x="363.48" y="399.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::pop (373 samples, 0.11%)</title><rect x="42.5" y="501" width="1.3" height="15.0" fill="rgb(229,165,34)" rx="2" ry="2" />
<text  x="45.47" y="511.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,845 samples, 0.54%)</title><rect x="1081.0" y="373" width="6.3" height="15.0" fill="rgb(225,148,28)" rx="2" ry="2" />
<text  x="1084.01" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (95 samples, 0.03%)</title><rect x="476.7" y="181" width="0.3" height="15.0" fill="rgb(227,145,54)" rx="2" ry="2" />
<text  x="479.70" y="191.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (236 samples, 0.07%)</title><rect x="337.6" y="325" width="0.8" height="15.0" fill="rgb(219,173,22)" rx="2" ry="2" />
<text  x="340.56" y="335.5" ></text>
</g>
<g >
<title>std::io::append_to_string (1,414 samples, 0.41%)</title><rect x="82.3" y="437" width="4.9" height="15.0" fill="rgb(242,65,13)" rx="2" ry="2" />
<text  x="85.30" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (260 samples, 0.08%)</title><rect x="335.4" y="245" width="0.9" height="15.0" fill="rgb(227,58,13)" rx="2" ry="2" />
<text  x="338.43" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (716 samples, 0.21%)</title><rect x="426.1" y="149" width="2.5" height="15.0" fill="rgb(210,75,43)" rx="2" ry="2" />
<text  x="429.12" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (653 samples, 0.19%)</title><rect x="325.1" y="325" width="2.3" height="15.0" fill="rgb(241,66,1)" rx="2" ry="2" />
<text  x="328.14" y="335.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (136 samples, 0.04%)</title><rect x="1099.4" y="341" width="0.5" height="15.0" fill="rgb(217,64,51)" rx="2" ry="2" />
<text  x="1102.44" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (117 samples, 0.03%)</title><rect x="340.2" y="245" width="0.4" height="15.0" fill="rgb(210,57,27)" rx="2" ry="2" />
<text  x="343.20" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::lookup::{{closure}} (285 samples, 0.08%)</title><rect x="654.0" y="341" width="1.0" height="15.0" fill="rgb(246,178,2)" rx="2" ry="2" />
<text  x="656.99" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (304 samples, 0.09%)</title><rect x="417.8" y="261" width="1.1" height="15.0" fill="rgb(245,193,18)" rx="2" ry="2" />
<text  x="420.81" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,385 samples, 0.40%)</title><rect x="291.9" y="213" width="4.8" height="15.0" fill="rgb(246,174,41)" rx="2" ry="2" />
<text  x="294.93" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (120 samples, 0.03%)</title><rect x="203.6" y="373" width="0.4" height="15.0" fill="rgb(229,226,12)" rx="2" ry="2" />
<text  x="206.63" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (175 samples, 0.05%)</title><rect x="85.7" y="373" width="0.6" height="15.0" fill="rgb(226,104,25)" rx="2" ry="2" />
<text  x="88.74" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (621 samples, 0.18%)</title><rect x="423.5" y="213" width="2.1" height="15.0" fill="rgb(225,62,4)" rx="2" ry="2" />
<text  x="426.48" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (156 samples, 0.05%)</title><rect x="1169.2" y="437" width="0.5" height="15.0" fill="rgb(251,9,20)" rx="2" ry="2" />
<text  x="1172.21" y="447.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,632 samples, 1.06%)</title><rect x="419.7" y="309" width="12.4" height="15.0" fill="rgb(246,133,30)" rx="2" ry="2" />
<text  x="422.67" y="319.5" ></text>
</g>
<g >
<title>_int_free (173 samples, 0.05%)</title><rect x="420.8" y="245" width="0.6" height="15.0" fill="rgb(207,9,48)" rx="2" ry="2" />
<text  x="423.80" y="255.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (93 samples, 0.03%)</title><rect x="491.8" y="133" width="0.3" height="15.0" fill="rgb(225,67,53)" rx="2" ry="2" />
<text  x="494.83" y="143.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_of_range (345 samples, 0.10%)</title><rect x="320.9" y="421" width="1.2" height="15.0" fill="rgb(212,191,6)" rx="2" ry="2" />
<text  x="323.90" y="431.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::new (110 samples, 0.03%)</title><rect x="1048.3" y="421" width="0.4" height="15.0" fill="rgb(210,183,31)" rx="2" ry="2" />
<text  x="1051.33" y="431.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (25,574 samples, 7.44%)</title><rect x="463.0" y="309" width="87.9" height="15.0" fill="rgb(219,13,20)" rx="2" ry="2" />
<text  x="466.03" y="319.5" >core::ops:..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1,006 samples, 0.29%)</title><rect x="1013.3" y="325" width="3.4" height="15.0" fill="rgb(211,25,47)" rx="2" ry="2" />
<text  x="1016.26" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (218 samples, 0.06%)</title><rect x="335.5" y="229" width="0.7" height="15.0" fill="rgb(208,44,6)" rx="2" ry="2" />
<text  x="338.50" y="239.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_uppercase (445 samples, 0.13%)</title><rect x="1113.6" y="373" width="1.5" height="15.0" fill="rgb(207,101,9)" rx="2" ry="2" />
<text  x="1116.56" y="383.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::with_editor (16,425 samples, 4.78%)</title><rect x="1100.6" y="437" width="56.4" height="15.0" fill="rgb(245,32,14)" rx="2" ry="2" />
<text  x="1103.59" y="447.5" >sudac..</text>
</g>
<g >
<title>sudachi::main (321,626 samples, 93.60%)</title><rect x="81.1" y="501" width="1104.5" height="15.0" fill="rgb(239,149,54)" rx="2" ry="2" />
<text  x="84.11" y="511.5" >sudachi::main</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (137 samples, 0.04%)</title><rect x="492.1" y="133" width="0.5" height="15.0" fill="rgb(217,170,27)" rx="2" ry="2" />
<text  x="495.15" y="143.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (323 samples, 0.09%)</title><rect x="321.0" y="405" width="1.1" height="15.0" fill="rgb(241,146,13)" rx="2" ry="2" />
<text  x="323.98" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (167 samples, 0.05%)</title><rect x="1188.2" y="517" width="0.6" height="15.0" fill="rgb(215,147,48)" rx="2" ry="2" />
<text  x="1191.18" y="527.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (137 samples, 0.04%)</title><rect x="227.4" y="309" width="0.5" height="15.0" fill="rgb(225,103,49)" rx="2" ry="2" />
<text  x="230.42" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (125 samples, 0.04%)</title><rect x="810.1" y="357" width="0.4" height="15.0" fill="rgb(234,175,40)" rx="2" ry="2" />
<text  x="813.12" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (147 samples, 0.04%)</title><rect x="314.8" y="421" width="0.5" height="15.0" fill="rgb(227,224,43)" rx="2" ry="2" />
<text  x="317.80" y="431.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (145 samples, 0.04%)</title><rect x="660.6" y="421" width="0.5" height="15.0" fill="rgb(225,3,50)" rx="2" ry="2" />
<text  x="663.59" y="431.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (111 samples, 0.03%)</title><rect x="1171.1" y="373" width="0.4" height="15.0" fill="rgb(244,70,33)" rx="2" ry="2" />
<text  x="1174.10" y="383.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (93 samples, 0.03%)</title><rect x="189.2" y="373" width="0.3" height="15.0" fill="rgb(247,179,22)" rx="2" ry="2" />
<text  x="192.16" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (715 samples, 0.21%)</title><rect x="330.7" y="357" width="2.4" height="15.0" fill="rgb(225,62,32)" rx="2" ry="2" />
<text  x="333.69" y="367.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (766 samples, 0.22%)</title><rect x="1144.9" y="277" width="2.6" height="15.0" fill="rgb(205,104,50)" rx="2" ry="2" />
<text  x="1147.85" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (971 samples, 0.28%)</title><rect x="945.8" y="309" width="3.3" height="15.0" fill="rgb(251,54,39)" rx="2" ry="2" />
<text  x="948.76" y="319.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (325 samples, 0.09%)</title><rect x="89.1" y="437" width="1.1" height="15.0" fill="rgb(219,19,8)" rx="2" ry="2" />
<text  x="92.13" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (1,620 samples, 0.47%)</title><rect x="1081.1" y="197" width="5.6" height="15.0" fill="rgb(250,105,25)" rx="2" ry="2" />
<text  x="1084.12" y="207.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get (174 samples, 0.05%)</title><rect x="149.2" y="341" width="0.6" height="15.0" fill="rgb(249,70,12)" rx="2" ry="2" />
<text  x="152.20" y="351.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify64 (1,062 samples, 0.31%)</title><rect x="1151.5" y="165" width="3.7" height="15.0" fill="rgb(210,75,10)" rx="2" ry="2" />
<text  x="1154.54" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (422 samples, 0.12%)</title><rect x="1099.1" y="389" width="1.5" height="15.0" fill="rgb(249,160,36)" rx="2" ry="2" />
<text  x="1102.13" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;regex::exec::ExecNoSync&gt; (207 samples, 0.06%)</title><rect x="286.1" y="341" width="0.7" height="15.0" fill="rgb(230,21,12)" rx="2" ry="2" />
<text  x="289.06" y="351.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (97 samples, 0.03%)</title><rect x="289.2" y="293" width="0.4" height="15.0" fill="rgb(213,213,17)" rx="2" ry="2" />
<text  x="292.22" y="303.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::build (4,042 samples, 1.18%)</title><rect x="1157.1" y="469" width="13.9" height="15.0" fill="rgb(232,55,34)" rx="2" ry="2" />
<text  x="1160.11" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,563 samples, 0.45%)</title><rect x="937.4" y="357" width="5.4" height="15.0" fill="rgb(248,159,31)" rx="2" ry="2" />
<text  x="940.41" y="367.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::u8_class (218 samples, 0.06%)</title><rect x="219.2" y="261" width="0.8" height="15.0" fill="rgb(234,72,19)" rx="2" ry="2" />
<text  x="222.24" y="271.5" ></text>
</g>
<g >
<title>_int_realloc (1,171 samples, 0.34%)</title><rect x="292.6" y="69" width="4.0" height="15.0" fill="rgb(251,120,16)" rx="2" ry="2" />
<text  x="295.57" y="79.5" ></text>
</g>
<g >
<title>&lt;fancy_regex::Matches as core::iter::traits::iterator::Iterator&gt;::next (52,663 samples, 15.33%)</title><rect x="110.1" y="453" width="180.8" height="15.0" fill="rgb(207,219,41)" rx="2" ry="2" />
<text  x="113.07" y="463.5" >&lt;fancy_regex::Matches a..</text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1,006 samples, 0.29%)</title><rect x="1013.3" y="293" width="3.4" height="15.0" fill="rgb(231,2,31)" rx="2" ry="2" />
<text  x="1016.26" y="303.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::to_orig (171 samples, 0.05%)</title><rect x="317.4" y="437" width="0.6" height="15.0" fill="rgb(219,200,29)" rx="2" ry="2" />
<text  x="320.38" y="447.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,208 samples, 0.35%)</title><rect x="206.8" y="389" width="4.2" height="15.0" fill="rgb(217,114,53)" rx="2" ry="2" />
<text  x="209.82" y="399.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (885 samples, 0.26%)</title><rect x="411.4" y="405" width="3.0" height="15.0" fill="rgb(227,25,45)" rx="2" ry="2" />
<text  x="414.36" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,715 samples, 0.50%)</title><rect x="291.8" y="261" width="5.9" height="15.0" fill="rgb(208,119,36)" rx="2" ry="2" />
<text  x="294.76" y="271.5" ></text>
</g>
<g >
<title>__rdl_realloc (246 samples, 0.07%)</title><rect x="63.8" y="501" width="0.9" height="15.0" fill="rgb(218,207,48)" rx="2" ry="2" />
<text  x="66.83" y="511.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match (367 samples, 0.11%)</title><rect x="225.4" y="341" width="1.3" height="15.0" fill="rgb(215,67,36)" rx="2" ry="2" />
<text  x="228.43" y="351.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state (1,025 samples, 0.30%)</title><rect x="1105.5" y="309" width="3.6" height="15.0" fill="rgb(217,178,35)" rx="2" ry="2" />
<text  x="1108.55" y="319.5" ></text>
</g>
<g >
<title>__rdl_realloc (217 samples, 0.06%)</title><rect x="501.1" y="69" width="0.7" height="15.0" fill="rgb(229,124,3)" rx="2" ry="2" />
<text  x="504.10" y="79.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::shortest_match_at (14,832 samples, 4.32%)</title><rect x="234.5" y="341" width="50.9" height="15.0" fill="rgb(233,149,3)" rx="2" ry="2" />
<text  x="237.48" y="351.5" >&lt;rege..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (4,158 samples, 1.21%)</title><rect x="508.5" y="165" width="14.3" height="15.0" fill="rgb(233,114,34)" rx="2" ry="2" />
<text  x="511.54" y="175.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (96 samples, 0.03%)</title><rect x="1062.3" y="373" width="0.3" height="15.0" fill="rgb(247,109,46)" rx="2" ry="2" />
<text  x="1065.26" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22,301 samples, 6.49%)</title><rect x="734.0" y="373" width="76.5" height="15.0" fill="rgb(208,29,50)" rx="2" ry="2" />
<text  x="736.96" y="383.5" >alloc::r..</text>
</g>
<g >
<title>_int_malloc (1,179 samples, 0.34%)</title><rect x="1082.3" y="165" width="4.1" height="15.0" fill="rgb(227,172,49)" rx="2" ry="2" />
<text  x="1085.32" y="175.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::byte_class (280 samples, 0.08%)</title><rect x="275.7" y="261" width="1.0" height="15.0" fill="rgb(212,44,8)" rx="2" ry="2" />
<text  x="278.75" y="271.5" ></text>
</g>
<g >
<title>fancy_regex::vm::run (52,386 samples, 15.25%)</title><rect x="111.0" y="421" width="179.9" height="15.0" fill="rgb(221,19,12)" rx="2" ry="2" />
<text  x="114.02" y="431.5" >fancy_regex::vm::run</text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find (1,598 samples, 0.47%)</title><rect x="1150.6" y="261" width="5.5" height="15.0" fill="rgb(246,120,28)" rx="2" ry="2" />
<text  x="1153.60" y="271.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max (232 samples, 0.07%)</title><rect x="809.3" y="341" width="0.8" height="15.0" fill="rgb(212,145,8)" rx="2" ry="2" />
<text  x="812.32" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;sudachi::analysis::node::Node&gt;&gt; (312 samples, 0.09%)</title><rect x="687.3" y="453" width="1.1" height="15.0" fill="rgb(250,160,13)" rx="2" ry="2" />
<text  x="690.32" y="463.5" ></text>
</g>
<g >
<title>aho_corasick::packed::pattern::Pattern::equals (524 samples, 0.15%)</title><rect x="1152.2" y="117" width="1.8" height="15.0" fill="rgb(245,220,2)" rx="2" ry="2" />
<text  x="1155.22" y="127.5" ></text>
</g>
<g >
<title>&lt;regex_syntax::hir::literal::Literal as core::ops::deref::Deref&gt;::deref (94 samples, 0.03%)</title><rect x="247.6" y="277" width="0.3" height="15.0" fill="rgb(252,35,9)" rx="2" ry="2" />
<text  x="250.58" y="287.5" ></text>
</g>
<g >
<title>fancy_regex::vm::codepoint_len_at (147 samples, 0.04%)</title><rect x="206.1" y="405" width="0.6" height="15.0" fill="rgb(239,101,24)" rx="2" ry="2" />
<text  x="209.15" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (140 samples, 0.04%)</title><rect x="660.1" y="421" width="0.5" height="15.0" fill="rgb(236,33,34)" rx="2" ry="2" />
<text  x="663.11" y="431.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::handle_normalization_slow (481 samples, 0.14%)</title><rect x="1115.4" y="373" width="1.6" height="15.0" fill="rgb(227,83,19)" rx="2" ry="2" />
<text  x="1118.38" y="383.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (1,773 samples, 0.52%)</title><rect x="422.6" y="261" width="6.1" height="15.0" fill="rgb(253,123,15)" rx="2" ry="2" />
<text  x="425.57" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (161 samples, 0.05%)</title><rect x="334.4" y="373" width="0.6" height="15.0" fill="rgb(240,57,29)" rx="2" ry="2" />
<text  x="337.45" y="383.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (114 samples, 0.03%)</title><rect x="240.7" y="229" width="0.4" height="15.0" fill="rgb(216,158,22)" rx="2" ry="2" />
<text  x="243.73" y="239.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (653 samples, 0.19%)</title><rect x="325.1" y="293" width="2.3" height="15.0" fill="rgb(238,62,36)" rx="2" ry="2" />
<text  x="328.14" y="303.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (189 samples, 0.06%)</title><rect x="1018.6" y="341" width="0.6" height="15.0" fill="rgb(211,161,13)" rx="2" ry="2" />
<text  x="1021.55" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,058 samples, 0.89%)</title><rect x="360.5" y="373" width="10.5" height="15.0" fill="rgb(226,182,15)" rx="2" ry="2" />
<text  x="363.48" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (781 samples, 0.23%)</title><rect x="330.5" y="405" width="2.7" height="15.0" fill="rgb(251,143,28)" rx="2" ry="2" />
<text  x="333.48" y="415.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite::{{closure}} (15,911 samples, 4.63%)</title><rect x="1102.4" y="421" width="54.6" height="15.0" fill="rgb(243,87,0)" rx="2" ry="2" />
<text  x="1105.36" y="431.5" >sudac..</text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (240 samples, 0.07%)</title><rect x="340.0" y="389" width="0.8" height="15.0" fill="rgb(253,54,43)" rx="2" ry="2" />
<text  x="343.02" y="399.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,838 samples, 0.53%)</title><rect x="1150.1" y="325" width="6.3" height="15.0" fill="rgb(213,160,22)" rx="2" ry="2" />
<text  x="1153.12" y="335.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (124 samples, 0.04%)</title><rect x="734.7" y="357" width="0.5" height="15.0" fill="rgb(214,37,9)" rx="2" ry="2" />
<text  x="737.75" y="367.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (156 samples, 0.05%)</title><rect x="205.6" y="357" width="0.5" height="15.0" fill="rgb(235,1,2)" rx="2" ry="2" />
<text  x="208.61" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (223 samples, 0.06%)</title><rect x="735.8" y="357" width="0.8" height="15.0" fill="rgb(205,149,41)" rx="2" ry="2" />
<text  x="738.79" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free (1,801 samples, 0.52%)</title><rect x="353.6" y="213" width="6.2" height="15.0" fill="rgb(254,226,33)" rx="2" ry="2" />
<text  x="356.64" y="223.5" ></text>
</g>
<g >
<title>sudachi::dic::u32_array_parser (95 samples, 0.03%)</title><rect x="10.1" y="485" width="0.3" height="15.0" fill="rgb(250,146,5)" rx="2" ry="2" />
<text  x="13.11" y="495.5" ></text>
</g>
<g >
<title>__rdl_alloc (131 samples, 0.04%)</title><rect x="807.8" y="341" width="0.4" height="15.0" fill="rgb(232,154,22)" rx="2" ry="2" />
<text  x="810.79" y="351.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::has_previous_node (138 samples, 0.04%)</title><rect x="689.7" y="453" width="0.5" height="15.0" fill="rgb(209,106,53)" rx="2" ry="2" />
<text  x="692.74" y="463.5" ></text>
</g>
<g >
<title>regex::dfa::Byte::is_ascii_word (334 samples, 0.10%)</title><rect x="280.3" y="277" width="1.1" height="15.0" fill="rgb(214,27,30)" rx="2" ry="2" />
<text  x="283.26" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (358 samples, 0.10%)</title><rect x="429.5" y="213" width="1.2" height="15.0" fill="rgb(215,37,46)" rx="2" ry="2" />
<text  x="432.48" y="223.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked (189 samples, 0.06%)</title><rect x="1018.6" y="293" width="0.6" height="15.0" fill="rgb(252,182,44)" rx="2" ry="2" />
<text  x="1021.55" y="303.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (205 samples, 0.06%)</title><rect x="329.8" y="437" width="0.7" height="15.0" fill="rgb(234,226,42)" rx="2" ry="2" />
<text  x="332.78" y="447.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (370 samples, 0.11%)</title><rect x="882.6" y="405" width="1.2" height="15.0" fill="rgb(237,37,29)" rx="2" ry="2" />
<text  x="885.56" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3,779 samples, 1.10%)</title><rect x="509.0" y="133" width="13.0" height="15.0" fill="rgb(245,187,5)" rx="2" ry="2" />
<text  x="512.04" y="143.5" ></text>
</g>
<g >
<title>sudachi::sentence_detector::parenthesis_level (3,753 samples, 1.09%)</title><rect x="301.5" y="453" width="12.9" height="15.0" fill="rgb(229,169,5)" rx="2" ry="2" />
<text  x="304.52" y="463.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21,255 samples, 6.19%)</title><rect x="580.1" y="421" width="73.0" height="15.0" fill="rgb(239,149,34)" rx="2" ry="2" />
<text  x="583.07" y="431.5" >&lt;core::i..</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (8,724 samples, 2.54%)</title><rect x="700.7" y="437" width="30.0" height="15.0" fill="rgb(210,18,33)" rx="2" ry="2" />
<text  x="703.72" y="447.5" >__..</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (226 samples, 0.07%)</title><rect x="108.4" y="373" width="0.8" height="15.0" fill="rgb(250,86,41)" rx="2" ry="2" />
<text  x="111.41" y="383.5" ></text>
</g>
<g >
<title>&lt;sudachi::hash::RoMuHash as core::hash::Hasher&gt;::write_u32 (125 samples, 0.04%)</title><rect x="1065.6" y="309" width="0.4" height="15.0" fill="rgb(238,220,37)" rx="2" ry="2" />
<text  x="1068.61" y="319.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (2,775 samples, 0.81%)</title><rect x="529.6" y="165" width="9.5" height="15.0" fill="rgb(234,48,53)" rx="2" ry="2" />
<text  x="532.61" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22,774 samples, 6.63%)</title><rect x="732.9" y="405" width="78.2" height="15.0" fill="rgb(230,110,52)" rx="2" ry="2" />
<text  x="735.92" y="415.5" >alloc::ra..</text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::load (90 samples, 0.03%)</title><rect x="1015.0" y="277" width="0.3" height="15.0" fill="rgb(211,222,11)" rx="2" ry="2" />
<text  x="1017.99" y="287.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (423 samples, 0.12%)</title><rect x="1159.0" y="389" width="1.4" height="15.0" fill="rgb(252,98,22)" rx="2" ry="2" />
<text  x="1161.97" y="399.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::should_ignore (466 samples, 0.14%)</title><rect x="1117.0" y="373" width="1.6" height="15.0" fill="rgb(239,198,47)" rx="2" ry="2" />
<text  x="1120.03" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (413 samples, 0.12%)</title><rect x="1015.3" y="277" width="1.4" height="15.0" fill="rgb(245,50,8)" rx="2" ry="2" />
<text  x="1018.30" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,083 samples, 0.32%)</title><rect x="382.1" y="373" width="3.7" height="15.0" fill="rgb(219,142,11)" rx="2" ry="2" />
<text  x="385.12" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::category_type::CategoryType::is_empty (113 samples, 0.03%)</title><rect x="1170.6" y="437" width="0.4" height="15.0" fill="rgb(220,209,9)" rx="2" ry="2" />
<text  x="1173.58" y="447.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::byte_class (231 samples, 0.07%)</title><rect x="219.2" y="277" width="0.8" height="15.0" fill="rgb(251,169,48)" rx="2" ry="2" />
<text  x="222.19" y="287.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::find_at (3,849 samples, 1.12%)</title><rect x="213.5" y="357" width="13.2" height="15.0" fill="rgb(245,212,4)" rx="2" ry="2" />
<text  x="216.47" y="367.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (2,905 samples, 0.85%)</title><rect x="303.9" y="389" width="10.0" height="15.0" fill="rgb(220,213,48)" rx="2" ry="2" />
<text  x="306.90" y="399.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::step (446 samples, 0.13%)</title><rect x="305.7" y="261" width="1.5" height="15.0" fill="rgb(242,134,1)" rx="2" ry="2" />
<text  x="308.67" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (412 samples, 0.12%)</title><rect x="196.8" y="325" width="1.4" height="15.0" fill="rgb(238,171,16)" rx="2" ry="2" />
<text  x="199.79" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,979 samples, 0.87%)</title><rect x="528.9" y="245" width="10.2" height="15.0" fill="rgb(217,5,38)" rx="2" ry="2" />
<text  x="531.92" y="255.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (1,366 samples, 0.40%)</title><rect x="307.8" y="341" width="4.7" height="15.0" fill="rgb(244,2,27)" rx="2" ry="2" />
<text  x="310.81" y="351.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (248,670 samples, 72.37%)</title><rect x="318.1" y="485" width="854.0" height="15.0" fill="rgb(251,158,36)" rx="2" ry="2" />
<text  x="321.10" y="495.5" >sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize</text>
</g>
<g >
<title>__GI___libc_malloc (304 samples, 0.09%)</title><rect x="429.5" y="133" width="1.1" height="15.0" fill="rgb(219,177,32)" rx="2" ry="2" />
<text  x="432.55" y="143.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (2,499 samples, 0.73%)</title><rect x="291.7" y="405" width="8.6" height="15.0" fill="rgb(252,3,43)" rx="2" ry="2" />
<text  x="294.72" y="415.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (646 samples, 0.19%)</title><rect x="400.8" y="437" width="2.2" height="15.0" fill="rgb(250,168,39)" rx="2" ry="2" />
<text  x="403.80" y="447.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (111 samples, 0.03%)</title><rect x="474.4" y="293" width="0.4" height="15.0" fill="rgb(248,219,29)" rx="2" ry="2" />
<text  x="477.39" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (715 samples, 0.21%)</title><rect x="330.7" y="373" width="2.4" height="15.0" fill="rgb(220,174,8)" rx="2" ry="2" />
<text  x="333.69" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (120 samples, 0.03%)</title><rect x="947.3" y="261" width="0.4" height="15.0" fill="rgb(232,62,51)" rx="2" ry="2" />
<text  x="950.27" y="271.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (308 samples, 0.09%)</title><rect x="1018.1" y="357" width="1.1" height="15.0" fill="rgb(217,124,23)" rx="2" ry="2" />
<text  x="1021.15" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (215 samples, 0.06%)</title><rect x="303.1" y="373" width="0.7" height="15.0" fill="rgb(236,66,44)" rx="2" ry="2" />
<text  x="306.07" y="383.5" ></text>
</g>
<g >
<title>&lt;sudachi::sentence_splitter::SentenceIter as core::iter::traits::iterator::Iterator&gt;::next (59,751 samples, 17.39%)</title><rect x="109.2" y="485" width="205.2" height="15.0" fill="rgb(238,185,34)" rx="2" ry="2" />
<text  x="112.22" y="495.5" >&lt;sudachi::sentence_splitte..</text>
</g>
<g >
<title>__rdl_alloc (194 samples, 0.06%)</title><rect x="522.0" y="133" width="0.7" height="15.0" fill="rgb(244,89,25)" rx="2" ry="2" />
<text  x="525.02" y="143.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (157 samples, 0.05%)</title><rect x="1086.7" y="277" width="0.5" height="15.0" fill="rgb(233,203,51)" rx="2" ry="2" />
<text  x="1089.68" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (413 samples, 0.12%)</title><rect x="414.4" y="325" width="1.4" height="15.0" fill="rgb(207,21,25)" rx="2" ry="2" />
<text  x="417.41" y="335.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (95 samples, 0.03%)</title><rect x="10.1" y="469" width="0.3" height="15.0" fill="rgb(208,170,48)" rx="2" ry="2" />
<text  x="13.11" y="479.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (2,797 samples, 0.81%)</title><rect x="360.6" y="341" width="9.6" height="15.0" fill="rgb(229,34,19)" rx="2" ry="2" />
<text  x="363.56" y="351.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at_reverse (203 samples, 0.06%)</title><rect x="312.7" y="325" width="0.7" height="15.0" fill="rgb(213,54,50)" rx="2" ry="2" />
<text  x="315.74" y="335.5" ></text>
</g>
<g >
<title>std::io::read_until (629 samples, 0.18%)</title><rect x="85.0" y="405" width="2.2" height="15.0" fill="rgb(224,108,38)" rx="2" ry="2" />
<text  x="87.99" y="415.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (626 samples, 0.18%)</title><rect x="973.4" y="261" width="2.2" height="15.0" fill="rgb(210,225,27)" rx="2" ry="2" />
<text  x="976.42" y="271.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::standard_find_at_imp (465 samples, 0.14%)</title><rect x="1111.6" y="293" width="1.6" height="15.0" fill="rgb(252,96,50)" rx="2" ry="2" />
<text  x="1114.60" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (95 samples, 0.03%)</title><rect x="476.7" y="165" width="0.3" height="15.0" fill="rgb(249,185,7)" rx="2" ry="2" />
<text  x="479.70" y="175.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (238 samples, 0.07%)</title><rect x="40.3" y="469" width="0.8" height="15.0" fill="rgb(254,161,24)" rx="2" ry="2" />
<text  x="43.32" y="479.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (105 samples, 0.03%)</title><rect x="425.2" y="165" width="0.4" height="15.0" fill="rgb(223,151,19)" rx="2" ry="2" />
<text  x="428.23" y="175.5" ></text>
</g>
<g >
<title>&lt;T as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::oov_provider_plugins (270 samples, 0.08%)</title><rect x="577.5" y="453" width="1.0" height="15.0" fill="rgb(222,40,47)" rx="2" ry="2" />
<text  x="580.54" y="463.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (382 samples, 0.11%)</title><rect x="420.1" y="277" width="1.3" height="15.0" fill="rgb(206,130,38)" rx="2" ry="2" />
<text  x="423.13" y="287.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (308 samples, 0.09%)</title><rect x="1166.9" y="389" width="1.0" height="15.0" fill="rgb(248,202,5)" rx="2" ry="2" />
<text  x="1169.89" y="399.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,656 samples, 0.48%)</title><rect x="1150.4" y="293" width="5.7" height="15.0" fill="rgb(238,14,41)" rx="2" ry="2" />
<text  x="1153.40" y="303.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (651 samples, 0.19%)</title><rect x="386.2" y="421" width="2.2" height="15.0" fill="rgb(205,100,7)" rx="2" ry="2" />
<text  x="389.17" y="431.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.03%)</title><rect x="1153.7" y="101" width="0.3" height="15.0" fill="rgb(229,117,5)" rx="2" ry="2" />
<text  x="1156.72" y="111.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3,795 samples, 1.10%)</title><rect x="248.6" y="277" width="13.0" height="15.0" fill="rgb(253,121,4)" rx="2" ry="2" />
<text  x="251.60" y="287.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::quick_check (2,163 samples, 0.63%)</title><rect x="1118.8" y="357" width="7.5" height="15.0" fill="rgb(214,142,12)" rx="2" ry="2" />
<text  x="1121.85" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt;&gt; (8,366 samples, 2.43%)</title><rect x="343.4" y="453" width="28.8" height="15.0" fill="rgb(217,207,54)" rx="2" ry="2" />
<text  x="346.44" y="463.5" >co..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (157 samples, 0.05%)</title><rect x="1086.7" y="261" width="0.5" height="15.0" fill="rgb(212,92,39)" rx="2" ry="2" />
<text  x="1089.68" y="271.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::repeat (242 samples, 0.07%)</title><rect x="947.7" y="245" width="0.8" height="15.0" fill="rgb(246,66,31)" rx="2" ry="2" />
<text  x="950.68" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3,345 samples, 0.97%)</title><rect x="491.5" y="149" width="11.5" height="15.0" fill="rgb(253,105,6)" rx="2" ry="2" />
<text  x="494.48" y="159.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (114 samples, 0.03%)</title><rect x="477.3" y="197" width="0.4" height="15.0" fill="rgb(210,129,17)" rx="2" ry="2" />
<text  x="480.28" y="207.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::exec_ (697 samples, 0.20%)</title><rect x="305.3" y="293" width="2.4" height="15.0" fill="rgb(228,2,11)" rx="2" ry="2" />
<text  x="308.26" y="303.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::AhoCorasick&lt;S&gt;::earliest_find (95 samples, 0.03%)</title><rect x="1110.8" y="357" width="0.3" height="15.0" fill="rgb(235,173,29)" rx="2" ry="2" />
<text  x="1113.76" y="367.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::captures_read_at (2,969 samples, 0.86%)</title><rect x="303.8" y="405" width="10.2" height="15.0" fill="rgb(245,203,52)" rx="2" ry="2" />
<text  x="306.81" y="415.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::get_best_path (6,071 samples, 1.77%)</title><rect x="372.3" y="469" width="20.9" height="15.0" fill="rgb(246,209,36)" rx="2" ry="2" />
<text  x="375.32" y="479.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (97 samples, 0.03%)</title><rect x="327.0" y="245" width="0.3" height="15.0" fill="rgb(209,105,54)" rx="2" ry="2" />
<text  x="329.99" y="255.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i32::{{closure}} (205 samples, 0.06%)</title><rect x="473.7" y="229" width="0.7" height="15.0" fill="rgb(211,221,14)" rx="2" ry="2" />
<text  x="476.69" y="239.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (107 samples, 0.03%)</title><rect x="149.8" y="325" width="0.4" height="15.0" fill="rgb(230,211,36)" rx="2" ry="2" />
<text  x="152.84" y="335.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (312 samples, 0.09%)</title><rect x="1043.0" y="325" width="1.1" height="15.0" fill="rgb(219,46,1)" rx="2" ry="2" />
<text  x="1046.02" y="335.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (325 samples, 0.09%)</title><rect x="89.1" y="453" width="1.1" height="15.0" fill="rgb(243,48,21)" rx="2" ry="2" />
<text  x="92.13" y="463.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::is_uppercase (668 samples, 0.19%)</title><rect x="1102.8" y="357" width="2.3" height="15.0" fill="rgb(241,36,30)" rx="2" ry="2" />
<text  x="1105.77" y="367.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (96 samples, 0.03%)</title><rect x="1171.5" y="389" width="0.3" height="15.0" fill="rgb(241,118,6)" rx="2" ry="2" />
<text  x="1174.48" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,651 samples, 0.48%)</title><rect x="1011.0" y="357" width="5.7" height="15.0" fill="rgb(209,2,10)" rx="2" ry="2" />
<text  x="1014.04" y="367.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,399 samples, 0.70%)</title><rect x="1025.6" y="293" width="8.3" height="15.0" fill="rgb(205,14,25)" rx="2" ry="2" />
<text  x="1028.61" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (156 samples, 0.05%)</title><rect x="340.1" y="357" width="0.6" height="15.0" fill="rgb(230,214,53)" rx="2" ry="2" />
<text  x="343.13" y="367.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,323 samples, 0.68%)</title><rect x="1008.7" y="405" width="8.0" height="15.0" fill="rgb(208,4,17)" rx="2" ry="2" />
<text  x="1011.74" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,274 samples, 0.95%)</title><rect x="1173.1" y="373" width="11.3" height="15.0" fill="rgb(244,220,34)" rx="2" ry="2" />
<text  x="1176.14" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (165 samples, 0.05%)</title><rect x="314.8" y="469" width="0.5" height="15.0" fill="rgb(238,137,36)" rx="2" ry="2" />
<text  x="317.75" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (438 samples, 0.13%)</title><rect x="52.7" y="501" width="1.5" height="15.0" fill="rgb(236,79,37)" rx="2" ry="2" />
<text  x="55.67" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,473 samples, 1.01%)</title><rect x="441.9" y="373" width="11.9" height="15.0" fill="rgb(248,96,8)" rx="2" ry="2" />
<text  x="444.87" y="383.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (417 samples, 0.12%)</title><rect x="1016.7" y="325" width="1.4" height="15.0" fill="rgb(239,76,12)" rx="2" ry="2" />
<text  x="1019.71" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (138 samples, 0.04%)</title><rect x="314.8" y="389" width="0.5" height="15.0" fill="rgb(244,184,54)" rx="2" ry="2" />
<text  x="317.82" y="399.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 0.04%)</title><rect x="299.2" y="309" width="0.5" height="15.0" fill="rgb(211,24,21)" rx="2" ry="2" />
<text  x="302.21" y="319.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (12,098 samples, 3.52%)</title><rect x="740.2" y="309" width="41.5" height="15.0" fill="rgb(248,56,27)" rx="2" ry="2" />
<text  x="743.15" y="319.5" >all..</text>
</g>
<g >
<title>_int_malloc (7,008 samples, 2.04%)</title><rect x="783.7" y="325" width="24.1" height="15.0" fill="rgb(246,69,52)" rx="2" ry="2" />
<text  x="786.71" y="335.5" >_..</text>
</g>
<g >
<title>aho_corasick::packed::api::Searcher::find_at (1,566 samples, 0.46%)</title><rect x="1150.7" y="229" width="5.4" height="15.0" fill="rgb(222,97,8)" rx="2" ry="2" />
<text  x="1153.71" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (123 samples, 0.04%)</title><rect x="340.2" y="277" width="0.4" height="15.0" fill="rgb(207,107,25)" rx="2" ry="2" />
<text  x="343.18" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (130 samples, 0.04%)</title><rect x="1172.4" y="421" width="0.5" height="15.0" fill="rgb(225,102,26)" rx="2" ry="2" />
<text  x="1175.43" y="431.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_state (679 samples, 0.20%)</title><rect x="281.4" y="293" width="2.3" height="15.0" fill="rgb(209,9,42)" rx="2" ry="2" />
<text  x="284.41" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (12,134 samples, 3.53%)</title><rect x="740.0" y="325" width="41.7" height="15.0" fill="rgb(205,170,50)" rx="2" ry="2" />
<text  x="743.03" y="335.5" >all..</text>
</g>
<g >
<title>core::option::Option&lt;&amp;T&gt;::copied (2,728 samples, 0.79%)</title><rect x="541.5" y="229" width="9.4" height="15.0" fill="rgb(252,228,52)" rx="2" ry="2" />
<text  x="544.49" y="239.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (194 samples, 0.06%)</title><rect x="487.1" y="229" width="0.7" height="15.0" fill="rgb(235,188,22)" rx="2" ry="2" />
<text  x="490.12" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (101 samples, 0.03%)</title><rect x="334.5" y="213" width="0.4" height="15.0" fill="rgb(237,110,29)" rx="2" ry="2" />
<text  x="337.50" y="223.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::binary_search (1,074 samples, 0.31%)</title><rect x="1164.4" y="437" width="3.7" height="15.0" fill="rgb(232,4,45)" rx="2" ry="2" />
<text  x="1167.38" y="447.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::set_word_info (729 samples, 0.21%)</title><rect x="397.4" y="453" width="2.5" height="15.0" fill="rgb(211,179,50)" rx="2" ry="2" />
<text  x="400.35" y="463.5" ></text>
</g>
<g >
<title>&lt;unicode_normalization::decompose::Decompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (134 samples, 0.04%)</title><rect x="1115.9" y="277" width="0.5" height="15.0" fill="rgb(244,191,47)" rx="2" ry="2" />
<text  x="1118.91" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (105 samples, 0.03%)</title><rect x="334.5" y="245" width="0.4" height="15.0" fill="rgb(214,113,43)" rx="2" ry="2" />
<text  x="337.49" y="255.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (89 samples, 0.03%)</title><rect x="481.4" y="277" width="0.4" height="15.0" fill="rgb(224,206,46)" rx="2" ry="2" />
<text  x="484.45" y="287.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,312 samples, 0.96%)</title><rect x="441.9" y="325" width="11.4" height="15.0" fill="rgb(234,168,49)" rx="2" ry="2" />
<text  x="444.95" y="335.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::repeat (179 samples, 0.05%)</title><rect x="808.7" y="341" width="0.6" height="15.0" fill="rgb(223,175,53)" rx="2" ry="2" />
<text  x="811.71" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free (368 samples, 0.11%)</title><rect x="414.5" y="309" width="1.3" height="15.0" fill="rgb(232,13,1)" rx="2" ry="2" />
<text  x="417.52" y="319.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::fmt_u64 (229 samples, 0.07%)</title><rect x="340.1" y="373" width="0.7" height="15.0" fill="rgb(246,64,35)" rx="2" ry="2" />
<text  x="343.05" y="383.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (154 samples, 0.04%)</title><rect x="522.8" y="229" width="0.6" height="15.0" fill="rgb(211,150,23)" rx="2" ry="2" />
<text  x="525.83" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (635 samples, 0.18%)</title><rect x="1066.1" y="341" width="2.1" height="15.0" fill="rgb(223,200,23)" rx="2" ry="2" />
<text  x="1069.05" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::arith::AddAssign&lt;&amp;str&gt;&gt;::add_assign (143 samples, 0.04%)</title><rect x="341.6" y="405" width="0.4" height="15.0" fill="rgb(217,40,40)" rx="2" ry="2" />
<text  x="344.55" y="415.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::save (5,081 samples, 1.48%)</title><rect x="176.8" y="405" width="17.5" height="15.0" fill="rgb(236,188,36)" rx="2" ry="2" />
<text  x="179.83" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (116 samples, 0.03%)</title><rect x="1088.7" y="357" width="0.4" height="15.0" fill="rgb(207,227,13)" rx="2" ry="2" />
<text  x="1091.68" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (234 samples, 0.07%)</title><rect x="476.2" y="261" width="0.8" height="15.0" fill="rgb(246,136,49)" rx="2" ry="2" />
<text  x="479.22" y="271.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (147 samples, 0.04%)</title><rect x="314.8" y="405" width="0.5" height="15.0" fill="rgb(216,58,21)" rx="2" ry="2" />
<text  x="317.80" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (2,977 samples, 0.87%)</title><rect x="511.8" y="117" width="10.2" height="15.0" fill="rgb(240,109,54)" rx="2" ry="2" />
<text  x="514.79" y="127.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (187 samples, 0.05%)</title><rect x="1109.6" y="373" width="0.6" height="15.0" fill="rgb(225,63,50)" rx="2" ry="2" />
<text  x="1112.57" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (9,533 samples, 2.77%)</title><rect x="943.0" y="437" width="32.8" height="15.0" fill="rgb(213,9,29)" rx="2" ry="2" />
<text  x="946.02" y="447.5" >al..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (421 samples, 0.12%)</title><rect x="984.0" y="437" width="1.4" height="15.0" fill="rgb(212,68,41)" rx="2" ry="2" />
<text  x="986.99" y="447.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (9,494 samples, 2.76%)</title><rect x="943.1" y="421" width="32.6" height="15.0" fill="rgb(210,97,32)" rx="2" ry="2" />
<text  x="946.14" y="431.5" >&lt;T..</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (96 samples, 0.03%)</title><rect x="1062.3" y="357" width="0.3" height="15.0" fill="rgb(224,39,53)" rx="2" ry="2" />
<text  x="1065.26" y="367.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (150 samples, 0.04%)</title><rect x="1061.7" y="373" width="0.5" height="15.0" fill="rgb(215,62,36)" rx="2" ry="2" />
<text  x="1064.67" y="383.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (780 samples, 0.23%)</title><rect x="1065.6" y="405" width="2.6" height="15.0" fill="rgb(235,85,38)" rx="2" ry="2" />
<text  x="1068.56" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,205 samples, 0.93%)</title><rect x="1070.0" y="389" width="11.0" height="15.0" fill="rgb(209,66,8)" rx="2" ry="2" />
<text  x="1073.00" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (138 samples, 0.04%)</title><rect x="338.4" y="405" width="0.5" height="15.0" fill="rgb(206,134,37)" rx="2" ry="2" />
<text  x="341.38" y="415.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (17,966 samples, 5.23%)</title><rect x="229.2" y="373" width="61.7" height="15.0" fill="rgb(249,29,23)" rx="2" ry="2" />
<text  x="232.23" y="383.5" >regex:..</text>
</g>
<g >
<title>&lt;aho_corasick::dfa::PremultipliedByteClass&lt;S&gt; as aho_corasick::automaton::Automaton&gt;::next_state (359 samples, 0.10%)</title><rect x="1111.9" y="261" width="1.2" height="15.0" fill="rgb(244,187,48)" rx="2" ry="2" />
<text  x="1114.91" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::get_word_info (105 samples, 0.03%)</title><rect x="107.4" y="405" width="0.4" height="15.0" fill="rgb(213,118,4)" rx="2" ry="2" />
<text  x="110.39" y="415.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (270 samples, 0.08%)</title><rect x="473.5" y="277" width="0.9" height="15.0" fill="rgb(225,30,8)" rx="2" ry="2" />
<text  x="476.47" y="287.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (198 samples, 0.06%)</title><rect x="1034.8" y="245" width="0.7" height="15.0" fill="rgb(243,110,49)" rx="2" ry="2" />
<text  x="1037.82" y="255.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,880 samples, 0.84%)</title><rect x="1025.6" y="373" width="9.9" height="15.0" fill="rgb(246,0,44)" rx="2" ry="2" />
<text  x="1028.61" y="383.5" ></text>
</g>
<g >
<title>std::io::BufRead::read_line (1,425 samples, 0.41%)</title><rect x="82.3" y="453" width="4.9" height="15.0" fill="rgb(250,37,6)" rx="2" ry="2" />
<text  x="85.26" y="463.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (276 samples, 0.08%)</title><rect x="79.3" y="389" width="1.0" height="15.0" fill="rgb(253,148,30)" rx="2" ry="2" />
<text  x="82.32" y="399.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (193 samples, 0.06%)</title><rect x="321.0" y="389" width="0.6" height="15.0" fill="rgb(233,205,33)" rx="2" ry="2" />
<text  x="323.98" y="399.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (108 samples, 0.03%)</title><rect x="307.9" y="325" width="0.4" height="15.0" fill="rgb(210,164,19)" rx="2" ry="2" />
<text  x="310.91" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (616 samples, 0.18%)</title><rect x="330.9" y="341" width="2.1" height="15.0" fill="rgb(227,216,21)" rx="2" ry="2" />
<text  x="333.90" y="351.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (458 samples, 0.13%)</title><rect x="298.7" y="341" width="1.6" height="15.0" fill="rgb(225,85,18)" rx="2" ry="2" />
<text  x="301.73" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (887 samples, 0.26%)</title><rect x="325.1" y="421" width="3.0" height="15.0" fill="rgb(236,55,9)" rx="2" ry="2" />
<text  x="328.05" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,043 samples, 0.59%)</title><rect x="353.2" y="277" width="7.0" height="15.0" fill="rgb(219,41,8)" rx="2" ry="2" />
<text  x="356.18" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (2,789 samples, 0.81%)</title><rect x="1070.3" y="245" width="9.6" height="15.0" fill="rgb(233,216,5)" rx="2" ry="2" />
<text  x="1073.34" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::word_id_to_offset (139 samples, 0.04%)</title><rect x="417.0" y="389" width="0.5" height="15.0" fill="rgb(214,159,50)" rx="2" ry="2" />
<text  x="419.99" y="399.5" ></text>
</g>
<g >
<title>core::ptr::write (191 samples, 0.06%)</title><rect x="1162.9" y="437" width="0.6" height="15.0" fill="rgb(233,176,46)" rx="2" ry="2" />
<text  x="1165.88" y="447.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,117 samples, 0.33%)</title><rect x="649.0" y="389" width="3.8" height="15.0" fill="rgb(234,157,20)" rx="2" ry="2" />
<text  x="652.00" y="399.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (115 samples, 0.03%)</title><rect x="425.6" y="213" width="0.4" height="15.0" fill="rgb(238,198,53)" rx="2" ry="2" />
<text  x="428.62" y="223.5" ></text>
</g>
<g >
<title>&lt;T as alloc::string::ToString&gt;::to_string (308 samples, 0.09%)</title><rect x="339.8" y="405" width="1.0" height="15.0" fill="rgb(217,126,14)" rx="2" ry="2" />
<text  x="342.79" y="415.5" ></text>
</g>
<g >
<title>regex::re_trait::RegularExpression::locations (165 samples, 0.05%)</title><rect x="1148.4" y="357" width="0.6" height="15.0" fill="rgb(237,21,27)" rx="2" ry="2" />
<text  x="1151.40" y="367.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (554 samples, 0.16%)</title><rect x="653.1" y="421" width="1.9" height="15.0" fill="rgb(224,100,7)" rx="2" ry="2" />
<text  x="656.07" y="431.5" ></text>
</g>
<g >
<title>_int_free (1,046 samples, 0.30%)</title><rect x="64.7" y="501" width="3.6" height="15.0" fill="rgb(225,73,49)" rx="2" ry="2" />
<text  x="67.68" y="511.5" ></text>
</g>
<g >
<title>&lt; (29,630 samples, 8.62%)</title><rect x="456.4" y="341" width="101.7" height="15.0" fill="rgb(218,198,9)" rx="2" ry="2" />
<text  x="459.35" y="351.5" >&lt;</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (423 samples, 0.12%)</title><rect x="1159.0" y="421" width="1.4" height="15.0" fill="rgb(225,202,26)" rx="2" ry="2" />
<text  x="1161.97" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (148 samples, 0.04%)</title><rect x="337.0" y="309" width="0.5" height="15.0" fill="rgb(237,181,43)" rx="2" ry="2" />
<text  x="340.02" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (846 samples, 0.25%)</title><rect x="1062.6" y="405" width="2.9" height="15.0" fill="rgb(228,46,41)" rx="2" ry="2" />
<text  x="1065.62" y="415.5" ></text>
</g>
<g >
<title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,504 samples, 0.44%)</title><rect x="82.0" y="485" width="5.2" height="15.0" fill="rgb(222,147,24)" rx="2" ry="2" />
<text  x="84.99" y="495.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (750 samples, 0.22%)</title><rect x="555.3" y="325" width="2.6" height="15.0" fill="rgb(208,136,6)" rx="2" ry="2" />
<text  x="558.34" y="335.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match (1,513 samples, 0.44%)</title><rect x="264.3" y="325" width="5.2" height="15.0" fill="rgb(226,171,2)" rx="2" ry="2" />
<text  x="267.25" y="335.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (322 samples, 0.09%)</title><rect x="1099.3" y="373" width="1.1" height="15.0" fill="rgb(212,119,44)" rx="2" ry="2" />
<text  x="1102.25" y="383.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (399 samples, 0.12%)</title><rect x="335.3" y="357" width="1.3" height="15.0" fill="rgb(230,122,17)" rx="2" ry="2" />
<text  x="338.26" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (313 samples, 0.09%)</title><rect x="335.3" y="277" width="1.1" height="15.0" fill="rgb(237,53,40)" rx="2" ry="2" />
<text  x="338.28" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_state (835 samples, 0.24%)</title><rect x="217.9" y="293" width="2.9" height="15.0" fill="rgb(246,106,12)" rx="2" ry="2" />
<text  x="220.89" y="303.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (104 samples, 0.03%)</title><rect x="85.2" y="373" width="0.4" height="15.0" fill="rgb(235,16,38)" rx="2" ry="2" />
<text  x="88.23" y="383.5" ></text>
</g>
<g >
<title>core::str::validations::unwrap_or_0 (152 samples, 0.04%)</title><rect x="299.7" y="309" width="0.6" height="15.0" fill="rgb(252,0,31)" rx="2" ry="2" />
<text  x="302.74" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (2,752 samples, 0.80%)</title><rect x="159.4" y="389" width="9.5" height="15.0" fill="rgb(218,186,29)" rx="2" ry="2" />
<text  x="162.40" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,583 samples, 1.04%)</title><rect x="441.5" y="389" width="12.3" height="15.0" fill="rgb(219,113,39)" rx="2" ry="2" />
<text  x="444.49" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (170 samples, 0.05%)</title><rect x="85.8" y="341" width="0.5" height="15.0" fill="rgb(250,96,18)" rx="2" ry="2" />
<text  x="88.75" y="351.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::trace_stack (271 samples, 0.08%)</title><rect x="169.8" y="389" width="1.0" height="15.0" fill="rgb(236,195,5)" rx="2" ry="2" />
<text  x="172.85" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,728 samples, 0.50%)</title><rect x="943.2" y="373" width="5.9" height="15.0" fill="rgb(222,97,24)" rx="2" ry="2" />
<text  x="946.16" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (104 samples, 0.03%)</title><rect x="1118.3" y="245" width="0.3" height="15.0" fill="rgb(215,43,14)" rx="2" ry="2" />
<text  x="1121.27" y="255.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (312 samples, 0.09%)</title><rect x="1043.0" y="277" width="1.1" height="15.0" fill="rgb(249,207,21)" rx="2" ry="2" />
<text  x="1046.02" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_param (17,351 samples, 5.05%)</title><rect x="985.4" y="437" width="59.6" height="15.0" fill="rgb(242,23,2)" rx="2" ry="2" />
<text  x="988.45" y="447.5" >sudach..</text>
</g>
<g >
<title>core::intrinsics::copy (351 samples, 0.10%)</title><rect x="389.3" y="421" width="1.2" height="15.0" fill="rgb(217,182,49)" rx="2" ry="2" />
<text  x="392.28" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (186 samples, 0.05%)</title><rect x="522.0" y="117" width="0.7" height="15.0" fill="rgb(246,22,42)" rx="2" ry="2" />
<text  x="525.05" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6,642 samples, 1.93%)</title><rect x="952.9" y="373" width="22.8" height="15.0" fill="rgb(209,124,26)" rx="2" ry="2" />
<text  x="955.91" y="383.5" >a..</text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (270 samples, 0.08%)</title><rect x="473.5" y="261" width="0.9" height="15.0" fill="rgb(246,225,46)" rx="2" ry="2" />
<text  x="476.47" y="271.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (104 samples, 0.03%)</title><rect x="85.2" y="341" width="0.4" height="15.0" fill="rgb(214,110,17)" rx="2" ry="2" />
<text  x="88.23" y="351.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (3,402 samples, 0.99%)</title><rect x="420.1" y="293" width="11.7" height="15.0" fill="rgb(249,44,53)" rx="2" ry="2" />
<text  x="423.12" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (399 samples, 0.12%)</title><rect x="335.3" y="325" width="1.3" height="15.0" fill="rgb(222,170,27)" rx="2" ry="2" />
<text  x="338.26" y="335.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::shortest_match_at (220 samples, 0.06%)</title><rect x="300.5" y="389" width="0.8" height="15.0" fill="rgb(254,69,34)" rx="2" ry="2" />
<text  x="303.53" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_free (88 samples, 0.03%)</title><rect x="1148.1" y="261" width="0.3" height="15.0" fill="rgb(231,109,28)" rx="2" ry="2" />
<text  x="1151.06" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::new (11,338 samples, 3.30%)</title><rect x="936.9" y="453" width="38.9" height="15.0" fill="rgb(214,106,38)" rx="2" ry="2" />
<text  x="939.89" y="463.5" >sud..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (204 samples, 0.06%)</title><rect x="188.8" y="389" width="0.7" height="15.0" fill="rgb(220,17,34)" rx="2" ry="2" />
<text  x="191.77" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (177 samples, 0.05%)</title><rect x="106.4" y="437" width="0.6" height="15.0" fill="rgb(237,25,9)" rx="2" ry="2" />
<text  x="109.44" y="447.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (126 samples, 0.04%)</title><rect x="299.3" y="293" width="0.4" height="15.0" fill="rgb(241,133,6)" rx="2" ry="2" />
<text  x="302.31" y="303.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,499 samples, 0.73%)</title><rect x="291.7" y="373" width="8.6" height="15.0" fill="rgb(230,25,53)" rx="2" ry="2" />
<text  x="294.72" y="383.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (374 samples, 0.11%)</title><rect x="1013.4" y="277" width="1.3" height="15.0" fill="rgb(209,81,27)" rx="2" ry="2" />
<text  x="1016.45" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;sudachi::analysis::node::Node&gt;&gt; (490 samples, 0.14%)</title><rect x="336.7" y="405" width="1.7" height="15.0" fill="rgb(234,175,32)" rx="2" ry="2" />
<text  x="339.70" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1,006 samples, 0.29%)</title><rect x="1013.3" y="309" width="3.4" height="15.0" fill="rgb(212,124,31)" rx="2" ry="2" />
<text  x="1016.26" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (789 samples, 0.23%)</title><rect x="382.3" y="309" width="2.7" height="15.0" fill="rgb(235,96,4)" rx="2" ry="2" />
<text  x="385.30" y="319.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (95 samples, 0.03%)</title><rect x="10.1" y="437" width="0.3" height="15.0" fill="rgb(243,152,2)" rx="2" ry="2" />
<text  x="13.11" y="447.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::TeddySlim2Mask128::candidate (114 samples, 0.03%)</title><rect x="1155.4" y="181" width="0.4" height="15.0" fill="rgb(238,52,10)" rx="2" ry="2" />
<text  x="1158.43" y="191.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (145 samples, 0.04%)</title><rect x="10.1" y="517" width="0.5" height="15.0" fill="rgb(229,109,0)" rx="2" ry="2" />
<text  x="13.07" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (165 samples, 0.05%)</title><rect x="314.8" y="485" width="0.5" height="15.0" fill="rgb(229,216,4)" rx="2" ry="2" />
<text  x="317.75" y="495.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (627 samples, 0.18%)</title><rect x="811.1" y="421" width="2.2" height="15.0" fill="rgb(251,178,41)" rx="2" ry="2" />
<text  x="814.13" y="431.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (494 samples, 0.14%)</title><rect x="656.6" y="453" width="1.7" height="15.0" fill="rgb(222,5,43)" rx="2" ry="2" />
<text  x="659.57" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (151 samples, 0.04%)</title><rect x="552.8" y="181" width="0.5" height="15.0" fill="rgb(253,220,30)" rx="2" ry="2" />
<text  x="555.81" y="191.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (115 samples, 0.03%)</title><rect x="53.8" y="437" width="0.4" height="15.0" fill="rgb(219,73,37)" rx="2" ry="2" />
<text  x="56.78" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (356 samples, 0.10%)</title><rect x="196.9" y="277" width="1.2" height="15.0" fill="rgb(208,140,32)" rx="2" ry="2" />
<text  x="199.91" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (91 samples, 0.03%)</title><rect x="335.9" y="197" width="0.3" height="15.0" fill="rgb(244,0,4)" rx="2" ry="2" />
<text  x="338.91" y="207.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (338 samples, 0.10%)</title><rect x="1160.9" y="437" width="1.2" height="15.0" fill="rgb(236,20,46)" rx="2" ry="2" />
<text  x="1163.92" y="447.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (258 samples, 0.08%)</title><rect x="487.1" y="245" width="0.9" height="15.0" fill="rgb(247,146,20)" rx="2" ry="2" />
<text  x="490.12" y="255.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2,499 samples, 0.73%)</title><rect x="291.7" y="357" width="8.6" height="15.0" fill="rgb(240,31,29)" rx="2" ry="2" />
<text  x="294.72" y="367.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (285 samples, 0.08%)</title><rect x="654.0" y="373" width="1.0" height="15.0" fill="rgb(240,72,52)" rx="2" ry="2" />
<text  x="656.99" y="383.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_flags (1,021 samples, 0.30%)</title><rect x="277.9" y="293" width="3.5" height="15.0" fill="rgb(251,139,42)" rx="2" ry="2" />
<text  x="280.90" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (663 samples, 0.19%)</title><rect x="426.2" y="117" width="2.3" height="15.0" fill="rgb(223,54,18)" rx="2" ry="2" />
<text  x="429.18" y="127.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::option::Option&lt;usize&gt;&gt;&gt; (107 samples, 0.03%)</title><rect x="1148.0" y="325" width="0.4" height="15.0" fill="rgb(213,201,34)" rx="2" ry="2" />
<text  x="1151.03" y="335.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (418 samples, 0.12%)</title><rect x="585.8" y="293" width="1.4" height="15.0" fill="rgb(209,31,17)" rx="2" ry="2" />
<text  x="588.79" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1,175 samples, 0.34%)</title><rect x="56.3" y="501" width="4.0" height="15.0" fill="rgb(243,151,36)" rx="2" ry="2" />
<text  x="59.26" y="511.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (322 samples, 0.09%)</title><rect x="1099.3" y="357" width="1.1" height="15.0" fill="rgb(237,111,9)" rx="2" ry="2" />
<text  x="1102.25" y="367.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::backtrack (536 samples, 0.16%)</title><rect x="305.4" y="277" width="1.8" height="15.0" fill="rgb(224,5,28)" rx="2" ry="2" />
<text  x="308.36" y="287.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::PathRewritePlugin::concatenate (1,515 samples, 0.44%)</title><rect x="333.8" y="421" width="5.2" height="15.0" fill="rgb(207,66,41)" rx="2" ry="2" />
<text  x="336.76" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,144 samples, 0.33%)</title><rect x="382.0" y="389" width="3.9" height="15.0" fill="rgb(216,60,30)" rx="2" ry="2" />
<text  x="384.99" y="399.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (1,849 samples, 0.54%)</title><rect x="1119.2" y="341" width="6.4" height="15.0" fill="rgb(244,193,12)" rx="2" ry="2" />
<text  x="1122.22" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[sudachi::analysis::node::Node]&gt; (4,624 samples, 1.35%)</title><rect x="344.6" y="373" width="15.9" height="15.0" fill="rgb(239,65,16)" rx="2" ry="2" />
<text  x="347.60" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::new (276 samples, 0.08%)</title><rect x="79.3" y="437" width="1.0" height="15.0" fill="rgb(209,180,18)" rx="2" ry="2" />
<text  x="82.32" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_dictionary_id (317 samples, 0.09%)</title><rect x="1046.3" y="421" width="1.1" height="15.0" fill="rgb(237,22,34)" rx="2" ry="2" />
<text  x="1049.30" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (621 samples, 0.18%)</title><rect x="423.5" y="229" width="2.1" height="15.0" fill="rgb(238,224,3)" rx="2" ry="2" />
<text  x="426.48" y="239.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (171 samples, 0.05%)</title><rect x="1109.6" y="357" width="0.6" height="15.0" fill="rgb(248,182,38)" rx="2" ry="2" />
<text  x="1112.62" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (526 samples, 0.15%)</title><rect x="1098.8" y="421" width="1.8" height="15.0" fill="rgb(248,27,25)" rx="2" ry="2" />
<text  x="1101.77" y="431.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (466 samples, 0.14%)</title><rect x="62.1" y="501" width="1.6" height="15.0" fill="rgb(241,162,50)" rx="2" ry="2" />
<text  x="65.06" y="511.5" ></text>
</g>
<g >
<title>&lt;sudachi::analysis::node::Node as core::clone::Clone&gt;::clone (2,328 samples, 0.68%)</title><rect x="373.6" y="453" width="8.0" height="15.0" fill="rgb(233,145,44)" rx="2" ry="2" />
<text  x="376.62" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (781 samples, 0.23%)</title><rect x="330.5" y="437" width="2.7" height="15.0" fill="rgb(222,90,52)" rx="2" ry="2" />
<text  x="333.48" y="447.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::iter (154 samples, 0.04%)</title><rect x="522.8" y="261" width="0.6" height="15.0" fill="rgb(228,124,4)" rx="2" ry="2" />
<text  x="525.83" y="271.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::find_at (1,923 samples, 0.56%)</title><rect x="1149.9" y="341" width="6.6" height="15.0" fill="rgb(254,180,17)" rx="2" ry="2" />
<text  x="1152.93" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,797 samples, 0.81%)</title><rect x="360.6" y="357" width="9.6" height="15.0" fill="rgb(235,226,33)" rx="2" ry="2" />
<text  x="363.56" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,789 samples, 0.81%)</title><rect x="1070.3" y="309" width="9.6" height="15.0" fill="rgb(228,215,43)" rx="2" ry="2" />
<text  x="1073.34" y="319.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (273 samples, 0.08%)</title><rect x="300.5" y="405" width="0.9" height="15.0" fill="rgb(239,136,38)" rx="2" ry="2" />
<text  x="303.50" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,089 samples, 0.32%)</title><rect x="308.3" y="325" width="3.7" height="15.0" fill="rgb(227,37,19)" rx="2" ry="2" />
<text  x="311.29" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (101 samples, 0.03%)</title><rect x="14.0" y="341" width="0.4" height="15.0" fill="rgb(217,65,28)" rx="2" ry="2" />
<text  x="17.01" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (123 samples, 0.04%)</title><rect x="340.2" y="261" width="0.4" height="15.0" fill="rgb(254,145,23)" rx="2" ry="2" />
<text  x="343.18" y="271.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (155 samples, 0.05%)</title><rect x="1051.5" y="421" width="0.5" height="15.0" fill="rgb(209,170,44)" rx="2" ry="2" />
<text  x="1054.45" y="431.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::default_input_text::DefaultInputTextPlugin::replace_fast (1,131 samples, 0.33%)</title><rect x="1105.3" y="389" width="3.9" height="15.0" fill="rgb(240,10,14)" rx="2" ry="2" />
<text  x="1108.31" y="399.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (689 samples, 0.20%)</title><rect x="698.4" y="421" width="2.3" height="15.0" fill="rgb(208,35,49)" rx="2" ry="2" />
<text  x="701.35" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (121 samples, 0.04%)</title><rect x="1066.5" y="277" width="0.4" height="15.0" fill="rgb(237,14,48)" rx="2" ry="2" />
<text  x="1069.50" y="287.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (312 samples, 0.09%)</title><rect x="1043.0" y="293" width="1.1" height="15.0" fill="rgb(235,223,15)" rx="2" ry="2" />
<text  x="1046.02" y="303.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (103 samples, 0.03%)</title><rect x="688.7" y="437" width="0.4" height="15.0" fill="rgb(242,104,20)" rx="2" ry="2" />
<text  x="691.74" y="447.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::commit (414 samples, 0.12%)</title><rect x="1100.8" y="421" width="1.4" height="15.0" fill="rgb(228,214,5)" rx="2" ry="2" />
<text  x="1103.82" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (101 samples, 0.03%)</title><rect x="14.0" y="421" width="0.4" height="15.0" fill="rgb(217,128,39)" rx="2" ry="2" />
<text  x="17.01" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,652 samples, 0.48%)</title><rect x="1081.0" y="277" width="5.7" height="15.0" fill="rgb(237,137,25)" rx="2" ry="2" />
<text  x="1084.01" y="287.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (270 samples, 0.08%)</title><rect x="145.6" y="373" width="1.0" height="15.0" fill="rgb(229,179,41)" rx="2" ry="2" />
<text  x="148.62" y="383.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (682 samples, 0.20%)</title><rect x="394.0" y="453" width="2.4" height="15.0" fill="rgb(208,212,27)" rx="2" ry="2" />
<text  x="397.03" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2,409 samples, 0.70%)</title><rect x="529.9" y="149" width="8.2" height="15.0" fill="rgb(241,172,49)" rx="2" ry="2" />
<text  x="532.87" y="159.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::push (1,761 samples, 0.51%)</title><rect x="170.8" y="405" width="6.0" height="15.0" fill="rgb(212,1,18)" rx="2" ry="2" />
<text  x="173.78" y="415.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (546 samples, 0.16%)</title><rect x="526.0" y="229" width="1.9" height="15.0" fill="rgb(212,122,1)" rx="2" ry="2" />
<text  x="529.05" y="239.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (4,852 samples, 1.41%)</title><rect x="416.0" y="405" width="16.6" height="15.0" fill="rgb(214,164,8)" rx="2" ry="2" />
<text  x="418.98" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (725 samples, 0.21%)</title><rect x="1016.7" y="405" width="2.5" height="15.0" fill="rgb(221,98,32)" rx="2" ry="2" />
<text  x="1019.71" y="415.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (106 samples, 0.03%)</title><rect x="1163.6" y="405" width="0.4" height="15.0" fill="rgb(239,228,13)" rx="2" ry="2" />
<text  x="1166.62" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (101 samples, 0.03%)</title><rect x="312.9" y="309" width="0.4" height="15.0" fill="rgb(211,103,40)" rx="2" ry="2" />
<text  x="315.92" y="319.5" ></text>
</g>
<g >
<title>&lt;core::char::decode::DecodeUtf16&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (496 samples, 0.14%)</title><rect x="486.3" y="261" width="1.7" height="15.0" fill="rgb(220,17,25)" rx="2" ry="2" />
<text  x="489.30" y="271.5" ></text>
</g>
<g >
<title>nom::bytes::complete::take::{{closure}} (481 samples, 0.14%)</title><rect x="1033.9" y="357" width="1.6" height="15.0" fill="rgb(219,62,40)" rx="2" ry="2" />
<text  x="1036.85" y="367.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (11,644 samples, 3.39%)</title><rect x="483.4" y="277" width="40.0" height="15.0" fill="rgb(248,142,25)" rx="2" ry="2" />
<text  x="486.37" y="287.5" >all..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (321 samples, 0.09%)</title><rect x="1159.0" y="373" width="1.1" height="15.0" fill="rgb(251,156,29)" rx="2" ry="2" />
<text  x="1162.05" y="383.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (236 samples, 0.07%)</title><rect x="1117.4" y="261" width="0.8" height="15.0" fill="rgb(241,108,16)" rx="2" ry="2" />
<text  x="1120.43" y="271.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (90 samples, 0.03%)</title><rect x="1161.3" y="389" width="0.3" height="15.0" fill="rgb(234,142,54)" rx="2" ry="2" />
<text  x="1164.31" y="399.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::boxed::Box&lt;W&gt;&gt;::write (172 samples, 0.05%)</title><rect x="93.9" y="405" width="0.6" height="15.0" fill="rgb(206,64,37)" rx="2" ry="2" />
<text  x="96.88" y="415.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,453 samples, 0.42%)</title><rect x="403.0" y="437" width="5.0" height="15.0" fill="rgb(238,110,33)" rx="2" ry="2" />
<text  x="406.02" y="447.5" ></text>
</g>
<g >
<title>_int_malloc (192 samples, 0.06%)</title><rect x="429.9" y="117" width="0.7" height="15.0" fill="rgb(222,184,51)" rx="2" ry="2" />
<text  x="432.93" y="127.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (202 samples, 0.06%)</title><rect x="283.7" y="293" width="0.7" height="15.0" fill="rgb(231,18,27)" rx="2" ry="2" />
<text  x="286.74" y="303.5" ></text>
</g>
<g >
<title>core::unicode::unicode_data::bitset_search (294 samples, 0.09%)</title><rect x="1114.0" y="341" width="1.0" height="15.0" fill="rgb(246,60,47)" rx="2" ry="2" />
<text  x="1116.95" y="351.5" ></text>
</g>
<g >
<title>unicode_normalization::perfect_hash::my_hash (116 samples, 0.03%)</title><rect x="1142.8" y="325" width="0.4" height="15.0" fill="rgb(216,193,52)" rx="2" ry="2" />
<text  x="1145.81" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (180 samples, 0.05%)</title><rect x="735.2" y="357" width="0.6" height="15.0" fill="rgb(216,56,13)" rx="2" ry="2" />
<text  x="738.17" y="367.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (119 samples, 0.03%)</title><rect x="149.8" y="357" width="0.4" height="15.0" fill="rgb(219,49,28)" rx="2" ry="2" />
<text  x="152.80" y="367.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (156 samples, 0.05%)</title><rect x="1066.4" y="309" width="0.5" height="15.0" fill="rgb(218,194,6)" rx="2" ry="2" />
<text  x="1069.39" y="319.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (155 samples, 0.05%)</title><rect x="334.5" y="309" width="0.5" height="15.0" fill="rgb(248,146,18)" rx="2" ry="2" />
<text  x="337.46" y="319.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (2,096 samples, 0.61%)</title><rect x="270.7" y="293" width="7.2" height="15.0" fill="rgb(225,5,54)" rx="2" ry="2" />
<text  x="273.70" y="303.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (205 samples, 0.06%)</title><rect x="46.6" y="501" width="0.7" height="15.0" fill="rgb(205,192,43)" rx="2" ry="2" />
<text  x="49.57" y="511.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (119 samples, 0.03%)</title><rect x="1018.1" y="341" width="0.5" height="15.0" fill="rgb(215,24,16)" rx="2" ry="2" />
<text  x="1021.15" y="351.5" ></text>
</g>
<g >
<title>sudachi::plugin::input_text::InputTextPlugin::rewrite (148 samples, 0.04%)</title><rect x="50.3" y="501" width="0.5" height="15.0" fill="rgb(228,175,32)" rx="2" ry="2" />
<text  x="53.33" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (189 samples, 0.06%)</title><rect x="418.1" y="181" width="0.7" height="15.0" fill="rgb(218,110,26)" rx="2" ry="2" />
<text  x="421.13" y="191.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::find_at (3,864 samples, 1.12%)</title><rect x="213.5" y="373" width="13.2" height="15.0" fill="rgb(246,61,8)" rx="2" ry="2" />
<text  x="216.47" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (304 samples, 0.09%)</title><rect x="417.8" y="293" width="1.1" height="15.0" fill="rgb(231,132,50)" rx="2" ry="2" />
<text  x="420.81" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (111 samples, 0.03%)</title><rect x="338.5" y="293" width="0.3" height="15.0" fill="rgb(205,95,49)" rx="2" ry="2" />
<text  x="341.46" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,372 samples, 0.40%)</title><rect x="292.0" y="197" width="4.7" height="15.0" fill="rgb(225,71,48)" rx="2" ry="2" />
<text  x="294.97" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (374 samples, 0.11%)</title><rect x="429.4" y="245" width="1.3" height="15.0" fill="rgb(248,200,36)" rx="2" ry="2" />
<text  x="432.42" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (143 samples, 0.04%)</title><rect x="341.6" y="373" width="0.4" height="15.0" fill="rgb(252,114,10)" rx="2" ry="2" />
<text  x="344.55" y="383.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::BufRead for alloc::boxed::Box&lt;B&gt;&gt;::read_line (1,437 samples, 0.42%)</title><rect x="82.2" y="469" width="5.0" height="15.0" fill="rgb(209,114,14)" rx="2" ry="2" />
<text  x="85.22" y="479.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::update_dict_id (125 samples, 0.04%)</title><rect x="559.5" y="437" width="0.4" height="15.0" fill="rgb(226,188,11)" rx="2" ry="2" />
<text  x="562.47" y="447.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (151 samples, 0.04%)</title><rect x="652.3" y="357" width="0.5" height="15.0" fill="rgb(251,105,4)" rx="2" ry="2" />
<text  x="655.32" y="367.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::edit::resolve_edits (365 samples, 0.11%)</title><rect x="1101.0" y="405" width="1.2" height="15.0" fill="rgb(215,166,43)" rx="2" ry="2" />
<text  x="1103.99" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_free (797 samples, 0.23%)</title><rect x="29.7" y="501" width="2.7" height="15.0" fill="rgb(209,157,31)" rx="2" ry="2" />
<text  x="32.67" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (149 samples, 0.04%)</title><rect x="334.5" y="261" width="0.5" height="15.0" fill="rgb(235,0,12)" rx="2" ry="2" />
<text  x="337.48" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,173 samples, 0.34%)</title><rect x="381.9" y="437" width="4.1" height="15.0" fill="rgb(240,1,21)" rx="2" ry="2" />
<text  x="384.94" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (3,396 samples, 0.99%)</title><rect x="539.2" y="277" width="11.7" height="15.0" fill="rgb(249,94,51)" rx="2" ry="2" />
<text  x="542.20" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,043 samples, 0.59%)</title><rect x="353.2" y="293" width="7.0" height="15.0" fill="rgb(230,169,40)" rx="2" ry="2" />
<text  x="356.18" y="303.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (183 samples, 0.05%)</title><rect x="297.0" y="197" width="0.6" height="15.0" fill="rgb(206,44,39)" rx="2" ry="2" />
<text  x="300.01" y="207.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::reverse (1,096 samples, 0.32%)</title><rect x="389.2" y="453" width="3.8" height="15.0" fill="rgb(227,51,36)" rx="2" ry="2" />
<text  x="392.20" y="463.5" ></text>
</g>
<g >
<title>sudachi::dic::DictionaryLoader::read_system_dictionary (287 samples, 0.08%)</title><rect x="79.3" y="469" width="1.0" height="15.0" fill="rgb(209,4,19)" rx="2" ry="2" />
<text  x="82.28" y="479.5" ></text>
</g>
<g >
<title>core::ptr::read (1,085 samples, 0.32%)</title><rect x="165.1" y="373" width="3.8" height="15.0" fill="rgb(205,4,5)" rx="2" ry="2" />
<text  x="168.13" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (417 samples, 0.12%)</title><rect x="414.4" y="373" width="1.4" height="15.0" fill="rgb(223,229,26)" rx="2" ry="2" />
<text  x="417.41" y="383.5" ></text>
</g>
<g >
<title>_int_realloc (623 samples, 0.18%)</title><rect x="72.8" y="501" width="2.1" height="15.0" fill="rgb(231,7,10)" rx="2" ry="2" />
<text  x="75.78" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (374 samples, 0.11%)</title><rect x="429.4" y="229" width="1.3" height="15.0" fill="rgb(246,154,48)" rx="2" ry="2" />
<text  x="432.42" y="239.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (235 samples, 0.07%)</title><rect x="328.7" y="421" width="0.8" height="15.0" fill="rgb(243,229,30)" rx="2" ry="2" />
<text  x="331.68" y="431.5" ></text>
</g>
<g >
<title>malloc_consolidate (127 samples, 0.04%)</title><rect x="78.4" y="501" width="0.4" height="15.0" fill="rgb(244,63,40)" rx="2" ry="2" />
<text  x="81.36" y="511.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (155 samples, 0.05%)</title><rect x="334.5" y="325" width="0.5" height="15.0" fill="rgb(252,154,26)" rx="2" ry="2" />
<text  x="337.46" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (2,126 samples, 0.62%)</title><rect x="353.2" y="325" width="7.3" height="15.0" fill="rgb(251,18,0)" rx="2" ry="2" />
<text  x="356.18" y="335.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (165 samples, 0.05%)</title><rect x="327.4" y="341" width="0.5" height="15.0" fill="rgb(236,7,15)" rx="2" ry="2" />
<text  x="330.38" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (653 samples, 0.19%)</title><rect x="325.1" y="341" width="2.3" height="15.0" fill="rgb(249,129,46)" rx="2" ry="2" />
<text  x="328.14" y="351.5" ></text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (2,399 samples, 0.70%)</title><rect x="1025.6" y="309" width="8.3" height="15.0" fill="rgb(237,65,25)" rx="2" ry="2" />
<text  x="1028.61" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (132 samples, 0.04%)</title><rect x="303.4" y="341" width="0.4" height="15.0" fill="rgb(233,229,8)" rx="2" ry="2" />
<text  x="306.35" y="351.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (140 samples, 0.04%)</title><rect x="328.7" y="405" width="0.5" height="15.0" fill="rgb(216,64,53)" rx="2" ry="2" />
<text  x="331.68" y="415.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::get_normalized (115 samples, 0.03%)</title><rect x="339.0" y="421" width="0.4" height="15.0" fill="rgb(206,147,41)" rx="2" ry="2" />
<text  x="341.96" y="431.5" ></text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (276 samples, 0.08%)</title><rect x="1161.1" y="421" width="1.0" height="15.0" fill="rgb(238,78,52)" rx="2" ry="2" />
<text  x="1164.13" y="431.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (379 samples, 0.11%)</title><rect x="453.8" y="389" width="1.3" height="15.0" fill="rgb(225,140,3)" rx="2" ry="2" />
<text  x="456.79" y="399.5" ></text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (89 samples, 0.03%)</title><rect x="487.5" y="213" width="0.3" height="15.0" fill="rgb(254,198,10)" rx="2" ry="2" />
<text  x="490.48" y="223.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher_str (283 samples, 0.08%)</title><rect x="226.9" y="373" width="1.0" height="15.0" fill="rgb(243,158,6)" rx="2" ry="2" />
<text  x="229.92" y="383.5" ></text>
</g>
<g >
<title>unicode_normalization::lookups::canonical_combining_class (204 samples, 0.06%)</title><rect x="1125.6" y="341" width="0.7" height="15.0" fill="rgb(250,77,14)" rx="2" ry="2" />
<text  x="1128.57" y="351.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,035 samples, 0.88%)</title><rect x="1070.3" y="325" width="10.5" height="15.0" fill="rgb(229,224,23)" rx="2" ry="2" />
<text  x="1073.34" y="335.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (237 samples, 0.07%)</title><rect x="337.6" y="341" width="0.8" height="15.0" fill="rgb(252,18,19)" rx="2" ry="2" />
<text  x="340.56" y="351.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (165 samples, 0.05%)</title><rect x="327.4" y="357" width="0.5" height="15.0" fill="rgb(254,180,5)" rx="2" ry="2" />
<text  x="330.38" y="367.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryTypeIter as core::iter::traits::iterator::Iterator&gt;::next (488 samples, 0.14%)</title><rect x="1058.5" y="405" width="1.6" height="15.0" fill="rgb(234,35,42)" rx="2" ry="2" />
<text  x="1061.46" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (290 samples, 0.08%)</title><rect x="527.9" y="261" width="1.0" height="15.0" fill="rgb(205,195,47)" rx="2" ry="2" />
<text  x="530.92" y="271.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (304 samples, 0.09%)</title><rect x="417.8" y="229" width="1.1" height="15.0" fill="rgb(249,137,16)" rx="2" ry="2" />
<text  x="420.81" y="239.5" ></text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::Teddy::verify_bucket (995 samples, 0.29%)</title><rect x="1151.6" y="149" width="3.4" height="15.0" fill="rgb(207,210,28)" rx="2" ry="2" />
<text  x="1154.59" y="159.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (1,165 samples, 0.34%)</title><rect x="265.4" y="309" width="4.1" height="15.0" fill="rgb(221,51,14)" rx="2" ry="2" />
<text  x="268.45" y="319.5" ></text>
</g>
<g >
<title>alloc::string::String::push (785 samples, 0.23%)</title><rect x="423.4" y="245" width="2.7" height="15.0" fill="rgb(250,41,44)" rx="2" ry="2" />
<text  x="426.37" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sudachi::analysis::node::Node&gt;&gt; (220 samples, 0.06%)</title><rect x="342.5" y="453" width="0.7" height="15.0" fill="rgb(245,208,45)" rx="2" ry="2" />
<text  x="345.48" y="463.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get (639 samples, 0.19%)</title><rect x="1066.0" y="357" width="2.2" height="15.0" fill="rgb(222,188,54)" rx="2" ry="2" />
<text  x="1069.04" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::clear (3,738 samples, 1.09%)</title><rect x="1172.1" y="469" width="12.9" height="15.0" fill="rgb(247,212,11)" rx="2" ry="2" />
<text  x="1175.14" y="479.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (151 samples, 0.04%)</title><rect x="552.8" y="149" width="0.5" height="15.0" fill="rgb(226,58,48)" rx="2" ry="2" />
<text  x="555.81" y="159.5" ></text>
</g>
<g >
<title>core::ptr::write (414 samples, 0.12%)</title><rect x="175.2" y="373" width="1.4" height="15.0" fill="rgb(240,202,20)" rx="2" ry="2" />
<text  x="178.21" y="383.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,175 samples, 0.34%)</title><rect x="1143.9" y="325" width="4.1" height="15.0" fill="rgb(253,27,51)" rx="2" ry="2" />
<text  x="1146.92" y="335.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (149 samples, 0.04%)</title><rect x="1078.8" y="181" width="0.5" height="15.0" fill="rgb(217,69,44)" rx="2" ry="2" />
<text  x="1081.79" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,648 samples, 1.93%)</title><rect x="952.9" y="405" width="22.8" height="15.0" fill="rgb(228,164,5)" rx="2" ry="2" />
<text  x="955.90" y="415.5" >a..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (307 samples, 0.09%)</title><rect x="424.0" y="85" width="1.1" height="15.0" fill="rgb(207,82,29)" rx="2" ry="2" />
<text  x="427.01" y="95.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (449 samples, 0.13%)</title><rect x="871.6" y="405" width="1.6" height="15.0" fill="rgb(244,226,39)" rx="2" ry="2" />
<text  x="874.62" y="415.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (4,301 samples, 1.25%)</title><rect x="524.4" y="277" width="14.8" height="15.0" fill="rgb(228,38,53)" rx="2" ry="2" />
<text  x="527.43" y="287.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (753 samples, 0.22%)</title><rect x="525.3" y="245" width="2.6" height="15.0" fill="rgb(243,56,52)" rx="2" ry="2" />
<text  x="528.34" y="255.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array (179 samples, 0.05%)</title><rect x="808.7" y="357" width="0.6" height="15.0" fill="rgb(238,80,32)" rx="2" ry="2" />
<text  x="811.71" y="367.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::spare_capacity (704 samples, 0.20%)</title><rect x="91.3" y="437" width="2.4" height="15.0" fill="rgb(209,125,40)" rx="2" ry="2" />
<text  x="94.31" y="447.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16 (2,399 samples, 0.70%)</title><rect x="1025.6" y="341" width="8.3" height="15.0" fill="rgb(230,103,6)" rx="2" ry="2" />
<text  x="1028.61" y="351.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (2,880 samples, 0.84%)</title><rect x="1025.6" y="389" width="9.9" height="15.0" fill="rgb(224,110,30)" rx="2" ry="2" />
<text  x="1028.61" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (151 samples, 0.04%)</title><rect x="552.8" y="165" width="0.5" height="15.0" fill="rgb(210,211,29)" rx="2" ry="2" />
<text  x="555.81" y="175.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (145 samples, 0.04%)</title><rect x="340.2" y="341" width="0.5" height="15.0" fill="rgb(225,35,18)" rx="2" ry="2" />
<text  x="343.17" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon_set::LexiconSet::get_dictionary_id (95 samples, 0.03%)</title><rect x="558.9" y="421" width="0.3" height="15.0" fill="rgb(208,66,38)" rx="2" ry="2" />
<text  x="561.89" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (497 samples, 0.14%)</title><rect x="1098.9" y="405" width="1.7" height="15.0" fill="rgb(210,53,51)" rx="2" ry="2" />
<text  x="1101.87" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.03%)</title><rect x="147.2" y="373" width="0.3" height="15.0" fill="rgb(226,142,13)" rx="2" ry="2" />
<text  x="150.17" y="383.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_node (93 samples, 0.03%)</title><rect x="689.1" y="437" width="0.3" height="15.0" fill="rgb(237,128,36)" rx="2" ry="2" />
<text  x="692.11" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (145 samples, 0.04%)</title><rect x="340.2" y="293" width="0.5" height="15.0" fill="rgb(230,43,15)" rx="2" ry="2" />
<text  x="343.17" y="303.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_flags (491 samples, 0.14%)</title><rect x="221.0" y="309" width="1.6" height="15.0" fill="rgb(252,108,3)" rx="2" ry="2" />
<text  x="223.96" y="319.5" ></text>
</g>
<g >
<title>__rdl_alloc (137 samples, 0.04%)</title><rect x="451.3" y="213" width="0.4" height="15.0" fill="rgb(235,10,23)" rx="2" ry="2" />
<text  x="454.27" y="223.5" ></text>
</g>
<g >
<title>regex::pool::Pool&lt;T&gt;::get (217 samples, 0.06%)</title><rect x="227.1" y="341" width="0.8" height="15.0" fill="rgb(247,73,18)" rx="2" ry="2" />
<text  x="230.14" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::u32_array_parser (772 samples, 0.22%)</title><rect x="475.2" y="293" width="2.7" height="15.0" fill="rgb(214,154,14)" rx="2" ry="2" />
<text  x="478.24" y="303.5" ></text>
</g>
<g >
<title>core::str::validations::unwrap_or_0 (97 samples, 0.03%)</title><rect x="1161.6" y="389" width="0.4" height="15.0" fill="rgb(237,19,25)" rx="2" ry="2" />
<text  x="1164.62" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (148 samples, 0.04%)</title><rect x="337.0" y="277" width="0.5" height="15.0" fill="rgb(210,145,50)" rx="2" ry="2" />
<text  x="340.02" y="287.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::NumericParser::done (194 samples, 0.06%)</title><rect x="341.5" y="437" width="0.6" height="15.0" fill="rgb(251,132,43)" rx="2" ry="2" />
<text  x="344.48" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (143 samples, 0.04%)</title><rect x="337.0" y="245" width="0.5" height="15.0" fill="rgb(239,35,17)" rx="2" ry="2" />
<text  x="340.04" y="255.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,208 samples, 0.35%)</title><rect x="206.8" y="373" width="4.2" height="15.0" fill="rgb(237,80,32)" rx="2" ry="2" />
<text  x="209.82" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (322 samples, 0.09%)</title><rect x="13.4" y="501" width="1.1" height="15.0" fill="rgb(215,223,29)" rx="2" ry="2" />
<text  x="16.41" y="511.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (109 samples, 0.03%)</title><rect x="502.0" y="117" width="0.4" height="15.0" fill="rgb(228,101,6)" rx="2" ry="2" />
<text  x="505.00" y="127.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (652 samples, 0.19%)</title><rect x="1063.3" y="373" width="2.2" height="15.0" fill="rgb(217,177,50)" rx="2" ry="2" />
<text  x="1066.29" y="383.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (672 samples, 0.20%)</title><rect x="1008.7" y="341" width="2.3" height="15.0" fill="rgb(245,94,1)" rx="2" ry="2" />
<text  x="1011.74" y="351.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8 (703 samples, 0.20%)</title><rect x="82.6" y="421" width="2.4" height="15.0" fill="rgb(236,2,36)" rx="2" ry="2" />
<text  x="85.55" y="431.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (312 samples, 0.09%)</title><rect x="1043.0" y="357" width="1.1" height="15.0" fill="rgb(239,93,22)" rx="2" ry="2" />
<text  x="1046.02" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (466 samples, 0.14%)</title><rect x="1117.0" y="325" width="1.6" height="15.0" fill="rgb(244,70,52)" rx="2" ry="2" />
<text  x="1120.03" y="335.5" ></text>
</g>
<g >
<title>core::ptr::write (7,257 samples, 2.11%)</title><rect x="813.3" y="421" width="24.9" height="15.0" fill="rgb(243,125,9)" rx="2" ry="2" />
<text  x="816.28" y="431.5" >c..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (3,518 samples, 1.02%)</title><rect x="1172.9" y="421" width="12.1" height="15.0" fill="rgb(208,195,42)" rx="2" ry="2" />
<text  x="1175.90" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,274 samples, 0.95%)</title><rect x="1173.1" y="357" width="11.3" height="15.0" fill="rgb(233,101,39)" rx="2" ry="2" />
<text  x="1176.14" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,323 samples, 0.68%)</title><rect x="1008.7" y="373" width="8.0" height="15.0" fill="rgb(230,223,49)" rx="2" ry="2" />
<text  x="1011.74" y="383.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (88 samples, 0.03%)</title><rect x="340.8" y="389" width="0.3" height="15.0" fill="rgb(212,204,8)" rx="2" ry="2" />
<text  x="343.85" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (125 samples, 0.04%)</title><rect x="85.9" y="277" width="0.4" height="15.0" fill="rgb(248,173,52)" rx="2" ry="2" />
<text  x="88.88" y="287.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (174 samples, 0.05%)</title><rect x="149.2" y="325" width="0.6" height="15.0" fill="rgb(223,151,41)" rx="2" ry="2" />
<text  x="152.20" y="335.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (417 samples, 0.12%)</title><rect x="1016.7" y="357" width="1.4" height="15.0" fill="rgb(218,91,48)" rx="2" ry="2" />
<text  x="1019.71" y="367.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (725 samples, 0.21%)</title><rect x="1016.7" y="389" width="2.5" height="15.0" fill="rgb(233,211,36)" rx="2" ry="2" />
<text  x="1019.71" y="399.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (2,630 samples, 0.77%)</title><rect x="291.3" y="453" width="9.0" height="15.0" fill="rgb(248,64,28)" rx="2" ry="2" />
<text  x="294.30" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,583 samples, 0.46%)</title><rect x="937.4" y="389" width="5.4" height="15.0" fill="rgb(207,168,18)" rx="2" ry="2" />
<text  x="940.36" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (350 samples, 0.10%)</title><rect x="417.8" y="357" width="1.2" height="15.0" fill="rgb(219,151,51)" rx="2" ry="2" />
<text  x="420.80" y="367.5" ></text>
</g>
<g >
<title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (90 samples, 0.03%)</title><rect x="211.0" y="389" width="0.3" height="15.0" fill="rgb(229,35,37)" rx="2" ry="2" />
<text  x="213.97" y="399.5" ></text>
</g>
<g >
<title>unicode_normalization::quick_check::quick_check (4,879 samples, 1.42%)</title><rect x="1126.5" y="373" width="16.7" height="15.0" fill="rgb(237,46,43)" rx="2" ry="2" />
<text  x="1129.45" y="383.5" ></text>
</g>
<g >
<title>nom::combinator::cond::{{closure}} (97 samples, 0.03%)</title><rect x="431.8" y="293" width="0.3" height="15.0" fill="rgb(224,4,26)" rx="2" ry="2" />
<text  x="434.81" y="303.5" ></text>
</g>
<g >
<title>unicode_normalization::normalize::decompose (260 samples, 0.08%)</title><rect x="1115.8" y="293" width="0.9" height="15.0" fill="rgb(218,60,33)" rx="2" ry="2" />
<text  x="1118.77" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3,448 samples, 1.00%)</title><rect x="491.4" y="165" width="11.8" height="15.0" fill="rgb(236,1,52)" rx="2" ry="2" />
<text  x="494.41" y="175.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (293 samples, 0.09%)</title><rect x="1010.0" y="293" width="1.0" height="15.0" fill="rgb(221,31,32)" rx="2" ry="2" />
<text  x="1013.00" y="303.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (129 samples, 0.04%)</title><rect x="1148.5" y="325" width="0.5" height="15.0" fill="rgb(234,169,26)" rx="2" ry="2" />
<text  x="1151.53" y="335.5" ></text>
</g>
<g >
<title>&lt;sudachi::input_text::buffer::InputBuffer as sudachi::input_text::InputTextIndex&gt;::cat_at_byte (649 samples, 0.19%)</title><rect x="658.9" y="453" width="2.2" height="15.0" fill="rgb(241,201,3)" rx="2" ry="2" />
<text  x="661.86" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (111 samples, 0.03%)</title><rect x="188.8" y="373" width="0.4" height="15.0" fill="rgb(217,90,35)" rx="2" ry="2" />
<text  x="191.77" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,652 samples, 0.48%)</title><rect x="1081.0" y="261" width="5.7" height="15.0" fill="rgb(210,125,1)" rx="2" ry="2" />
<text  x="1084.01" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::utf16_string_parser (21,247 samples, 6.18%)</title><rect x="477.9" y="293" width="73.0" height="15.0" fill="rgb(214,26,14)" rx="2" ry="2" />
<text  x="480.89" y="303.5" >sudachi:..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (114 samples, 0.03%)</title><rect x="190.7" y="325" width="0.4" height="15.0" fill="rgb(253,221,54)" rx="2" ry="2" />
<text  x="193.69" y="335.5" ></text>
</g>
<g >
<title>malloc_consolidate (1,004 samples, 0.29%)</title><rect x="939.2" y="309" width="3.5" height="15.0" fill="rgb(207,155,30)" rx="2" ry="2" />
<text  x="942.22" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::reset (3,784 samples, 1.10%)</title><rect x="1172.1" y="485" width="13.0" height="15.0" fill="rgb(239,199,1)" rx="2" ry="2" />
<text  x="1175.08" y="495.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::JoinNumericPlugin::rewrite_gen (5,428 samples, 1.58%)</title><rect x="323.6" y="453" width="18.6" height="15.0" fill="rgb(209,178,23)" rx="2" ry="2" />
<text  x="326.55" y="463.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1,652 samples, 0.48%)</title><rect x="1081.0" y="213" width="5.7" height="15.0" fill="rgb(247,180,23)" rx="2" ry="2" />
<text  x="1084.01" y="223.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::dictionary::JapaneseDictionary as sudachi::analysis::stateless_tokenizer::DictionaryAccess&gt;::oov_provider_plugins (127 samples, 0.04%)</title><rect x="578.0" y="437" width="0.5" height="15.0" fill="rgb(226,32,20)" rx="2" ry="2" />
<text  x="581.03" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (356 samples, 0.10%)</title><rect x="429.5" y="197" width="1.2" height="15.0" fill="rgb(208,90,37)" rx="2" ry="2" />
<text  x="432.48" y="207.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::Imp&lt;S&gt;::find_at_no_state (1,056 samples, 0.31%)</title><rect x="1105.4" y="357" width="3.7" height="15.0" fill="rgb(252,53,5)" rx="2" ry="2" />
<text  x="1108.44" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (257 samples, 0.07%)</title><rect x="687.5" y="437" width="0.9" height="15.0" fill="rgb(247,204,18)" rx="2" ry="2" />
<text  x="690.51" y="447.5" ></text>
</g>
<g >
<title>core::ptr::write (679 samples, 0.20%)</title><rect x="386.1" y="437" width="2.3" height="15.0" fill="rgb(238,182,2)" rx="2" ry="2" />
<text  x="389.08" y="447.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (250 samples, 0.07%)</title><rect x="297.8" y="261" width="0.8" height="15.0" fill="rgb(240,192,19)" rx="2" ry="2" />
<text  x="300.77" y="271.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::get_word_info (43,934 samples, 12.79%)</title><rect x="408.0" y="437" width="150.9" height="15.0" fill="rgb(250,46,14)" rx="2" ry="2" />
<text  x="411.01" y="447.5" >sudachi::dic::lexic..</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (753 samples, 0.22%)</title><rect x="525.3" y="261" width="2.6" height="15.0" fill="rgb(228,53,37)" rx="2" ry="2" />
<text  x="528.34" y="271.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (136 samples, 0.04%)</title><rect x="10.1" y="501" width="0.4" height="15.0" fill="rgb(225,68,27)" rx="2" ry="2" />
<text  x="13.07" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (7,597 samples, 2.21%)</title><rect x="781.7" y="341" width="26.1" height="15.0" fill="rgb(252,4,28)" rx="2" ry="2" />
<text  x="784.70" y="351.5" >_..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (533 samples, 0.16%)</title><rect x="104.5" y="437" width="1.8" height="15.0" fill="rgb(248,121,22)" rx="2" ry="2" />
<text  x="107.47" y="447.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1,044 samples, 0.30%)</title><rect x="377.7" y="437" width="3.6" height="15.0" fill="rgb(238,149,0)" rx="2" ry="2" />
<text  x="380.73" y="447.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (133 samples, 0.04%)</title><rect x="488.0" y="261" width="0.5" height="15.0" fill="rgb(224,62,42)" rx="2" ry="2" />
<text  x="491.00" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,835 samples, 0.83%)</title><rect x="529.4" y="229" width="9.7" height="15.0" fill="rgb(234,73,35)" rx="2" ry="2" />
<text  x="532.41" y="239.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find (4,878 samples, 1.42%)</title><rect x="211.3" y="405" width="16.7" height="15.0" fill="rgb(245,10,50)" rx="2" ry="2" />
<text  x="214.27" y="415.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (466 samples, 0.14%)</title><rect x="1117.0" y="341" width="1.6" height="15.0" fill="rgb(248,180,21)" rx="2" ry="2" />
<text  x="1120.03" y="351.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (715 samples, 0.21%)</title><rect x="147.8" y="373" width="2.4" height="15.0" fill="rgb(246,135,53)" rx="2" ry="2" />
<text  x="150.75" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (769 samples, 0.22%)</title><rect x="946.5" y="293" width="2.6" height="15.0" fill="rgb(216,187,41)" rx="2" ry="2" />
<text  x="949.46" y="303.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (413 samples, 0.12%)</title><rect x="1015.3" y="229" width="1.4" height="15.0" fill="rgb(241,82,12)" rx="2" ry="2" />
<text  x="1018.30" y="239.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::offset (1,029 samples, 0.30%)</title><rect x="588.5" y="325" width="3.5" height="15.0" fill="rgb(213,210,1)" rx="2" ry="2" />
<text  x="591.45" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fancy_regex::vm::Branch&gt;&gt; (97 samples, 0.03%)</title><rect x="147.2" y="405" width="0.3" height="15.0" fill="rgb(216,174,5)" rx="2" ry="2" />
<text  x="150.17" y="415.5" ></text>
</g>
<g >
<title>__rdl_realloc (142 samples, 0.04%)</title><rect x="35.2" y="501" width="0.5" height="15.0" fill="rgb(227,185,23)" rx="2" ry="2" />
<text  x="38.21" y="511.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state_imp (988 samples, 0.29%)</title><rect x="1105.7" y="293" width="3.4" height="15.0" fill="rgb(221,86,39)" rx="2" ry="2" />
<text  x="1108.68" y="303.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (155 samples, 0.05%)</title><rect x="1051.5" y="405" width="0.5" height="15.0" fill="rgb(221,213,41)" rx="2" ry="2" />
<text  x="1054.45" y="415.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max (148 samples, 0.04%)</title><rect x="502.4" y="117" width="0.5" height="15.0" fill="rgb(236,81,43)" rx="2" ry="2" />
<text  x="505.37" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (128 samples, 0.04%)</title><rect x="1101.2" y="389" width="0.4" height="15.0" fill="rgb(216,56,35)" rx="2" ry="2" />
<text  x="1104.17" y="399.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (126 samples, 0.04%)</title><rect x="299.3" y="277" width="0.4" height="15.0" fill="rgb(242,35,8)" rx="2" ry="2" />
<text  x="302.31" y="287.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::surface (353 samples, 0.10%)</title><rect x="108.0" y="453" width="1.2" height="15.0" fill="rgb(229,30,31)" rx="2" ry="2" />
<text  x="110.98" y="463.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (107 samples, 0.03%)</title><rect x="1067.9" y="229" width="0.3" height="15.0" fill="rgb(235,166,14)" rx="2" ry="2" />
<text  x="1070.87" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (653 samples, 0.19%)</title><rect x="325.1" y="357" width="2.3" height="15.0" fill="rgb(247,228,8)" rx="2" ry="2" />
<text  x="328.14" y="367.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (618 samples, 0.18%)</title><rect x="503.3" y="197" width="2.1" height="15.0" fill="rgb(226,102,14)" rx="2" ry="2" />
<text  x="506.25" y="207.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (586 samples, 0.17%)</title><rect x="1043.0" y="373" width="2.0" height="15.0" fill="rgb(242,45,34)" rx="2" ry="2" />
<text  x="1046.02" y="383.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (715 samples, 0.21%)</title><rect x="147.8" y="405" width="2.4" height="15.0" fill="rgb(210,118,33)" rx="2" ry="2" />
<text  x="150.75" y="415.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_literals (7,523 samples, 2.19%)</title><rect x="238.4" y="325" width="25.9" height="15.0" fill="rgb(242,44,39)" rx="2" ry="2" />
<text  x="241.42" y="335.5" >r..</text>
</g>
<g >
<title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (110 samples, 0.03%)</title><rect x="1099.5" y="325" width="0.4" height="15.0" fill="rgb(251,153,22)" rx="2" ry="2" />
<text  x="1102.53" y="335.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,047 samples, 0.89%)</title><rect x="873.4" y="421" width="10.4" height="15.0" fill="rgb(234,154,16)" rx="2" ry="2" />
<text  x="876.36" y="431.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (347 samples, 0.10%)</title><rect x="417.8" y="341" width="1.2" height="15.0" fill="rgb(233,128,41)" rx="2" ry="2" />
<text  x="420.81" y="351.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (586 samples, 0.17%)</title><rect x="1043.0" y="389" width="2.0" height="15.0" fill="rgb(233,143,23)" rx="2" ry="2" />
<text  x="1046.02" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (175 samples, 0.05%)</title><rect x="85.7" y="389" width="0.6" height="15.0" fill="rgb(232,220,48)" rx="2" ry="2" />
<text  x="88.74" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::lattice::Lattice&gt; (8,366 samples, 2.43%)</title><rect x="343.4" y="469" width="28.8" height="15.0" fill="rgb(224,171,2)" rx="2" ry="2" />
<text  x="346.44" y="479.5" >co..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (611 samples, 0.18%)</title><rect x="423.5" y="197" width="2.1" height="15.0" fill="rgb(224,30,27)" rx="2" ry="2" />
<text  x="426.52" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,644 samples, 1.93%)</title><rect x="952.9" y="389" width="22.8" height="15.0" fill="rgb(220,17,15)" rx="2" ry="2" />
<text  x="955.91" y="399.5" >a..</text>
</g>
<g >
<title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (118 samples, 0.03%)</title><rect x="88.0" y="469" width="0.4" height="15.0" fill="rgb(212,172,48)" rx="2" ry="2" />
<text  x="90.96" y="479.5" ></text>
</g>
<g >
<title>sudachi::dic::u32_array_parser (448 samples, 0.13%)</title><rect x="552.0" y="261" width="1.5" height="15.0" fill="rgb(244,202,6)" rx="2" ry="2" />
<text  x="554.98" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (2,002 samples, 0.58%)</title><rect x="943.2" y="389" width="6.8" height="15.0" fill="rgb(207,199,10)" rx="2" ry="2" />
<text  x="946.16" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (213 samples, 0.06%)</title><rect x="809.3" y="325" width="0.8" height="15.0" fill="rgb(239,152,11)" rx="2" ry="2" />
<text  x="812.32" y="335.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i16::{{closure}} (417 samples, 0.12%)</title><rect x="1016.7" y="277" width="1.4" height="15.0" fill="rgb(230,43,43)" rx="2" ry="2" />
<text  x="1019.71" y="287.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (106 samples, 0.03%)</title><rect x="1101.2" y="325" width="0.4" height="15.0" fill="rgb(254,215,19)" rx="2" ry="2" />
<text  x="1104.22" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (2,245 samples, 0.65%)</title><rect x="465.4" y="277" width="7.7" height="15.0" fill="rgb(221,30,48)" rx="2" ry="2" />
<text  x="468.43" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (821 samples, 0.24%)</title><rect x="382.3" y="357" width="2.8" height="15.0" fill="rgb(226,87,6)" rx="2" ry="2" />
<text  x="385.28" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (107 samples, 0.03%)</title><rect x="149.8" y="341" width="0.4" height="15.0" fill="rgb(216,122,11)" rx="2" ry="2" />
<text  x="152.84" y="351.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u32 (200 samples, 0.06%)</title><rect x="473.7" y="213" width="0.7" height="15.0" fill="rgb(222,82,28)" rx="2" ry="2" />
<text  x="476.71" y="223.5" ></text>
</g>
<g >
<title>&lt; (3,856 samples, 1.12%)</title><rect x="419.3" y="325" width="13.3" height="15.0" fill="rgb(235,179,24)" rx="2" ry="2" />
<text  x="422.34" y="335.5" ></text>
</g>
<g >
<title>core::cmp::max (148 samples, 0.04%)</title><rect x="502.4" y="133" width="0.5" height="15.0" fill="rgb(249,209,6)" rx="2" ry="2" />
<text  x="505.37" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (132 samples, 0.04%)</title><rect x="174.8" y="357" width="0.4" height="15.0" fill="rgb(230,82,45)" rx="2" ry="2" />
<text  x="177.76" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (254 samples, 0.07%)</title><rect x="424.1" y="53" width="0.8" height="15.0" fill="rgb(230,142,2)" rx="2" ry="2" />
<text  x="427.05" y="63.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,845 samples, 0.54%)</title><rect x="1081.0" y="389" width="6.3" height="15.0" fill="rgb(211,1,33)" rx="2" ry="2" />
<text  x="1084.01" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (113 samples, 0.03%)</title><rect x="1101.2" y="341" width="0.4" height="15.0" fill="rgb(236,93,51)" rx="2" ry="2" />
<text  x="1104.20" y="351.5" ></text>
</g>
<g >
<title>nom::number::complete::le_i32 (270 samples, 0.08%)</title><rect x="473.5" y="293" width="0.9" height="15.0" fill="rgb(245,160,15)" rx="2" ry="2" />
<text  x="476.47" y="303.5" ></text>
</g>
<g >
<title>core::cmp::max (232 samples, 0.07%)</title><rect x="809.3" y="357" width="0.8" height="15.0" fill="rgb(221,175,54)" rx="2" ry="2" />
<text  x="812.32" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (143 samples, 0.04%)</title><rect x="190.6" y="357" width="0.5" height="15.0" fill="rgb(215,172,14)" rx="2" ry="2" />
<text  x="193.61" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (146 samples, 0.04%)</title><rect x="51.8" y="501" width="0.5" height="15.0" fill="rgb(217,217,22)" rx="2" ry="2" />
<text  x="54.85" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,016 samples, 2.33%)</title><rect x="343.5" y="437" width="27.5" height="15.0" fill="rgb(236,118,38)" rx="2" ry="2" />
<text  x="346.46" y="447.5" >&lt;..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (93 samples, 0.03%)</title><rect x="319.6" y="469" width="0.3" height="15.0" fill="rgb(240,194,31)" rx="2" ry="2" />
<text  x="322.57" y="479.5" ></text>
</g>
<g >
<title>&lt;sudachi::dic::category_type::CategoryType as core::ops::bit::BitAnd&gt;::bitand (99 samples, 0.03%)</title><rect x="321.6" y="373" width="0.4" height="15.0" fill="rgb(211,107,13)" rx="2" ry="2" />
<text  x="324.64" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::TrieEntryIter::get (9,127 samples, 2.66%)</title><rect x="592.2" y="325" width="31.4" height="15.0" fill="rgb(210,4,14)" rx="2" ry="2" />
<text  x="595.23" y="335.5" >su..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,813 samples, 0.82%)</title><rect x="529.5" y="197" width="9.6" height="15.0" fill="rgb(241,182,20)" rx="2" ry="2" />
<text  x="532.48" y="207.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 samples, 0.03%)</title><rect x="578.5" y="437" width="0.3" height="15.0" fill="rgb(248,161,40)" rx="2" ry="2" />
<text  x="581.47" y="447.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup (285 samples, 0.08%)</title><rect x="654.0" y="325" width="1.0" height="15.0" fill="rgb(215,165,39)" rx="2" ry="2" />
<text  x="656.99" y="335.5" ></text>
</g>
<g >
<title>nom::sequence::tuple::{{closure}} (29,762 samples, 8.66%)</title><rect x="456.4" y="357" width="102.2" height="15.0" fill="rgb(224,180,38)" rx="2" ry="2" />
<text  x="459.35" y="367.5" >nom::sequenc..</text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (692 samples, 0.20%)</title><rect x="551.1" y="293" width="2.4" height="15.0" fill="rgb(234,69,34)" rx="2" ry="2" />
<text  x="554.15" y="303.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::i16_parser (2,880 samples, 0.84%)</title><rect x="1025.6" y="405" width="9.9" height="15.0" fill="rgb(247,52,27)" rx="2" ry="2" />
<text  x="1028.61" y="415.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_cost (208 samples, 0.06%)</title><rect x="80.3" y="501" width="0.7" height="15.0" fill="rgb(241,71,45)" rx="2" ry="2" />
<text  x="83.33" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (3,165 samples, 0.92%)</title><rect x="349.6" y="357" width="10.9" height="15.0" fill="rgb(228,4,0)" rx="2" ry="2" />
<text  x="352.61" y="367.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (276 samples, 0.08%)</title><rect x="300.5" y="437" width="0.9" height="15.0" fill="rgb(216,125,17)" rx="2" ry="2" />
<text  x="303.49" y="447.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (143 samples, 0.04%)</title><rect x="341.6" y="389" width="0.4" height="15.0" fill="rgb(207,54,35)" rx="2" ry="2" />
<text  x="344.55" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::connect::ConnectionMatrix::index (1,761 samples, 0.51%)</title><rect x="930.7" y="389" width="6.0" height="15.0" fill="rgb(232,65,0)" rx="2" ry="2" />
<text  x="933.66" y="399.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (18,295 samples, 5.32%)</title><rect x="228.1" y="405" width="62.8" height="15.0" fill="rgb(235,27,43)" rx="2" ry="2" />
<text  x="231.10" y="415.5" >regex:..</text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (730 samples, 0.21%)</title><rect x="1145.0" y="261" width="2.5" height="15.0" fill="rgb(213,35,21)" rx="2" ry="2" />
<text  x="1147.97" y="271.5" ></text>
</g>
<g >
<title>core::str::validations::unwrap_or_0 (119 samples, 0.03%)</title><rect x="1099.9" y="341" width="0.4" height="15.0" fill="rgb(209,71,0)" rx="2" ry="2" />
<text  x="1102.91" y="351.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (862 samples, 0.25%)</title><rect x="208.0" y="341" width="3.0" height="15.0" fill="rgb(218,168,33)" rx="2" ry="2" />
<text  x="211.01" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (6,638 samples, 1.93%)</title><rect x="952.9" y="341" width="22.8" height="15.0" fill="rgb(235,89,14)" rx="2" ry="2" />
<text  x="955.91" y="351.5" >a..</text>
</g>
<g >
<title>regex::exec::ExecNoSync::shortest_dfa (4,451 samples, 1.30%)</title><rect x="269.5" y="325" width="15.2" height="15.0" fill="rgb(234,20,0)" rx="2" ry="2" />
<text  x="272.45" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (102 samples, 0.03%)</title><rect x="85.2" y="309" width="0.4" height="15.0" fill="rgb(208,4,43)" rx="2" ry="2" />
<text  x="88.23" y="319.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (110 samples, 0.03%)</title><rect x="1099.5" y="309" width="0.4" height="15.0" fill="rgb(231,164,48)" rx="2" ry="2" />
<text  x="1102.53" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (119 samples, 0.03%)</title><rect x="32.4" y="501" width="0.4" height="15.0" fill="rgb(234,227,1)" rx="2" ry="2" />
<text  x="35.41" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (104 samples, 0.03%)</title><rect x="1118.3" y="229" width="0.3" height="15.0" fill="rgb(236,49,20)" rx="2" ry="2" />
<text  x="1121.27" y="239.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2,033 samples, 0.59%)</title><rect x="291.8" y="309" width="6.9" height="15.0" fill="rgb(208,218,46)" rx="2" ry="2" />
<text  x="294.75" y="319.5" ></text>
</g>
<g >
<title>sudachi::dic::utf16_string_parser (2,876 samples, 0.84%)</title><rect x="421.9" y="277" width="9.9" height="15.0" fill="rgb(213,140,28)" rx="2" ry="2" />
<text  x="424.93" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (716 samples, 0.21%)</title><rect x="426.1" y="181" width="2.5" height="15.0" fill="rgb(231,61,7)" rx="2" ry="2" />
<text  x="429.12" y="191.5" ></text>
</g>
<g >
<title>&lt;sudachi::output::Simple as sudachi::output::SudachiOutput&lt;T&gt;&gt;::write (125 samples, 0.04%)</title><rect x="88.5" y="469" width="0.5" height="15.0" fill="rgb(254,78,20)" rx="2" ry="2" />
<text  x="91.53" y="479.5" ></text>
</g>
<g >
<title>core::char::methods::&lt;impl char&gt;::encode_utf8 (705 samples, 0.21%)</title><rect x="505.6" y="245" width="2.4" height="15.0" fill="rgb(254,80,49)" rx="2" ry="2" />
<text  x="508.59" y="255.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (312 samples, 0.09%)</title><rect x="1043.0" y="261" width="1.1" height="15.0" fill="rgb(245,108,8)" rx="2" ry="2" />
<text  x="1046.02" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (31,309 samples, 9.11%)</title><rect x="730.7" y="437" width="107.5" height="15.0" fill="rgb(252,28,8)" rx="2" ry="2" />
<text  x="733.68" y="447.5" >alloc::vec::V..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (347 samples, 0.10%)</title><rect x="173.6" y="373" width="1.2" height="15.0" fill="rgb(252,175,37)" rx="2" ry="2" />
<text  x="176.56" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (716 samples, 0.21%)</title><rect x="426.1" y="165" width="2.5" height="15.0" fill="rgb(253,39,52)" rx="2" ry="2" />
<text  x="429.12" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (716 samples, 0.21%)</title><rect x="426.1" y="197" width="2.5" height="15.0" fill="rgb(226,34,47)" rx="2" ry="2" />
<text  x="429.12" y="207.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_set_epi8 (413 samples, 0.12%)</title><rect x="1015.3" y="245" width="1.4" height="15.0" fill="rgb(218,179,44)" rx="2" ry="2" />
<text  x="1018.30" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::Lexicon::lookup::{{closure}}::{{closure}} (151 samples, 0.04%)</title><rect x="652.3" y="341" width="0.5" height="15.0" fill="rgb(237,24,28)" rx="2" ry="2" />
<text  x="655.32" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (689 samples, 0.20%)</title><rect x="698.4" y="437" width="2.3" height="15.0" fill="rgb(210,220,3)" rx="2" ry="2" />
<text  x="701.35" y="447.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::next_si (721 samples, 0.21%)</title><rect x="309.3" y="309" width="2.5" height="15.0" fill="rgb(218,218,39)" rx="2" ry="2" />
<text  x="312.32" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (104 samples, 0.03%)</title><rect x="85.2" y="357" width="0.4" height="15.0" fill="rgb(211,174,47)" rx="2" ry="2" />
<text  x="88.23" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (123 samples, 0.04%)</title><rect x="1101.2" y="357" width="0.4" height="15.0" fill="rgb(210,18,14)" rx="2" ry="2" />
<text  x="1104.17" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (148 samples, 0.04%)</title><rect x="337.0" y="293" width="0.5" height="15.0" fill="rgb(214,137,29)" rx="2" ry="2" />
<text  x="340.02" y="303.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (439 samples, 0.13%)</title><rect x="261.6" y="293" width="1.5" height="15.0" fill="rgb(221,130,48)" rx="2" ry="2" />
<text  x="264.64" y="303.5" ></text>
</g>
<g >
<title>&lt;aho_corasick::ahocorasick::FindIter&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,068 samples, 0.31%)</title><rect x="1105.4" y="373" width="3.7" height="15.0" fill="rgb(232,20,4)" rx="2" ry="2" />
<text  x="1108.40" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,694 samples, 1.37%)</title><rect x="344.4" y="389" width="16.1" height="15.0" fill="rgb(222,89,29)" rx="2" ry="2" />
<text  x="347.36" y="399.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (97 samples, 0.03%)</title><rect x="559.6" y="421" width="0.3" height="15.0" fill="rgb(216,206,12)" rx="2" ry="2" />
<text  x="562.56" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,043 samples, 0.59%)</title><rect x="353.2" y="261" width="7.0" height="15.0" fill="rgb(211,202,48)" rx="2" ry="2" />
<text  x="356.18" y="271.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (554 samples, 0.16%)</title><rect x="653.1" y="389" width="1.9" height="15.0" fill="rgb(253,186,43)" rx="2" ry="2" />
<text  x="656.07" y="399.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u8 (268 samples, 0.08%)</title><rect x="430.9" y="245" width="0.9" height="15.0" fill="rgb(240,173,24)" rx="2" ry="2" />
<text  x="433.88" y="255.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1,397 samples, 0.41%)</title><rect x="944.3" y="341" width="4.8" height="15.0" fill="rgb(210,96,54)" rx="2" ry="2" />
<text  x="947.30" y="351.5" ></text>
</g>
<g >
<title>nom::number::complete::le_u16 (2,399 samples, 0.70%)</title><rect x="1025.6" y="261" width="8.3" height="15.0" fill="rgb(214,51,36)" rx="2" ry="2" />
<text  x="1028.61" y="271.5" ></text>
</g>
<g >
<title>aho_corasick::packed::api::Searcher::find (1,567 samples, 0.46%)</title><rect x="1150.7" y="245" width="5.4" height="15.0" fill="rgb(216,26,9)" rx="2" ry="2" />
<text  x="1153.71" y="255.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (347 samples, 0.10%)</title><rect x="75.8" y="501" width="1.2" height="15.0" fill="rgb(213,7,46)" rx="2" ry="2" />
<text  x="78.78" y="511.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,208 samples, 0.35%)</title><rect x="206.8" y="357" width="4.2" height="15.0" fill="rgb(250,120,25)" rx="2" ry="2" />
<text  x="209.82" y="367.5" ></text>
</g>
<g >
<title>core::ptr::write (115 samples, 0.03%)</title><rect x="1163.6" y="421" width="0.4" height="15.0" fill="rgb(207,10,43)" rx="2" ry="2" />
<text  x="1166.58" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::append_elements (88 samples, 0.03%)</title><rect x="340.8" y="341" width="0.3" height="15.0" fill="rgb(250,129,4)" rx="2" ry="2" />
<text  x="343.85" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (163 samples, 0.05%)</title><rect x="85.8" y="293" width="0.5" height="15.0" fill="rgb(205,202,23)" rx="2" ry="2" />
<text  x="88.78" y="303.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (618 samples, 0.18%)</title><rect x="1185.7" y="501" width="2.1" height="15.0" fill="rgb(207,113,7)" rx="2" ry="2" />
<text  x="1188.67" y="511.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::swap_result (344 samples, 0.10%)</title><rect x="316.9" y="469" width="1.1" height="15.0" fill="rgb(235,205,46)" rx="2" ry="2" />
<text  x="319.86" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (113 samples, 0.03%)</title><rect x="338.5" y="309" width="0.3" height="15.0" fill="rgb(232,37,19)" rx="2" ry="2" />
<text  x="341.46" y="319.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (262 samples, 0.08%)</title><rect x="1012.4" y="325" width="0.9" height="15.0" fill="rgb(221,60,35)" rx="2" ry="2" />
<text  x="1015.36" y="335.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match (149 samples, 0.04%)</title><rect x="46.1" y="501" width="0.5" height="15.0" fill="rgb(213,108,13)" rx="2" ry="2" />
<text  x="49.06" y="511.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (143 samples, 0.04%)</title><rect x="1154.3" y="101" width="0.5" height="15.0" fill="rgb(240,59,36)" rx="2" ry="2" />
<text  x="1157.33" y="111.5" ></text>
</g>
<g >
<title>&lt;core::option::Option&lt;V&gt; as core::iter::traits::collect::FromIterator&lt;core::option::Option&lt;A&gt;&gt;&gt;::from_iter (163 samples, 0.05%)</title><rect x="334.4" y="389" width="0.6" height="15.0" fill="rgb(228,183,24)" rx="2" ry="2" />
<text  x="337.45" y="399.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::word_id_to_offset (1,776 samples, 0.52%)</title><rect x="432.6" y="405" width="6.1" height="15.0" fill="rgb(241,39,9)" rx="2" ry="2" />
<text  x="435.64" y="415.5" ></text>
</g>
<g >
<title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (335 samples, 0.10%)</title><rect x="1115.5" y="341" width="1.2" height="15.0" fill="rgb(230,85,37)" rx="2" ry="2" />
<text  x="1118.51" y="351.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (90 samples, 0.03%)</title><rect x="1086.1" y="149" width="0.3" height="15.0" fill="rgb(245,132,37)" rx="2" ry="2" />
<text  x="1089.06" y="159.5" ></text>
</g>
<g >
<title>regex::dfa::Transitions::next_unchecked (250 samples, 0.07%)</title><rect x="273.3" y="261" width="0.9" height="15.0" fill="rgb(218,140,20)" rx="2" ry="2" />
<text  x="276.30" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free (2,591 samples, 0.75%)</title><rect x="361.0" y="325" width="8.9" height="15.0" fill="rgb(237,157,17)" rx="2" ry="2" />
<text  x="364.00" y="335.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::capture_locations (285 samples, 0.08%)</title><rect x="302.8" y="405" width="1.0" height="15.0" fill="rgb(222,27,37)" rx="2" ry="2" />
<text  x="305.83" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (654 samples, 0.19%)</title><rect x="143.4" y="373" width="2.2" height="15.0" fill="rgb(218,7,27)" rx="2" ry="2" />
<text  x="146.38" y="383.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (202 samples, 0.06%)</title><rect x="372.9" y="453" width="0.7" height="15.0" fill="rgb(242,48,42)" rx="2" ry="2" />
<text  x="375.92" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::arith::AddAssign&lt;&amp;str&gt;&gt;::add_assign (88 samples, 0.03%)</title><rect x="340.8" y="405" width="0.3" height="15.0" fill="rgb(246,209,47)" rx="2" ry="2" />
<text  x="343.85" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::forward (2,998 samples, 0.87%)</title><rect x="214.7" y="325" width="10.3" height="15.0" fill="rgb(241,175,22)" rx="2" ry="2" />
<text  x="217.67" y="335.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::shortest_match_at (199 samples, 0.06%)</title><rect x="284.7" y="325" width="0.7" height="15.0" fill="rgb(238,59,52)" rx="2" ry="2" />
<text  x="287.74" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (2,913 samples, 0.85%)</title><rect x="1173.8" y="277" width="10.0" height="15.0" fill="rgb(230,32,51)" rx="2" ry="2" />
<text  x="1176.77" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (102 samples, 0.03%)</title><rect x="85.2" y="293" width="0.4" height="15.0" fill="rgb(222,57,47)" rx="2" ry="2" />
<text  x="88.23" y="303.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (367 samples, 0.11%)</title><rect x="984.2" y="405" width="1.2" height="15.0" fill="rgb(213,65,22)" rx="2" ry="2" />
<text  x="987.18" y="415.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array (242 samples, 0.07%)</title><rect x="947.7" y="261" width="0.8" height="15.0" fill="rgb(210,110,47)" rx="2" ry="2" />
<text  x="950.68" y="271.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::new (1,263 samples, 0.37%)</title><rect x="975.8" y="453" width="4.4" height="15.0" fill="rgb(225,112,29)" rx="2" ry="2" />
<text  x="978.83" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (103 samples, 0.03%)</title><rect x="291.4" y="389" width="0.3" height="15.0" fill="rgb(218,136,2)" rx="2" ry="2" />
<text  x="294.37" y="399.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::find_at (1,940 samples, 0.56%)</title><rect x="1149.9" y="357" width="6.7" height="15.0" fill="rgb(216,85,40)" rx="2" ry="2" />
<text  x="1152.93" y="367.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,203 samples, 5.59%)</title><rect x="583.1" y="357" width="65.9" height="15.0" fill="rgb(247,223,8)" rx="2" ry="2" />
<text  x="586.05" y="367.5" >&lt;core::..</text>
</g>
<g >
<title>_int_malloc (6,563 samples, 1.91%)</title><rect x="953.1" y="293" width="22.6" height="15.0" fill="rgb(242,156,54)" rx="2" ry="2" />
<text  x="956.14" y="303.5" >_..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (356 samples, 0.10%)</title><rect x="1061.0" y="389" width="1.2" height="15.0" fill="rgb(208,20,20)" rx="2" ry="2" />
<text  x="1063.97" y="399.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (174 samples, 0.05%)</title><rect x="658.3" y="453" width="0.6" height="15.0" fill="rgb(208,156,37)" rx="2" ry="2" />
<text  x="661.26" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (172 samples, 0.05%)</title><rect x="1184.4" y="357" width="0.6" height="15.0" fill="rgb(250,78,47)" rx="2" ry="2" />
<text  x="1187.39" y="367.5" ></text>
</g>
<g >
<title>core::ptr::write (109 samples, 0.03%)</title><rect x="528.5" y="245" width="0.4" height="15.0" fill="rgb(254,223,23)" rx="2" ry="2" />
<text  x="531.54" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (354 samples, 0.10%)</title><rect x="429.5" y="149" width="1.2" height="15.0" fill="rgb(207,126,25)" rx="2" ry="2" />
<text  x="432.49" y="159.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (271 samples, 0.08%)</title><rect x="417.8" y="197" width="1.0" height="15.0" fill="rgb(232,224,48)" rx="2" ry="2" />
<text  x="420.85" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (112 samples, 0.03%)</title><rect x="578.5" y="453" width="0.4" height="15.0" fill="rgb(242,61,18)" rx="2" ry="2" />
<text  x="581.47" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1,654 samples, 0.48%)</title><rect x="937.3" y="437" width="5.7" height="15.0" fill="rgb(212,67,23)" rx="2" ry="2" />
<text  x="940.33" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,789 samples, 0.81%)</title><rect x="1070.3" y="277" width="9.6" height="15.0" fill="rgb(252,124,16)" rx="2" ry="2" />
<text  x="1073.34" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (96 samples, 0.03%)</title><rect x="1171.5" y="373" width="0.3" height="15.0" fill="rgb(240,214,54)" rx="2" ry="2" />
<text  x="1174.48" y="383.5" ></text>
</g>
<g >
<title>_int_realloc (310 samples, 0.09%)</title><rect x="197.0" y="229" width="1.1" height="15.0" fill="rgb(229,38,19)" rx="2" ry="2" />
<text  x="200.03" y="239.5" ></text>
</g>
<g >
<title>nom::multi::count::{{closure}} (391 samples, 0.11%)</title><rect x="552.0" y="245" width="1.3" height="15.0" fill="rgb(208,12,7)" rx="2" ry="2" />
<text  x="554.98" y="255.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (3,273 samples, 0.95%)</title><rect x="214.2" y="341" width="11.2" height="15.0" fill="rgb(211,44,41)" rx="2" ry="2" />
<text  x="217.19" y="351.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (391 samples, 0.11%)</title><rect x="289.6" y="293" width="1.3" height="15.0" fill="rgb(224,39,51)" rx="2" ry="2" />
<text  x="292.58" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (456 samples, 0.13%)</title><rect x="423.7" y="181" width="1.5" height="15.0" fill="rgb(221,19,38)" rx="2" ry="2" />
<text  x="426.67" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (417 samples, 0.12%)</title><rect x="414.4" y="389" width="1.4" height="15.0" fill="rgb(212,102,5)" rx="2" ry="2" />
<text  x="417.41" y="399.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (249 samples, 0.07%)</title><rect x="225.8" y="325" width="0.9" height="15.0" fill="rgb(214,106,36)" rx="2" ry="2" />
<text  x="228.83" y="335.5" ></text>
</g>
<g >
<title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (450 samples, 0.13%)</title><rect x="192.7" y="389" width="1.6" height="15.0" fill="rgb(213,40,18)" rx="2" ry="2" />
<text  x="195.73" y="399.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (199 samples, 0.06%)</title><rect x="1159.2" y="357" width="0.7" height="15.0" fill="rgb(224,223,0)" rx="2" ry="2" />
<text  x="1162.21" y="367.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::rewrite_input (17,161 samples, 4.99%)</title><rect x="1098.1" y="469" width="58.9" height="15.0" fill="rgb(244,164,33)" rx="2" ry="2" />
<text  x="1101.07" y="479.5" >sudach..</text>
</g>
<g >
<title>nom::combinator::map::{{closure}} (417 samples, 0.12%)</title><rect x="1016.7" y="309" width="1.4" height="15.0" fill="rgb(217,59,19)" rx="2" ry="2" />
<text  x="1019.71" y="319.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (156 samples, 0.05%)</title><rect x="205.6" y="341" width="0.5" height="15.0" fill="rgb(223,92,39)" rx="2" ry="2" />
<text  x="208.61" y="351.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_dfa_forward (1,765 samples, 0.51%)</title><rect x="307.7" y="357" width="6.0" height="15.0" fill="rgb(216,189,27)" rx="2" ry="2" />
<text  x="310.68" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (236 samples, 0.07%)</title><rect x="1171.1" y="453" width="0.8" height="15.0" fill="rgb(228,12,29)" rx="2" ry="2" />
<text  x="1174.06" y="463.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (383 samples, 0.11%)</title><rect x="299.0" y="325" width="1.3" height="15.0" fill="rgb(224,193,32)" rx="2" ry="2" />
<text  x="301.99" y="335.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (442 samples, 0.13%)</title><rect x="33.6" y="501" width="1.6" height="15.0" fill="rgb(226,118,15)" rx="2" ry="2" />
<text  x="36.64" y="511.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (3,105 samples, 0.90%)</title><rect x="1070.3" y="341" width="10.7" height="15.0" fill="rgb(207,159,9)" rx="2" ry="2" />
<text  x="1073.34" y="351.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::label (353 samples, 0.10%)</title><rect x="587.2" y="325" width="1.3" height="15.0" fill="rgb(247,116,9)" rx="2" ry="2" />
<text  x="590.24" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4,769 samples, 1.39%)</title><rect x="489.2" y="245" width="16.4" height="15.0" fill="rgb(207,105,6)" rx="2" ry="2" />
<text  x="492.19" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,651 samples, 0.48%)</title><rect x="1011.0" y="341" width="5.7" height="15.0" fill="rgb(217,120,9)" rx="2" ry="2" />
<text  x="1014.04" y="351.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (705 samples, 0.21%)</title><rect x="505.6" y="229" width="2.4" height="15.0" fill="rgb(210,19,14)" rx="2" ry="2" />
<text  x="508.59" y="239.5" ></text>
</g>
<g >
<title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (242 samples, 0.07%)</title><rect x="337.6" y="357" width="0.8" height="15.0" fill="rgb(211,108,31)" rx="2" ry="2" />
<text  x="340.55" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (104 samples, 0.03%)</title><rect x="1118.3" y="261" width="0.3" height="15.0" fill="rgb(237,207,24)" rx="2" ry="2" />
<text  x="1121.27" y="271.5" ></text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (30,083 samples, 8.76%)</title><rect x="455.5" y="389" width="103.3" height="15.0" fill="rgb(216,14,11)" rx="2" ry="2" />
<text  x="458.50" y="399.5" >nom::sequenc..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (90 samples, 0.03%)</title><rect x="1154.0" y="117" width="0.3" height="15.0" fill="rgb(228,12,19)" rx="2" ry="2" />
<text  x="1157.02" y="127.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (142 samples, 0.04%)</title><rect x="35.2" y="485" width="0.5" height="15.0" fill="rgb(252,53,1)" rx="2" ry="2" />
<text  x="38.21" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;]&gt; (8,001 samples, 2.33%)</title><rect x="343.5" y="421" width="27.5" height="15.0" fill="rgb(250,207,42)" rx="2" ry="2" />
<text  x="346.51" y="431.5" >c..</text>
</g>
<g >
<title>&lt;fancy_regex::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (3,574 samples, 1.04%)</title><rect x="301.7" y="437" width="12.3" height="15.0" fill="rgb(228,144,45)" rx="2" ry="2" />
<text  x="304.73" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (137 samples, 0.04%)</title><rect x="75.3" y="501" width="0.5" height="15.0" fill="rgb(218,104,27)" rx="2" ry="2" />
<text  x="78.31" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (1,314 samples, 0.38%)</title><rect x="68.3" y="501" width="4.5" height="15.0" fill="rgb(210,44,46)" rx="2" ry="2" />
<text  x="71.27" y="511.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_id_table::WordIdTable::entries (4,216 samples, 1.23%)</title><rect x="634.5" y="293" width="14.5" height="15.0" fill="rgb(245,55,5)" rx="2" ry="2" />
<text  x="637.52" y="303.5" ></text>
</g>
<g >
<title>__rdl_alloc (98 samples, 0.03%)</title><rect x="327.0" y="261" width="0.3" height="15.0" fill="rgb(230,193,26)" rx="2" ry="2" />
<text  x="329.98" y="271.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (435 samples, 0.13%)</title><rect x="481.9" y="277" width="1.5" height="15.0" fill="rgb(236,95,10)" rx="2" ry="2" />
<text  x="484.88" y="287.5" ></text>
</g>
<g >
<title>fancy_regex::Regex::is_match (306 samples, 0.09%)</title><rect x="300.4" y="453" width="1.0" height="15.0" fill="rgb(214,33,37)" rx="2" ry="2" />
<text  x="303.39" y="463.5" ></text>
</g>
<g >
<title>core::str::validations::run_utf8_validation (652 samples, 0.19%)</title><rect x="82.7" y="405" width="2.3" height="15.0" fill="rgb(234,45,11)" rx="2" ry="2" />
<text  x="85.73" y="415.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::start_state (406 samples, 0.12%)</title><rect x="222.6" y="309" width="1.4" height="15.0" fill="rgb(239,163,13)" rx="2" ry="2" />
<text  x="225.65" y="319.5" ></text>
</g>
<g >
<title>_int_free (1,311 samples, 0.38%)</title><rect x="355.3" y="197" width="4.5" height="15.0" fill="rgb(239,42,4)" rx="2" ry="2" />
<text  x="358.32" y="207.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher_str (1,208 samples, 0.35%)</title><rect x="286.8" y="357" width="4.1" height="15.0" fill="rgb(215,150,24)" rx="2" ry="2" />
<text  x="289.78" y="367.5" ></text>
</g>
<g >
<title>regex::re_trait::RegularExpression::locations (221 samples, 0.06%)</title><rect x="303.0" y="389" width="0.8" height="15.0" fill="rgb(209,48,12)" rx="2" ry="2" />
<text  x="306.05" y="399.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::input_text::prolonged_sound_mark::ProlongedSoundMarkPlugin as sudachi::plugin::input_text::InputTextPlugin&gt;::rewrite_impl (2,250 samples, 0.65%)</title><rect x="1149.2" y="405" width="7.7" height="15.0" fill="rgb(238,86,7)" rx="2" ry="2" />
<text  x="1152.22" y="415.5" ></text>
</g>
<g >
<title>fancy_regex::vm::State::new (188 samples, 0.05%)</title><rect x="152.1" y="405" width="0.7" height="15.0" fill="rgb(227,73,12)" rx="2" ry="2" />
<text  x="155.14" y="415.5" ></text>
</g>
<g >
<title>unicode_normalization::decompose::Decompositions&lt;I&gt;::push_back (125 samples, 0.04%)</title><rect x="1115.9" y="261" width="0.5" height="15.0" fill="rgb(227,44,36)" rx="2" ry="2" />
<text  x="1118.94" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (417 samples, 0.12%)</title><rect x="414.4" y="357" width="1.4" height="15.0" fill="rgb(225,152,13)" rx="2" ry="2" />
<text  x="417.41" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (113 samples, 0.03%)</title><rect x="338.5" y="325" width="0.3" height="15.0" fill="rgb(206,56,30)" rx="2" ry="2" />
<text  x="341.46" y="335.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::ok_or (208 samples, 0.06%)</title><rect x="388.4" y="453" width="0.8" height="15.0" fill="rgb(245,113,47)" rx="2" ry="2" />
<text  x="391.44" y="463.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (193 samples, 0.06%)</title><rect x="450.6" y="181" width="0.7" height="15.0" fill="rgb(235,153,16)" rx="2" ry="2" />
<text  x="453.61" y="191.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (363 samples, 0.11%)</title><rect x="1160.9" y="453" width="1.3" height="15.0" fill="rgb(234,104,12)" rx="2" ry="2" />
<text  x="1163.92" y="463.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::WordInfos::get_word_info (43,856 samples, 12.76%)</title><rect x="408.3" y="421" width="150.6" height="15.0" fill="rgb(241,114,25)" rx="2" ry="2" />
<text  x="411.28" y="431.5" >sudachi::dic::lexic..</text>
</g>
<g >
<title>_int_free (1,915 samples, 0.56%)</title><rect x="756.3" y="261" width="6.6" height="15.0" fill="rgb(226,85,1)" rx="2" ry="2" />
<text  x="759.31" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (239 samples, 0.07%)</title><rect x="1067.4" y="325" width="0.8" height="15.0" fill="rgb(227,219,14)" rx="2" ry="2" />
<text  x="1070.41" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (186 samples, 0.05%)</title><rect x="79.6" y="357" width="0.6" height="15.0" fill="rgb(233,176,30)" rx="2" ry="2" />
<text  x="82.60" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (125 samples, 0.04%)</title><rect x="303.4" y="309" width="0.4" height="15.0" fill="rgb(221,224,9)" rx="2" ry="2" />
<text  x="306.38" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,043 samples, 0.59%)</title><rect x="353.2" y="309" width="7.0" height="15.0" fill="rgb(233,159,45)" rx="2" ry="2" />
<text  x="356.18" y="319.5" ></text>
</g>
<g >
<title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (1,620 samples, 0.47%)</title><rect x="1143.4" y="389" width="5.6" height="15.0" fill="rgb(219,85,17)" rx="2" ry="2" />
<text  x="1146.42" y="399.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_numeric::numeric_parser::string_number::StringNumber::add (186 samples, 0.05%)</title><rect x="341.5" y="421" width="0.6" height="15.0" fill="rgb(231,154,10)" rx="2" ry="2" />
<text  x="344.50" y="431.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::OovProviderPlugin::get_oov (11,233 samples, 3.27%)</title><rect x="1052.0" y="453" width="38.6" height="15.0" fill="rgb(209,155,2)" rx="2" ry="2" />
<text  x="1055.01" y="463.5" >sud..</text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (154 samples, 0.04%)</title><rect x="522.8" y="213" width="0.6" height="15.0" fill="rgb(240,70,32)" rx="2" ry="2" />
<text  x="525.83" y="223.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt;&gt; (155 samples, 0.05%)</title><rect x="337.0" y="341" width="0.6" height="15.0" fill="rgb(216,104,28)" rx="2" ry="2" />
<text  x="340.02" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2,542 samples, 0.74%)</title><rect x="1070.6" y="213" width="8.7" height="15.0" fill="rgb(236,38,53)" rx="2" ry="2" />
<text  x="1073.58" y="223.5" ></text>
</g>
<g >
<title>sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin::is_katakana_node (494 samples, 0.14%)</title><rect x="320.9" y="437" width="1.7" height="15.0" fill="rgb(209,185,9)" rx="2" ry="2" />
<text  x="323.90" y="447.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (2,901 samples, 0.84%)</title><rect x="303.9" y="373" width="10.0" height="15.0" fill="rgb(229,27,8)" rx="2" ry="2" />
<text  x="306.91" y="383.5" ></text>
</g>
<g >
<title>sudachi::output::write_morpheme_basic (5,892 samples, 1.71%)</title><rect x="89.0" y="469" width="20.2" height="15.0" fill="rgb(220,98,37)" rx="2" ry="2" />
<text  x="91.96" y="479.5" ></text>
</g>
<g >
<title>&lt;regex::pool::PoolGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (207 samples, 0.06%)</title><rect x="286.1" y="309" width="0.7" height="15.0" fill="rgb(254,193,50)" rx="2" ry="2" />
<text  x="289.06" y="319.5" ></text>
</g>
<g >
<title>aho_corasick::ahocorasick::Imp&lt;S&gt;::earliest_find_at (610 samples, 0.18%)</title><rect x="1111.2" y="357" width="2.1" height="15.0" fill="rgb(239,32,48)" rx="2" ry="2" />
<text  x="1114.24" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::set_len (335 samples, 0.10%)</title><rect x="95.0" y="421" width="1.2" height="15.0" fill="rgb(250,168,34)" rx="2" ry="2" />
<text  x="98.02" y="431.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::exec_at (1,023 samples, 0.30%)</title><rect x="1144.1" y="293" width="3.5" height="15.0" fill="rgb(231,180,6)" rx="2" ry="2" />
<text  x="1147.08" y="303.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find_start (6,661 samples, 1.94%)</title><rect x="241.4" y="309" width="22.9" height="15.0" fill="rgb(211,169,31)" rx="2" ry="2" />
<text  x="244.38" y="319.5" >r..</text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::exec (805 samples, 0.23%)</title><rect x="304.9" y="309" width="2.8" height="15.0" fill="rgb(221,19,14)" rx="2" ry="2" />
<text  x="307.89" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (221 samples, 0.06%)</title><rect x="552.6" y="229" width="0.7" height="15.0" fill="rgb(252,42,14)" rx="2" ry="2" />
<text  x="555.57" y="239.5" ></text>
</g>
<g >
<title>alloc::string::String::push (105 samples, 0.03%)</title><rect x="22.9" y="501" width="0.3" height="15.0" fill="rgb(252,62,36)" rx="2" ry="2" />
<text  x="25.89" y="511.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (269 samples, 0.08%)</title><rect x="653.1" y="373" width="0.9" height="15.0" fill="rgb(239,160,40)" rx="2" ry="2" />
<text  x="656.07" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,586 samples, 0.46%)</title><rect x="937.4" y="405" width="5.4" height="15.0" fill="rgb(218,218,19)" rx="2" ry="2" />
<text  x="940.35" y="415.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (126 samples, 0.04%)</title><rect x="942.2" y="293" width="0.5" height="15.0" fill="rgb(243,68,39)" rx="2" ry="2" />
<text  x="945.24" y="303.5" ></text>
</g>
<g >
<title>__rdl_realloc (187 samples, 0.05%)</title><rect x="781.0" y="293" width="0.6" height="15.0" fill="rgb(235,149,7)" rx="2" ry="2" />
<text  x="783.97" y="303.5" ></text>
</g>
<g >
<title>&lt;sudachi::plugin::path_rewrite::join_katakana_oov::JoinKatakanaOovPlugin as sudachi::plugin::path_rewrite::PathRewritePlugin&gt;::rewrite (928 samples, 0.27%)</title><rect x="319.9" y="469" width="3.2" height="15.0" fill="rgb(222,126,17)" rx="2" ry="2" />
<text  x="322.90" y="479.5" ></text>
</g>
<g >
<title>core::option::Option&lt;&amp;T&gt;::copied (219 samples, 0.06%)</title><rect x="431.1" y="213" width="0.7" height="15.0" fill="rgb(234,89,20)" rx="2" ry="2" />
<text  x="434.05" y="223.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (114 samples, 0.03%)</title><rect x="240.7" y="277" width="0.4" height="15.0" fill="rgb(248,161,9)" rx="2" ry="2" />
<text  x="243.73" y="287.5" ></text>
</g>
<g >
<title>[system.dic] (173 samples, 0.05%)</title><rect x="51.8" y="517" width="0.6" height="15.0" fill="rgb(219,144,4)" rx="2" ry="2" />
<text  x="54.85" y="527.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (19,203 samples, 5.59%)</title><rect x="583.1" y="373" width="65.9" height="15.0" fill="rgb(252,184,28)" rx="2" ry="2" />
<text  x="586.05" y="383.5" >&lt;core::..</text>
</g>
<g >
<title>regex::re_unicode::Regex::is_match_at (18,292 samples, 5.32%)</title><rect x="228.1" y="389" width="62.8" height="15.0" fill="rgb(220,55,46)" rx="2" ry="2" />
<text  x="231.11" y="399.5" >regex:..</text>
</g>
<g >
<title>aho_corasick::packed::teddy::runtime::TeddySlim2Mask128::find_at (1,405 samples, 0.41%)</title><rect x="1151.1" y="197" width="4.9" height="15.0" fill="rgb(244,172,29)" rx="2" ry="2" />
<text  x="1154.13" y="207.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (554 samples, 0.16%)</title><rect x="653.1" y="405" width="1.9" height="15.0" fill="rgb(208,98,4)" rx="2" ry="2" />
<text  x="656.07" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (240 samples, 0.07%)</title><rect x="32.8" y="501" width="0.8" height="15.0" fill="rgb(229,98,27)" rx="2" ry="2" />
<text  x="35.82" y="511.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (148 samples, 0.04%)</title><rect x="108.6" y="357" width="0.5" height="15.0" fill="rgb(226,118,18)" rx="2" ry="2" />
<text  x="111.59" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::set_len (233 samples, 0.07%)</title><rect x="945.0" y="309" width="0.8" height="15.0" fill="rgb(218,196,19)" rx="2" ry="2" />
<text  x="947.96" y="319.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (398 samples, 0.12%)</title><rect x="289.6" y="309" width="1.3" height="15.0" fill="rgb(253,87,54)" rx="2" ry="2" />
<text  x="292.56" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,680 samples, 1.07%)</title><rect x="490.6" y="181" width="12.6" height="15.0" fill="rgb(250,159,7)" rx="2" ry="2" />
<text  x="493.61" y="191.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (127 samples, 0.04%)</title><rect x="85.2" y="389" width="0.4" height="15.0" fill="rgb(243,37,29)" rx="2" ry="2" />
<text  x="88.16" y="399.5" ></text>
</g>
<g >
<title>_int_free (833 samples, 0.24%)</title><rect x="17.1" y="501" width="2.8" height="15.0" fill="rgb(245,53,10)" rx="2" ry="2" />
<text  x="20.05" y="511.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (215 samples, 0.06%)</title><rect x="303.1" y="357" width="0.7" height="15.0" fill="rgb(237,63,47)" rx="2" ry="2" />
<text  x="306.07" y="367.5" ></text>
</g>
<g >
<title>_int_free (96 samples, 0.03%)</title><rect x="337.2" y="197" width="0.3" height="15.0" fill="rgb(227,135,11)" rx="2" ry="2" />
<text  x="340.17" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (170 samples, 0.05%)</title><rect x="85.8" y="325" width="0.5" height="15.0" fill="rgb(242,77,15)" rx="2" ry="2" />
<text  x="88.75" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (143 samples, 0.04%)</title><rect x="190.6" y="373" width="0.5" height="15.0" fill="rgb(254,214,0)" rx="2" ry="2" />
<text  x="193.61" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (1,274 samples, 0.37%)</title><rect x="292.3" y="149" width="4.3" height="15.0" fill="rgb(232,9,20)" rx="2" ry="2" />
<text  x="295.26" y="159.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_params::WordParams::get_left_id (4,746 samples, 1.38%)</title><rect x="1019.2" y="421" width="16.3" height="15.0" fill="rgb(211,97,25)" rx="2" ry="2" />
<text  x="1022.20" y="431.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::MorphemeList&lt;T&gt;::get_surface (353 samples, 0.10%)</title><rect x="108.0" y="437" width="1.2" height="15.0" fill="rgb(235,18,15)" rx="2" ry="2" />
<text  x="110.98" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (2,443 samples, 0.71%)</title><rect x="493.6" y="101" width="8.4" height="15.0" fill="rgb(218,21,44)" rx="2" ry="2" />
<text  x="496.61" y="111.5" ></text>
</g>
<g >
<title>sudachi::analysis::stateful_tokenizer::StatefulTokenizer&lt;D&gt;::do_tokenize (464 samples, 0.14%)</title><rect x="655.0" y="437" width="1.6" height="15.0" fill="rgb(207,187,42)" rx="2" ry="2" />
<text  x="657.97" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;sudachi::analysis::node::Node,alloc::alloc::Global&gt;&gt; (242 samples, 0.07%)</title><rect x="337.6" y="373" width="0.8" height="15.0" fill="rgb(224,220,8)" rx="2" ry="2" />
<text  x="340.55" y="383.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::trie::Trie::common_prefix_iterator (285 samples, 0.08%)</title><rect x="654.0" y="309" width="1.0" height="15.0" fill="rgb(238,228,27)" rx="2" ry="2" />
<text  x="656.99" y="319.5" ></text>
</g>
<g >
<title>std::os::imp::unix::net::datagram::UnixDatagram::send (169 samples, 0.05%)</title><rect x="93.9" y="389" width="0.6" height="15.0" fill="rgb(207,42,12)" rx="2" ry="2" />
<text  x="96.89" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (107 samples, 0.03%)</title><rect x="1148.0" y="309" width="0.4" height="15.0" fill="rgb(228,81,43)" rx="2" ry="2" />
<text  x="1151.03" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (1,277 samples, 0.37%)</title><rect x="885.0" y="421" width="4.4" height="15.0" fill="rgb(211,116,11)" rx="2" ry="2" />
<text  x="888.05" y="431.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (90 samples, 0.03%)</title><rect x="1169.2" y="421" width="0.3" height="15.0" fill="rgb(241,39,50)" rx="2" ry="2" />
<text  x="1172.21" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (103 samples, 0.03%)</title><rect x="291.4" y="373" width="0.3" height="15.0" fill="rgb(218,49,36)" rx="2" ry="2" />
<text  x="294.37" y="383.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (151 samples, 0.04%)</title><rect x="652.3" y="373" width="0.5" height="15.0" fill="rgb(217,161,34)" rx="2" ry="2" />
<text  x="655.32" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (90 samples, 0.03%)</title><rect x="291.4" y="341" width="0.3" height="15.0" fill="rgb(216,42,34)" rx="2" ry="2" />
<text  x="294.40" y="351.5" ></text>
</g>
<g >
<title>core::char::methods::encode_utf8_raw (250 samples, 0.07%)</title><rect x="297.8" y="245" width="0.8" height="15.0" fill="rgb(243,18,33)" rx="2" ry="2" />
<text  x="300.77" y="255.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (347 samples, 0.10%)</title><rect x="417.8" y="325" width="1.2" height="15.0" fill="rgb(246,157,41)" rx="2" ry="2" />
<text  x="420.81" y="335.5" ></text>
</g>
<g >
<title>aho_corasick::automaton::Automaton::next_state_no_fail (714 samples, 0.21%)</title><rect x="1106.6" y="277" width="2.5" height="15.0" fill="rgb(240,170,38)" rx="2" ry="2" />
<text  x="1109.62" y="287.5" ></text>
</g>
<g >
<title>regex::dfa::Fsm::reverse (350 samples, 0.10%)</title><rect x="312.5" y="341" width="1.2" height="15.0" fill="rgb(209,108,21)" rx="2" ry="2" />
<text  x="315.50" y="351.5" ></text>
</g>
<g >
<title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (270 samples, 0.08%)</title><rect x="473.5" y="245" width="0.9" height="15.0" fill="rgb(207,197,47)" rx="2" ry="2" />
<text  x="476.47" y="255.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (431 samples, 0.13%)</title><rect x="451.8" y="309" width="1.5" height="15.0" fill="rgb(212,154,19)" rx="2" ry="2" />
<text  x="454.84" y="319.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (7,433 samples, 2.16%)</title><rect x="661.2" y="453" width="25.5" height="15.0" fill="rgb(222,3,31)" rx="2" ry="2" />
<text  x="664.21" y="463.5" >_..</text>
</g>
<g >
<title>core::unicode::unicode_data::bitset_search (459 samples, 0.13%)</title><rect x="1103.3" y="325" width="1.6" height="15.0" fill="rgb(208,178,28)" rx="2" ry="2" />
<text  x="1106.35" y="335.5" ></text>
</g>
<g >
<title>std::sys::unix::net::Socket::write (166 samples, 0.05%)</title><rect x="93.9" y="373" width="0.6" height="15.0" fill="rgb(213,85,33)" rx="2" ry="2" />
<text  x="96.90" y="383.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (732 samples, 0.21%)</title><rect x="426.1" y="245" width="2.5" height="15.0" fill="rgb(250,108,50)" rx="2" ry="2" />
<text  x="429.07" y="255.5" ></text>
</g>
<g >
<title>sudachi::dic::DictionaryLoader::read_dictionary (287 samples, 0.08%)</title><rect x="79.3" y="453" width="1.0" height="15.0" fill="rgb(248,16,49)" rx="2" ry="2" />
<text  x="82.28" y="463.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (606 samples, 0.18%)</title><rect x="394.3" y="437" width="2.1" height="15.0" fill="rgb(237,80,32)" rx="2" ry="2" />
<text  x="397.29" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (125 samples, 0.04%)</title><rect x="38.3" y="501" width="0.4" height="15.0" fill="rgb(246,17,48)" rx="2" ry="2" />
<text  x="41.28" y="511.5" ></text>
</g>
<g >
<title>regex::dfa::Byte::is_ascii_word (142 samples, 0.04%)</title><rect x="222.2" y="293" width="0.4" height="15.0" fill="rgb(241,67,7)" rx="2" ry="2" />
<text  x="225.16" y="303.5" ></text>
</g>
<g >
<title>sudachi::plugin::oov::mecab_oov::MeCabOovPlugin::get_oov_node (6,070 samples, 1.77%)</title><rect x="1068.2" y="405" width="20.9" height="15.0" fill="rgb(235,193,26)" rx="2" ry="2" />
<text  x="1071.23" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sudachi::analysis::node::Node&gt;&gt; (7,752 samples, 2.26%)</title><rect x="344.4" y="405" width="26.6" height="15.0" fill="rgb(243,167,21)" rx="2" ry="2" />
<text  x="347.36" y="415.5" >c..</text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (189 samples, 0.06%)</title><rect x="1018.6" y="277" width="0.6" height="15.0" fill="rgb(210,28,9)" rx="2" ry="2" />
<text  x="1021.55" y="287.5" ></text>
</g>
<g >
<title>sudachi::dic::lexicon::word_infos::u32_parser (124 samples, 0.04%)</title><rect x="417.0" y="373" width="0.5" height="15.0" fill="rgb(221,136,18)" rx="2" ry="2" />
<text  x="420.04" y="383.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1,809 samples, 0.53%)</title><rect x="1081.0" y="309" width="6.2" height="15.0" fill="rgb(227,40,50)" rx="2" ry="2" />
<text  x="1084.01" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::insert (106 samples, 0.03%)</title><rect x="315.6" y="485" width="0.4" height="15.0" fill="rgb(227,41,46)" rx="2" ry="2" />
<text  x="318.64" y="495.5" ></text>
</g>
<g >
<title>sudachi::analysis::lattice::Lattice::connect_eos_node (316 samples, 0.09%)</title><rect x="688.7" y="453" width="1.0" height="15.0" fill="rgb(222,22,46)" rx="2" ry="2" />
<text  x="691.65" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::analysis::node::Node&gt; (156 samples, 0.05%)</title><rect x="337.0" y="357" width="0.6" height="15.0" fill="rgb(233,90,12)" rx="2" ry="2" />
<text  x="340.02" y="367.5" ></text>
</g>
<g >
<title>alloc::string::String::from_utf16 (287 samples, 0.08%)</title><rect x="21.9" y="501" width="1.0" height="15.0" fill="rgb(235,184,12)" rx="2" ry="2" />
<text  x="24.90" y="511.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (123 samples, 0.04%)</title><rect x="1109.8" y="341" width="0.4" height="15.0" fill="rgb(222,192,0)" rx="2" ry="2" />
<text  x="1112.79" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (236 samples, 0.07%)</title><rect x="1171.1" y="437" width="0.8" height="15.0" fill="rgb(245,8,26)" rx="2" ry="2" />
<text  x="1174.06" y="447.5" ></text>
</g>
<g >
<title>&lt;sudachi::sentence_detector::SentenceDetector::get_eos::SENTENCE_BREAKER as core::ops::deref::Deref&gt;::deref::__stability::LAZY (761 samples, 0.22%)</title><rect x="10.8" y="517" width="2.6" height="15.0" fill="rgb(241,198,22)" rx="2" ry="2" />
<text  x="13.76" y="527.5" ></text>
</g>
<g >
<title>alloc::string::String::push (2,033 samples, 0.59%)</title><rect x="291.8" y="277" width="6.9" height="15.0" fill="rgb(225,209,46)" rx="2" ry="2" />
<text  x="294.75" y="287.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::error::SudachiError&gt; (159 samples, 0.05%)</title><rect x="388.6" y="437" width="0.6" height="15.0" fill="rgb(206,11,53)" rx="2" ry="2" />
<text  x="391.61" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (775 samples, 0.23%)</title><rect x="1065.6" y="373" width="2.6" height="15.0" fill="rgb(246,58,39)" rx="2" ry="2" />
<text  x="1068.57" y="383.5" ></text>
</g>
<g >
<title>sudachi::input_text::buffer::InputBuffer::refresh_chars (530 samples, 0.15%)</title><rect x="1098.8" y="437" width="1.8" height="15.0" fill="rgb(229,139,36)" rx="2" ry="2" />
<text  x="1101.77" y="447.5" ></text>
</g>
<g >
<title>sudachi::hash::RoMuHash::consume (114 samples, 0.03%)</title><rect x="1065.6" y="293" width="0.4" height="15.0" fill="rgb(244,85,32)" rx="2" ry="2" />
<text  x="1068.65" y="303.5" ></text>
</g>
<g >
<title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (142 samples, 0.04%)</title><rect x="152.3" y="373" width="0.5" height="15.0" fill="rgb(252,49,16)" rx="2" ry="2" />
<text  x="155.30" y="383.5" ></text>
</g>
<g >
<title>&lt;unicode_normalization::decompose::Decompositions&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (294 samples, 0.09%)</title><rect x="1115.7" y="325" width="1.0" height="15.0" fill="rgb(216,121,41)" rx="2" ry="2" />
<text  x="1118.65" y="335.5" ></text>
</g>
<g >
<title>sudachi::dic::string_length_parser (317 samples, 0.09%)</title><rect x="430.7" y="261" width="1.1" height="15.0" fill="rgb(230,181,37)" rx="2" ry="2" />
<text  x="433.72" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (234 samples, 0.07%)</title><rect x="476.2" y="245" width="0.8" height="15.0" fill="rgb(241,71,23)" rx="2" ry="2" />
<text  x="479.22" y="255.5" ></text>
</g>
<g >
<title>regex::pool::Pool&lt;T&gt;::get (791 samples, 0.23%)</title><rect x="288.2" y="325" width="2.7" height="15.0" fill="rgb(224,81,23)" rx="2" ry="2" />
<text  x="291.21" y="335.5" ></text>
</g>
<g >
<title>sudachi::hash::RoMuHash::consume (427 samples, 0.12%)</title><rect x="1009.6" y="309" width="1.4" height="15.0" fill="rgb(229,172,25)" rx="2" ry="2" />
<text  x="1012.58" y="319.5" ></text>
</g>
<g >
<title>sudachi::analysis::node::Node::fill_word_info (150 samples, 0.04%)</title><rect x="316.3" y="453" width="0.6" height="15.0" fill="rgb(208,116,35)" rx="2" ry="2" />
<text  x="319.34" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22,613 samples, 6.58%)</title><rect x="733.5" y="389" width="77.6" height="15.0" fill="rgb(215,200,8)" rx="2" ry="2" />
<text  x="736.46" y="399.5" >alloc::r..</text>
</g>
<g >
<title>nom::sequence::preceded::{{closure}} (3,921 samples, 1.14%)</title><rect x="419.2" y="373" width="13.4" height="15.0" fill="rgb(250,208,43)" rx="2" ry="2" />
<text  x="422.17" y="383.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (105 samples, 0.03%)</title><rect x="425.2" y="181" width="0.4" height="15.0" fill="rgb(221,90,2)" rx="2" ry="2" />
<text  x="428.23" y="191.5" ></text>
</g>
<g >
<title>regex::backtrack::Bounded&lt;I&gt;::has_visited (117 samples, 0.03%)</title><rect x="306.5" y="245" width="0.4" height="15.0" fill="rgb(224,201,29)" rx="2" ry="2" />
<text  x="309.53" y="255.5" ></text>
</g>
<g >
<title>[[heap]] (3,579 samples, 1.04%)</title><rect x="13.4" y="517" width="12.3" height="15.0" fill="rgb(253,86,51)" rx="2" ry="2" />
<text  x="16.41" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (114 samples, 0.03%)</title><rect x="341.6" y="309" width="0.3" height="15.0" fill="rgb(223,0,4)" rx="2" ry="2" />
<text  x="344.56" y="319.5" ></text>
</g>
<g >
<title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (265 samples, 0.08%)</title><rect x="1044.1" y="341" width="0.9" height="15.0" fill="rgb(254,166,13)" rx="2" ry="2" />
<text  x="1047.09" y="351.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (262 samples, 0.08%)</title><rect x="1012.4" y="309" width="0.9" height="15.0" fill="rgb(223,34,41)" rx="2" ry="2" />
<text  x="1015.36" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;sudachi::dic::lexicon::word_infos::WordInfo&gt; (3,446 samples, 1.00%)</title><rect x="1173.1" y="389" width="11.9" height="15.0" fill="rgb(205,183,54)" rx="2" ry="2" />
<text  x="1176.14" y="399.5" ></text>
</g>
<g >
<title>sudachi::analysis::morpheme::Morpheme&lt;T&gt;::part_of_speech (448 samples, 0.13%)</title><rect x="106.4" y="453" width="1.6" height="15.0" fill="rgb(222,28,51)" rx="2" ry="2" />
<text  x="109.44" y="463.5" ></text>
</g>
</g>
</svg>
